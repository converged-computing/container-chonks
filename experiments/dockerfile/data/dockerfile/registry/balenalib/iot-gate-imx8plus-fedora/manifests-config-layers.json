{
    "manifests": {
        "20230502": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 8184,
                "digest": "sha256:3dfcd66b3f0adbe0ff584c043ddc506ac93a14e251d7ec2e85f59ba041c822ab"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 64445578,
                    "digest": "sha256:e733ff1786fde464ae5c487ee23562295e5ec377f322e1a0ddbeb9eb0b767770"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2592235,
                    "digest": "sha256:779fdfa64b09f2b03c7a5e10d4ef87952d83da7f023ce1d66e2147c526b1d341"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 24144690,
                    "digest": "sha256:ff421aaabac7bbc65ca876f9b39319846832cde3697714f4f73ca7a076fac22c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 473576,
                    "digest": "sha256:ec59658df998edad9693fc215cde79d353e70dbfbe1341db33220c67d9c7989a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1015,
                    "digest": "sha256:36079b38428c307f2bf975c0469bc873376a43624adf1bb4bbd24688c3491d13"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 282,
                    "digest": "sha256:8461a9fa9e696794b86076991c15fefb22bb5f7cb00a0794ca50435f331878dd"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 681,
                    "digest": "sha256:1bf0146f9f3eb6c0d7f45063920fb8a873c6791e0de411d72db985228f24aa67"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 462,
                    "digest": "sha256:88733766d34217ae72bffd4818ea0519e3e6a604d5849f9fae03116a87121164"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 6436992,
                    "digest": "sha256:6e77c5f6fa75e934d9cdfa8dec8a896649b498a7c18a0f54f1ec90554d16152d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 469,
                    "digest": "sha256:df8ec00c118ce5f7f484d44b178ba9e3f46651c48f6c1cd04f8a77152077a7f0"
                }
            ]
        },
        "20230530": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 8182,
                "digest": "sha256:6b8638befd4f8f0dae701eba5c11fb84f97ba29f018ccacec987f18166ae9ea5"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 64674351,
                    "digest": "sha256:72e086bfec66fd3950d44dad0170ad1c4eeb3cb44d6bd0cd2d14d15f6493114e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2592234,
                    "digest": "sha256:94903bee787b61baef32c2f253cb7e456f92dd60dc2361d2686d84c676846461"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 22875081,
                    "digest": "sha256:aa85fc6b6d58818eaf697af244b4cc17ddc780e40a839d858be0cc5c693a00cb"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 473577,
                    "digest": "sha256:41436fae5c77e853c134ddc6bbf6b4a74dd92ca423b9dbd096740ba87de8b735"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1016,
                    "digest": "sha256:4db02dd47c7ef88ecb112623f1b5753ba3ad6f91f2b0d5c0252d8cd50d82b2b2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 282,
                    "digest": "sha256:566e5b2cc67991dc19d9e141b3515ec02430c23387f48a93f3c197b9a0103816"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 681,
                    "digest": "sha256:0d571eac575438553a1f49cd92bdf9f3b653b903f1c47d12c0bad9de4e0914e7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 461,
                    "digest": "sha256:0e39fc7b103b9fa548bdc50aa87c397286bfc8f6408cf52aee07ab4fcf68c349"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 6612050,
                    "digest": "sha256:8cd975824feb2126495edb380988b4ede9854d24603e97888bc919aadfe56874"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 467,
                    "digest": "sha256:e03c34c49195b4e5405a7d360ff8b2eb6770456b8f2a88007512cf30473e30ce"
                }
            ]
        },
        "20230803": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 7144,
                "digest": "sha256:8cbaf4f856e00b36d71f9d0bb8cf7d29d95fcfa16ca63e0e37fa89a4f79de01c"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 64705637,
                    "digest": "sha256:ea792534a213e62c62a1c4772dfcf53eaf82f7635dbc9f71bb0a60a91226d118"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2592239,
                    "digest": "sha256:f7a79e920ec27ac3117c18067a73bfa21db8e6dc263ed85a35120c2ef5f03b39"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 21178581,
                    "digest": "sha256:33ae549057fd4a09796b47bc886cf296e26c6c8c00a5e2a5b3b4a0fb10827be8"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 473583,
                    "digest": "sha256:d64dd38c14dedf1503a4af00054c39c3f612029657db30d0fc8dca727b61b0bc"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1017,
                    "digest": "sha256:ee1494250a35dd274c3982b4c5f5c483d78c70833020b443dbde6d77d273aeb2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 283,
                    "digest": "sha256:064b89e53b25bf2e4b376f278dae78d03c75920d9c29900d41513f91449fe67e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 683,
                    "digest": "sha256:8964cfc20919de072fdf02c430f7b849108b52ed644236f48193ec4ee50a209a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 462,
                    "digest": "sha256:5501f5fbe7ed46c469c697f3b47fae5e0c81160f7293cbd3dfc3c287f01cc109"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 6634626,
                    "digest": "sha256:d2955ac883b628be8ac0bc54626feff7546067e1883cd683d933071741b03b23"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 467,
                    "digest": "sha256:461922f1dececc29f78941696fb1874a39a3e5dea211ac1f4aff557223d92527"
                }
            ]
        },
        "20230829": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 6807,
                "digest": "sha256:ec1a101b6a59750bc679fabc283524acb4213d9542c0b39982b8c23a8c241271"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 64705637,
                    "digest": "sha256:ea792534a213e62c62a1c4772dfcf53eaf82f7635dbc9f71bb0a60a91226d118"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2592234,
                    "digest": "sha256:8a23d1bc357a016559421550aa91e0204a8a255102a9224be83008caeaf996da"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 25809278,
                    "digest": "sha256:f940068d3ef039efcb0ca5f66ee60c0bd0cf4760713964a44d6374b497b2a9b5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 473573,
                    "digest": "sha256:8930b41cb100d0197249ded6ea0bcdb52943edd72fdfb23c1e37e2465cff32a9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1016,
                    "digest": "sha256:a577c46bc85a1eca7057d6940255eb92584d7207344f27d5873361fa86b41658"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 282,
                    "digest": "sha256:586c7444d44703ed4dc6565512cc8cca2f0e4835e70d5aca6ad327406a7e7a64"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 682,
                    "digest": "sha256:a32ef540d1e852b24d14374a1bc3285034d6ff96bb276015e19412e9d51d29e5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 462,
                    "digest": "sha256:1c9a15d990e00c06610ca1b360a6a38d60b1a995503f841ba62dc00e53c6d5e6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 6708121,
                    "digest": "sha256:7ef80ac2a48ca9dda8723f9fa1c817bf23325f3a6bc60f7636003516305641ba"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 467,
                    "digest": "sha256:77b3b9fa0f66df333dd6dd7489c6152eab62a47d9581ca0ac3035c1a6b6d5467"
                }
            ]
        },
        "20230904": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 6808,
                "digest": "sha256:35bb38fc03a9ba225dd9c28e08d8cee0247c6c4f68a2570008e624988af394b6"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 64705637,
                    "digest": "sha256:ea792534a213e62c62a1c4772dfcf53eaf82f7635dbc9f71bb0a60a91226d118"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2592232,
                    "digest": "sha256:57e197807ba0a519d1edb0779ce76a06124dbef05029811c4cd40f0584de6bac"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 28511392,
                    "digest": "sha256:471a3338d976e468e7f618dd22fbdde0e2373e61be9ba9fe8ba4b2e72baecef0"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 473571,
                    "digest": "sha256:43acb285765a1566a09368e26f802363c73729a1ae513cb100c40d7d5f2c9fd4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1015,
                    "digest": "sha256:1f7a541e39d90075887bbdb2cc816aabc30dbffcf6b53f81374d58c099208d3a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 281,
                    "digest": "sha256:f64cf4e6488b8740244403e8dfeecf1fd1eca6cee27302b8246883ac41a1084b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 681,
                    "digest": "sha256:455b8b17e8e1b86358879c1c85bb769d1d32ef5a39654a9da1ca47fe376a9941"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 461,
                    "digest": "sha256:79974a50afa759f12e48dd7814fb83e5849ad292c42e28177d22c79b13419d23"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 6737268,
                    "digest": "sha256:6f68f0458988d9ea2d4539b34a4d8e1047da8e2e192bcd222891bf5e14aca6d7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 467,
                    "digest": "sha256:bbba5de64a9134d844b86ed83b6c37ed1a56e010b6a804df42763dbc6cf60971"
                }
            ]
        },
        "20230911": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:59ab8344b94aeea30a5b00a2a6cd24551b09fac270fb87ebd88bc0e6a3156915",
                "size": 6812
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ea792534a213e62c62a1c4772dfcf53eaf82f7635dbc9f71bb0a60a91226d118",
                    "size": 64705637
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:57e197807ba0a519d1edb0779ce76a06124dbef05029811c4cd40f0584de6bac",
                    "size": 2592232
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:471a3338d976e468e7f618dd22fbdde0e2373e61be9ba9fe8ba4b2e72baecef0",
                    "size": 28511392
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:43acb285765a1566a09368e26f802363c73729a1ae513cb100c40d7d5f2c9fd4",
                    "size": 473571
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1f7a541e39d90075887bbdb2cc816aabc30dbffcf6b53f81374d58c099208d3a",
                    "size": 1015
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f64cf4e6488b8740244403e8dfeecf1fd1eca6cee27302b8246883ac41a1084b",
                    "size": 281
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:455b8b17e8e1b86358879c1c85bb769d1d32ef5a39654a9da1ca47fe376a9941",
                    "size": 681
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:79974a50afa759f12e48dd7814fb83e5849ad292c42e28177d22c79b13419d23",
                    "size": 461
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d61a53ba1310310feb2b3ba03d0504c23710dd3c4eff88c132d71096c536197c",
                    "size": 6737668
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:69ee5385f36a99dcdf9dd724d6bf6b826815c1aa9486c1f5d263deca5505eb8e",
                    "size": 467
                }
            ]
        },
        "20231103": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:09e41a197679e7713c47271ce2f8b68f9c08605f303bfda9d231d8750df6b4ba",
                "size": 6807
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9d8d1f79d667e0d33c19dcab3e1da521941331416c217cc74601d8d9f6eb34ab",
                    "size": 64844849
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:70f1454c069b387e5af8b9d91b5470e7c4785b9a3290f7113ad42e664f16f534",
                    "size": 2592223
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d76a558193cb7b66b0700ad5870a13652edf878e9142a0d74f9a71180fa098d3",
                    "size": 44064717
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6f396e4d4a3dac8410ab225cbad45fb13592e944fdf1ab97a953ead54f0fb00d",
                    "size": 473572
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:12c35de3a810ce75e005471dd252f007b4ee65305ff26ddc28b8dfa744f9b86f",
                    "size": 1012
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:476049291d6250253e43958e82448d6c862427743c148732b2a832f70c372a56",
                    "size": 278
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8e0ba4f7e5a572e065f592740afcf5c1f8313b9813191abe3a2b5fd75ccdd00e",
                    "size": 677
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d6b9fe800ceade297a03f9af34ae2921bb7a789025c1dcfcb5b389739c04d457",
                    "size": 462
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3d8e284ba8dee1296161cd9459c3e8f98ba86c486f85b5015f73ddb509914577",
                    "size": 6852289
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6f0caa6e8a5f8f9cd7c1c1f67d372b2055929aeca735e0d50630bf0f50cea363",
                    "size": 466
                }
            ]
        },
        "20231106": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:76b45d8037b32b3cacdb9c27e6d6a2e4cd144108852ccf76d8f3667562de8075",
                "size": 6809
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9d8d1f79d667e0d33c19dcab3e1da521941331416c217cc74601d8d9f6eb34ab",
                    "size": 64844849
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:03e4b9d169336e58479c799e52d209343f4fd63f113b03b9cc3778d78eefc36f",
                    "size": 2592228
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9ebd0b84befc3bef3f3a1a315ae5e7ec38574027144908174718797f0a00360c",
                    "size": 44065020
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4d11386853aeab8cd5baa963e4328bffa12cd29a1ce5240ad9607cc9c3e875fa",
                    "size": 473574
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7331c59cbf560592c7caacaec5a5b0e7c1412d0ee6c53af4a6afd0b75120350c",
                    "size": 1012
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:01cc8bad0eb150412ebd78b17a1ec8ddb84bf7bfda9878c71e39cec3d021ee7a",
                    "size": 278
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:204195aa087948caf7654cea0a3a5700bce5edb30a573214210d4567dfefe883",
                    "size": 677
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c45bba7cbbc35ad8b4c7416a9df0446d0594c82b7244266706a7a42cfd423cda",
                    "size": 462
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:cacf54655129ce716db200628b3703abbc8871043195d1ec3efa480a889ba61a",
                    "size": 6851883
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c85ba2e57aab76ff38e9e7853c7b26d9c582fa1c1c03ff2aed0531e929b8f18c",
                    "size": 467
                }
            ]
        },
        "20231127": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:8709ed34a283091e502fb5ce449e9839c04a21c21e451cb804b38bc451669c4c",
                "size": 6811
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:69fff380046369a47fbc74b0aa03f61fb243f73dc5795e3ecf69c6577ee84908",
                    "size": 63118399
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0bb5eada9fb8c922ecc9f8444aaa0ee8a62fcac70ee74abc4710b2495f0bfd08",
                    "size": 2592228
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3ab8b31915862687dcc837ff941a87caf4c07e9f37527c8ff82b84c62d432e58",
                    "size": 22318509
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:491f82e7458e6e17bae05aa839d6b366e87513662f4340abcac0a9696a7480c0",
                    "size": 473573
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:744368413ff21e9a4e526bd1640cb20d58d0ac97385af7363e6ccfaa0a24b050",
                    "size": 1010
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d600c7ca91fb3e6cda2851db48eb14cc780b01a3eb28cb3b5cc1c157b30e5ce8",
                    "size": 278
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b803570392d88303afd7a2018b05dbf63c3295a143048a2729f5436e4f82f62e",
                    "size": 676
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c82c00cdd78937eb219600038c3a9ba8501aa8ae7b114cd8e577f8fe1107a36c",
                    "size": 462
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:cd39f3ef999bb9b47e7eebc7e98f1ccac30437131a41052a7abd6cc4977c3562",
                    "size": 6664271
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b4de3682dc6fbe5f51a6dd4d1b6250729df9ba860e419f7c6dc296cfe495d071",
                    "size": 467
                }
            ]
        },
        "20231204": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:fb2863f09ce135a7a239e4455519a12c79e762cfd7be9a02c78805dc4e6c84bc",
                "size": 6807
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:69fff380046369a47fbc74b0aa03f61fb243f73dc5795e3ecf69c6577ee84908",
                    "size": 63118399
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d33718b133be58c12c588d020799740b8f5d0e1659f4305bd3a42e0be1ca53e9",
                    "size": 2592227
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:638dc3ba02ae0d436831ec2e65f80cf3a0df85f54b4dd0e7ef6c930f2c9ab6a9",
                    "size": 23448833
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:320c005249b51b04b58caf58affd18499aee26124689ea955f510182122cfab7",
                    "size": 473569
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7d3113c0c18b1dea309c42932b22901908926108a8103cdab78170405c7a600b",
                    "size": 1013
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ac6ed7c321ff834e5966003c322a533aea0543816c96955876c3ab5646e3079f",
                    "size": 278
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:297b2ba3b641a48b1e90733cb70836ce9c195ca3803cf200e37417506cf0bb66",
                    "size": 678
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1f73b516ad766efd99f0fe8db17e4e328b2f6accabc971ecfa3d27b53c981a71",
                    "size": 461
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:abf0891c42000248476b222d3be10a7c4e5d822c1874e0ae5e32f13bea2d505e",
                    "size": 6663532
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0ebb49b97c23ff12b83aa2601531d558996a6bbb0c72aadc4720174d58422743",
                    "size": 467
                }
            ]
        },
        "20240205": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:410d43528a7d4903eb26fd629298a3c2dd7482c133351585c931b7f55cdf5a61",
                "size": 6809
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:69fff380046369a47fbc74b0aa03f61fb243f73dc5795e3ecf69c6577ee84908",
                    "size": 63118399
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:043f40b98b892b40de8f366a4877d9d156b79e078c159e8ba29e516bd6d1c1f3",
                    "size": 2592229
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a5741c1c9c7a9fefc40c6616a877c25ae7e2d3b4e3f445bc7366d05c2eadaabf",
                    "size": 23448765
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2b7fbfed82651bb013b52b5f9e575eb057922dd32dbea33546ffd3791fd6f318",
                    "size": 473574
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:31345e8a4ebd6f75c8d04b1987bb10dda6e287bb914c12f9506f73ae22df8918",
                    "size": 1011
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:64c5ff84cb6737b8e4034ed8c0c032049484812c53fac7bd3922ac1887619c7b",
                    "size": 277
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8151e9be2f5daef339c61f7281525da71de532fd3a55c08d147c7de15b1c0e4b",
                    "size": 675
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c014d4420297605e816aee496643987e4894d4bccb07a796c70c571e2feb60d8",
                    "size": 461
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:39459ee280ebffd152e96a6390c1daf6b71bb9555902bee9d7c6ba3045393bc8",
                    "size": 6663313
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:00ce2536274788851cb716c6d7a32bbdd4d3a0ad6be776cded5aa0ac2d7c43c8",
                    "size": 467
                }
            ]
        },
        "20240227": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:b941e87b44da4f4b13abafd4ae3536a0567d0afe18378f0c3f029d273b3698ac",
                "size": 6810
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:69fff380046369a47fbc74b0aa03f61fb243f73dc5795e3ecf69c6577ee84908",
                    "size": 63118399
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0c9cb203b87166e0d09b81a8d1f5b49ea5bb80d37799c1ddd6d0f58f482ba0ca",
                    "size": 2592228
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:cd15d660a3890fbc117644cc7e00384e54cf47a86db50fb85d3e3924a3b6e0f7",
                    "size": 23448836
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:69feda61e8a6a07d2f8173016c73ff91210e0484140825e75e597b45142b7ae1",
                    "size": 473570
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ce20a220ec40b0412743b54d0120c434710d00f3b54a54502308b76efc9dd983",
                    "size": 1012
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d47f351240c88d3748188f2ef0e0b48f6e891509bebda6f18393ad51c6305e70",
                    "size": 278
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fe1a2b8c0123677dd17cbf5897edd521c063917ffff70729a2e1211219421c57",
                    "size": 678
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f0bc84079738c7cb444a751732c831109078ebd828f39565c765bfc72f1e32d9",
                    "size": 462
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4b98df28b09b73ffc1489ca23ce312956e40b0f6e53b61ab37376b020839a18f",
                    "size": 6663446
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:700dbae8774302e97aa6313b485a35a294b03952a48c501b93011fa2b4c23dc3",
                    "size": 466
                }
            ]
        },
        "20240304": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:e5773ee2f753084cef8c3c7aa6dcbe278ce6a1c3eb22ecfced0d24e1a45db48d",
                "size": 6802
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:69fff380046369a47fbc74b0aa03f61fb243f73dc5795e3ecf69c6577ee84908",
                    "size": 63118399
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1838771b8ec87483e105e112d8024f9e9029a53bae9d1ef0c34c061003181dfb",
                    "size": 2592227
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9086ea61d95c1ab147c8270e5a9b1830e96d367d41663c7617ebb4b06043f2fa",
                    "size": 23448747
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e665d30b7799b95a1fefa213155d46f59fff56b68586082bf191741035863ca9",
                    "size": 473573
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:eca08035356a02b31523d0089c92c641151221e1163f6f69259640069fc93325",
                    "size": 1011
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1dbbb8991fb8ec274be4b21cf0c12fa2b72fea515b37daf96cee76915bf6a3ad",
                    "size": 278
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0a012ba1f4d0af3a86a253d6ee08223c9446a2cf6250bdab21f839ebc7d16354",
                    "size": 677
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:30495c77303f15af04a882c71d278cea6699924428092ff409840f02e3455bec",
                    "size": 460
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:19d5b7e0594881fd77d57a551e8b15159c37ec8f3e435358d047c09482de8e4c",
                    "size": 6663577
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8d43526f563b39aab347db11764f60f26e634c67f19a0e91dfd8991703dbb56c",
                    "size": 467
                }
            ]
        },
        "20240401": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:a18edbffa73f5cee66ce9aea2af5d8cdd928adb4e4ca7f8994138606a8b66262",
                "size": 6794
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:69fff380046369a47fbc74b0aa03f61fb243f73dc5795e3ecf69c6577ee84908",
                    "size": 63118399
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:326b20e912351ee1cd36eb4928f89de7420c89cff4fe26170cede56d5b53defb",
                    "size": 2592233
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f39d9f2f25dbd3d6ef3ad45ac705c80b09499c0886ce65119c20d6fc0873f021",
                    "size": 23448664
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:149aacaa82b179c640f96dd6fa65cb2df58f00055c9a94c3886a4906672573a7",
                    "size": 473577
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e7514cd29789812983b2a947f44fce3f7bcce347440875a08883bcd9b53e739f",
                    "size": 1012
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4b84039a432480f5ffe416931d3e349c4318c99332a368f259bac7fd40b1d2c5",
                    "size": 278
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:85dfe6b177a514d70942f90882fe77a64a24af14ef6f9f8be9f6e0ac8271c2d2",
                    "size": 679
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:75ac5a1c7aa9ff94b80b26d3cff3e1a67892548f05c0ca35405a77c861a15ab8",
                    "size": 462
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1f022462928363be1279b3231b7e96b3898c864a7b010a97fb5ebea90eb4c374",
                    "size": 6663541
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5360dc3ffd036ca843609057ed2be35a65bfd12645d1ce1916fbcbcfc08ec95b",
                    "size": 466
                }
            ]
        },
        "20240408": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:8c67c47962a26c1315f6407b9d19fea6176f2c2ff0dec881bec3da457dd24c6d",
                "size": 6796
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:69fff380046369a47fbc74b0aa03f61fb243f73dc5795e3ecf69c6577ee84908",
                    "size": 63118399
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:689676ef4dfbe38a100ec0fd8bde8b49c700bedf04ca010d64d0e38e212b9404",
                    "size": 2592230
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:20de4a94e0f41f23dbdf295a23279b3082a2b94c36276a1517ff184d9dae8e62",
                    "size": 23448793
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:aba17861f514dbec43f4f00bc73113c6ead88d0daf01cd5af8c0468d2e6ee6d6",
                    "size": 473577
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:44561f9120b7b96b19381819ea39413a89fe135ccffbc8f4f6586ce34ddef54d",
                    "size": 1011
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6246de46784e0baf4fe4448538c5536535e1dd8374a16e2e22c5fb226e3f400d",
                    "size": 278
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:008ed895bd8ec822f5bbb391c610f13b97036c9b6a66d8ad9815fcd75fe5517e",
                    "size": 679
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:752a73f6143a147cf9dd80aa9e2296a8678cefd5393206c50f4df7a5303521d0",
                    "size": 460
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:45fed00e756eea66b1ee2613e64de2f08f080a866bb316f416b3633ce11cfd84",
                    "size": 6663859
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:afa13b6c3661e13d5afa23cc4e60ac0e08919c97ef0997520981b0eca115db70",
                    "size": 466
                }
            ]
        },
        "20240429": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:095f26299c408e415d1325f671f001cea75f10a0f13b0414649b3e3fa087b420",
                "size": 6796
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:69fff380046369a47fbc74b0aa03f61fb243f73dc5795e3ecf69c6577ee84908",
                    "size": 63118399
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d67deff5c71a351663d4faf25c3b38f412142a31bca7a8d888c8821bfe5e18e9",
                    "size": 2592229
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:aef089e78d846edbce27f2669c47ec3fcef142e589e1867ef5908636b93f70a1",
                    "size": 23448814
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d2e3aa275cbb3a947522d3ea6580677ee9aa12d44c091352980066a1fb89bef8",
                    "size": 473573
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5f9e31015a5229413246198fe29fd337da9e65c8a8af3238c1f8824969f6e872",
                    "size": 1012
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3a3a2d6852cd0e1051942f064efb1ca5ed52209ef47cd0bf05a7e8752026738c",
                    "size": 278
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c3c8080aaea2aac7e2ff9499b2a0acda4cb7e625ee3cded157d534b54c647108",
                    "size": 678
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1e138be9b56c798718197323eafa69ddc869347ebd57ddc632dd70c020d34717",
                    "size": 462
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:aa51496e6b7060ef2c7a15d4cd416d98fd59f28987ff76a9eea9b0b0f309fc3b",
                    "size": 6663565
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9f1a7fa6c0cefb6a6b4fbf46bfc0b3000c99d8708a7e68e57e7b7993bdeb50ef",
                    "size": 466
                }
            ]
        },
        "36": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:9a1436451d7aaaa04f1a81f31af56032f6f079105ce14a39b17b019ef23146a9",
                "size": 6795
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0aeb4ade331e503f627cf2d20e48a0e609546d534f31d0ab05e75c8f0a67add4",
                    "size": 58130600
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:082c1b0215e65b79bee57867d846182d55066d84b6536f8ce5cdfb4557925530",
                    "size": 2592231
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:42ba2d464197953ae0c3ea9e9a7a0862776bf9c6b9f3de24425d068cab220125",
                    "size": 19390844
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4964fb2db364d724426035e1a65a77fb7a7597a97ee108d28fdc5f65bb88355b",
                    "size": 473576
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:30c2f7dc4c95c77dc1ca12e66dd393dae4e0e48b4bf2e1ecd5df4bb094a6764e",
                    "size": 1013
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6b1bd7b752a01aabedcbb0120f942f8e9b40c1ea7d9dc536209ada8b69b743c6",
                    "size": 278
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c65f82c416d78c6bd93cb4f9d6a5524c5b78e47f5242ba83e2a7e56333387a14",
                    "size": 679
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a5aee459832c98a800d0f6b838ab0cffb57b28fcdf8ae32a265c871cb574db71",
                    "size": 461
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3dd1e0539028a35c5b54f5f42f96744d5467e5928a4cefa199a72f0a4115cb1b",
                    "size": 5931793
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e48ee287f3fe79abf1fa2938d62769b0f2cdd4e34769d49d5f0283ff47b58bd5",
                    "size": 468
                }
            ]
        },
        "36-20230502": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 8177,
                "digest": "sha256:6232ca195093a06db2b083f0dbf80176eb3406e7c9ae00ff65dd30ef61136706"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 58121595,
                    "digest": "sha256:9b917c661f02a263855792fd6dcab73a006dbae49e38cc3beea971ce0a30a4ad"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2592241,
                    "digest": "sha256:797f42ad95befcbde210213ce6f4442aa90558714c1962b72a45dbd09542eca4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 20539712,
                    "digest": "sha256:f4c488e3efe358f43fabad7466b47c809dfed33dc53b7fe12c1fae3d98444645"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 473584,
                    "digest": "sha256:1779b9498d40dd9605688b539dc71cb4bb9cc74e0ebeb329c3864f35ee6d5135"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1018,
                    "digest": "sha256:8bb610eb9b9646e5bc54e151e2e2348d70944cbd841e6cc935ed3c920dada49a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 284,
                    "digest": "sha256:49f3121fc9f05481b16119df295611f244f531caff5ab60b452833759f294e2a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 684,
                    "digest": "sha256:e9580f5b87cda5db9cfd4d6335ca5bb757e352cb132cbfef91fb44c8ebfa94cd"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 462,
                    "digest": "sha256:5f4b975d49231984a66376e10b4331c2ca1c2002c502c28237480f031fcbac1a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 5943094,
                    "digest": "sha256:5659c6128575cdaf764e9b5b148d37d789ab9748c9155e6201d3486a08bf04e8"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 469,
                    "digest": "sha256:734f124564a423911037db65894bc65eca1539b9f590818a3c1b8274fa55e5f2"
                }
            ]
        },
        "36-20230530": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 8182,
                "digest": "sha256:053a3d8a62b53f4b183bb76572111294ff906d2e94b9e3d8eaf88fa081eeaabb"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 58130600,
                    "digest": "sha256:0aeb4ade331e503f627cf2d20e48a0e609546d534f31d0ab05e75c8f0a67add4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2592242,
                    "digest": "sha256:f66e81e508d7ff0b01065e8fcad5fb3edd02b329a7bb9826929111835efc96f3"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 19397787,
                    "digest": "sha256:967cd5986826e7cf2ddffcc9129a9dd9c1add6518221a7a420474a76de3c49bf"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 473582,
                    "digest": "sha256:d126911a2616e3255e5957f43f8eeab0f647fb13814b3a295adf653e1cb21233"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1017,
                    "digest": "sha256:4402c277d920ccf0c462763d32f475cc323f0e51f68dd1104323acc1c82c4c1b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 283,
                    "digest": "sha256:380ebba6aa8fb64ff62569540a72cd9d41fe276a3688d475a04df22b7a925548"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 684,
                    "digest": "sha256:b33cfb0671a39dd8c618c66e054cba2ffceaca22edf8be318f9058fd5bbe1f55"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 461,
                    "digest": "sha256:d8d7d1db5cd71cbabefa5639bf76b12a1d23a9ec2ffbe3b77209f4b774244c6d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 5932587,
                    "digest": "sha256:502209abf873f4aec12a01e5db52693a0a876c1c945037adffab18dc9510976b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 467,
                    "digest": "sha256:3c0f2f3bd2e59809bb3c290ab57532709ba814135550b2bb200e201e9b2dcaac"
                }
            ]
        },
        "36-20230803": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 7142,
                "digest": "sha256:a689740c409ad532e17c488b555a89d8c16538dae68a407a0879950701c065bc"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 58130600,
                    "digest": "sha256:0aeb4ade331e503f627cf2d20e48a0e609546d534f31d0ab05e75c8f0a67add4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2592242,
                    "digest": "sha256:9c75e6c26711d9e4bba9cd402fd02fea5706265ceda5a372c1cc490a9eafe969"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 19391119,
                    "digest": "sha256:93a6e6658797abdecc8b080d6ac811d9ed29985c1e66139eb0efc3fe4fd9c1de"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 473585,
                    "digest": "sha256:66ebf6fce2a0a86bf9323f7c97bace9b87486a84b30b795b8483f07734ba5da6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1018,
                    "digest": "sha256:de9f162bb1b215804cc79d43d8e54b319946b70803864512617c0f2c8647fc3f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 284,
                    "digest": "sha256:80a5cf4ec1ccd57d677e8fdf9ea837210e53203afed3bcc0a1cef9f53a5ca73d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 685,
                    "digest": "sha256:ed8b6a96765323f0beb542bb4d1496f21f902e8576606d25f3e4b8ef2988cd0f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 462,
                    "digest": "sha256:db4b412a63d4056a49344974cf7d6c4b807764e9e1854858822f5e96b0a9566c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 5932686,
                    "digest": "sha256:554848e9fe1db8399377d44a134feada2f9d25c97fc08afd640cf356ce8ac674"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 468,
                    "digest": "sha256:4379e4f8590b994eada9211239ec0bb05cdb17aac3a0984711fd6be88357cb9a"
                }
            ]
        },
        "36-20230829": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 6806,
                "digest": "sha256:3236bf1dd88845758bd4a65e18c940f8ef3a465705f19899bdd66cd954764fed"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 58130600,
                    "digest": "sha256:0aeb4ade331e503f627cf2d20e48a0e609546d534f31d0ab05e75c8f0a67add4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2592240,
                    "digest": "sha256:81367594eb3986770f123f8a0e90c1afa4a7b5bbafd57079bd2bb87db7b98a63"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 19391516,
                    "digest": "sha256:95eeb298eaa14c188987de8c67cbbbf598d552608314bb88d4c61e0efdaf5128"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 473576,
                    "digest": "sha256:e68b0511b1a7a3ff0cd9670a4a9d320f529898c6c00f5024acace52c3a33441b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1016,
                    "digest": "sha256:41cbda035abdeaa992c9bc00aa47dbeddce44bd4311d3bfc2a7934df8614ae62"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 282,
                    "digest": "sha256:e8c90e0ac3cb78aadfe4ea106005e8b04c33c712415c5fb90d8a4048ab7833a5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 684,
                    "digest": "sha256:197745ef19fc75dcb3693cfc7545aa59b055d20381abb75a819d869212ef2847"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 462,
                    "digest": "sha256:dae3414b088ddc468091c28e460a157d0cf05ab4dc42e7eb135fcff7539e95ee"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 5932718,
                    "digest": "sha256:b5d7c8f849cca2b6685b37b0b29aa5cfa14ebf027c63ad4fcfb6b9378b72b126"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 467,
                    "digest": "sha256:c02fc234294f465842b3903b6155d6d0bfee4cfa62ea9ed8bf31ca19b700c0c0"
                }
            ]
        },
        "36-20230904": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 6802,
                "digest": "sha256:542236b7b7a8dd85c6a07c900a524bd738effe1177bf6b67415399d93d7c96fb"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 58130600,
                    "digest": "sha256:0aeb4ade331e503f627cf2d20e48a0e609546d534f31d0ab05e75c8f0a67add4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2592240,
                    "digest": "sha256:9fff02ca2e741d3f751eb002765f73f5c3f408645ce7147499ea4640906e0943"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 19391522,
                    "digest": "sha256:34731bf3d00791c7515a68c6e2636f8f537015e42c7242fa6ea97984d34bc11f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 473568,
                    "digest": "sha256:25fb00537804b2ab003637ca1b2694263a573e70d2278eaa8bc6832b4aa9edaf"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1016,
                    "digest": "sha256:f47f6aa8c3128884a4ce839c206f452bd83a20a48622d5853ffe82918a1725d2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 282,
                    "digest": "sha256:835d1174417d13ab9dce12261ee90e320d0a2625008f423d55656efa7d4947e9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 683,
                    "digest": "sha256:9589788ca4b24d6a18c55e30fc8041db9538dffa4132778990c87ae1bed4a90e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 460,
                    "digest": "sha256:044e4cd50142bf7d4dba6b76d94b21b9171e6a35c5837af8806bf46c006508b3"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 5932848,
                    "digest": "sha256:b30673cc8cff947a0bc3945c63555f0eef63e637acad075ec24bd3d7be0640ea"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 467,
                    "digest": "sha256:2d698a465156a91d365330e3edc6cf108afff391aa79d5ba6e90ca38e7ec1eae"
                }
            ]
        },
        "36-20230911": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:589cff1491a6c45ad5376fa34c0cd22ea8023a094e52099788ce599fb0022cdf",
                "size": 6806
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0aeb4ade331e503f627cf2d20e48a0e609546d534f31d0ab05e75c8f0a67add4",
                    "size": 58130600
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9fff02ca2e741d3f751eb002765f73f5c3f408645ce7147499ea4640906e0943",
                    "size": 2592240
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:34731bf3d00791c7515a68c6e2636f8f537015e42c7242fa6ea97984d34bc11f",
                    "size": 19391522
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:25fb00537804b2ab003637ca1b2694263a573e70d2278eaa8bc6832b4aa9edaf",
                    "size": 473568
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f47f6aa8c3128884a4ce839c206f452bd83a20a48622d5853ffe82918a1725d2",
                    "size": 1016
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:835d1174417d13ab9dce12261ee90e320d0a2625008f423d55656efa7d4947e9",
                    "size": 282
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9589788ca4b24d6a18c55e30fc8041db9538dffa4132778990c87ae1bed4a90e",
                    "size": 683
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:044e4cd50142bf7d4dba6b76d94b21b9171e6a35c5837af8806bf46c006508b3",
                    "size": 460
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b4c4ff23baae5fa648c6305fc5a363c45d10466256282748a8abf6d9e168f92c",
                    "size": 5932650
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b0c3b34c2d7b73c9fad5c519bb8f7794a1790d4a7ceea3055781a06fe4e75e10",
                    "size": 468
                }
            ]
        },
        "36-20231103": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:d3cc237ecb27952173db45b4033e8b7c39eecb1e7f1dc264d06166565a6e234c",
                "size": 6809
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0aeb4ade331e503f627cf2d20e48a0e609546d534f31d0ab05e75c8f0a67add4",
                    "size": 58130600
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3aa8ce65d91769293a572a85db2cef4e412aa18cc756acb1332097ff06409197",
                    "size": 2592234
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:be652b100b8959d592e3499aad6faa811f48f060d60641e81499551de617c31d",
                    "size": 19391777
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a2da1bfa547dbcbf400e728a0032b862a979e854c0aafd2806ce361bfa18ba80",
                    "size": 473575
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0fa7f8546442f1ac93a39ef77729bc53ce34c0b3997d6c9590306904a2e8a41e",
                    "size": 1011
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:04ec04306e065afad0dd8996fac2fc9581616e0b79b380a150dd7432fedea347",
                    "size": 279
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:39e0bad41de994a56535a80dd9b5088904a4269b59b1ff5ed27c2a4e5dbb4458",
                    "size": 680
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d15725703c805c5af6d481ba249cc3a5e4f7f3113bff5b44b5f3245349f6eddb",
                    "size": 462
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3a550acbdb9d765474e4870b9b7753dca343bc306e0b0808dda795b23bc8d4e8",
                    "size": 5934909
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:da16b8bdf9b11fcacb3bdef02a85e01e2ab05e0bb48624e3080e6257a2876b84",
                    "size": 465
                }
            ]
        },
        "36-20231106": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:6635afb41c194013c1b6bd385277c5a7d596c0129d3703647ff1086de874ca1f",
                "size": 6811
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0aeb4ade331e503f627cf2d20e48a0e609546d534f31d0ab05e75c8f0a67add4",
                    "size": 58130600
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d32e3c089af872013fdf4d354ad913dd2f1c0bd469841260a344ba6bd3259052",
                    "size": 2592231
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:66fb0a05565bf516c3022347f2c65160b12721392d354f3cb07155208e144228",
                    "size": 19391881
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4d35d26befc4cbdaee212145b9d47395f8b14652efe87a7e2d8589d9c53ad7d5",
                    "size": 473577
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8f54b98642931b1cf7237c669e4afc8dc4df08f1eba6936419b74b65c8027d39",
                    "size": 1013
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:90e2ee75820604f119b5a41e80b578199a127ccfba7785fc67cdb2744c643531",
                    "size": 279
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:359ae85ccabbf99e533d340b537a398757219254b16485845579facb7e3e763b",
                    "size": 679
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:303faaf9eb6174330075a0f98e3115abbc556792a7daaa0ac3eefc6fadca33a8",
                    "size": 459
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:71be3ac20cacba0c89186a92ea06d994a8487f6c58c85f61f4a411a2c077b6d0",
                    "size": 5934840
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:abfca964031cf935278bb8152e8fac268e0831b1e6c7e592ac509f3ec6f6030b",
                    "size": 466
                }
            ]
        },
        "36-20231127": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:add0a1f939f782ff0c5e6935c610e386a8693ec40b9ee8a4ff3cca41cc328ee4",
                "size": 6809
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0aeb4ade331e503f627cf2d20e48a0e609546d534f31d0ab05e75c8f0a67add4",
                    "size": 58130600
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:27eff68d9a224631bc9148f2f2c0c72a35771748d9b8f590052016aeb924d11b",
                    "size": 2592235
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bd7ed4bd95d152cffde10cb094a285e61f847c1b2ad3e0c247a045233e23ef36",
                    "size": 19390728
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ba2f57050d9d37c6c6ba9fa8aadd91937b5517f921e2b541f3f3f0bb30b89052",
                    "size": 473578
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2760e33d1c6112d86dd20ebf1227225a26be11ad5116ae402a7b9bf4e775fb13",
                    "size": 1011
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7cf9189cd93fbba6a8e211532cce39785bd2600d9da95bafd01ca94da45c65a7",
                    "size": 279
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:37d7c147010f6df12a389d7f0c897c3fc4cf2c6a1e3257b6880f825879d95bb9",
                    "size": 680
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6a369e4755e6233336ec243579754afb360f9c8bf93836054e2fa686535524bb",
                    "size": 460
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1cc1f0afdb35b8ab7d6083cb2b8c8ad1f0971f7bd27e5681b78c8706dbfeed09",
                    "size": 5931547
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8ce9116cd6e4d4677900cce9cae82d9bf63c3695452adb0331c55a9afbc695eb",
                    "size": 467
                }
            ]
        },
        "36-20231204": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:bd0d98271245d022441df21c9ef6fb97e3aa9bef3b484a6accf46356441d2b0c",
                "size": 6808
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0aeb4ade331e503f627cf2d20e48a0e609546d534f31d0ab05e75c8f0a67add4",
                    "size": 58130600
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2e38fef274e245000293ffa599f96f1b79856ee26ac050ec3c1280c4aeae35ac",
                    "size": 2592234
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:cd54c649165938bddb85bf336891e597833fc5a5f22c35f1621b0a671d432d04",
                    "size": 19390853
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d9d8ea859bb946f8092af616fd2359c1407388455978dda73bb420d6b6fc0e4a",
                    "size": 473569
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c1e722fe6a576a7c34c5c35ebadf71995d44cd5b346dc2ac3e4c811adb9cfaaa",
                    "size": 1011
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f77e425fbdcff8d7bf6463013f5bcca6a56ff1f8a2274aba1c29ec516a725885",
                    "size": 277
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8d25903730d88759040297a1f9efbe27868d3352647cc94938d8937e47f71334",
                    "size": 677
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:617cbed8eedb3ea98f8d69136824f99f687e1286506ea23a735d2030dac5d86c",
                    "size": 461
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b9414805b52fba15a4660c47439e75dff86bcbfafde50cea1da9123fc03fe739",
                    "size": 5931894
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f869bb1c3f073c5e63978c14c925b3baba2d75cf1ab2b8e849eaba047d48963f",
                    "size": 465
                }
            ]
        },
        "36-20240205": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:03724567b97c53a8744bcace6e86254a543e1b8d812387a01108d1ad71d48b20",
                "size": 6812
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0aeb4ade331e503f627cf2d20e48a0e609546d534f31d0ab05e75c8f0a67add4",
                    "size": 58130600
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7f84e7c89b99816b1d57b18ba46b176593a4acde24112af0ebb15a3f9c6324bd",
                    "size": 2592233
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:49f6c1b96c0eb5bb7d920ec2b7b7d53ff87c64dca3b618aa5282842ce4964366",
                    "size": 19390698
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:091ccb00dd5140a07b30294f5acca80d118c0cf0a78d10114205fa88f128097e",
                    "size": 473573
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6a53ba3f76b89db541ad5b2440966d7760158c62dcfdcf86a57a56ccabb1eab7",
                    "size": 1012
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:cf1196079c7d2d54dfd67774cc416684dcbccaf5ecadc944b3e7fac84f1b5688",
                    "size": 279
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9322d7c54bfbad2f558788f1dd17351e75511d72efb30e63be1288a0373f3e09",
                    "size": 677
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:84641737dd371ea66763c59da29abcab846714470b969f81d5d69266ceca4f21",
                    "size": 461
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:575e7d58f0f526028a908b7477fc2d44f8758a94b4e2a646f66455c658a1352f",
                    "size": 5931865
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:33916837801b05440f5aabccd47d9b58e7d379fc11b49591f91195572372d9fe",
                    "size": 466
                }
            ]
        },
        "36-20240227": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:1716e02089cd3d95c7fecef28d8b4ec25a25df2fa8530f3113ec39668df6fe77",
                "size": 6809
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0aeb4ade331e503f627cf2d20e48a0e609546d534f31d0ab05e75c8f0a67add4",
                    "size": 58130600
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e7a0db0ff778242d33b334df3880f3377be078ede1389683094b9fc5ef625a8b",
                    "size": 2592234
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e11ece4d18eb73e1f2478b744c2762a970279215b677363fffd763b4e66cbb20",
                    "size": 19390875
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0859dbd8c79863b41056cf1f05b8070d167a36f4722ff62e7692830b9813dc72",
                    "size": 473577
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b1fb6c3b5aff923033461b6aced870ddbd9ecd23a6f1d33b947404edb036887d",
                    "size": 1013
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5db6ae9e6237947c470a017ac42126a11b27bc1f4c45124b7abee8e979d5121d",
                    "size": 279
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9784ee44190cc36d239aecc400341f0cdd989158bab82fd65d2360c337941dd6",
                    "size": 680
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c96d7e580d362e4810be600d8366b5df4ef8a5d0acaf892f1a6d7991c532b9e8",
                    "size": 461
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d76bcc59954833eed33d4583464994111db342073dbf5d0fbd7ebf0dd9b1391d",
                    "size": 5932104
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:dce2a995bf3bd4802bf4ea62ab825a905e94e28cf0fe08dca6202ccb522e417a",
                    "size": 466
                }
            ]
        },
        "36-20240304": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:d15de9bfbdfb1bde9cc4cf900006da2897c5a4b0a8326ca8941c43566fc2b426",
                "size": 6812
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0aeb4ade331e503f627cf2d20e48a0e609546d534f31d0ab05e75c8f0a67add4",
                    "size": 58130600
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4bc51f944b49ce237b9f298b98365527f7e3798bf21bafd50e35866a556ed4e9",
                    "size": 2592234
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:facc66dc89c7d7c447626eb18bd7ce32d146ce57cca4020a810c3ce4f591eca7",
                    "size": 19390749
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c83275ccf32f5cf0cba4d8f5f680a0359bf1a953f54b790f0045b2ceccf6223f",
                    "size": 473575
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b34d49a738cb74e7f50b246548d2e75750c65f65c48b0f17385c21e6803b996a",
                    "size": 1011
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f4321ae63b784037f1250a339377b9aa8b8b667eaaa46f6ee1b5bc892702f6dc",
                    "size": 278
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a6b178a90bf42de76fa696cd5c34841d8b28240ce520eb2cbfb604e148aaf6cb",
                    "size": 678
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:56991078aebec441802470063e40c974fd84cab53be8c0302e8c05f1a88955a0",
                    "size": 461
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6f39934438ff92459ec81d3bba8e3f434d305671d0d9235c68d9acb0974a3ffd",
                    "size": 5932070
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:65521451422273af5ea289e387611e762e1aaa7e3488ca1291f9b6cb54c1b221",
                    "size": 468
                }
            ]
        },
        "36-20240401": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:ae7cc030466746cdbaa46cd4010dab67aa11a1afea488132c3b322f2de153694",
                "size": 6795
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0aeb4ade331e503f627cf2d20e48a0e609546d534f31d0ab05e75c8f0a67add4",
                    "size": 58130600
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:56dc14cfe3300a84ae27764721db64d2f98d454a9b42a6c9d7cb9d30a172a070",
                    "size": 2592228
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8f5d5bfba91d41861de1fb090964f20b327211c1c947a70c5c06ff50f343cb09",
                    "size": 19390970
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d7510c6c08be3cae0d913e087b2ab0adfc335aa94a8b99e269e3a3aaaa9bdc39",
                    "size": 473575
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f364d329a6963313f859e7df4b3254176e848f77264ad4b07f4d4267197066f4",
                    "size": 1012
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:94abcdf5f2faad93c90676ffe091e188863184745ebc512c40b1f2ae1fbd2bbb",
                    "size": 278
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:33198baaf3af80d3355e63a11e4f2a4f308ff51588ae697ec514e96b8ce5ca0e",
                    "size": 677
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:079c572b5983bd27847370979958f7a75f320fbf3b0b1df78d317296b7aa988c",
                    "size": 462
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:07446b09d0d5e57084199782657d48e6bd7ac9cc41bf9bc0faff183387d68f20",
                    "size": 5932360
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d9d9c551f802bf53db7c273edd4be4ba98fad2311705d70a037a7a6b519b3224",
                    "size": 468
                }
            ]
        },
        "36-20240408": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:9a1436451d7aaaa04f1a81f31af56032f6f079105ce14a39b17b019ef23146a9",
                "size": 6795
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0aeb4ade331e503f627cf2d20e48a0e609546d534f31d0ab05e75c8f0a67add4",
                    "size": 58130600
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:082c1b0215e65b79bee57867d846182d55066d84b6536f8ce5cdfb4557925530",
                    "size": 2592231
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:42ba2d464197953ae0c3ea9e9a7a0862776bf9c6b9f3de24425d068cab220125",
                    "size": 19390844
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4964fb2db364d724426035e1a65a77fb7a7597a97ee108d28fdc5f65bb88355b",
                    "size": 473576
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:30c2f7dc4c95c77dc1ca12e66dd393dae4e0e48b4bf2e1ecd5df4bb094a6764e",
                    "size": 1013
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6b1bd7b752a01aabedcbb0120f942f8e9b40c1ea7d9dc536209ada8b69b743c6",
                    "size": 278
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c65f82c416d78c6bd93cb4f9d6a5524c5b78e47f5242ba83e2a7e56333387a14",
                    "size": 679
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a5aee459832c98a800d0f6b838ab0cffb57b28fcdf8ae32a265c871cb574db71",
                    "size": 461
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3dd1e0539028a35c5b54f5f42f96744d5467e5928a4cefa199a72f0a4115cb1b",
                    "size": 5931793
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e48ee287f3fe79abf1fa2938d62769b0f2cdd4e34769d49d5f0283ff47b58bd5",
                    "size": 468
                }
            ]
        },
        "36-build": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:44084c395529a14aa3df261fe8323a22c33df93e627fdea0e086e6ac8d420777",
                "size": 7556
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0aeb4ade331e503f627cf2d20e48a0e609546d534f31d0ab05e75c8f0a67add4",
                    "size": 58130600
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8764ad086e58a97c06142ee94b9611c18210c22e68df2b5a48a9642655300718",
                    "size": 2592230
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1b36131f08816b90f920c5a468157221fdedd3d2135cf04285071fdee5c863b5",
                    "size": 19391006
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d34e3e4b0ce81bf5348d5f2e6ca0156b3814f6e6593c5ada871f5f985255bc86",
                    "size": 189028355
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d8fd98c44fe8de3eab8482ae2bbc1daab8ae83943d60e62c14804b3a610398df",
                    "size": 473572
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a9d996d83302baab279626d16a59c52db02af14ecdc464dd6da80b60e784e3e2",
                    "size": 1012
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:98f156bc669d3b72f6d0fbd7d2ae05bbe0a4153e02dc8a330f89d1d1571509a6",
                    "size": 278
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:82e21acf93e28ef258e7275e925c15f4924cb44c67031e28927da5a0ae68fb1f",
                    "size": 679
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c8e5300ef4596be4c3f87cdcce3ccf8c3581658a69caba06d3b1e117cd749a5b",
                    "size": 461
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d022abdf0d1ba53a7334f145407ec2a2dae38493ea9b6c2256fb24dccf8da628",
                    "size": 10871253
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:214975dbc3466a9e3660356d69db2e817327009bffad2c68e2230695c2e8ac9e",
                    "size": 467
                }
            ]
        },
        "36-build-20230502": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 8894,
                "digest": "sha256:2e95a593342c6299d19aa75876a8fd241ea7287d3e7aa9f5de0012fe16da58aa"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 58121595,
                    "digest": "sha256:9b917c661f02a263855792fd6dcab73a006dbae49e38cc3beea971ce0a30a4ad"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2592241,
                    "digest": "sha256:797f42ad95befcbde210213ce6f4442aa90558714c1962b72a45dbd09542eca4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 20539712,
                    "digest": "sha256:f4c488e3efe358f43fabad7466b47c809dfed33dc53b7fe12c1fae3d98444645"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 188953498,
                    "digest": "sha256:71dd7d17dc46b5366ec20d95820e629f49163939247f4bf6303cd103f30d60a1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 473585,
                    "digest": "sha256:7c935539470aa41997bea3491db482634d1e7a2a908b0db8afc73a24e4714582"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1019,
                    "digest": "sha256:e50c4999c268d02c90374dc66c459bf6155a191162c6b057365ff5a33bc5afd1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 284,
                    "digest": "sha256:2090ff642124cb0aae0ba197827a3a27bed64fbc273432a3227e05b4cf68cb39"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 683,
                    "digest": "sha256:6ac149b063cbf77e579cb71cac8abd89bf06e5970495fb4bb90a9ec31e430672"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 460,
                    "digest": "sha256:a6ca182097aba253a2a70563fc2d3979d02577ee964194c5917b77a490377569"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 10906232,
                    "digest": "sha256:20bc6a5c7fab360d487267d46b7bf6d0fb0a9a3bb7bde57cd95d73c73d302c3d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 470,
                    "digest": "sha256:44a39f22e3c16e57d89fa247d7017e60b588806248631eed9fae04f00f8215da"
                }
            ]
        },
        "36-build-20230530": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 8895,
                "digest": "sha256:b20cb7b65224869a10bc0300ff842204fb61c9a10f95211050fd6151f06e9ffa"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 58130600,
                    "digest": "sha256:0aeb4ade331e503f627cf2d20e48a0e609546d534f31d0ab05e75c8f0a67add4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2592242,
                    "digest": "sha256:f66e81e508d7ff0b01065e8fcad5fb3edd02b329a7bb9826929111835efc96f3"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 19397787,
                    "digest": "sha256:967cd5986826e7cf2ddffcc9129a9dd9c1add6518221a7a420474a76de3c49bf"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 189025503,
                    "digest": "sha256:6121cc63b693cc49e21a40d3a11103ffecb88eb2f8d5cb5386db4868f0fc5a59"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 473581,
                    "digest": "sha256:e4a34f84a2154ab03d7a503c4d7f29c0d6cbea02b85e0b8a0ee8430c52bdfd05"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1017,
                    "digest": "sha256:51501b556be8e0bd30eaded17194660f9081e7773bf7f139976c18e7447b84da"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 283,
                    "digest": "sha256:55348bf2154e4c1dffb954e867c3033658f7d477128e3075a36b2a19c8c28589"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 682,
                    "digest": "sha256:de44ce27438a5bb07a390a05b8fe66e38c004636cf7289753b355202cc194548"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 462,
                    "digest": "sha256:5ddc2d1f04da4940ff5b8fb7f620a7b4ff04570e958b9c5d32aaa4ca86869eeb"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 10871894,
                    "digest": "sha256:29e4c12fe5d9b655225e3054a0c29ef6d182c0f2426f990e29255b96134c9945"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 467,
                    "digest": "sha256:f7fda72f4650cf39f8829a63d1c581260a96127e09a1885e2e856d81a9606986"
                }
            ]
        },
        "36-build-20230803": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 7906,
                "digest": "sha256:50862e971d8f9035f301ea77ee1eb43192e0ae035e932fc727fdada1355b17fb"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 58130600,
                    "digest": "sha256:0aeb4ade331e503f627cf2d20e48a0e609546d534f31d0ab05e75c8f0a67add4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2592242,
                    "digest": "sha256:9c75e6c26711d9e4bba9cd402fd02fea5706265ceda5a372c1cc490a9eafe969"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 19391119,
                    "digest": "sha256:93a6e6658797abdecc8b080d6ac811d9ed29985c1e66139eb0efc3fe4fd9c1de"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 189023165,
                    "digest": "sha256:e485b71f3079a814ba3ee37d4d618dadc752ee0c5ec40f3c3a08da91c1041b86"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 473578,
                    "digest": "sha256:9d06bf789fa4960cf813023fa6e430f1016d57254f474ac6c8dd4cca5803c455"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1017,
                    "digest": "sha256:9ff132e86e6d169a7b689a6f1912e2aca71d5e49dc82b25d62245eb1156a9809"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 282,
                    "digest": "sha256:d2c632fdfb03a183745d806212090860e4dae701d1c17682d0a5c4c457cb82ee"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 683,
                    "digest": "sha256:03fce54de202d985913235c96ec98f459877b670b629ddfdabccc88f9f9b5318"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 462,
                    "digest": "sha256:c939e6f29992e3be154ea3d74eb364a10ebf73885809d6f35544a49c3a6db46d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 10872255,
                    "digest": "sha256:85978d13fa681dd056ca8f0b25b9adee7f71d4091081fe7ac1acb7fbbcde9d2f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 468,
                    "digest": "sha256:ad2827fdf905b2e2a67b9b85bd0a149b4dfe9d410785c57238f470e13f119d2d"
                }
            ]
        },
        "36-build-20230811": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 7907,
                "digest": "sha256:125c7a075f892219a8890988d3f5bc65633b26c5785a04e16bfa20a07d28f771"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 58130600,
                    "digest": "sha256:0aeb4ade331e503f627cf2d20e48a0e609546d534f31d0ab05e75c8f0a67add4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2592241,
                    "digest": "sha256:dc4a71c441219ca6d951633ba2c0bc3c3d7df9ca2fd9f24d4a6031f2020a5bf7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 19391044,
                    "digest": "sha256:f7827e9d6642fa74898fff774db66f51d23f8d4523fe13075a60755b63434d73"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 189021672,
                    "digest": "sha256:88081ad4e1f5645639ae4e444c4b71ecf0cf1f11742557da142b6dc804f4f168"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 473582,
                    "digest": "sha256:2d98a81de6a6969ef1e6442c2c5a989f6ee64f7b00d26dd5168b68d5d391c0b2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1016,
                    "digest": "sha256:326a1fe1b566dc0f8b863b82233c14d49e2670f8d2d07a8248f93b0850094490"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 283,
                    "digest": "sha256:941ba2cb13c458f34f0e312bc65a878d7be52d0834f1b894cc997ab8c38f62e6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 683,
                    "digest": "sha256:6b17677674f9046dd819bf85c583a812dc2729ff41bd1786973f17b0b5f62bb3"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 462,
                    "digest": "sha256:901045614b562514dcddeaacee6ffe99df0475e6c01b29f9e83c8e4b988c87f9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 10871425,
                    "digest": "sha256:6a66ecca3ee88b24c5c511c57d4dae9d633d1c8032cc51d6785a7a101ed2af13"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 468,
                    "digest": "sha256:0f4ee9aaa8a779b515dc699f08adbc506fc47527042d44d6dd699f2bb038ddc2"
                }
            ]
        },
        "36-build-20230829": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 7568,
                "digest": "sha256:845468da1879149fa4fc18479cda3c1b75748da2ba45b1f63486a3f121dfeece"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 58130600,
                    "digest": "sha256:0aeb4ade331e503f627cf2d20e48a0e609546d534f31d0ab05e75c8f0a67add4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2592240,
                    "digest": "sha256:81367594eb3986770f123f8a0e90c1afa4a7b5bbafd57079bd2bb87db7b98a63"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 19391516,
                    "digest": "sha256:95eeb298eaa14c188987de8c67cbbbf598d552608314bb88d4c61e0efdaf5128"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 189028744,
                    "digest": "sha256:3b8f2dbe6b9f5874d0164208675ea8d6ffddbd001621c7904050bede9acdddfc"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 473573,
                    "digest": "sha256:15c6eb64e07fffae0aa57744a9282aa1c3d5e1bf584b9a874b7003a66c6e1b47"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1016,
                    "digest": "sha256:b512ace3c84728a868815ecddd489a4f8dbe30ed73b4fbab8b7eb97eb0c38d29"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 282,
                    "digest": "sha256:891f477c5104490dbd78781a5e1763649f0c0e27d93d398e3b12ac88e6ebf4c6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 683,
                    "digest": "sha256:c0b7364484e5f7cbb8d9f74ab41bb81f06c5159e0489f8e9e0ceffad787be3a0"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 461,
                    "digest": "sha256:79d3ad99838994ae6083c36f48718cfe78b37359c24673e597887f149e97969e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 10871575,
                    "digest": "sha256:ad64a6b71665f37ca0b00cb5281b36f8eba7056b7a508465fd30f2ff8fcac66f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 467,
                    "digest": "sha256:047262983a3a481d80f398534cc10bfea570573557cd15b5bd27567bdd937dd2"
                }
            ]
        },
        "36-build-20230904": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 7563,
                "digest": "sha256:53148f354afea9669961f552c04fc1adf29be49a65df0b3bb81fb5a652633d4a"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 58130600,
                    "digest": "sha256:0aeb4ade331e503f627cf2d20e48a0e609546d534f31d0ab05e75c8f0a67add4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2592240,
                    "digest": "sha256:9fff02ca2e741d3f751eb002765f73f5c3f408645ce7147499ea4640906e0943"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 19391522,
                    "digest": "sha256:34731bf3d00791c7515a68c6e2636f8f537015e42c7242fa6ea97984d34bc11f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 189028749,
                    "digest": "sha256:ee0273eaee345039612e5a2978c4257de92f2f05581e907907eaa91d4a9a84ae"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 473572,
                    "digest": "sha256:b58b309390860bb38615abe1c225b33ddcccd4bdb661ae904cb959588f97cb46"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1016,
                    "digest": "sha256:4a2ec80c02dc38eb71be3ae88acce64c21c04614dc6cec58bb4c3f9622e9043f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 282,
                    "digest": "sha256:981708ed75d15fe8d6aaba3ec438aa9c2b3b575737cd18b10d4e0d587cd1e861"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 683,
                    "digest": "sha256:675fb8c66d070387fdc334f92a6de6925867c31bb4e6d5e492c3a6732d04d1a9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 460,
                    "digest": "sha256:3acdd833935de0a4b687f4213c5e200a7e8513aa1f5b2523da59be847973a27f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 10871564,
                    "digest": "sha256:85b3593702158f87c9098035b8f2c598332881818485078117a5580b13a7b1b5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 467,
                    "digest": "sha256:d64976a95b8686d44c506f187c8bebad9de7d6f40ae585ff20af4027fdb8a742"
                }
            ]
        },
        "36-build-20230911": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:b5cca29ecedce31d1a2d4fed080c4b970d754cbc891a28f2c4e9e0b0ef8b3ec8",
                "size": 7567
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0aeb4ade331e503f627cf2d20e48a0e609546d534f31d0ab05e75c8f0a67add4",
                    "size": 58130600
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9fff02ca2e741d3f751eb002765f73f5c3f408645ce7147499ea4640906e0943",
                    "size": 2592240
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:34731bf3d00791c7515a68c6e2636f8f537015e42c7242fa6ea97984d34bc11f",
                    "size": 19391522
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ee0273eaee345039612e5a2978c4257de92f2f05581e907907eaa91d4a9a84ae",
                    "size": 189028749
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b58b309390860bb38615abe1c225b33ddcccd4bdb661ae904cb959588f97cb46",
                    "size": 473572
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4a2ec80c02dc38eb71be3ae88acce64c21c04614dc6cec58bb4c3f9622e9043f",
                    "size": 1016
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:981708ed75d15fe8d6aaba3ec438aa9c2b3b575737cd18b10d4e0d587cd1e861",
                    "size": 282
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:675fb8c66d070387fdc334f92a6de6925867c31bb4e6d5e492c3a6732d04d1a9",
                    "size": 683
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3acdd833935de0a4b687f4213c5e200a7e8513aa1f5b2523da59be847973a27f",
                    "size": 460
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e47a9169c312a5c9da185963efa6151d992bdff41744e246041ea44fa4569a2d",
                    "size": 10871067
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7cc19c0dbf317f3f465a15df286a2ef51fefe8f44e8b7ce63513571f387da99d",
                    "size": 468
                }
            ]
        },
        "36-build-20231103": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:27850965a44381541ece87995a811b24616dc918c987319b9ac7564fe071c0cc",
                "size": 7567
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0aeb4ade331e503f627cf2d20e48a0e609546d534f31d0ab05e75c8f0a67add4",
                    "size": 58130600
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e0fc7da42fa65e0bf9796dc9603250f7024b2b64504b41f25275e76938a29010",
                    "size": 2592223
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d4674344e3018946d336013ae38a5e944374f7e453bc862a076b51cbec6776ff",
                    "size": 19391653
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fbbe467bd03c82d3eb39849d667a4cab9585321543f93255a9f79178281299ab",
                    "size": 189031360
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:61812a3ed13453017a0056043145dc93fa05cd8f6455e928cd5db7d8abd72a1d",
                    "size": 473577
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:175fcda89179b0c9e7d9b3d87eb10df8af8d6d10db1fdfb866d5fff95e95900f",
                    "size": 1013
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:24ff18fe7c682fd2795fc67e9a3616d24c33e87fc7153aab30ed90319d3f3200",
                    "size": 279
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:43021fb968fc2a99bb22250d1ef2e93489067e357dba556491877a24aa8bca8a",
                    "size": 680
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:33a928abc66a70932b9a93f6470d1976d3b0825bb3de2543f7bf3568b1f96dcd",
                    "size": 460
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8622960e664864463a557c14ad342b91cec32a4c99fe54b9ed74811a7ec69fdd",
                    "size": 10874987
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0f51f4b64e22c13ae3054e32b35d13b5f6c79bc8cf5e21bd28f9566303e9ee35",
                    "size": 468
                }
            ]
        },
        "36-build-20231106": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:0f3962bff33dc491fa10895567759461e10bc8af478e0974fb38d0d9ffddbd43",
                "size": 7572
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0aeb4ade331e503f627cf2d20e48a0e609546d534f31d0ab05e75c8f0a67add4",
                    "size": 58130600
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:843e7fa7b0ecd6c9d9993a685c06be14dcb974fb8cb5967cf38c7f8e93526a72",
                    "size": 2592234
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9b373d83506e2b1cf8a5a7d6df6e2ce8b4da3a28ac651ca847e3a9b507278c95",
                    "size": 19391895
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:00995a91c2ba2800d0ea91eedd7df01960e6ed546fe8993dce12fb2e039c393f",
                    "size": 189031043
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:264baef117e1f41c340e8ef9cfea56670be17113f4cbf157ce7ec1545765223c",
                    "size": 473577
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d7e8363f514ba93e7c7e94483fadb5e5313d6273414ea651c4ae263d766a6bbb",
                    "size": 1013
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:93433296ed922f0f30cc682f6dd2688d0f74650d45e2a7444269a14d62dfb992",
                    "size": 280
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:999ce7eef31147e6ee0e65c7f5dd1c47a1049b1e2a64cdf13aad606fece866bc",
                    "size": 681
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:89ba4eac9d43e3ac8cf1ae642b1f4688f72765a4e4fe17768041699d5cbcefae",
                    "size": 462
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:252151fc1971bd1b01cbb4b3aed1038558b82441a9aa4f66c3c26977093e2174",
                    "size": 10874959
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:902818ce53b6bf8f9f0cee46011e53f78e61044a1a9d264db9f2ce8f9724b6e7",
                    "size": 466
                }
            ]
        },
        "36-build-20231127": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:41e0b32af6c83ebd5b23a960ea95fcbbb46b3dec8fff635f16bc193443b0d742",
                "size": 7567
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0aeb4ade331e503f627cf2d20e48a0e609546d534f31d0ab05e75c8f0a67add4",
                    "size": 58130600
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:451a3bc08d75ba36bb577db7145815a8f74476f35fd73cfe2705a9664265aa45",
                    "size": 2592235
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:dd401d5fcfd2da093ec1351b48274e96706e025d169778be65954f08e0845229",
                    "size": 19390772
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d2be874d8b07878e4b21c840e1631d7f4eacd9606cb875b02a18318de76ccdee",
                    "size": 189028967
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e2a32fbbbb7ee6072d6cbea15b3f64e309b8ee6e556b8d3cb6eb47d29f1c4894",
                    "size": 473575
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6106ae8d5029f94da59b8735b7a3e4b7a7f81bca08de4128924937c82bd718cf",
                    "size": 1013
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:23e49cb117956db748d328e28a0a28f49139353495c93f21e1b49007129f8e09",
                    "size": 278
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:51a674d4700df86cf39c02f4f9de18c211a00cd89e92ff0685eff68f73dd39e9",
                    "size": 677
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:117c44ec30ec7143ccbe5ef299b3d2a159764adabb71acab5fe528cf18548eeb",
                    "size": 460
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7fc6a821cf7912fb745bc803558c2fb1faec384513f628b78843a966898f350b",
                    "size": 10871209
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:26a77df88851b74080f0cc7effdf05ee7fc812dcab52f3179d80e51ec09f0d20",
                    "size": 467
                }
            ]
        },
        "36-build-20231204": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:3c04d936162bcc3ea1b0153d37fe45e1104be78bb28b907d90d89c1e93594e4e",
                "size": 7572
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0aeb4ade331e503f627cf2d20e48a0e609546d534f31d0ab05e75c8f0a67add4",
                    "size": 58130600
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1c284bf58c67f6f1cd7059e2fe620935eb27f63f405d100b2ea214525520bb3c",
                    "size": 2592234
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e03f3ddbf6df09254b2f3f993eb7b22a30d02cd6ff230d8547b741da5081c474",
                    "size": 19390779
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b4b9f8ff17c724087469491f62dbf64fce7f52812f3005a01eebf5269aae939c",
                    "size": 189027957
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:50b7638fb8bc805f48e2cea302cff161b9e12ea5dc39906c79f71fbc5a3cb092",
                    "size": 473579
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:cece9d2420a0549fc226aa0af82ad27e4ea9b49ffcb8abbf8f649c6bc7324504",
                    "size": 1011
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:088831b12eed8f2b221928eaa87bd4e01ec53a1c837984234b84090da41c50c2",
                    "size": 277
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f381145d3e5da3ae0ff4735ed8d99bdb9ccdcedb661210e8964fd6ce309c5c35",
                    "size": 676
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:48a21261c4d0263c46155e98e10bf21d4b65b922ae3cfed9c13308b2cb634d4c",
                    "size": 462
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0ddd859196206c015524b4462c5ca8b3534ff0c22bbf93854381e19bebe57e37",
                    "size": 10870708
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a38ca1fff5273f4bcbc12f40f2bedb347bcb4b55910e4eadd514acea0cea2768",
                    "size": 467
                }
            ]
        },
        "36-build-20240205": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:654ca5c73e083285e1e8105d007152d6b917352b0b7cc6fb66017669e46a50fb",
                "size": 7572
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0aeb4ade331e503f627cf2d20e48a0e609546d534f31d0ab05e75c8f0a67add4",
                    "size": 58130600
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9443a68ea8b80c77056653c9cdb28763df5baab71918d223778c8e0a655042dc",
                    "size": 2592233
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fbcd0a1bfe7330a8b54df75a84c2a41583064c469f4fe5ba60a905bdbf62fd7c",
                    "size": 19390762
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b310b92c8e727f77e093a13c020968a8f4cdd70676ee0cfb910762a39bf184e6",
                    "size": 189028276
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e66e95237a2ff66129bccc5e6fc8c73bb8f13b633451ee5e80e53a18094b6791",
                    "size": 473573
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0b1b257cd24c76610045b35d843aebc841260586162729aea2df36f2200ab158",
                    "size": 1013
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3e16611172f7e49e50fe3355b3ede6851b1eddda877a327933135185104a073b",
                    "size": 278
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:651624332fea39ffa8740cc6c5b66b8cdf0125b12dc8dfb87ca71393c5ba8e8a",
                    "size": 678
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a88c2d44d44b074055e19e9f1139ede15c46f572638dcabf4341f848e59e9747",
                    "size": 461
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d4ca5c640e2c83f63da52dd166a265d51eff4ba0495fe51165a91e41481777d3",
                    "size": 10870651
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6b3877824e23f774199f6c86ce7199cd08afc4e18d2ca19448672f1f70d8b0bd",
                    "size": 467
                }
            ]
        },
        "36-build-20240227": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:d1de64b3a121026c0c5722b94d12ceb284afdc3b3ff0e5807d0e83d6331880b8",
                "size": 7569
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0aeb4ade331e503f627cf2d20e48a0e609546d534f31d0ab05e75c8f0a67add4",
                    "size": 58130600
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c1c5949f4af1f6c65c0792e39a3f0f9eea4094bb6e8643aa16bf5ec735519990",
                    "size": 2592230
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c9f76dd63f11fe26d3f455a753de3e4aaf382e2f8a5c03722e4d98c28c769b14",
                    "size": 19390832
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:64aa35e762e682b6a09603d7accc7d7dd4ba80d936e42b6f74d9a4c7cdb9065f",
                    "size": 189027895
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:638d538bbfb9dc71484135e0cb6d183c8f98afaf1038d86354a7598480517243",
                    "size": 473576
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:264df434a5e344308c5e8c657c21217955d59a6f06e5a963826823b03ac3799d",
                    "size": 1013
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:40cb454c93602c9789957f243277122d3c82fffd90376a441a8ce9a5656bf451",
                    "size": 279
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:abf8fc480b66a4343237269cbf5e48d28935902a2730eee845750f319c7927b5",
                    "size": 680
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:18bfe318852cef5a0c9ca4b6e59b8b39bc0018e1b1f0cf13ed00af8611c8f8e1",
                    "size": 461
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:de0178404705b63716d6486402eab4422e818d5a561668a392a00eca858ace52",
                    "size": 10870763
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:66ec356aef65003edc749ebf49edf5bc26124a1c64578a5ae623546941acc775",
                    "size": 467
                }
            ]
        },
        "36-build-20240304": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:a44dc29f76ece8a09f7893b76223c15742c5e8705be2c1c0b5b20804e12e6bfe",
                "size": 7571
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0aeb4ade331e503f627cf2d20e48a0e609546d534f31d0ab05e75c8f0a67add4",
                    "size": 58130600
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:69cc4f4fa6068c7e20f64e589c6cb6f79356c3953b6ddec2251cd909a1f6e93a",
                    "size": 2592230
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:54ed8c26b2264b097115021b57f1a494f521ebeb9050fa2099a5f2491c8dcb7c",
                    "size": 19390870
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fa85abca87ed70710c728e1ee8a7547072773622b487eb13d75f0583dc6b611a",
                    "size": 189028170
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b26c60679cfda8d91f0e078bde48ff45bf147034eb56c860b0b09f7defd1a5bc",
                    "size": 473575
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:cf5b4b90867d019b607aa9455d5dea09f4b01831cc0acf2dfa05d0511ef9ed3e",
                    "size": 1011
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0b3d8ff0c32a5ed397bf09b7c1f82167c37008cf70fefb38ce1127d24ed697e5",
                    "size": 278
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:70846d0457808ad2411aa8acabe8981fbee880773bc320f139769b5eaa431b1a",
                    "size": 678
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d18df4bf438b32d5dc9239c1ec3dd8a97bbbb891e330233caee265b4bf070aba",
                    "size": 462
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4df25ca7be01eaab78ffbb8d568558b79915a9365233525eeede18a277e1e21b",
                    "size": 10870610
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0137f0a1de06d151a492c6c6e42d2a786c421b0b5eb6bcd7acd66974ce3cf22e",
                    "size": 467
                }
            ]
        },
        "36-build-20240401": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:7a9c170096a17c6472676c3399f5585a237175b071d35b74aa740c9ea5050a5d",
                "size": 7555
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0aeb4ade331e503f627cf2d20e48a0e609546d534f31d0ab05e75c8f0a67add4",
                    "size": 58130600
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:38deeb2234b41dc88ad2e4707f14aa15ac9f83b439b4a2de9154aed58340140c",
                    "size": 2592229
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b51db2e4f1ba1a1df6842273518f19453349bf68fa0af2adee47e8982db390b7",
                    "size": 19390797
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3459d5d38aace74a5cb60ddfa1ebd56751ec503521d2243e4264415574a18a28",
                    "size": 189028346
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:84cae1f53caf8feb4123289a122f72219033bda6b18c120821e037301caa372f",
                    "size": 473573
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b4adff2f3c484c54b270f35c8cc9cf2f9c5a8adb8967217c1e8705b24fd421a0",
                    "size": 1013
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9376e50f8875449ef3f41b8ba36304086f002888a0714e41c154e63a6a72f8e9",
                    "size": 279
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:627df8dec2e0b9cc214f41323126835112bf4aff4844fddc9dc9a0b049df17cd",
                    "size": 677
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:95d0ce7a36a5a599817494fdddbb8292782785761cd0c1dece72371edc2c9405",
                    "size": 462
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2c6dade42681eb69efdbc5d27d9ef011eed388358f693e4851434cf77e99c012",
                    "size": 10870683
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e55ebbfd9623c4eefb514e0a9795c1465f24a2dc3e46ed2f760c2b499b3eab8a",
                    "size": 468
                }
            ]
        },
        "36-build-20240408": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:44084c395529a14aa3df261fe8323a22c33df93e627fdea0e086e6ac8d420777",
                "size": 7556
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0aeb4ade331e503f627cf2d20e48a0e609546d534f31d0ab05e75c8f0a67add4",
                    "size": 58130600
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8764ad086e58a97c06142ee94b9611c18210c22e68df2b5a48a9642655300718",
                    "size": 2592230
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1b36131f08816b90f920c5a468157221fdedd3d2135cf04285071fdee5c863b5",
                    "size": 19391006
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d34e3e4b0ce81bf5348d5f2e6ca0156b3814f6e6593c5ada871f5f985255bc86",
                    "size": 189028355
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d8fd98c44fe8de3eab8482ae2bbc1daab8ae83943d60e62c14804b3a610398df",
                    "size": 473572
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a9d996d83302baab279626d16a59c52db02af14ecdc464dd6da80b60e784e3e2",
                    "size": 1012
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:98f156bc669d3b72f6d0fbd7d2ae05bbe0a4153e02dc8a330f89d1d1571509a6",
                    "size": 278
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:82e21acf93e28ef258e7275e925c15f4924cb44c67031e28927da5a0ae68fb1f",
                    "size": 679
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c8e5300ef4596be4c3f87cdcce3ccf8c3581658a69caba06d3b1e117cd749a5b",
                    "size": 461
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d022abdf0d1ba53a7334f145407ec2a2dae38493ea9b6c2256fb24dccf8da628",
                    "size": 10871253
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:214975dbc3466a9e3660356d69db2e817327009bffad2c68e2230695c2e8ac9e",
                    "size": 467
                }
            ]
        },
        "36-run": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:9a1436451d7aaaa04f1a81f31af56032f6f079105ce14a39b17b019ef23146a9",
                "size": 6795
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0aeb4ade331e503f627cf2d20e48a0e609546d534f31d0ab05e75c8f0a67add4",
                    "size": 58130600
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:082c1b0215e65b79bee57867d846182d55066d84b6536f8ce5cdfb4557925530",
                    "size": 2592231
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:42ba2d464197953ae0c3ea9e9a7a0862776bf9c6b9f3de24425d068cab220125",
                    "size": 19390844
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4964fb2db364d724426035e1a65a77fb7a7597a97ee108d28fdc5f65bb88355b",
                    "size": 473576
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:30c2f7dc4c95c77dc1ca12e66dd393dae4e0e48b4bf2e1ecd5df4bb094a6764e",
                    "size": 1013
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6b1bd7b752a01aabedcbb0120f942f8e9b40c1ea7d9dc536209ada8b69b743c6",
                    "size": 278
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c65f82c416d78c6bd93cb4f9d6a5524c5b78e47f5242ba83e2a7e56333387a14",
                    "size": 679
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a5aee459832c98a800d0f6b838ab0cffb57b28fcdf8ae32a265c871cb574db71",
                    "size": 461
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3dd1e0539028a35c5b54f5f42f96744d5467e5928a4cefa199a72f0a4115cb1b",
                    "size": 5931793
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e48ee287f3fe79abf1fa2938d62769b0f2cdd4e34769d49d5f0283ff47b58bd5",
                    "size": 468
                }
            ]
        },
        "36-run-20230502": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 8177,
                "digest": "sha256:6232ca195093a06db2b083f0dbf80176eb3406e7c9ae00ff65dd30ef61136706"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 58121595,
                    "digest": "sha256:9b917c661f02a263855792fd6dcab73a006dbae49e38cc3beea971ce0a30a4ad"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2592241,
                    "digest": "sha256:797f42ad95befcbde210213ce6f4442aa90558714c1962b72a45dbd09542eca4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 20539712,
                    "digest": "sha256:f4c488e3efe358f43fabad7466b47c809dfed33dc53b7fe12c1fae3d98444645"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 473584,
                    "digest": "sha256:1779b9498d40dd9605688b539dc71cb4bb9cc74e0ebeb329c3864f35ee6d5135"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1018,
                    "digest": "sha256:8bb610eb9b9646e5bc54e151e2e2348d70944cbd841e6cc935ed3c920dada49a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 284,
                    "digest": "sha256:49f3121fc9f05481b16119df295611f244f531caff5ab60b452833759f294e2a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 684,
                    "digest": "sha256:e9580f5b87cda5db9cfd4d6335ca5bb757e352cb132cbfef91fb44c8ebfa94cd"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 462,
                    "digest": "sha256:5f4b975d49231984a66376e10b4331c2ca1c2002c502c28237480f031fcbac1a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 5943094,
                    "digest": "sha256:5659c6128575cdaf764e9b5b148d37d789ab9748c9155e6201d3486a08bf04e8"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 469,
                    "digest": "sha256:734f124564a423911037db65894bc65eca1539b9f590818a3c1b8274fa55e5f2"
                }
            ]
        },
        "36-run-20230530": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 8182,
                "digest": "sha256:053a3d8a62b53f4b183bb76572111294ff906d2e94b9e3d8eaf88fa081eeaabb"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 58130600,
                    "digest": "sha256:0aeb4ade331e503f627cf2d20e48a0e609546d534f31d0ab05e75c8f0a67add4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2592242,
                    "digest": "sha256:f66e81e508d7ff0b01065e8fcad5fb3edd02b329a7bb9826929111835efc96f3"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 19397787,
                    "digest": "sha256:967cd5986826e7cf2ddffcc9129a9dd9c1add6518221a7a420474a76de3c49bf"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 473582,
                    "digest": "sha256:d126911a2616e3255e5957f43f8eeab0f647fb13814b3a295adf653e1cb21233"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1017,
                    "digest": "sha256:4402c277d920ccf0c462763d32f475cc323f0e51f68dd1104323acc1c82c4c1b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 283,
                    "digest": "sha256:380ebba6aa8fb64ff62569540a72cd9d41fe276a3688d475a04df22b7a925548"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 684,
                    "digest": "sha256:b33cfb0671a39dd8c618c66e054cba2ffceaca22edf8be318f9058fd5bbe1f55"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 461,
                    "digest": "sha256:d8d7d1db5cd71cbabefa5639bf76b12a1d23a9ec2ffbe3b77209f4b774244c6d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 5932587,
                    "digest": "sha256:502209abf873f4aec12a01e5db52693a0a876c1c945037adffab18dc9510976b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 467,
                    "digest": "sha256:3c0f2f3bd2e59809bb3c290ab57532709ba814135550b2bb200e201e9b2dcaac"
                }
            ]
        },
        "36-run-20230803": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 7142,
                "digest": "sha256:a689740c409ad532e17c488b555a89d8c16538dae68a407a0879950701c065bc"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 58130600,
                    "digest": "sha256:0aeb4ade331e503f627cf2d20e48a0e609546d534f31d0ab05e75c8f0a67add4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2592242,
                    "digest": "sha256:9c75e6c26711d9e4bba9cd402fd02fea5706265ceda5a372c1cc490a9eafe969"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 19391119,
                    "digest": "sha256:93a6e6658797abdecc8b080d6ac811d9ed29985c1e66139eb0efc3fe4fd9c1de"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 473585,
                    "digest": "sha256:66ebf6fce2a0a86bf9323f7c97bace9b87486a84b30b795b8483f07734ba5da6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1018,
                    "digest": "sha256:de9f162bb1b215804cc79d43d8e54b319946b70803864512617c0f2c8647fc3f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 284,
                    "digest": "sha256:80a5cf4ec1ccd57d677e8fdf9ea837210e53203afed3bcc0a1cef9f53a5ca73d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 685,
                    "digest": "sha256:ed8b6a96765323f0beb542bb4d1496f21f902e8576606d25f3e4b8ef2988cd0f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 462,
                    "digest": "sha256:db4b412a63d4056a49344974cf7d6c4b807764e9e1854858822f5e96b0a9566c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 5932686,
                    "digest": "sha256:554848e9fe1db8399377d44a134feada2f9d25c97fc08afd640cf356ce8ac674"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 468,
                    "digest": "sha256:4379e4f8590b994eada9211239ec0bb05cdb17aac3a0984711fd6be88357cb9a"
                }
            ]
        },
        "36-run-20230829": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 6806,
                "digest": "sha256:3236bf1dd88845758bd4a65e18c940f8ef3a465705f19899bdd66cd954764fed"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 58130600,
                    "digest": "sha256:0aeb4ade331e503f627cf2d20e48a0e609546d534f31d0ab05e75c8f0a67add4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2592240,
                    "digest": "sha256:81367594eb3986770f123f8a0e90c1afa4a7b5bbafd57079bd2bb87db7b98a63"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 19391516,
                    "digest": "sha256:95eeb298eaa14c188987de8c67cbbbf598d552608314bb88d4c61e0efdaf5128"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 473576,
                    "digest": "sha256:e68b0511b1a7a3ff0cd9670a4a9d320f529898c6c00f5024acace52c3a33441b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1016,
                    "digest": "sha256:41cbda035abdeaa992c9bc00aa47dbeddce44bd4311d3bfc2a7934df8614ae62"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 282,
                    "digest": "sha256:e8c90e0ac3cb78aadfe4ea106005e8b04c33c712415c5fb90d8a4048ab7833a5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 684,
                    "digest": "sha256:197745ef19fc75dcb3693cfc7545aa59b055d20381abb75a819d869212ef2847"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 462,
                    "digest": "sha256:dae3414b088ddc468091c28e460a157d0cf05ab4dc42e7eb135fcff7539e95ee"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 5932718,
                    "digest": "sha256:b5d7c8f849cca2b6685b37b0b29aa5cfa14ebf027c63ad4fcfb6b9378b72b126"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 467,
                    "digest": "sha256:c02fc234294f465842b3903b6155d6d0bfee4cfa62ea9ed8bf31ca19b700c0c0"
                }
            ]
        },
        "36-run-20230904": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 6802,
                "digest": "sha256:542236b7b7a8dd85c6a07c900a524bd738effe1177bf6b67415399d93d7c96fb"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 58130600,
                    "digest": "sha256:0aeb4ade331e503f627cf2d20e48a0e609546d534f31d0ab05e75c8f0a67add4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2592240,
                    "digest": "sha256:9fff02ca2e741d3f751eb002765f73f5c3f408645ce7147499ea4640906e0943"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 19391522,
                    "digest": "sha256:34731bf3d00791c7515a68c6e2636f8f537015e42c7242fa6ea97984d34bc11f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 473568,
                    "digest": "sha256:25fb00537804b2ab003637ca1b2694263a573e70d2278eaa8bc6832b4aa9edaf"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1016,
                    "digest": "sha256:f47f6aa8c3128884a4ce839c206f452bd83a20a48622d5853ffe82918a1725d2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 282,
                    "digest": "sha256:835d1174417d13ab9dce12261ee90e320d0a2625008f423d55656efa7d4947e9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 683,
                    "digest": "sha256:9589788ca4b24d6a18c55e30fc8041db9538dffa4132778990c87ae1bed4a90e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 460,
                    "digest": "sha256:044e4cd50142bf7d4dba6b76d94b21b9171e6a35c5837af8806bf46c006508b3"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 5932848,
                    "digest": "sha256:b30673cc8cff947a0bc3945c63555f0eef63e637acad075ec24bd3d7be0640ea"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 467,
                    "digest": "sha256:2d698a465156a91d365330e3edc6cf108afff391aa79d5ba6e90ca38e7ec1eae"
                }
            ]
        },
        "36-run-20230911": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:589cff1491a6c45ad5376fa34c0cd22ea8023a094e52099788ce599fb0022cdf",
                "size": 6806
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0aeb4ade331e503f627cf2d20e48a0e609546d534f31d0ab05e75c8f0a67add4",
                    "size": 58130600
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9fff02ca2e741d3f751eb002765f73f5c3f408645ce7147499ea4640906e0943",
                    "size": 2592240
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:34731bf3d00791c7515a68c6e2636f8f537015e42c7242fa6ea97984d34bc11f",
                    "size": 19391522
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:25fb00537804b2ab003637ca1b2694263a573e70d2278eaa8bc6832b4aa9edaf",
                    "size": 473568
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f47f6aa8c3128884a4ce839c206f452bd83a20a48622d5853ffe82918a1725d2",
                    "size": 1016
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:835d1174417d13ab9dce12261ee90e320d0a2625008f423d55656efa7d4947e9",
                    "size": 282
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9589788ca4b24d6a18c55e30fc8041db9538dffa4132778990c87ae1bed4a90e",
                    "size": 683
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:044e4cd50142bf7d4dba6b76d94b21b9171e6a35c5837af8806bf46c006508b3",
                    "size": 460
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b4c4ff23baae5fa648c6305fc5a363c45d10466256282748a8abf6d9e168f92c",
                    "size": 5932650
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b0c3b34c2d7b73c9fad5c519bb8f7794a1790d4a7ceea3055781a06fe4e75e10",
                    "size": 468
                }
            ]
        },
        "36-run-20231103": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:d3cc237ecb27952173db45b4033e8b7c39eecb1e7f1dc264d06166565a6e234c",
                "size": 6809
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0aeb4ade331e503f627cf2d20e48a0e609546d534f31d0ab05e75c8f0a67add4",
                    "size": 58130600
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3aa8ce65d91769293a572a85db2cef4e412aa18cc756acb1332097ff06409197",
                    "size": 2592234
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:be652b100b8959d592e3499aad6faa811f48f060d60641e81499551de617c31d",
                    "size": 19391777
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a2da1bfa547dbcbf400e728a0032b862a979e854c0aafd2806ce361bfa18ba80",
                    "size": 473575
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0fa7f8546442f1ac93a39ef77729bc53ce34c0b3997d6c9590306904a2e8a41e",
                    "size": 1011
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:04ec04306e065afad0dd8996fac2fc9581616e0b79b380a150dd7432fedea347",
                    "size": 279
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:39e0bad41de994a56535a80dd9b5088904a4269b59b1ff5ed27c2a4e5dbb4458",
                    "size": 680
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d15725703c805c5af6d481ba249cc3a5e4f7f3113bff5b44b5f3245349f6eddb",
                    "size": 462
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3a550acbdb9d765474e4870b9b7753dca343bc306e0b0808dda795b23bc8d4e8",
                    "size": 5934909
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:da16b8bdf9b11fcacb3bdef02a85e01e2ab05e0bb48624e3080e6257a2876b84",
                    "size": 465
                }
            ]
        },
        "36-run-20231106": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:6635afb41c194013c1b6bd385277c5a7d596c0129d3703647ff1086de874ca1f",
                "size": 6811
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0aeb4ade331e503f627cf2d20e48a0e609546d534f31d0ab05e75c8f0a67add4",
                    "size": 58130600
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d32e3c089af872013fdf4d354ad913dd2f1c0bd469841260a344ba6bd3259052",
                    "size": 2592231
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:66fb0a05565bf516c3022347f2c65160b12721392d354f3cb07155208e144228",
                    "size": 19391881
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4d35d26befc4cbdaee212145b9d47395f8b14652efe87a7e2d8589d9c53ad7d5",
                    "size": 473577
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8f54b98642931b1cf7237c669e4afc8dc4df08f1eba6936419b74b65c8027d39",
                    "size": 1013
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:90e2ee75820604f119b5a41e80b578199a127ccfba7785fc67cdb2744c643531",
                    "size": 279
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:359ae85ccabbf99e533d340b537a398757219254b16485845579facb7e3e763b",
                    "size": 679
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:303faaf9eb6174330075a0f98e3115abbc556792a7daaa0ac3eefc6fadca33a8",
                    "size": 459
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:71be3ac20cacba0c89186a92ea06d994a8487f6c58c85f61f4a411a2c077b6d0",
                    "size": 5934840
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:abfca964031cf935278bb8152e8fac268e0831b1e6c7e592ac509f3ec6f6030b",
                    "size": 466
                }
            ]
        },
        "36-run-20231127": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:add0a1f939f782ff0c5e6935c610e386a8693ec40b9ee8a4ff3cca41cc328ee4",
                "size": 6809
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0aeb4ade331e503f627cf2d20e48a0e609546d534f31d0ab05e75c8f0a67add4",
                    "size": 58130600
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:27eff68d9a224631bc9148f2f2c0c72a35771748d9b8f590052016aeb924d11b",
                    "size": 2592235
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bd7ed4bd95d152cffde10cb094a285e61f847c1b2ad3e0c247a045233e23ef36",
                    "size": 19390728
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ba2f57050d9d37c6c6ba9fa8aadd91937b5517f921e2b541f3f3f0bb30b89052",
                    "size": 473578
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2760e33d1c6112d86dd20ebf1227225a26be11ad5116ae402a7b9bf4e775fb13",
                    "size": 1011
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7cf9189cd93fbba6a8e211532cce39785bd2600d9da95bafd01ca94da45c65a7",
                    "size": 279
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:37d7c147010f6df12a389d7f0c897c3fc4cf2c6a1e3257b6880f825879d95bb9",
                    "size": 680
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6a369e4755e6233336ec243579754afb360f9c8bf93836054e2fa686535524bb",
                    "size": 460
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1cc1f0afdb35b8ab7d6083cb2b8c8ad1f0971f7bd27e5681b78c8706dbfeed09",
                    "size": 5931547
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8ce9116cd6e4d4677900cce9cae82d9bf63c3695452adb0331c55a9afbc695eb",
                    "size": 467
                }
            ]
        },
        "36-run-20231204": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:bd0d98271245d022441df21c9ef6fb97e3aa9bef3b484a6accf46356441d2b0c",
                "size": 6808
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0aeb4ade331e503f627cf2d20e48a0e609546d534f31d0ab05e75c8f0a67add4",
                    "size": 58130600
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2e38fef274e245000293ffa599f96f1b79856ee26ac050ec3c1280c4aeae35ac",
                    "size": 2592234
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:cd54c649165938bddb85bf336891e597833fc5a5f22c35f1621b0a671d432d04",
                    "size": 19390853
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d9d8ea859bb946f8092af616fd2359c1407388455978dda73bb420d6b6fc0e4a",
                    "size": 473569
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c1e722fe6a576a7c34c5c35ebadf71995d44cd5b346dc2ac3e4c811adb9cfaaa",
                    "size": 1011
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f77e425fbdcff8d7bf6463013f5bcca6a56ff1f8a2274aba1c29ec516a725885",
                    "size": 277
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8d25903730d88759040297a1f9efbe27868d3352647cc94938d8937e47f71334",
                    "size": 677
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:617cbed8eedb3ea98f8d69136824f99f687e1286506ea23a735d2030dac5d86c",
                    "size": 461
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b9414805b52fba15a4660c47439e75dff86bcbfafde50cea1da9123fc03fe739",
                    "size": 5931894
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f869bb1c3f073c5e63978c14c925b3baba2d75cf1ab2b8e849eaba047d48963f",
                    "size": 465
                }
            ]
        },
        "36-run-20240205": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:03724567b97c53a8744bcace6e86254a543e1b8d812387a01108d1ad71d48b20",
                "size": 6812
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0aeb4ade331e503f627cf2d20e48a0e609546d534f31d0ab05e75c8f0a67add4",
                    "size": 58130600
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7f84e7c89b99816b1d57b18ba46b176593a4acde24112af0ebb15a3f9c6324bd",
                    "size": 2592233
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:49f6c1b96c0eb5bb7d920ec2b7b7d53ff87c64dca3b618aa5282842ce4964366",
                    "size": 19390698
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:091ccb00dd5140a07b30294f5acca80d118c0cf0a78d10114205fa88f128097e",
                    "size": 473573
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6a53ba3f76b89db541ad5b2440966d7760158c62dcfdcf86a57a56ccabb1eab7",
                    "size": 1012
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:cf1196079c7d2d54dfd67774cc416684dcbccaf5ecadc944b3e7fac84f1b5688",
                    "size": 279
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9322d7c54bfbad2f558788f1dd17351e75511d72efb30e63be1288a0373f3e09",
                    "size": 677
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:84641737dd371ea66763c59da29abcab846714470b969f81d5d69266ceca4f21",
                    "size": 461
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:575e7d58f0f526028a908b7477fc2d44f8758a94b4e2a646f66455c658a1352f",
                    "size": 5931865
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:33916837801b05440f5aabccd47d9b58e7d379fc11b49591f91195572372d9fe",
                    "size": 466
                }
            ]
        },
        "36-run-20240227": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:1716e02089cd3d95c7fecef28d8b4ec25a25df2fa8530f3113ec39668df6fe77",
                "size": 6809
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0aeb4ade331e503f627cf2d20e48a0e609546d534f31d0ab05e75c8f0a67add4",
                    "size": 58130600
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e7a0db0ff778242d33b334df3880f3377be078ede1389683094b9fc5ef625a8b",
                    "size": 2592234
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e11ece4d18eb73e1f2478b744c2762a970279215b677363fffd763b4e66cbb20",
                    "size": 19390875
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0859dbd8c79863b41056cf1f05b8070d167a36f4722ff62e7692830b9813dc72",
                    "size": 473577
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b1fb6c3b5aff923033461b6aced870ddbd9ecd23a6f1d33b947404edb036887d",
                    "size": 1013
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5db6ae9e6237947c470a017ac42126a11b27bc1f4c45124b7abee8e979d5121d",
                    "size": 279
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9784ee44190cc36d239aecc400341f0cdd989158bab82fd65d2360c337941dd6",
                    "size": 680
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c96d7e580d362e4810be600d8366b5df4ef8a5d0acaf892f1a6d7991c532b9e8",
                    "size": 461
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d76bcc59954833eed33d4583464994111db342073dbf5d0fbd7ebf0dd9b1391d",
                    "size": 5932104
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:dce2a995bf3bd4802bf4ea62ab825a905e94e28cf0fe08dca6202ccb522e417a",
                    "size": 466
                }
            ]
        },
        "36-run-20240304": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:d15de9bfbdfb1bde9cc4cf900006da2897c5a4b0a8326ca8941c43566fc2b426",
                "size": 6812
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0aeb4ade331e503f627cf2d20e48a0e609546d534f31d0ab05e75c8f0a67add4",
                    "size": 58130600
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4bc51f944b49ce237b9f298b98365527f7e3798bf21bafd50e35866a556ed4e9",
                    "size": 2592234
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:facc66dc89c7d7c447626eb18bd7ce32d146ce57cca4020a810c3ce4f591eca7",
                    "size": 19390749
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c83275ccf32f5cf0cba4d8f5f680a0359bf1a953f54b790f0045b2ceccf6223f",
                    "size": 473575
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b34d49a738cb74e7f50b246548d2e75750c65f65c48b0f17385c21e6803b996a",
                    "size": 1011
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f4321ae63b784037f1250a339377b9aa8b8b667eaaa46f6ee1b5bc892702f6dc",
                    "size": 278
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a6b178a90bf42de76fa696cd5c34841d8b28240ce520eb2cbfb604e148aaf6cb",
                    "size": 678
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:56991078aebec441802470063e40c974fd84cab53be8c0302e8c05f1a88955a0",
                    "size": 461
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6f39934438ff92459ec81d3bba8e3f434d305671d0d9235c68d9acb0974a3ffd",
                    "size": 5932070
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:65521451422273af5ea289e387611e762e1aaa7e3488ca1291f9b6cb54c1b221",
                    "size": 468
                }
            ]
        },
        "36-run-20240401": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:ae7cc030466746cdbaa46cd4010dab67aa11a1afea488132c3b322f2de153694",
                "size": 6795
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0aeb4ade331e503f627cf2d20e48a0e609546d534f31d0ab05e75c8f0a67add4",
                    "size": 58130600
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:56dc14cfe3300a84ae27764721db64d2f98d454a9b42a6c9d7cb9d30a172a070",
                    "size": 2592228
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8f5d5bfba91d41861de1fb090964f20b327211c1c947a70c5c06ff50f343cb09",
                    "size": 19390970
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d7510c6c08be3cae0d913e087b2ab0adfc335aa94a8b99e269e3a3aaaa9bdc39",
                    "size": 473575
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f364d329a6963313f859e7df4b3254176e848f77264ad4b07f4d4267197066f4",
                    "size": 1012
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:94abcdf5f2faad93c90676ffe091e188863184745ebc512c40b1f2ae1fbd2bbb",
                    "size": 278
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:33198baaf3af80d3355e63a11e4f2a4f308ff51588ae697ec514e96b8ce5ca0e",
                    "size": 677
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:079c572b5983bd27847370979958f7a75f320fbf3b0b1df78d317296b7aa988c",
                    "size": 462
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:07446b09d0d5e57084199782657d48e6bd7ac9cc41bf9bc0faff183387d68f20",
                    "size": 5932360
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d9d9c551f802bf53db7c273edd4be4ba98fad2311705d70a037a7a6b519b3224",
                    "size": 468
                }
            ]
        },
        "36-run-20240408": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:9a1436451d7aaaa04f1a81f31af56032f6f079105ce14a39b17b019ef23146a9",
                "size": 6795
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0aeb4ade331e503f627cf2d20e48a0e609546d534f31d0ab05e75c8f0a67add4",
                    "size": 58130600
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:082c1b0215e65b79bee57867d846182d55066d84b6536f8ce5cdfb4557925530",
                    "size": 2592231
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:42ba2d464197953ae0c3ea9e9a7a0862776bf9c6b9f3de24425d068cab220125",
                    "size": 19390844
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4964fb2db364d724426035e1a65a77fb7a7597a97ee108d28fdc5f65bb88355b",
                    "size": 473576
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:30c2f7dc4c95c77dc1ca12e66dd393dae4e0e48b4bf2e1ecd5df4bb094a6764e",
                    "size": 1013
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6b1bd7b752a01aabedcbb0120f942f8e9b40c1ea7d9dc536209ada8b69b743c6",
                    "size": 278
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c65f82c416d78c6bd93cb4f9d6a5524c5b78e47f5242ba83e2a7e56333387a14",
                    "size": 679
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a5aee459832c98a800d0f6b838ab0cffb57b28fcdf8ae32a265c871cb574db71",
                    "size": 461
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3dd1e0539028a35c5b54f5f42f96744d5467e5928a4cefa199a72f0a4115cb1b",
                    "size": 5931793
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e48ee287f3fe79abf1fa2938d62769b0f2cdd4e34769d49d5f0283ff47b58bd5",
                    "size": 468
                }
            ]
        },
        "37": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:095f26299c408e415d1325f671f001cea75f10a0f13b0414649b3e3fa087b420",
                "size": 6796
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:69fff380046369a47fbc74b0aa03f61fb243f73dc5795e3ecf69c6577ee84908",
                    "size": 63118399
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d67deff5c71a351663d4faf25c3b38f412142a31bca7a8d888c8821bfe5e18e9",
                    "size": 2592229
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:aef089e78d846edbce27f2669c47ec3fcef142e589e1867ef5908636b93f70a1",
                    "size": 23448814
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d2e3aa275cbb3a947522d3ea6580677ee9aa12d44c091352980066a1fb89bef8",
                    "size": 473573
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5f9e31015a5229413246198fe29fd337da9e65c8a8af3238c1f8824969f6e872",
                    "size": 1012
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3a3a2d6852cd0e1051942f064efb1ca5ed52209ef47cd0bf05a7e8752026738c",
                    "size": 278
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c3c8080aaea2aac7e2ff9499b2a0acda4cb7e625ee3cded157d534b54c647108",
                    "size": 678
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1e138be9b56c798718197323eafa69ddc869347ebd57ddc632dd70c020d34717",
                    "size": 462
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:aa51496e6b7060ef2c7a15d4cd416d98fd59f28987ff76a9eea9b0b0f309fc3b",
                    "size": 6663565
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9f1a7fa6c0cefb6a6b4fbf46bfc0b3000c99d8708a7e68e57e7b7993bdeb50ef",
                    "size": 466
                }
            ]
        },
        "37-20230502": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 8184,
                "digest": "sha256:3dfcd66b3f0adbe0ff584c043ddc506ac93a14e251d7ec2e85f59ba041c822ab"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 64445578,
                    "digest": "sha256:e733ff1786fde464ae5c487ee23562295e5ec377f322e1a0ddbeb9eb0b767770"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2592235,
                    "digest": "sha256:779fdfa64b09f2b03c7a5e10d4ef87952d83da7f023ce1d66e2147c526b1d341"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 24144690,
                    "digest": "sha256:ff421aaabac7bbc65ca876f9b39319846832cde3697714f4f73ca7a076fac22c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 473576,
                    "digest": "sha256:ec59658df998edad9693fc215cde79d353e70dbfbe1341db33220c67d9c7989a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1015,
                    "digest": "sha256:36079b38428c307f2bf975c0469bc873376a43624adf1bb4bbd24688c3491d13"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 282,
                    "digest": "sha256:8461a9fa9e696794b86076991c15fefb22bb5f7cb00a0794ca50435f331878dd"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 681,
                    "digest": "sha256:1bf0146f9f3eb6c0d7f45063920fb8a873c6791e0de411d72db985228f24aa67"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 462,
                    "digest": "sha256:88733766d34217ae72bffd4818ea0519e3e6a604d5849f9fae03116a87121164"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 6436992,
                    "digest": "sha256:6e77c5f6fa75e934d9cdfa8dec8a896649b498a7c18a0f54f1ec90554d16152d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 469,
                    "digest": "sha256:df8ec00c118ce5f7f484d44b178ba9e3f46651c48f6c1cd04f8a77152077a7f0"
                }
            ]
        },
        "37-20230530": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 8182,
                "digest": "sha256:6b8638befd4f8f0dae701eba5c11fb84f97ba29f018ccacec987f18166ae9ea5"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 64674351,
                    "digest": "sha256:72e086bfec66fd3950d44dad0170ad1c4eeb3cb44d6bd0cd2d14d15f6493114e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2592234,
                    "digest": "sha256:94903bee787b61baef32c2f253cb7e456f92dd60dc2361d2686d84c676846461"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 22875081,
                    "digest": "sha256:aa85fc6b6d58818eaf697af244b4cc17ddc780e40a839d858be0cc5c693a00cb"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 473577,
                    "digest": "sha256:41436fae5c77e853c134ddc6bbf6b4a74dd92ca423b9dbd096740ba87de8b735"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1016,
                    "digest": "sha256:4db02dd47c7ef88ecb112623f1b5753ba3ad6f91f2b0d5c0252d8cd50d82b2b2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 282,
                    "digest": "sha256:566e5b2cc67991dc19d9e141b3515ec02430c23387f48a93f3c197b9a0103816"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 681,
                    "digest": "sha256:0d571eac575438553a1f49cd92bdf9f3b653b903f1c47d12c0bad9de4e0914e7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 461,
                    "digest": "sha256:0e39fc7b103b9fa548bdc50aa87c397286bfc8f6408cf52aee07ab4fcf68c349"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 6612050,
                    "digest": "sha256:8cd975824feb2126495edb380988b4ede9854d24603e97888bc919aadfe56874"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 467,
                    "digest": "sha256:e03c34c49195b4e5405a7d360ff8b2eb6770456b8f2a88007512cf30473e30ce"
                }
            ]
        },
        "37-20230803": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 7144,
                "digest": "sha256:8cbaf4f856e00b36d71f9d0bb8cf7d29d95fcfa16ca63e0e37fa89a4f79de01c"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 64705637,
                    "digest": "sha256:ea792534a213e62c62a1c4772dfcf53eaf82f7635dbc9f71bb0a60a91226d118"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2592239,
                    "digest": "sha256:f7a79e920ec27ac3117c18067a73bfa21db8e6dc263ed85a35120c2ef5f03b39"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 21178581,
                    "digest": "sha256:33ae549057fd4a09796b47bc886cf296e26c6c8c00a5e2a5b3b4a0fb10827be8"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 473583,
                    "digest": "sha256:d64dd38c14dedf1503a4af00054c39c3f612029657db30d0fc8dca727b61b0bc"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1017,
                    "digest": "sha256:ee1494250a35dd274c3982b4c5f5c483d78c70833020b443dbde6d77d273aeb2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 283,
                    "digest": "sha256:064b89e53b25bf2e4b376f278dae78d03c75920d9c29900d41513f91449fe67e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 683,
                    "digest": "sha256:8964cfc20919de072fdf02c430f7b849108b52ed644236f48193ec4ee50a209a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 462,
                    "digest": "sha256:5501f5fbe7ed46c469c697f3b47fae5e0c81160f7293cbd3dfc3c287f01cc109"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 6634626,
                    "digest": "sha256:d2955ac883b628be8ac0bc54626feff7546067e1883cd683d933071741b03b23"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 467,
                    "digest": "sha256:461922f1dececc29f78941696fb1874a39a3e5dea211ac1f4aff557223d92527"
                }
            ]
        },
        "37-20230829": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 6807,
                "digest": "sha256:ec1a101b6a59750bc679fabc283524acb4213d9542c0b39982b8c23a8c241271"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 64705637,
                    "digest": "sha256:ea792534a213e62c62a1c4772dfcf53eaf82f7635dbc9f71bb0a60a91226d118"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2592234,
                    "digest": "sha256:8a23d1bc357a016559421550aa91e0204a8a255102a9224be83008caeaf996da"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 25809278,
                    "digest": "sha256:f940068d3ef039efcb0ca5f66ee60c0bd0cf4760713964a44d6374b497b2a9b5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 473573,
                    "digest": "sha256:8930b41cb100d0197249ded6ea0bcdb52943edd72fdfb23c1e37e2465cff32a9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1016,
                    "digest": "sha256:a577c46bc85a1eca7057d6940255eb92584d7207344f27d5873361fa86b41658"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 282,
                    "digest": "sha256:586c7444d44703ed4dc6565512cc8cca2f0e4835e70d5aca6ad327406a7e7a64"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 682,
                    "digest": "sha256:a32ef540d1e852b24d14374a1bc3285034d6ff96bb276015e19412e9d51d29e5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 462,
                    "digest": "sha256:1c9a15d990e00c06610ca1b360a6a38d60b1a995503f841ba62dc00e53c6d5e6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 6708121,
                    "digest": "sha256:7ef80ac2a48ca9dda8723f9fa1c817bf23325f3a6bc60f7636003516305641ba"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 467,
                    "digest": "sha256:77b3b9fa0f66df333dd6dd7489c6152eab62a47d9581ca0ac3035c1a6b6d5467"
                }
            ]
        },
        "37-20230904": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 6808,
                "digest": "sha256:35bb38fc03a9ba225dd9c28e08d8cee0247c6c4f68a2570008e624988af394b6"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 64705637,
                    "digest": "sha256:ea792534a213e62c62a1c4772dfcf53eaf82f7635dbc9f71bb0a60a91226d118"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2592232,
                    "digest": "sha256:57e197807ba0a519d1edb0779ce76a06124dbef05029811c4cd40f0584de6bac"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 28511392,
                    "digest": "sha256:471a3338d976e468e7f618dd22fbdde0e2373e61be9ba9fe8ba4b2e72baecef0"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 473571,
                    "digest": "sha256:43acb285765a1566a09368e26f802363c73729a1ae513cb100c40d7d5f2c9fd4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1015,
                    "digest": "sha256:1f7a541e39d90075887bbdb2cc816aabc30dbffcf6b53f81374d58c099208d3a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 281,
                    "digest": "sha256:f64cf4e6488b8740244403e8dfeecf1fd1eca6cee27302b8246883ac41a1084b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 681,
                    "digest": "sha256:455b8b17e8e1b86358879c1c85bb769d1d32ef5a39654a9da1ca47fe376a9941"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 461,
                    "digest": "sha256:79974a50afa759f12e48dd7814fb83e5849ad292c42e28177d22c79b13419d23"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 6737268,
                    "digest": "sha256:6f68f0458988d9ea2d4539b34a4d8e1047da8e2e192bcd222891bf5e14aca6d7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 467,
                    "digest": "sha256:bbba5de64a9134d844b86ed83b6c37ed1a56e010b6a804df42763dbc6cf60971"
                }
            ]
        },
        "37-20230911": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:59ab8344b94aeea30a5b00a2a6cd24551b09fac270fb87ebd88bc0e6a3156915",
                "size": 6812
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ea792534a213e62c62a1c4772dfcf53eaf82f7635dbc9f71bb0a60a91226d118",
                    "size": 64705637
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:57e197807ba0a519d1edb0779ce76a06124dbef05029811c4cd40f0584de6bac",
                    "size": 2592232
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:471a3338d976e468e7f618dd22fbdde0e2373e61be9ba9fe8ba4b2e72baecef0",
                    "size": 28511392
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:43acb285765a1566a09368e26f802363c73729a1ae513cb100c40d7d5f2c9fd4",
                    "size": 473571
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1f7a541e39d90075887bbdb2cc816aabc30dbffcf6b53f81374d58c099208d3a",
                    "size": 1015
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f64cf4e6488b8740244403e8dfeecf1fd1eca6cee27302b8246883ac41a1084b",
                    "size": 281
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:455b8b17e8e1b86358879c1c85bb769d1d32ef5a39654a9da1ca47fe376a9941",
                    "size": 681
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:79974a50afa759f12e48dd7814fb83e5849ad292c42e28177d22c79b13419d23",
                    "size": 461
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d61a53ba1310310feb2b3ba03d0504c23710dd3c4eff88c132d71096c536197c",
                    "size": 6737668
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:69ee5385f36a99dcdf9dd724d6bf6b826815c1aa9486c1f5d263deca5505eb8e",
                    "size": 467
                }
            ]
        },
        "37-20231103": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:09e41a197679e7713c47271ce2f8b68f9c08605f303bfda9d231d8750df6b4ba",
                "size": 6807
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9d8d1f79d667e0d33c19dcab3e1da521941331416c217cc74601d8d9f6eb34ab",
                    "size": 64844849
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:70f1454c069b387e5af8b9d91b5470e7c4785b9a3290f7113ad42e664f16f534",
                    "size": 2592223
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d76a558193cb7b66b0700ad5870a13652edf878e9142a0d74f9a71180fa098d3",
                    "size": 44064717
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6f396e4d4a3dac8410ab225cbad45fb13592e944fdf1ab97a953ead54f0fb00d",
                    "size": 473572
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:12c35de3a810ce75e005471dd252f007b4ee65305ff26ddc28b8dfa744f9b86f",
                    "size": 1012
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:476049291d6250253e43958e82448d6c862427743c148732b2a832f70c372a56",
                    "size": 278
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8e0ba4f7e5a572e065f592740afcf5c1f8313b9813191abe3a2b5fd75ccdd00e",
                    "size": 677
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d6b9fe800ceade297a03f9af34ae2921bb7a789025c1dcfcb5b389739c04d457",
                    "size": 462
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3d8e284ba8dee1296161cd9459c3e8f98ba86c486f85b5015f73ddb509914577",
                    "size": 6852289
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6f0caa6e8a5f8f9cd7c1c1f67d372b2055929aeca735e0d50630bf0f50cea363",
                    "size": 466
                }
            ]
        },
        "37-20231106": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:76b45d8037b32b3cacdb9c27e6d6a2e4cd144108852ccf76d8f3667562de8075",
                "size": 6809
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9d8d1f79d667e0d33c19dcab3e1da521941331416c217cc74601d8d9f6eb34ab",
                    "size": 64844849
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:03e4b9d169336e58479c799e52d209343f4fd63f113b03b9cc3778d78eefc36f",
                    "size": 2592228
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9ebd0b84befc3bef3f3a1a315ae5e7ec38574027144908174718797f0a00360c",
                    "size": 44065020
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4d11386853aeab8cd5baa963e4328bffa12cd29a1ce5240ad9607cc9c3e875fa",
                    "size": 473574
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7331c59cbf560592c7caacaec5a5b0e7c1412d0ee6c53af4a6afd0b75120350c",
                    "size": 1012
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:01cc8bad0eb150412ebd78b17a1ec8ddb84bf7bfda9878c71e39cec3d021ee7a",
                    "size": 278
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:204195aa087948caf7654cea0a3a5700bce5edb30a573214210d4567dfefe883",
                    "size": 677
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c45bba7cbbc35ad8b4c7416a9df0446d0594c82b7244266706a7a42cfd423cda",
                    "size": 462
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:cacf54655129ce716db200628b3703abbc8871043195d1ec3efa480a889ba61a",
                    "size": 6851883
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c85ba2e57aab76ff38e9e7853c7b26d9c582fa1c1c03ff2aed0531e929b8f18c",
                    "size": 467
                }
            ]
        },
        "37-20231127": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:8709ed34a283091e502fb5ce449e9839c04a21c21e451cb804b38bc451669c4c",
                "size": 6811
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:69fff380046369a47fbc74b0aa03f61fb243f73dc5795e3ecf69c6577ee84908",
                    "size": 63118399
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0bb5eada9fb8c922ecc9f8444aaa0ee8a62fcac70ee74abc4710b2495f0bfd08",
                    "size": 2592228
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3ab8b31915862687dcc837ff941a87caf4c07e9f37527c8ff82b84c62d432e58",
                    "size": 22318509
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:491f82e7458e6e17bae05aa839d6b366e87513662f4340abcac0a9696a7480c0",
                    "size": 473573
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:744368413ff21e9a4e526bd1640cb20d58d0ac97385af7363e6ccfaa0a24b050",
                    "size": 1010
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d600c7ca91fb3e6cda2851db48eb14cc780b01a3eb28cb3b5cc1c157b30e5ce8",
                    "size": 278
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b803570392d88303afd7a2018b05dbf63c3295a143048a2729f5436e4f82f62e",
                    "size": 676
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c82c00cdd78937eb219600038c3a9ba8501aa8ae7b114cd8e577f8fe1107a36c",
                    "size": 462
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:cd39f3ef999bb9b47e7eebc7e98f1ccac30437131a41052a7abd6cc4977c3562",
                    "size": 6664271
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b4de3682dc6fbe5f51a6dd4d1b6250729df9ba860e419f7c6dc296cfe495d071",
                    "size": 467
                }
            ]
        },
        "37-20231204": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:fb2863f09ce135a7a239e4455519a12c79e762cfd7be9a02c78805dc4e6c84bc",
                "size": 6807
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:69fff380046369a47fbc74b0aa03f61fb243f73dc5795e3ecf69c6577ee84908",
                    "size": 63118399
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d33718b133be58c12c588d020799740b8f5d0e1659f4305bd3a42e0be1ca53e9",
                    "size": 2592227
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:638dc3ba02ae0d436831ec2e65f80cf3a0df85f54b4dd0e7ef6c930f2c9ab6a9",
                    "size": 23448833
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:320c005249b51b04b58caf58affd18499aee26124689ea955f510182122cfab7",
                    "size": 473569
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7d3113c0c18b1dea309c42932b22901908926108a8103cdab78170405c7a600b",
                    "size": 1013
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ac6ed7c321ff834e5966003c322a533aea0543816c96955876c3ab5646e3079f",
                    "size": 278
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:297b2ba3b641a48b1e90733cb70836ce9c195ca3803cf200e37417506cf0bb66",
                    "size": 678
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1f73b516ad766efd99f0fe8db17e4e328b2f6accabc971ecfa3d27b53c981a71",
                    "size": 461
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:abf0891c42000248476b222d3be10a7c4e5d822c1874e0ae5e32f13bea2d505e",
                    "size": 6663532
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0ebb49b97c23ff12b83aa2601531d558996a6bbb0c72aadc4720174d58422743",
                    "size": 467
                }
            ]
        },
        "37-20240205": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:410d43528a7d4903eb26fd629298a3c2dd7482c133351585c931b7f55cdf5a61",
                "size": 6809
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:69fff380046369a47fbc74b0aa03f61fb243f73dc5795e3ecf69c6577ee84908",
                    "size": 63118399
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:043f40b98b892b40de8f366a4877d9d156b79e078c159e8ba29e516bd6d1c1f3",
                    "size": 2592229
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a5741c1c9c7a9fefc40c6616a877c25ae7e2d3b4e3f445bc7366d05c2eadaabf",
                    "size": 23448765
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2b7fbfed82651bb013b52b5f9e575eb057922dd32dbea33546ffd3791fd6f318",
                    "size": 473574
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:31345e8a4ebd6f75c8d04b1987bb10dda6e287bb914c12f9506f73ae22df8918",
                    "size": 1011
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:64c5ff84cb6737b8e4034ed8c0c032049484812c53fac7bd3922ac1887619c7b",
                    "size": 277
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8151e9be2f5daef339c61f7281525da71de532fd3a55c08d147c7de15b1c0e4b",
                    "size": 675
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c014d4420297605e816aee496643987e4894d4bccb07a796c70c571e2feb60d8",
                    "size": 461
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:39459ee280ebffd152e96a6390c1daf6b71bb9555902bee9d7c6ba3045393bc8",
                    "size": 6663313
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:00ce2536274788851cb716c6d7a32bbdd4d3a0ad6be776cded5aa0ac2d7c43c8",
                    "size": 467
                }
            ]
        },
        "37-20240227": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:b941e87b44da4f4b13abafd4ae3536a0567d0afe18378f0c3f029d273b3698ac",
                "size": 6810
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:69fff380046369a47fbc74b0aa03f61fb243f73dc5795e3ecf69c6577ee84908",
                    "size": 63118399
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0c9cb203b87166e0d09b81a8d1f5b49ea5bb80d37799c1ddd6d0f58f482ba0ca",
                    "size": 2592228
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:cd15d660a3890fbc117644cc7e00384e54cf47a86db50fb85d3e3924a3b6e0f7",
                    "size": 23448836
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:69feda61e8a6a07d2f8173016c73ff91210e0484140825e75e597b45142b7ae1",
                    "size": 473570
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ce20a220ec40b0412743b54d0120c434710d00f3b54a54502308b76efc9dd983",
                    "size": 1012
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d47f351240c88d3748188f2ef0e0b48f6e891509bebda6f18393ad51c6305e70",
                    "size": 278
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fe1a2b8c0123677dd17cbf5897edd521c063917ffff70729a2e1211219421c57",
                    "size": 678
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f0bc84079738c7cb444a751732c831109078ebd828f39565c765bfc72f1e32d9",
                    "size": 462
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4b98df28b09b73ffc1489ca23ce312956e40b0f6e53b61ab37376b020839a18f",
                    "size": 6663446
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:700dbae8774302e97aa6313b485a35a294b03952a48c501b93011fa2b4c23dc3",
                    "size": 466
                }
            ]
        },
        "37-20240304": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:e5773ee2f753084cef8c3c7aa6dcbe278ce6a1c3eb22ecfced0d24e1a45db48d",
                "size": 6802
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:69fff380046369a47fbc74b0aa03f61fb243f73dc5795e3ecf69c6577ee84908",
                    "size": 63118399
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1838771b8ec87483e105e112d8024f9e9029a53bae9d1ef0c34c061003181dfb",
                    "size": 2592227
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9086ea61d95c1ab147c8270e5a9b1830e96d367d41663c7617ebb4b06043f2fa",
                    "size": 23448747
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e665d30b7799b95a1fefa213155d46f59fff56b68586082bf191741035863ca9",
                    "size": 473573
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:eca08035356a02b31523d0089c92c641151221e1163f6f69259640069fc93325",
                    "size": 1011
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1dbbb8991fb8ec274be4b21cf0c12fa2b72fea515b37daf96cee76915bf6a3ad",
                    "size": 278
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0a012ba1f4d0af3a86a253d6ee08223c9446a2cf6250bdab21f839ebc7d16354",
                    "size": 677
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:30495c77303f15af04a882c71d278cea6699924428092ff409840f02e3455bec",
                    "size": 460
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:19d5b7e0594881fd77d57a551e8b15159c37ec8f3e435358d047c09482de8e4c",
                    "size": 6663577
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8d43526f563b39aab347db11764f60f26e634c67f19a0e91dfd8991703dbb56c",
                    "size": 467
                }
            ]
        },
        "37-20240401": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:a18edbffa73f5cee66ce9aea2af5d8cdd928adb4e4ca7f8994138606a8b66262",
                "size": 6794
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:69fff380046369a47fbc74b0aa03f61fb243f73dc5795e3ecf69c6577ee84908",
                    "size": 63118399
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:326b20e912351ee1cd36eb4928f89de7420c89cff4fe26170cede56d5b53defb",
                    "size": 2592233
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f39d9f2f25dbd3d6ef3ad45ac705c80b09499c0886ce65119c20d6fc0873f021",
                    "size": 23448664
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:149aacaa82b179c640f96dd6fa65cb2df58f00055c9a94c3886a4906672573a7",
                    "size": 473577
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e7514cd29789812983b2a947f44fce3f7bcce347440875a08883bcd9b53e739f",
                    "size": 1012
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4b84039a432480f5ffe416931d3e349c4318c99332a368f259bac7fd40b1d2c5",
                    "size": 278
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:85dfe6b177a514d70942f90882fe77a64a24af14ef6f9f8be9f6e0ac8271c2d2",
                    "size": 679
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:75ac5a1c7aa9ff94b80b26d3cff3e1a67892548f05c0ca35405a77c861a15ab8",
                    "size": 462
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1f022462928363be1279b3231b7e96b3898c864a7b010a97fb5ebea90eb4c374",
                    "size": 6663541
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5360dc3ffd036ca843609057ed2be35a65bfd12645d1ce1916fbcbcfc08ec95b",
                    "size": 466
                }
            ]
        },
        "37-20240408": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:8c67c47962a26c1315f6407b9d19fea6176f2c2ff0dec881bec3da457dd24c6d",
                "size": 6796
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:69fff380046369a47fbc74b0aa03f61fb243f73dc5795e3ecf69c6577ee84908",
                    "size": 63118399
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:689676ef4dfbe38a100ec0fd8bde8b49c700bedf04ca010d64d0e38e212b9404",
                    "size": 2592230
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:20de4a94e0f41f23dbdf295a23279b3082a2b94c36276a1517ff184d9dae8e62",
                    "size": 23448793
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:aba17861f514dbec43f4f00bc73113c6ead88d0daf01cd5af8c0468d2e6ee6d6",
                    "size": 473577
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:44561f9120b7b96b19381819ea39413a89fe135ccffbc8f4f6586ce34ddef54d",
                    "size": 1011
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6246de46784e0baf4fe4448538c5536535e1dd8374a16e2e22c5fb226e3f400d",
                    "size": 278
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:008ed895bd8ec822f5bbb391c610f13b97036c9b6a66d8ad9815fcd75fe5517e",
                    "size": 679
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:752a73f6143a147cf9dd80aa9e2296a8678cefd5393206c50f4df7a5303521d0",
                    "size": 460
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:45fed00e756eea66b1ee2613e64de2f08f080a866bb316f416b3633ce11cfd84",
                    "size": 6663859
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:afa13b6c3661e13d5afa23cc4e60ac0e08919c97ef0997520981b0eca115db70",
                    "size": 466
                }
            ]
        },
        "37-20240429": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:095f26299c408e415d1325f671f001cea75f10a0f13b0414649b3e3fa087b420",
                "size": 6796
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:69fff380046369a47fbc74b0aa03f61fb243f73dc5795e3ecf69c6577ee84908",
                    "size": 63118399
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d67deff5c71a351663d4faf25c3b38f412142a31bca7a8d888c8821bfe5e18e9",
                    "size": 2592229
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:aef089e78d846edbce27f2669c47ec3fcef142e589e1867ef5908636b93f70a1",
                    "size": 23448814
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d2e3aa275cbb3a947522d3ea6580677ee9aa12d44c091352980066a1fb89bef8",
                    "size": 473573
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5f9e31015a5229413246198fe29fd337da9e65c8a8af3238c1f8824969f6e872",
                    "size": 1012
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3a3a2d6852cd0e1051942f064efb1ca5ed52209ef47cd0bf05a7e8752026738c",
                    "size": 278
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c3c8080aaea2aac7e2ff9499b2a0acda4cb7e625ee3cded157d534b54c647108",
                    "size": 678
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1e138be9b56c798718197323eafa69ddc869347ebd57ddc632dd70c020d34717",
                    "size": 462
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:aa51496e6b7060ef2c7a15d4cd416d98fd59f28987ff76a9eea9b0b0f309fc3b",
                    "size": 6663565
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9f1a7fa6c0cefb6a6b4fbf46bfc0b3000c99d8708a7e68e57e7b7993bdeb50ef",
                    "size": 466
                }
            ]
        },
        "37-build": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:0afab04fbb9bfaffef114e8a13a8c063b224f909a56aa58f3ebe0fa082202804",
                "size": 7552
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:69fff380046369a47fbc74b0aa03f61fb243f73dc5795e3ecf69c6577ee84908",
                    "size": 63118399
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:82317edea666666d707ace0b03aad8572e29a838bb12b4c4dfd016b2ab4ce736",
                    "size": 2592233
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c2e5455188b6eb0cff89590382e7b0ecb02ea2b714d55bba2fa7dd06af5aec88",
                    "size": 23448711
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d715dbac72a798e8d0d0ffba83669baf0bbc4da2276a5a381ac22d652d5e13d9",
                    "size": 217029439
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7ff7cea49a20cad0aebae3fa3c701db7c3491385aea25f0e543cc59538fa5ee4",
                    "size": 473573
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d5a769b6122b0d526950c3579d87d5664c827ecd65688a38c75087c4f80db959",
                    "size": 1012
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:49c4a2084afc1da3b08c57198b9d7982cb4ad987197a29eb1c0b905a29331a4a",
                    "size": 277
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4baaeb452bcc05b92b082e0b84e390a65c6e08ed28ef13295f9b16ba167a9c10",
                    "size": 679
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8cba45c189962bae1d2ff247ddff62c95a79794bffefeb6283787d28c6b320ff",
                    "size": 462
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0c73585f5ae2e5501ea84cf210bb3e2ef339e5be2c28647477fc616783a259c7",
                    "size": 14184607
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e90fa7528fda4f4affd9f071788d390dbcdffe27db7b2ff37ffa26b1889f15c5",
                    "size": 467
                }
            ]
        },
        "37-build-20230502": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 8893,
                "digest": "sha256:1b238db562a2c5701cbaac65230fd44f2106fddcc123690b8762f48cda4e341b"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 64445578,
                    "digest": "sha256:e733ff1786fde464ae5c487ee23562295e5ec377f322e1a0ddbeb9eb0b767770"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2592235,
                    "digest": "sha256:779fdfa64b09f2b03c7a5e10d4ef87952d83da7f023ce1d66e2147c526b1d341"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 24144690,
                    "digest": "sha256:ff421aaabac7bbc65ca876f9b39319846832cde3697714f4f73ca7a076fac22c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 215589874,
                    "digest": "sha256:e36768648393a27be5fe6a721c2afb057b1e8838d5e3a07a9f9dbade846815b4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 473573,
                    "digest": "sha256:9fafb3780d95867794d9e100e8ab440b040d90e78ae273e589c8d265b21e33ea"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1015,
                    "digest": "sha256:3cc2f7f66b172ff9ab224010454302af8afe1203027fca9d6e4c81cd58673ef2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 282,
                    "digest": "sha256:85c04457b3588b30710cc9db1f9f51f78892c774810e31f3f2b991ccfb8a7c3f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 682,
                    "digest": "sha256:ffe285366352754f210f0aeb22523ddbe5b4a0d9261e4f5613823c250f38feaf"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 462,
                    "digest": "sha256:716ba18af0495321712b68a2be349ce3691b12361fb757cc7908c01067b2a8d1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 13518334,
                    "digest": "sha256:bf46b1f779009bcc2ce2ac09ae6ce132223ac3d407f26ac38ebe705f9417a18b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 468,
                    "digest": "sha256:9ef880154357b7a8a95cb9c8731bf126b38a41c30b421558aad6514d013e8a4b"
                }
            ]
        },
        "37-build-20230530": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 8894,
                "digest": "sha256:3ca4d38eb8209ccf27e8f5fe8b6f98d1dbe5164f1b3c1da387f497979ce01fe6"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 64674351,
                    "digest": "sha256:72e086bfec66fd3950d44dad0170ad1c4eeb3cb44d6bd0cd2d14d15f6493114e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2592234,
                    "digest": "sha256:94903bee787b61baef32c2f253cb7e456f92dd60dc2361d2686d84c676846461"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 22875081,
                    "digest": "sha256:aa85fc6b6d58818eaf697af244b4cc17ddc780e40a839d858be0cc5c693a00cb"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 216340171,
                    "digest": "sha256:a991a52277c7bace6c0879890673876841c4c050a173c857bdb387071cba7778"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 473583,
                    "digest": "sha256:1035d78600d4388198200c1b590c5d95cb1065e9a86e603218f4580b9b6e1a83"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1017,
                    "digest": "sha256:654b974ff1b637da4434ddb7569cf3bc9faa377a621a8ea1b6151fce0be781df"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 283,
                    "digest": "sha256:f3776d99ac385e31879f0d64b559602e3762689bea12d868f1580f2192b40eca"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 681,
                    "digest": "sha256:5485d34a7aee447b794ecd2a158e864348c3e2c3a750c6bf89f64d8498c94b59"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 462,
                    "digest": "sha256:ebbd9ff62a1a327e2cde3000019f75c8bf5b0dc705a264455238f98b7c9fedad"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 14080423,
                    "digest": "sha256:c3cab7b61245390e3dbbb8334d7d383730a2d4d88dc6e565596c2df0cf2cd8f5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 467,
                    "digest": "sha256:ebeba48468c54aee0abdeed9c780163574e31fd52b093552bec9abcae5120615"
                }
            ]
        },
        "37-build-20230803": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 7907,
                "digest": "sha256:a5b47113871e56ab03cac44da9aa450c98310b7eb896193434c261bb2d9811f5"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 64705637,
                    "digest": "sha256:ea792534a213e62c62a1c4772dfcf53eaf82f7635dbc9f71bb0a60a91226d118"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2592239,
                    "digest": "sha256:f7a79e920ec27ac3117c18067a73bfa21db8e6dc263ed85a35120c2ef5f03b39"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 21178581,
                    "digest": "sha256:33ae549057fd4a09796b47bc886cf296e26c6c8c00a5e2a5b3b4a0fb10827be8"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 216063397,
                    "digest": "sha256:5ee6c95214792fcda2897d2dcf5872d1711b5439e46d203751057a92cceca0f7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 473583,
                    "digest": "sha256:3f0b989c720e9cd2a8cc02d523c498641a84a510db783cfe8337de5e8a857ca9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1017,
                    "digest": "sha256:b196d7fc162f2889e39c621cab1453c822801be5010c05560a3f01f3db06d43f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 283,
                    "digest": "sha256:92bfb55494eb27a740e8eee6b16708829efab976bbc16a469c82001f63394531"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 684,
                    "digest": "sha256:5062ebc19e9e0278ae498272864d903d0482d236215dfdd6f5fdf1d6b177e328"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 462,
                    "digest": "sha256:ae0f0e8e33c3eb7fd5a2e225b59e01af9d359afe1c37e2149ad597067a52e609"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 14100335,
                    "digest": "sha256:a69ec78f1ed826c30b11e73db0925b3112cc1415f10c43a247cba8525d80a606"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 467,
                    "digest": "sha256:d53d6256cdba7f429ee794999357632260ffa5fa3c5b5112c454207dd8ff0457"
                }
            ]
        },
        "37-build-20230829": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 7567,
                "digest": "sha256:dc88f6892f07353aa388b370d2b5e7734080321708cc664f9b40f18b13b5d7e4"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 64705637,
                    "digest": "sha256:ea792534a213e62c62a1c4772dfcf53eaf82f7635dbc9f71bb0a60a91226d118"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2592234,
                    "digest": "sha256:8a23d1bc357a016559421550aa91e0204a8a255102a9224be83008caeaf996da"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 25809278,
                    "digest": "sha256:f940068d3ef039efcb0ca5f66ee60c0bd0cf4760713964a44d6374b497b2a9b5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 219418060,
                    "digest": "sha256:c610f078f4f1062005d75cf270c9bdf93e0f8b4d7409a59ca7e6356ddac1b812"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 473584,
                    "digest": "sha256:555b39c1f18e701ee0def238d9b5e46f4bc997a6eb810371ecfb574a26a6298e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1016,
                    "digest": "sha256:d341993c29914dc81520882c387d27e6bdad12e2b6b63159c74e5372086a1d1c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 282,
                    "digest": "sha256:6881bc51eb6e33607fe9bc713997860ecf2e32c2a7995079c041d41982cf7786"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 682,
                    "digest": "sha256:a99f2a9159cbaaf9367e1560cea638e9882d6a0aa14d0ff0dab11743c069ed28"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 462,
                    "digest": "sha256:688f6bffc055661b1e3e9134aa217d7451c23382a5e8dcbf5d81ad3cd0749da7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 14189459,
                    "digest": "sha256:76bb5053c24104eccbdafc299b21bd528ec0101d804ce47b8940fef4eeb2ef13"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 467,
                    "digest": "sha256:daee23fdfb680fb4d711b7c176cae0bfca1f61711a0f1431ff6c003890a3bf24"
                }
            ]
        },
        "37-build-20230904": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 7568,
                "digest": "sha256:42c61385543f673e538d26b607ecf4fda270f7c27b29445fa48dc488a9529116"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 64705637,
                    "digest": "sha256:ea792534a213e62c62a1c4772dfcf53eaf82f7635dbc9f71bb0a60a91226d118"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2592232,
                    "digest": "sha256:57e197807ba0a519d1edb0779ce76a06124dbef05029811c4cd40f0584de6bac"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 28511392,
                    "digest": "sha256:471a3338d976e468e7f618dd22fbdde0e2373e61be9ba9fe8ba4b2e72baecef0"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 216664890,
                    "digest": "sha256:b83979765e4c0e1796530bd00bc646610b38f365257e80b2085b5af058f24a4c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 473570,
                    "digest": "sha256:81879a19910e1a496d0c411ff2df904ee88a6408bea71d1d609271432a4191b6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1013,
                    "digest": "sha256:9e800c1f80f8401c189157dd7d7e4ebcd8f2e0376a3d21f7191ddb79b8794971"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 281,
                    "digest": "sha256:e14e21ec6264d33a865243f3f009144460bb90639c04fc3afa6c46a08c027046"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 681,
                    "digest": "sha256:af714c407ccba3319ab928f255b9ca302ccde44746e669d35f56b6cfa5c7882a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 460,
                    "digest": "sha256:2e42947fed8288eb956d961238c22a61cd9ce2ca22b0e86c0190dcfeef46faec"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 14137010,
                    "digest": "sha256:d084bca945b24cbc3f8ca49dd0d627b18190b389b76b34395a4dda1eac3e20b1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 466,
                    "digest": "sha256:f3700d9834e608be309cb49c6da7dea0c60f514c43ed7807a3ca39868d819820"
                }
            ]
        },
        "37-build-20230911": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:f807f758a7cf3ae3bf60aba3e0e042f6cbc0280ae385bb352372e308b11672e3",
                "size": 7572
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ea792534a213e62c62a1c4772dfcf53eaf82f7635dbc9f71bb0a60a91226d118",
                    "size": 64705637
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:57e197807ba0a519d1edb0779ce76a06124dbef05029811c4cd40f0584de6bac",
                    "size": 2592232
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:471a3338d976e468e7f618dd22fbdde0e2373e61be9ba9fe8ba4b2e72baecef0",
                    "size": 28511392
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b83979765e4c0e1796530bd00bc646610b38f365257e80b2085b5af058f24a4c",
                    "size": 216664890
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:81879a19910e1a496d0c411ff2df904ee88a6408bea71d1d609271432a4191b6",
                    "size": 473570
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9e800c1f80f8401c189157dd7d7e4ebcd8f2e0376a3d21f7191ddb79b8794971",
                    "size": 1013
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e14e21ec6264d33a865243f3f009144460bb90639c04fc3afa6c46a08c027046",
                    "size": 281
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:af714c407ccba3319ab928f255b9ca302ccde44746e669d35f56b6cfa5c7882a",
                    "size": 681
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2e42947fed8288eb956d961238c22a61cd9ce2ca22b0e86c0190dcfeef46faec",
                    "size": 460
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:37bbb76c3e7f1d53287e08af9c78e8d359e56693a701c185575e10a49af0fa38",
                    "size": 14137120
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:095f0b688064183399a88e61c553298f906d3bbe7d780c48b2226ab4c5a57e24",
                    "size": 467
                }
            ]
        },
        "37-build-20231103": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:9ac9c365c82cc947d04266dc2e5c2212cf1ff9a4d18799921393b241830c2b9e",
                "size": 7571
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9d8d1f79d667e0d33c19dcab3e1da521941331416c217cc74601d8d9f6eb34ab",
                    "size": 64844849
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0770b89f72b418017bafd34c1d5552048c5eed91faa033af7187c646a6592cf9",
                    "size": 2592229
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:29d309c8b3459e8477ca5e914be65c3e4e83ef21695a692f92c7b52fc198f2eb",
                    "size": 44064224
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a28acef6ee54c426ff17c9667f83540ef5cb43fdc3e3d664c847608b783be445",
                    "size": 216980025
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4c184b301d67b652578996acdc883d362ba56ee1d7961845e82a445fc8a3dd3e",
                    "size": 473568
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e88619da9641c1a99919b4fe52c48a15e4aa52d56e55d000d918576825ce0b6f",
                    "size": 1011
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:65ec30ea4e6e929ba2a9cfc9ea06dbd4c70137c62ff0ce8c31ba525ad3be1884",
                    "size": 277
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0f7ff1ffd46bd5431d360e8fcb55926935c214fc26015f8905538a14da17b14b",
                    "size": 676
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f83df3c49a1eebf8dbcb319e217aac00df4952838803b3ff962c7dd7957de30b",
                    "size": 462
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:386cd3b0021f03600390285e79f2b4a2b1c4af4763884dd4b8981eab2055c25e",
                    "size": 14174536
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:212df4b7c54e98bfb0cc7458ba7a23e332e7b3a7bd36601a2e2fdccdebe633ff",
                    "size": 466
                }
            ]
        },
        "37-build-20231106": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:674f5ced1279c67762c2672df1fef041927974f9ea714bbcc4ead9ff7d765244",
                "size": 7564
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9d8d1f79d667e0d33c19dcab3e1da521941331416c217cc74601d8d9f6eb34ab",
                    "size": 64844849
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:17ba3eac7c1f9ce9e04f05070a25561c9868bdcef663e68aa5ac8bd96c25b520",
                    "size": 2592233
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:285657690fbde02ba48611d3dd000f47b7c396651e283097f742181b60efba35",
                    "size": 44064946
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4e95e27869fa54cdc0812a839fe46f625b70ba99ce93d7f659480e6a4e1592d6",
                    "size": 216991202
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:dd992c92a0f592cad50a4aea59a1e3abbfdfc50f36449abe8be63813ecdbd3cb",
                    "size": 473574
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8d87a781fcef58ffe8d62d3cf860c226fb6bd64f59da4ded4c94850b90f1c4a6",
                    "size": 1012
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f6cbc2eb8a9998e5abebb20f735e54fa5fe6fe98f4ebe7936eb3ba03c3f0ded0",
                    "size": 279
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8783360b72f39fa722e56e53f2e8425e426bd937db8f07668131a09545834c4d",
                    "size": 677
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:dba5c227294800c799660501956b8746867066f6c53dda172235fc9aedc674c4",
                    "size": 462
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:12b36c7b6c43df93771b317fffffdf0a923fc7a26a7aa80a5aa2ca96f56cc59f",
                    "size": 14177088
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:29d7782bba2bc68d998441f8300b41809f7adcae51d74d1c35f28ccf45458ec6",
                    "size": 466
                }
            ]
        },
        "37-build-20231127": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:bc3367ef47d36cb174680b6b9430bc15bd282c2c61242444950e720615630035",
                "size": 7568
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:69fff380046369a47fbc74b0aa03f61fb243f73dc5795e3ecf69c6577ee84908",
                    "size": 63118399
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6641d4e23883de336ed449229e82843e5c72e3f1c81c8dd83135346960efdc5a",
                    "size": 2592224
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1b1e517fb0275fc4621249537f0da6236e1cd69bf862d820c876333462493f3f",
                    "size": 22318515
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:165564d821c1037960b170fea0079cf103fda6666513335e98b6968d8c3b8949",
                    "size": 217051070
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:01e9e8459499b3bc80b1b59e093b711165e883a6b0b34cecc147192d6647a93e",
                    "size": 473574
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:74619d00050fd0824b99ae241a8517f158d42b3343465fa6a78cafb4d6e70522",
                    "size": 1012
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:49b562c66c266d31dfe6f77e08fbf606c721fe74fe3756a0fc70572d0a9e2ae7",
                    "size": 277
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:eecd0d10f4b58b52bb36ae388d9d633ae650558ff64874899f7de0e019094c26",
                    "size": 677
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0f119eeaa7b1d1ee4109e4bb3f17232a250013fca828e92e654cb5ddb16da097",
                    "size": 462
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6896fa3376d4e7ebf6792c340b2222a99f863810da8b5f9f5b77435473e46299",
                    "size": 14197510
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:14b469b70cfeb9230c6a5c19bca42e320188b66d4c01cf283c08f62eef8efe9e",
                    "size": 468
                }
            ]
        },
        "37-build-20231204": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:67c8148a050e37cc747873b01bfed7e3032d02330dcf0ec78ebb2ac6554e82c2",
                "size": 7571
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:69fff380046369a47fbc74b0aa03f61fb243f73dc5795e3ecf69c6577ee84908",
                    "size": 63118399
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f0ca99f7b063cce65d52273a4f2101d346418bdd8a7352f4af9785e2ba52c05e",
                    "size": 2592224
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d3ef5f06a980545479bdc090e802b2a72a2c93d49fecdc47c50cc8357a279eb5",
                    "size": 23448791
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0e6eee1f98642a0b9ea66873f6f6bbc955484317743fa4c8d53660f136d5bb83",
                    "size": 217028879
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3e2ff8beebba14a582e830769648b12ea0b2f4a228d63c45d1aa4f46afaf0066",
                    "size": 473573
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4e458a328d96b94763f7d9f7f65c86f99b34e9b495422a2c95974a479df994b4",
                    "size": 1013
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2959fa0cc7c12e351b42c74a818d4f9aa5cb261407867e24a6ebc87062ec7a0e",
                    "size": 278
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:673c09069e4697b12af04dc085dd22f9b86c51024bbdf19a4f969cc74a67f80d",
                    "size": 679
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:19ce9cb7ae33b72478454483374a2eda66bc4f88d8f7b9fab48c46f5622433be",
                    "size": 461
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:96719765ae6dd8087766abf9b08053d13754e67149272d0eaef35be8f3fd7926",
                    "size": 14184561
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:36c82738ca59864f47fc88ccd71888c3a59a8aad2088d3082b2ef4dc78ddb518",
                    "size": 466
                }
            ]
        },
        "37-build-20240205": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:7d349082f663196103668950e382a6188b5a15c7d9a6ce6e617058138853ac0d",
                "size": 7569
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:69fff380046369a47fbc74b0aa03f61fb243f73dc5795e3ecf69c6577ee84908",
                    "size": 63118399
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:af78cc0520f170b906a82f421a37356d2c269781502c5f7d2c396abdfa55d6a9",
                    "size": 2592222
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7edbd9813867cb3dddc51da4d40538bd9695d5b483b8ed59539b24b19c133b4e",
                    "size": 23448737
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:44dc7c873245302e133bf36d8149b48643b19afe9a7540a40abe1eae736eaed8",
                    "size": 217029550
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4dc8c6e0f74fad71d0a2e17368a0c25cccb51945f997463748b8def1421f4f81",
                    "size": 473575
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4bc00a878dab5ef147d98e03eb2e1a5a19985e5e5fdcd18ff8defac4938695b5",
                    "size": 1012
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fb87ee75d18626f6429938563bfa6b76bda1ac557019c8354f99cc04c16fb1d0",
                    "size": 278
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e36e3c571cd31032afd2e63729a6a6885268fbecb1a32d4ab477e88b760c6925",
                    "size": 677
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:75fc38abf14743c0cb98e30147fdaf527dc87c34a8cd91db118b48425c25a493",
                    "size": 461
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:59338c7a88cd557189e77fd914146dbc70667084f77a28ae97d92a2f451ec287",
                    "size": 14184438
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a642b532fe22b19c5126bf3102f6d7f3b1063839365ccb0ca4dc109018d06854",
                    "size": 466
                }
            ]
        },
        "37-build-20240227": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:9cb05eda97a4183166402d3caba4ec6f522284997fbb9bd8feb2e180caf9f32d",
                "size": 7571
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:69fff380046369a47fbc74b0aa03f61fb243f73dc5795e3ecf69c6577ee84908",
                    "size": 63118399
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:65764d35c6ba7bc01cd8c1c7c80dedd0fba41e8aed4fe20f32b8104e40811b27",
                    "size": 2592230
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ccb26de59532c7a3ca4e330f6259f0a22d5502c63fce64953cfb835da2a89232",
                    "size": 23448765
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:dbffb8cd0d199db9da89c0a8f6be633d403ae9577895ef76ed8559e0e6a2fce6",
                    "size": 217030397
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f2cdbf2b50a12d0c904c51a1aa6a78d769e31ab23e681213a8dcd625845a43fa",
                    "size": 473575
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:caf29b48f9a19f9f082026316d26fb42e73b1f7a2585ff1f86457c794c8ca68d",
                    "size": 1012
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:821dddb4fbe51867593b530bacd209ea5cec4104a56beb6362389970d19aaa68",
                    "size": 278
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a0fa218cb0068ba037fef0d258fb86dfbfed2c4590d7b39e86733b5c8b69f61b",
                    "size": 679
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9d68feee9a64aaf2316e4f6f65cdc6fbf9e80169d4bf9cd0152c507a525b3155",
                    "size": 460
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:43621ec178694a694bc346c24853a1e34462fba94fcf0f69409ac1846dfe9cc8",
                    "size": 14184944
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9cd033b9f1f0cbfdccb6b6415ae6c383a3dac402e9e6d88d7887720e6d6b1695",
                    "size": 465
                }
            ]
        },
        "37-build-20240304": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:68a2cd063249963f98e465a25fc0cc1ed14beedb772a4e503d3033a3b5fd99b0",
                "size": 7571
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:69fff380046369a47fbc74b0aa03f61fb243f73dc5795e3ecf69c6577ee84908",
                    "size": 63118399
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:365c152eab29768a6002cd30191cfe30aa5a9c7670afb3dd05e5568d60598b53",
                    "size": 2592229
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9cfac25b66436aaad9254043374a8a0bce94c1fcc73328f0009e4c633a489dab",
                    "size": 23448738
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:eec58c8baedb56f03697759c56cc8b52846aa6b359079d478ffe547bd11683f2",
                    "size": 217029920
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d5ea14a5b029f6e9168ba600f7829994ee94710831ae531cc8575103cb5f9076",
                    "size": 473576
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7b5e5aded2a12ddea2c899e597f6b276bdbb070022f582eb5ffef5eab6706f4c",
                    "size": 1012
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2fdfe10b79cf925c4a4f205beee5164056995aa8d5d10cae49aeae14093d612d",
                    "size": 278
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:563ad2bf80f0e61e8048e26e2680eceb622c9b84a0e9b242dc26a7272ef9ee62",
                    "size": 677
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:87d42fc86fb1bef824e1ec397f2adeb648ebde6cb39d75fa5d79da952fead6a4",
                    "size": 461
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:cea06176e2b8947b6e1d07e4dd4689c9ea39eeee409eb8a40bfbcdfc6a93e01e",
                    "size": 14184994
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0286b594c700d8350d55410891c24b476d417a813c65c34611a77804cde81125",
                    "size": 467
                }
            ]
        },
        "37-build-20240401": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:a5b2a5d11aa97c3838e9d86da414021a15758018bd22468d4507c80ebb730f17",
                "size": 7550
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:69fff380046369a47fbc74b0aa03f61fb243f73dc5795e3ecf69c6577ee84908",
                    "size": 63118399
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d3a4176e53d7e5697395953f42ef76b08d9fef8fe5a662a442cd4f13740c7a1d",
                    "size": 2592234
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b1d05a709ad59f905b2bb738079267053a09a0f4f535e32192bcd83e0dce163c",
                    "size": 23448641
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3f3f5fce4a1b94b586b0523b225e6b5436e9dd40567f898aaaffd4c2302a2399",
                    "size": 217029391
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:de3c36bd181e84497d428d49b10abc3694cd9a0c75ec31064623d54cb4f8c211",
                    "size": 473577
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:565296760a52acc955f0523e8e8213020ff97bec4df095452a9633f053cb710d",
                    "size": 1013
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bf3fbff6d013e83413ee8ed775faa0f5e3350e9b987d24b28cb8715ea67d31ed",
                    "size": 278
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4363ad41c733c6b3e9c7a4610329a637d3d876504b93320bb9b4612bba294335",
                    "size": 678
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:38693fb89d5d2d6143564a7b4bd2d1c7da21077550cbe4d5e8a7ec5096625ff1",
                    "size": 462
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e0c2317dce13f5c27b06c146aefd4e35d134ef13e22244d043d097a01799bd83",
                    "size": 14184540
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7a3f18913787da49f9c675ce2d79ac9909314af6711d9c1c4651cf5590d124ce",
                    "size": 464
                }
            ]
        },
        "37-build-20240408": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:52356e3f70c7853deecbe68ee7624028f85a081f25f675c8afcf6bb0ed39dee9",
                "size": 7556
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:69fff380046369a47fbc74b0aa03f61fb243f73dc5795e3ecf69c6577ee84908",
                    "size": 63118399
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7e54c1365f15bf88b17ba38f79d2a428ac06b2fadf6f6c91f27bb25c858dbc60",
                    "size": 2592231
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:017b908d94c1c349a53970523ee7a139bef37f34ad362e03d6bec2d726504a0d",
                    "size": 23448703
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1b5c50d01e785c4728ab89718fa8aaa45a81c0af2408ac0cc79f3ee163c253bd",
                    "size": 217028541
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d83e2fae00f6ab84a73baecccee1b9773d59ae4b450a12e360a5effca4944ac4",
                    "size": 473576
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fadda5faf2fcc02b62f25d0f9c548bc0d5c1abdeda6da2328fc79ddb5b8b91ca",
                    "size": 1011
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e1e9b66fa7cafdd2423279eb1c13f4052734fd9472c334ca49bfa60216bfccc8",
                    "size": 279
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4cbd57e7f4360c9cbeecd7408e549686853d4c97c491b59f4d07d320805ce98a",
                    "size": 679
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a4759f7eafc183e7e416b2fb6e564ecd7cf14425e5e7ccad33b50b3ea539f38e",
                    "size": 461
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0afad639f212391e415a6d539d9a549d806a221b1f680869f18652a572af7ade",
                    "size": 14185062
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:79f175372083d1ccbd5fa122d59afc0195bc3a1187e64f3cc08659b3b4d01c8d",
                    "size": 467
                }
            ]
        },
        "37-build-20240429": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:0afab04fbb9bfaffef114e8a13a8c063b224f909a56aa58f3ebe0fa082202804",
                "size": 7552
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:69fff380046369a47fbc74b0aa03f61fb243f73dc5795e3ecf69c6577ee84908",
                    "size": 63118399
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:82317edea666666d707ace0b03aad8572e29a838bb12b4c4dfd016b2ab4ce736",
                    "size": 2592233
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c2e5455188b6eb0cff89590382e7b0ecb02ea2b714d55bba2fa7dd06af5aec88",
                    "size": 23448711
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d715dbac72a798e8d0d0ffba83669baf0bbc4da2276a5a381ac22d652d5e13d9",
                    "size": 217029439
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7ff7cea49a20cad0aebae3fa3c701db7c3491385aea25f0e543cc59538fa5ee4",
                    "size": 473573
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d5a769b6122b0d526950c3579d87d5664c827ecd65688a38c75087c4f80db959",
                    "size": 1012
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:49c4a2084afc1da3b08c57198b9d7982cb4ad987197a29eb1c0b905a29331a4a",
                    "size": 277
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4baaeb452bcc05b92b082e0b84e390a65c6e08ed28ef13295f9b16ba167a9c10",
                    "size": 679
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8cba45c189962bae1d2ff247ddff62c95a79794bffefeb6283787d28c6b320ff",
                    "size": 462
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0c73585f5ae2e5501ea84cf210bb3e2ef339e5be2c28647477fc616783a259c7",
                    "size": 14184607
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e90fa7528fda4f4affd9f071788d390dbcdffe27db7b2ff37ffa26b1889f15c5",
                    "size": 467
                }
            ]
        },
        "37-run": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:095f26299c408e415d1325f671f001cea75f10a0f13b0414649b3e3fa087b420",
                "size": 6796
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:69fff380046369a47fbc74b0aa03f61fb243f73dc5795e3ecf69c6577ee84908",
                    "size": 63118399
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d67deff5c71a351663d4faf25c3b38f412142a31bca7a8d888c8821bfe5e18e9",
                    "size": 2592229
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:aef089e78d846edbce27f2669c47ec3fcef142e589e1867ef5908636b93f70a1",
                    "size": 23448814
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d2e3aa275cbb3a947522d3ea6580677ee9aa12d44c091352980066a1fb89bef8",
                    "size": 473573
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5f9e31015a5229413246198fe29fd337da9e65c8a8af3238c1f8824969f6e872",
                    "size": 1012
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3a3a2d6852cd0e1051942f064efb1ca5ed52209ef47cd0bf05a7e8752026738c",
                    "size": 278
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c3c8080aaea2aac7e2ff9499b2a0acda4cb7e625ee3cded157d534b54c647108",
                    "size": 678
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1e138be9b56c798718197323eafa69ddc869347ebd57ddc632dd70c020d34717",
                    "size": 462
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:aa51496e6b7060ef2c7a15d4cd416d98fd59f28987ff76a9eea9b0b0f309fc3b",
                    "size": 6663565
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9f1a7fa6c0cefb6a6b4fbf46bfc0b3000c99d8708a7e68e57e7b7993bdeb50ef",
                    "size": 466
                }
            ]
        },
        "37-run-20230502": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 8184,
                "digest": "sha256:3dfcd66b3f0adbe0ff584c043ddc506ac93a14e251d7ec2e85f59ba041c822ab"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 64445578,
                    "digest": "sha256:e733ff1786fde464ae5c487ee23562295e5ec377f322e1a0ddbeb9eb0b767770"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2592235,
                    "digest": "sha256:779fdfa64b09f2b03c7a5e10d4ef87952d83da7f023ce1d66e2147c526b1d341"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 24144690,
                    "digest": "sha256:ff421aaabac7bbc65ca876f9b39319846832cde3697714f4f73ca7a076fac22c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 473576,
                    "digest": "sha256:ec59658df998edad9693fc215cde79d353e70dbfbe1341db33220c67d9c7989a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1015,
                    "digest": "sha256:36079b38428c307f2bf975c0469bc873376a43624adf1bb4bbd24688c3491d13"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 282,
                    "digest": "sha256:8461a9fa9e696794b86076991c15fefb22bb5f7cb00a0794ca50435f331878dd"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 681,
                    "digest": "sha256:1bf0146f9f3eb6c0d7f45063920fb8a873c6791e0de411d72db985228f24aa67"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 462,
                    "digest": "sha256:88733766d34217ae72bffd4818ea0519e3e6a604d5849f9fae03116a87121164"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 6436992,
                    "digest": "sha256:6e77c5f6fa75e934d9cdfa8dec8a896649b498a7c18a0f54f1ec90554d16152d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 469,
                    "digest": "sha256:df8ec00c118ce5f7f484d44b178ba9e3f46651c48f6c1cd04f8a77152077a7f0"
                }
            ]
        },
        "37-run-20230530": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 8182,
                "digest": "sha256:6b8638befd4f8f0dae701eba5c11fb84f97ba29f018ccacec987f18166ae9ea5"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 64674351,
                    "digest": "sha256:72e086bfec66fd3950d44dad0170ad1c4eeb3cb44d6bd0cd2d14d15f6493114e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2592234,
                    "digest": "sha256:94903bee787b61baef32c2f253cb7e456f92dd60dc2361d2686d84c676846461"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 22875081,
                    "digest": "sha256:aa85fc6b6d58818eaf697af244b4cc17ddc780e40a839d858be0cc5c693a00cb"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 473577,
                    "digest": "sha256:41436fae5c77e853c134ddc6bbf6b4a74dd92ca423b9dbd096740ba87de8b735"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1016,
                    "digest": "sha256:4db02dd47c7ef88ecb112623f1b5753ba3ad6f91f2b0d5c0252d8cd50d82b2b2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 282,
                    "digest": "sha256:566e5b2cc67991dc19d9e141b3515ec02430c23387f48a93f3c197b9a0103816"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 681,
                    "digest": "sha256:0d571eac575438553a1f49cd92bdf9f3b653b903f1c47d12c0bad9de4e0914e7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 461,
                    "digest": "sha256:0e39fc7b103b9fa548bdc50aa87c397286bfc8f6408cf52aee07ab4fcf68c349"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 6612050,
                    "digest": "sha256:8cd975824feb2126495edb380988b4ede9854d24603e97888bc919aadfe56874"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 467,
                    "digest": "sha256:e03c34c49195b4e5405a7d360ff8b2eb6770456b8f2a88007512cf30473e30ce"
                }
            ]
        },
        "37-run-20230803": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 7144,
                "digest": "sha256:8cbaf4f856e00b36d71f9d0bb8cf7d29d95fcfa16ca63e0e37fa89a4f79de01c"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 64705637,
                    "digest": "sha256:ea792534a213e62c62a1c4772dfcf53eaf82f7635dbc9f71bb0a60a91226d118"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2592239,
                    "digest": "sha256:f7a79e920ec27ac3117c18067a73bfa21db8e6dc263ed85a35120c2ef5f03b39"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 21178581,
                    "digest": "sha256:33ae549057fd4a09796b47bc886cf296e26c6c8c00a5e2a5b3b4a0fb10827be8"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 473583,
                    "digest": "sha256:d64dd38c14dedf1503a4af00054c39c3f612029657db30d0fc8dca727b61b0bc"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1017,
                    "digest": "sha256:ee1494250a35dd274c3982b4c5f5c483d78c70833020b443dbde6d77d273aeb2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 283,
                    "digest": "sha256:064b89e53b25bf2e4b376f278dae78d03c75920d9c29900d41513f91449fe67e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 683,
                    "digest": "sha256:8964cfc20919de072fdf02c430f7b849108b52ed644236f48193ec4ee50a209a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 462,
                    "digest": "sha256:5501f5fbe7ed46c469c697f3b47fae5e0c81160f7293cbd3dfc3c287f01cc109"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 6634626,
                    "digest": "sha256:d2955ac883b628be8ac0bc54626feff7546067e1883cd683d933071741b03b23"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 467,
                    "digest": "sha256:461922f1dececc29f78941696fb1874a39a3e5dea211ac1f4aff557223d92527"
                }
            ]
        },
        "37-run-20230829": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 6807,
                "digest": "sha256:ec1a101b6a59750bc679fabc283524acb4213d9542c0b39982b8c23a8c241271"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 64705637,
                    "digest": "sha256:ea792534a213e62c62a1c4772dfcf53eaf82f7635dbc9f71bb0a60a91226d118"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2592234,
                    "digest": "sha256:8a23d1bc357a016559421550aa91e0204a8a255102a9224be83008caeaf996da"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 25809278,
                    "digest": "sha256:f940068d3ef039efcb0ca5f66ee60c0bd0cf4760713964a44d6374b497b2a9b5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 473573,
                    "digest": "sha256:8930b41cb100d0197249ded6ea0bcdb52943edd72fdfb23c1e37e2465cff32a9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1016,
                    "digest": "sha256:a577c46bc85a1eca7057d6940255eb92584d7207344f27d5873361fa86b41658"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 282,
                    "digest": "sha256:586c7444d44703ed4dc6565512cc8cca2f0e4835e70d5aca6ad327406a7e7a64"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 682,
                    "digest": "sha256:a32ef540d1e852b24d14374a1bc3285034d6ff96bb276015e19412e9d51d29e5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 462,
                    "digest": "sha256:1c9a15d990e00c06610ca1b360a6a38d60b1a995503f841ba62dc00e53c6d5e6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 6708121,
                    "digest": "sha256:7ef80ac2a48ca9dda8723f9fa1c817bf23325f3a6bc60f7636003516305641ba"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 467,
                    "digest": "sha256:77b3b9fa0f66df333dd6dd7489c6152eab62a47d9581ca0ac3035c1a6b6d5467"
                }
            ]
        },
        "37-run-20230904": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 6808,
                "digest": "sha256:35bb38fc03a9ba225dd9c28e08d8cee0247c6c4f68a2570008e624988af394b6"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 64705637,
                    "digest": "sha256:ea792534a213e62c62a1c4772dfcf53eaf82f7635dbc9f71bb0a60a91226d118"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2592232,
                    "digest": "sha256:57e197807ba0a519d1edb0779ce76a06124dbef05029811c4cd40f0584de6bac"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 28511392,
                    "digest": "sha256:471a3338d976e468e7f618dd22fbdde0e2373e61be9ba9fe8ba4b2e72baecef0"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 473571,
                    "digest": "sha256:43acb285765a1566a09368e26f802363c73729a1ae513cb100c40d7d5f2c9fd4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1015,
                    "digest": "sha256:1f7a541e39d90075887bbdb2cc816aabc30dbffcf6b53f81374d58c099208d3a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 281,
                    "digest": "sha256:f64cf4e6488b8740244403e8dfeecf1fd1eca6cee27302b8246883ac41a1084b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 681,
                    "digest": "sha256:455b8b17e8e1b86358879c1c85bb769d1d32ef5a39654a9da1ca47fe376a9941"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 461,
                    "digest": "sha256:79974a50afa759f12e48dd7814fb83e5849ad292c42e28177d22c79b13419d23"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 6737268,
                    "digest": "sha256:6f68f0458988d9ea2d4539b34a4d8e1047da8e2e192bcd222891bf5e14aca6d7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 467,
                    "digest": "sha256:bbba5de64a9134d844b86ed83b6c37ed1a56e010b6a804df42763dbc6cf60971"
                }
            ]
        },
        "37-run-20230911": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:59ab8344b94aeea30a5b00a2a6cd24551b09fac270fb87ebd88bc0e6a3156915",
                "size": 6812
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ea792534a213e62c62a1c4772dfcf53eaf82f7635dbc9f71bb0a60a91226d118",
                    "size": 64705637
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:57e197807ba0a519d1edb0779ce76a06124dbef05029811c4cd40f0584de6bac",
                    "size": 2592232
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:471a3338d976e468e7f618dd22fbdde0e2373e61be9ba9fe8ba4b2e72baecef0",
                    "size": 28511392
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:43acb285765a1566a09368e26f802363c73729a1ae513cb100c40d7d5f2c9fd4",
                    "size": 473571
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1f7a541e39d90075887bbdb2cc816aabc30dbffcf6b53f81374d58c099208d3a",
                    "size": 1015
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f64cf4e6488b8740244403e8dfeecf1fd1eca6cee27302b8246883ac41a1084b",
                    "size": 281
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:455b8b17e8e1b86358879c1c85bb769d1d32ef5a39654a9da1ca47fe376a9941",
                    "size": 681
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:79974a50afa759f12e48dd7814fb83e5849ad292c42e28177d22c79b13419d23",
                    "size": 461
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d61a53ba1310310feb2b3ba03d0504c23710dd3c4eff88c132d71096c536197c",
                    "size": 6737668
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:69ee5385f36a99dcdf9dd724d6bf6b826815c1aa9486c1f5d263deca5505eb8e",
                    "size": 467
                }
            ]
        },
        "37-run-20231103": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:09e41a197679e7713c47271ce2f8b68f9c08605f303bfda9d231d8750df6b4ba",
                "size": 6807
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9d8d1f79d667e0d33c19dcab3e1da521941331416c217cc74601d8d9f6eb34ab",
                    "size": 64844849
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:70f1454c069b387e5af8b9d91b5470e7c4785b9a3290f7113ad42e664f16f534",
                    "size": 2592223
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d76a558193cb7b66b0700ad5870a13652edf878e9142a0d74f9a71180fa098d3",
                    "size": 44064717
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6f396e4d4a3dac8410ab225cbad45fb13592e944fdf1ab97a953ead54f0fb00d",
                    "size": 473572
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:12c35de3a810ce75e005471dd252f007b4ee65305ff26ddc28b8dfa744f9b86f",
                    "size": 1012
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:476049291d6250253e43958e82448d6c862427743c148732b2a832f70c372a56",
                    "size": 278
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8e0ba4f7e5a572e065f592740afcf5c1f8313b9813191abe3a2b5fd75ccdd00e",
                    "size": 677
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d6b9fe800ceade297a03f9af34ae2921bb7a789025c1dcfcb5b389739c04d457",
                    "size": 462
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3d8e284ba8dee1296161cd9459c3e8f98ba86c486f85b5015f73ddb509914577",
                    "size": 6852289
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6f0caa6e8a5f8f9cd7c1c1f67d372b2055929aeca735e0d50630bf0f50cea363",
                    "size": 466
                }
            ]
        },
        "37-run-20231106": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:76b45d8037b32b3cacdb9c27e6d6a2e4cd144108852ccf76d8f3667562de8075",
                "size": 6809
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9d8d1f79d667e0d33c19dcab3e1da521941331416c217cc74601d8d9f6eb34ab",
                    "size": 64844849
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:03e4b9d169336e58479c799e52d209343f4fd63f113b03b9cc3778d78eefc36f",
                    "size": 2592228
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9ebd0b84befc3bef3f3a1a315ae5e7ec38574027144908174718797f0a00360c",
                    "size": 44065020
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4d11386853aeab8cd5baa963e4328bffa12cd29a1ce5240ad9607cc9c3e875fa",
                    "size": 473574
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7331c59cbf560592c7caacaec5a5b0e7c1412d0ee6c53af4a6afd0b75120350c",
                    "size": 1012
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:01cc8bad0eb150412ebd78b17a1ec8ddb84bf7bfda9878c71e39cec3d021ee7a",
                    "size": 278
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:204195aa087948caf7654cea0a3a5700bce5edb30a573214210d4567dfefe883",
                    "size": 677
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c45bba7cbbc35ad8b4c7416a9df0446d0594c82b7244266706a7a42cfd423cda",
                    "size": 462
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:cacf54655129ce716db200628b3703abbc8871043195d1ec3efa480a889ba61a",
                    "size": 6851883
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c85ba2e57aab76ff38e9e7853c7b26d9c582fa1c1c03ff2aed0531e929b8f18c",
                    "size": 467
                }
            ]
        },
        "37-run-20231127": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:8709ed34a283091e502fb5ce449e9839c04a21c21e451cb804b38bc451669c4c",
                "size": 6811
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:69fff380046369a47fbc74b0aa03f61fb243f73dc5795e3ecf69c6577ee84908",
                    "size": 63118399
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0bb5eada9fb8c922ecc9f8444aaa0ee8a62fcac70ee74abc4710b2495f0bfd08",
                    "size": 2592228
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3ab8b31915862687dcc837ff941a87caf4c07e9f37527c8ff82b84c62d432e58",
                    "size": 22318509
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:491f82e7458e6e17bae05aa839d6b366e87513662f4340abcac0a9696a7480c0",
                    "size": 473573
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:744368413ff21e9a4e526bd1640cb20d58d0ac97385af7363e6ccfaa0a24b050",
                    "size": 1010
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d600c7ca91fb3e6cda2851db48eb14cc780b01a3eb28cb3b5cc1c157b30e5ce8",
                    "size": 278
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b803570392d88303afd7a2018b05dbf63c3295a143048a2729f5436e4f82f62e",
                    "size": 676
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c82c00cdd78937eb219600038c3a9ba8501aa8ae7b114cd8e577f8fe1107a36c",
                    "size": 462
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:cd39f3ef999bb9b47e7eebc7e98f1ccac30437131a41052a7abd6cc4977c3562",
                    "size": 6664271
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b4de3682dc6fbe5f51a6dd4d1b6250729df9ba860e419f7c6dc296cfe495d071",
                    "size": 467
                }
            ]
        },
        "37-run-20231204": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:fb2863f09ce135a7a239e4455519a12c79e762cfd7be9a02c78805dc4e6c84bc",
                "size": 6807
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:69fff380046369a47fbc74b0aa03f61fb243f73dc5795e3ecf69c6577ee84908",
                    "size": 63118399
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d33718b133be58c12c588d020799740b8f5d0e1659f4305bd3a42e0be1ca53e9",
                    "size": 2592227
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:638dc3ba02ae0d436831ec2e65f80cf3a0df85f54b4dd0e7ef6c930f2c9ab6a9",
                    "size": 23448833
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:320c005249b51b04b58caf58affd18499aee26124689ea955f510182122cfab7",
                    "size": 473569
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7d3113c0c18b1dea309c42932b22901908926108a8103cdab78170405c7a600b",
                    "size": 1013
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ac6ed7c321ff834e5966003c322a533aea0543816c96955876c3ab5646e3079f",
                    "size": 278
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:297b2ba3b641a48b1e90733cb70836ce9c195ca3803cf200e37417506cf0bb66",
                    "size": 678
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1f73b516ad766efd99f0fe8db17e4e328b2f6accabc971ecfa3d27b53c981a71",
                    "size": 461
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:abf0891c42000248476b222d3be10a7c4e5d822c1874e0ae5e32f13bea2d505e",
                    "size": 6663532
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0ebb49b97c23ff12b83aa2601531d558996a6bbb0c72aadc4720174d58422743",
                    "size": 467
                }
            ]
        },
        "37-run-20240205": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:410d43528a7d4903eb26fd629298a3c2dd7482c133351585c931b7f55cdf5a61",
                "size": 6809
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:69fff380046369a47fbc74b0aa03f61fb243f73dc5795e3ecf69c6577ee84908",
                    "size": 63118399
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:043f40b98b892b40de8f366a4877d9d156b79e078c159e8ba29e516bd6d1c1f3",
                    "size": 2592229
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a5741c1c9c7a9fefc40c6616a877c25ae7e2d3b4e3f445bc7366d05c2eadaabf",
                    "size": 23448765
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2b7fbfed82651bb013b52b5f9e575eb057922dd32dbea33546ffd3791fd6f318",
                    "size": 473574
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:31345e8a4ebd6f75c8d04b1987bb10dda6e287bb914c12f9506f73ae22df8918",
                    "size": 1011
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:64c5ff84cb6737b8e4034ed8c0c032049484812c53fac7bd3922ac1887619c7b",
                    "size": 277
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8151e9be2f5daef339c61f7281525da71de532fd3a55c08d147c7de15b1c0e4b",
                    "size": 675
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c014d4420297605e816aee496643987e4894d4bccb07a796c70c571e2feb60d8",
                    "size": 461
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:39459ee280ebffd152e96a6390c1daf6b71bb9555902bee9d7c6ba3045393bc8",
                    "size": 6663313
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:00ce2536274788851cb716c6d7a32bbdd4d3a0ad6be776cded5aa0ac2d7c43c8",
                    "size": 467
                }
            ]
        },
        "37-run-20240227": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:b941e87b44da4f4b13abafd4ae3536a0567d0afe18378f0c3f029d273b3698ac",
                "size": 6810
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:69fff380046369a47fbc74b0aa03f61fb243f73dc5795e3ecf69c6577ee84908",
                    "size": 63118399
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0c9cb203b87166e0d09b81a8d1f5b49ea5bb80d37799c1ddd6d0f58f482ba0ca",
                    "size": 2592228
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:cd15d660a3890fbc117644cc7e00384e54cf47a86db50fb85d3e3924a3b6e0f7",
                    "size": 23448836
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:69feda61e8a6a07d2f8173016c73ff91210e0484140825e75e597b45142b7ae1",
                    "size": 473570
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ce20a220ec40b0412743b54d0120c434710d00f3b54a54502308b76efc9dd983",
                    "size": 1012
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d47f351240c88d3748188f2ef0e0b48f6e891509bebda6f18393ad51c6305e70",
                    "size": 278
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fe1a2b8c0123677dd17cbf5897edd521c063917ffff70729a2e1211219421c57",
                    "size": 678
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f0bc84079738c7cb444a751732c831109078ebd828f39565c765bfc72f1e32d9",
                    "size": 462
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4b98df28b09b73ffc1489ca23ce312956e40b0f6e53b61ab37376b020839a18f",
                    "size": 6663446
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:700dbae8774302e97aa6313b485a35a294b03952a48c501b93011fa2b4c23dc3",
                    "size": 466
                }
            ]
        },
        "37-run-20240304": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:e5773ee2f753084cef8c3c7aa6dcbe278ce6a1c3eb22ecfced0d24e1a45db48d",
                "size": 6802
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:69fff380046369a47fbc74b0aa03f61fb243f73dc5795e3ecf69c6577ee84908",
                    "size": 63118399
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1838771b8ec87483e105e112d8024f9e9029a53bae9d1ef0c34c061003181dfb",
                    "size": 2592227
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9086ea61d95c1ab147c8270e5a9b1830e96d367d41663c7617ebb4b06043f2fa",
                    "size": 23448747
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e665d30b7799b95a1fefa213155d46f59fff56b68586082bf191741035863ca9",
                    "size": 473573
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:eca08035356a02b31523d0089c92c641151221e1163f6f69259640069fc93325",
                    "size": 1011
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1dbbb8991fb8ec274be4b21cf0c12fa2b72fea515b37daf96cee76915bf6a3ad",
                    "size": 278
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0a012ba1f4d0af3a86a253d6ee08223c9446a2cf6250bdab21f839ebc7d16354",
                    "size": 677
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:30495c77303f15af04a882c71d278cea6699924428092ff409840f02e3455bec",
                    "size": 460
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:19d5b7e0594881fd77d57a551e8b15159c37ec8f3e435358d047c09482de8e4c",
                    "size": 6663577
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8d43526f563b39aab347db11764f60f26e634c67f19a0e91dfd8991703dbb56c",
                    "size": 467
                }
            ]
        },
        "37-run-20240401": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:a18edbffa73f5cee66ce9aea2af5d8cdd928adb4e4ca7f8994138606a8b66262",
                "size": 6794
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:69fff380046369a47fbc74b0aa03f61fb243f73dc5795e3ecf69c6577ee84908",
                    "size": 63118399
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:326b20e912351ee1cd36eb4928f89de7420c89cff4fe26170cede56d5b53defb",
                    "size": 2592233
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f39d9f2f25dbd3d6ef3ad45ac705c80b09499c0886ce65119c20d6fc0873f021",
                    "size": 23448664
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:149aacaa82b179c640f96dd6fa65cb2df58f00055c9a94c3886a4906672573a7",
                    "size": 473577
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e7514cd29789812983b2a947f44fce3f7bcce347440875a08883bcd9b53e739f",
                    "size": 1012
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4b84039a432480f5ffe416931d3e349c4318c99332a368f259bac7fd40b1d2c5",
                    "size": 278
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:85dfe6b177a514d70942f90882fe77a64a24af14ef6f9f8be9f6e0ac8271c2d2",
                    "size": 679
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:75ac5a1c7aa9ff94b80b26d3cff3e1a67892548f05c0ca35405a77c861a15ab8",
                    "size": 462
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1f022462928363be1279b3231b7e96b3898c864a7b010a97fb5ebea90eb4c374",
                    "size": 6663541
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5360dc3ffd036ca843609057ed2be35a65bfd12645d1ce1916fbcbcfc08ec95b",
                    "size": 466
                }
            ]
        },
        "37-run-20240408": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:8c67c47962a26c1315f6407b9d19fea6176f2c2ff0dec881bec3da457dd24c6d",
                "size": 6796
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:69fff380046369a47fbc74b0aa03f61fb243f73dc5795e3ecf69c6577ee84908",
                    "size": 63118399
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:689676ef4dfbe38a100ec0fd8bde8b49c700bedf04ca010d64d0e38e212b9404",
                    "size": 2592230
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:20de4a94e0f41f23dbdf295a23279b3082a2b94c36276a1517ff184d9dae8e62",
                    "size": 23448793
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:aba17861f514dbec43f4f00bc73113c6ead88d0daf01cd5af8c0468d2e6ee6d6",
                    "size": 473577
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:44561f9120b7b96b19381819ea39413a89fe135ccffbc8f4f6586ce34ddef54d",
                    "size": 1011
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6246de46784e0baf4fe4448538c5536535e1dd8374a16e2e22c5fb226e3f400d",
                    "size": 278
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:008ed895bd8ec822f5bbb391c610f13b97036c9b6a66d8ad9815fcd75fe5517e",
                    "size": 679
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:752a73f6143a147cf9dd80aa9e2296a8678cefd5393206c50f4df7a5303521d0",
                    "size": 460
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:45fed00e756eea66b1ee2613e64de2f08f080a866bb316f416b3633ce11cfd84",
                    "size": 6663859
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:afa13b6c3661e13d5afa23cc4e60ac0e08919c97ef0997520981b0eca115db70",
                    "size": 466
                }
            ]
        },
        "37-run-20240429": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:095f26299c408e415d1325f671f001cea75f10a0f13b0414649b3e3fa087b420",
                "size": 6796
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:69fff380046369a47fbc74b0aa03f61fb243f73dc5795e3ecf69c6577ee84908",
                    "size": 63118399
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d67deff5c71a351663d4faf25c3b38f412142a31bca7a8d888c8821bfe5e18e9",
                    "size": 2592229
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:aef089e78d846edbce27f2669c47ec3fcef142e589e1867ef5908636b93f70a1",
                    "size": 23448814
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d2e3aa275cbb3a947522d3ea6580677ee9aa12d44c091352980066a1fb89bef8",
                    "size": 473573
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5f9e31015a5229413246198fe29fd337da9e65c8a8af3238c1f8824969f6e872",
                    "size": 1012
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3a3a2d6852cd0e1051942f064efb1ca5ed52209ef47cd0bf05a7e8752026738c",
                    "size": 278
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c3c8080aaea2aac7e2ff9499b2a0acda4cb7e625ee3cded157d534b54c647108",
                    "size": 678
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1e138be9b56c798718197323eafa69ddc869347ebd57ddc632dd70c020d34717",
                    "size": 462
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:aa51496e6b7060ef2c7a15d4cd416d98fd59f28987ff76a9eea9b0b0f309fc3b",
                    "size": 6663565
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9f1a7fa6c0cefb6a6b4fbf46bfc0b3000c99d8708a7e68e57e7b7993bdeb50ef",
                    "size": 466
                }
            ]
        },
        "38": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:11240a2fbb1ad9466fbb9511922bb85d2153fe2adc8e16ee1222fb504c2e7783",
                "size": 6797
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3aae694a5eee87d89f05e7d069add3611bfac3b1f9488446d9f484e00e268258",
                    "size": 65655494
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e3a29097b88d916c4c9d4805b3b5006a58f8f232c1035ec25a81757fce450681",
                    "size": 2592221
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b4fe12d3e79f34600efc5ecc27cd450141a6e551a379ebd5833b8b8aa425bcd2",
                    "size": 43774767
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:49bf492858ba01f4e87111272605ed1e297c655e4dfcd99e48f9bd2721786069",
                    "size": 473574
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b9b2a1a7222acfa84d0d257c56a93f843e3803c86dc363c2e3fd13a1d32356a0",
                    "size": 1011
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d5a53a0ba073aea6cca6c67d729e1693383253ae45368d5abe2474624275f679",
                    "size": 277
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:dcc229854562155539218cff0ebf1c5265ef1bd70adc2cab474f6567ff358ec8",
                    "size": 678
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9037230e582ab47d63fb807ca5b6188b4b74053f5a1133ecec9fc1ff4fe40080",
                    "size": 460
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2f40d3650aa1b29942eba2af6573c01578ed7a72aa45da1c800fba6f12ceee8b",
                    "size": 7065197
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2ac1bcb20f76b74515cb8113dc0008f386405c9bc71e752b3d4d24de71c75a8d",
                    "size": 468
                }
            ]
        },
        "38-20230502": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 8184,
                "digest": "sha256:3234628c04d318c5e6f7bb5b7c80e9b265fdbbd931ae7044b68813e88f1826ff"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 66349426,
                    "digest": "sha256:fced517a1bc365e9d636e44c544ed08558b5d5b64353a227d8632d5d9b634799"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2592240,
                    "digest": "sha256:0494f20995ff1fb59f684c8e264979494612520653835a06dbbb5e6affa510ae"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 36518415,
                    "digest": "sha256:444be0c165c24603818c9c9cad745bb00e6df5086ee3a527489f1b51b546a971"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 473578,
                    "digest": "sha256:108a0bf672d0f75696d579fc1706d3d234d07ca24b5863b839fc38765e514d64"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1017,
                    "digest": "sha256:bc51d6c2833b965bd6c58fee39feb027b9a9ae15bb07fd687e6fecfd2eccada4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 284,
                    "digest": "sha256:660c23d4bf65a0b9015e3fe91097baded682ba7e7b67dc7eaa404f7864982e9c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 684,
                    "digest": "sha256:07a4cdce7200bff11f4558d5169974ab971f15b67e38dca1099153e2dac0a942"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 461,
                    "digest": "sha256:fdf136a08a729c3c4eea0c5f5ea7a7195434c52539a316e15dfe044fd76153d5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 7139136,
                    "digest": "sha256:aa512fcb36edfaa106047e1cb40522011edfe114d99532f5cf1d04b8ca8b63df"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 469,
                    "digest": "sha256:aaca21f904e4ed8e63b436e52e15fb5755de30c4c249864bf7ba84b50093fed2"
                }
            ]
        },
        "38-20230530": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 8184,
                "digest": "sha256:e144f1355ceb9142fa26310c8b06952d7b756d8d37e5b1c9eb93e5e8f760bc14"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 67062512,
                    "digest": "sha256:6de646d847962d715d442d2418a1db2af7865404589a8662898ebdc94d68ac9e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2592239,
                    "digest": "sha256:ed5d781461da7de556669c57834186c3e1722e9050d30eb3983084e07687956e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 24456034,
                    "digest": "sha256:372d81d223e81b494726bf38f59192640850fe739ca85b0c982cf0ed9a6c2284"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 473583,
                    "digest": "sha256:903df3d440f2062248e74611345dfe334a8620bae5fd0d22209ad028aceb6069"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1017,
                    "digest": "sha256:6e23ab059f620398a60c2a31d6ec1f20ae0ba7d915df70d2aeb59f5662ae8bb1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 282,
                    "digest": "sha256:542e25e5302455d345da9e9a6d226a78538bcd39ea3e08a78aff24e26343070f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 683,
                    "digest": "sha256:5ee3909d37d6e90e97d4720550697f56268d947c901e0c2072aa45115057939e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 461,
                    "digest": "sha256:c89d89f368d9000bf4478a880f212d11ad6e5f5d622785931bb20ef4434e8652"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 6939821,
                    "digest": "sha256:ae1c7609b1882ef694d640aa03291cd10c53329a00d81b622529e3effc3ad06e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 468,
                    "digest": "sha256:7c541f3afe2080f2e9df96ae9e1bcb79bc418b3761e3f618a12d2bfeedb90e88"
                }
            ]
        },
        "38-20230803": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 7143,
                "digest": "sha256:8e96f7624f90a8803636250138fa7f01abd39a85d3f61a4d0fb961e75a25b6b9"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 67189372,
                    "digest": "sha256:9523322a2d97b6a26a31c5c19b62d9ec9e3ea7e7ed808d90b225b9c6081ffb13"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2592239,
                    "digest": "sha256:39091d9a033595f6674daec6b2fab7fd26657fe2969a03a672326fcfd9bb1dbb"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 22588863,
                    "digest": "sha256:3bd1f7882d29417d6d5c354be92fcc797421e4d40c199573aa1c17ae7493855a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 473582,
                    "digest": "sha256:971dfbceff04805ec2ffd288322ff8d24bb0b5d4aa6a2501ecb634ea96ed13f3"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1016,
                    "digest": "sha256:e48f05f5dc21eca4e30229f489fdb1802a419f17e86a5974fb4a6a2655676627"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 283,
                    "digest": "sha256:a7730d42a839d8c924fbf9d2f8a23a476764de09e42658df1fb7b1b2dc9f894f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 682,
                    "digest": "sha256:0e8d31a242aac802e6bd1c6d214922be76612aec07e6ddd92e160a020b44f0da"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 461,
                    "digest": "sha256:d2d1966fe70c6df6c13c26997af42dad6829160ad845e6bbd15044da8134244b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 6931622,
                    "digest": "sha256:502bdaa5ee0135c90cdee70f4ff8cc20ef0c62dc088354b93457f739533f5d77"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 468,
                    "digest": "sha256:1f75afdb3b906ddecf7c7cee7a4c3fa0c49e112bf73dabb0f9ef8bfad0c54e09"
                }
            ]
        },
        "38-20230829": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 6807,
                "digest": "sha256:62c94b4d3624453db217e272eeb6d0f22047e7effc092246522e83fb755894a9"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 67189372,
                    "digest": "sha256:9523322a2d97b6a26a31c5c19b62d9ec9e3ea7e7ed808d90b225b9c6081ffb13"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2592239,
                    "digest": "sha256:3fd95b85ecb5a66fd8953f7ed744b3ec15710c004fad7abdd6451e89459cce2b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 27374640,
                    "digest": "sha256:61f694e48a1705d78a07967393b88c5dcb7d62469ed86079dcaa9a97e758d499"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 473575,
                    "digest": "sha256:54460417f56d7f1e140bcfaa2466608d5bf81a16c53541f7db584911e8b92ae3"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1015,
                    "digest": "sha256:b6d9b1abdb82137e52c795b522c1ddf9e05a4b32f88b6d5a6f849b1a714fb896"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 282,
                    "digest": "sha256:8427b37928dcb1b6bac4bcf93805d4a282877db24b1bb623b3b6911e772af4db"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 681,
                    "digest": "sha256:d9e574ecab32870a717873b7866e642eb2f1cce2397bb1bd901c296ca25fefbc"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 461,
                    "digest": "sha256:4db15315e9d42c57d432837cb86e721c184ef028118fe4cdd5358ed2e5469e32"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 6995970,
                    "digest": "sha256:9fba23cbcb76d36ee1f4ba48b3e635d91d79d30c4afe3b4ad68cbb696a4629f4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 467,
                    "digest": "sha256:830e256e87cf2fc0d754f2edd99b3151048afd4ddb19837cece5c8b5cb7cc41a"
                }
            ]
        },
        "38-20230904": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 6806,
                "digest": "sha256:884fd383eaf6d645240f3152b7f9e9e39526358baea12fb725f854270d188b53"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 67189372,
                    "digest": "sha256:9523322a2d97b6a26a31c5c19b62d9ec9e3ea7e7ed808d90b225b9c6081ffb13"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2592240,
                    "digest": "sha256:a6d99b1591f4a2ac8c7f1063b08df11152da017afef86609dedd5fe617e8a699"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 29150787,
                    "digest": "sha256:2cf6a9255a2d6156a2411b3bf5d43d89037cb35e5f3c1ec7132209cecc6b903c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 473571,
                    "digest": "sha256:b4847da95c2e5aa31861600e2fc4a9cf64f59b2f56e370410025c1c05dfb7e12"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1013,
                    "digest": "sha256:a591cbfa2b15eaeda430f6a6bed77257d07189373b36f0ebf75fc2f1173b5012"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 280,
                    "digest": "sha256:b549fca8a7cd69f6d251512dd03d24d16adb8be178cd0770426f92d649447d13"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 680,
                    "digest": "sha256:ee29642da2366253e21262ef770cf7ca279e58f01dfc0a405d0004bcf7c0b49c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 461,
                    "digest": "sha256:01a84a333883d5f0c1b98c0076a78a70ac251c15bc08c6c7f07e21a5bc48d7c6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 7002533,
                    "digest": "sha256:b2abc6587bbe6ea3001b29565f41f5d79a451f28d113c72fe163181960152317"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 467,
                    "digest": "sha256:7ba7149c68b2111fa9e551aff4e2a57baa49170c09487182f8f57a68a7f2ab6c"
                }
            ]
        },
        "38-20230911": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:977218b65e6e9e455576fc6df62f5f7fe08d52fe239298f4da683c95436e9e0b",
                "size": 6810
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9523322a2d97b6a26a31c5c19b62d9ec9e3ea7e7ed808d90b225b9c6081ffb13",
                    "size": 67189372
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a6d99b1591f4a2ac8c7f1063b08df11152da017afef86609dedd5fe617e8a699",
                    "size": 2592240
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2cf6a9255a2d6156a2411b3bf5d43d89037cb35e5f3c1ec7132209cecc6b903c",
                    "size": 29150787
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b4847da95c2e5aa31861600e2fc4a9cf64f59b2f56e370410025c1c05dfb7e12",
                    "size": 473571
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a591cbfa2b15eaeda430f6a6bed77257d07189373b36f0ebf75fc2f1173b5012",
                    "size": 1013
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b549fca8a7cd69f6d251512dd03d24d16adb8be178cd0770426f92d649447d13",
                    "size": 280
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ee29642da2366253e21262ef770cf7ca279e58f01dfc0a405d0004bcf7c0b49c",
                    "size": 680
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:01a84a333883d5f0c1b98c0076a78a70ac251c15bc08c6c7f07e21a5bc48d7c6",
                    "size": 461
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:677b032023dd4b57c04f9ed0580f63a0ce7e8df2b2b7d48f940f955060c24b26",
                    "size": 7002985
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fb2f3d1b093ade59104278535a313893b7f3262336ad069cc478ecb89872384e",
                    "size": 467
                }
            ]
        },
        "38-20231103": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:698cf3b4158d5b91ff6d01bea83f77c8f2f55b4fb60f63be7c453eef5c9c4252",
                "size": 6812
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:994fd3fca5751f6e1c90c062034ff93a6b3f342958e643366a96aae667d543f2",
                    "size": 67303181
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4042a15f73abe729aa6a99e8c875836c7bfd95e4bbf238631ad2978fbe0b3b1f",
                    "size": 2592223
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4466fd6697681c10ae500b288256ffcf0ceb861c4551dac45dec279e44472b4e",
                    "size": 47537530
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ffde60dc30cdf33ca4cbec80345579f0534b61ac5745a5401dd77e75b059c920",
                    "size": 473572
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:63b554587e75e5ab9b303823f9fbd84d71ba6648b638774a3207ea509ad774c3",
                    "size": 1012
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:250a90a9dc885de9b73b2de5149c6206a0f75dd7bec0c2ef9ca8e6a19c600e91",
                    "size": 279
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6e2a5878fd8eed1858580e278041ec339be436a62e9dae2f2b31d0a95b7f2ee3",
                    "size": 677
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e10f13f0a1d66bcf73c81cb6c2a9e17a8eb64685d495dca52cc8980af4d571e1",
                    "size": 461
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0c9d6b651fe9fc1913b6b69e41cbec492ce91690bb7f4091febd6647d11255f2",
                    "size": 7117350
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d587f854c0c9911b7ca1d7e3323ef587a8a2d2761b76753483da48d2748cd795",
                    "size": 467
                }
            ]
        },
        "38-20231106": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:cdffdfb693d7886a3e0840e8e8ab905160f8db56b23f345e14f25f92119251dc",
                "size": 6806
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:994fd3fca5751f6e1c90c062034ff93a6b3f342958e643366a96aae667d543f2",
                    "size": 67303181
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:cbad3804ca9a1990d11b1dab8512437a6d2207cb2e3b91fdce89923f9fb02fc4",
                    "size": 2592228
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:843af85ee0e2cba3ad15eb602a87dfb85611c8565ba7b219eb7d9f1037b92247",
                    "size": 47537535
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8d6d06253da0cc7ad0444fbe83086513855b925743b7703c46160860956838c0",
                    "size": 473568
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3dc7f18dc8b28fd6e6fc02a41a3d830e1f386fb747a91baecf98d2c2a10be567",
                    "size": 1010
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0fce6bd897ca96240dc822f3e09ac9a893d6aebfc8a8f44490e2ac3cba19db18",
                    "size": 277
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d9458ad05af8c5c75e86f95dfe67b1528149fc6be910daa882f7eb2c7d52a11c",
                    "size": 677
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:297ac5b778550a8c477f9ce1dcf5b586c0241b41f6060f6228ef34c2711bb801",
                    "size": 461
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f2f4da48d634178a336d1685e1236fa220f9003725c7a7f7232940ef8c6f9e73",
                    "size": 7117218
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2786cc3d311e316646450b5deffaea6adaf5c7f035270a17101771ef5fde7c50",
                    "size": 466
                }
            ]
        },
        "38-20231127": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:cd2bc1af681101fc8111e31d9a93c9845f34717fb13de1b47aa0a6ee5f42dfa0",
                "size": 6812
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3d928c985542784e5bc7c6fca298f5b3a4ac1bfec6b17159c10ceee12ce55b6f",
                    "size": 65592571
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9ec881267433f57c40f9e61b9cacfc759deeabc358ec1d3ab79e7d3d9352108b",
                    "size": 2592223
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:781f4f5a3dde4c9a61c80922544acac969445bf6bbef57b8b4cde27fa279a5d3",
                    "size": 23224341
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e3c80ac69ae01565561ccd29f02448ac74392b0b5192ebbd68b44539849f16b6",
                    "size": 473572
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:79c681c3b3a541a0d672b6c0d4fcc5580c9a6f6745c2cd3a0781a3d7353b8311",
                    "size": 1010
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4e528eaac518431865ce34b46050da9fd107a9358dc9944df7f312a04d9eb22e",
                    "size": 277
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:575a74a07660a4ba56a0649e03ba939749f1345458b4fe3faefd5a794fa840df",
                    "size": 675
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2134d9bc86b427048cd2f61383ad0ba5ba19558dc6da89578c2eec248ea7736d",
                    "size": 461
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fa7ec7bf6b70661727edfa01d630eee3039eed2f6ca60cbe658603bfec768a92",
                    "size": 6964642
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a42163093ad613fbc02486907e264a5181a75872a487c76f52cb50dfcf2c0658",
                    "size": 467
                }
            ]
        },
        "38-20231204": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:18d58ab05a366f555ce8cc45be740b4aa3d5ebef0c493d54cba6ac30d714c777",
                "size": 6810
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3d928c985542784e5bc7c6fca298f5b3a4ac1bfec6b17159c10ceee12ce55b6f",
                    "size": 65592571
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fa6cb229accf0202ead41553eb23f045d2d0b4b7c654edc4a7703fae1b1fd4f1",
                    "size": 2592228
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:794e2484fc3502b0985c9be83646c613d677fd7bdd2eaac82b87175f45afe192",
                    "size": 24268758
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:26ed8809c1463ea30b9f3e26eafef2451aa7e113497f4b9b8d3ef9b313bce66d",
                    "size": 473572
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f556958f040f66a457d183ace4961e9ab16685e3fffc7799c5791eb17712d4fb",
                    "size": 1012
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0978745a9a8ce87ffc5b13a80bcea5daaafe483a29cc45fd7463f155779e2270",
                    "size": 278
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6b066ba991e828e9f289e27f708122171f5275731ed2b82c4ba73e2748471fc0",
                    "size": 676
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ee6896184ac2908e9a3714c17f90d8c1be8a60382453e1e67fd6d89c29e415bc",
                    "size": 461
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:cf1b78cc6cf430d18f1f7993901e7ca4a0163b4c3eb1a345db2f923dc9972079",
                    "size": 6973865
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:62079b99b733d64444b1ed301137022933fd2a35c1b904d384300c2db1fe5927",
                    "size": 466
                }
            ]
        },
        "38-20240205": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:216268f51bb8efbf32c3d76c838316c6bbad3bff83d5f32fe50bb6d2cc930152",
                "size": 6811
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3d928c985542784e5bc7c6fca298f5b3a4ac1bfec6b17159c10ceee12ce55b6f",
                    "size": 65592571
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ad178d72905db2a360115bb6849c8068832e4984036fba003f04068ac6a6bd97",
                    "size": 2592222
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c0c4e6507e8b5bea4db351b8a6e8235876e2ff0673b210ee3e0bdea64763e01f",
                    "size": 48784154
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:13d9bb662b3794aedd8f8aa98c68058a1760a1356d9a3f42f3c63d2c86f83493",
                    "size": 473570
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:60f2e0bf0733ba97b5cc94b41bad01f6ebbec1f3416e566df0a97f774801ce5a",
                    "size": 1008
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1e4c008363977243f758162e1a713e2c92b1ecc41fa5c026da5c93adc75c6e4c",
                    "size": 275
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:52dec7d4914ffbbd75752bfccb0ae75fcd88a831e71b41e00592971eebde608b",
                    "size": 674
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6ca74a7f0011a23ced2243105850369609f2211be0d769bc193ee941b2520a08",
                    "size": 460
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:00487df0ebe80339f4de4fe5211f85d8c8f8cb7a085fdbe187a7706d81a4df25",
                    "size": 7404476
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b243a3acf85a956775c70a7a98eba1002522c8615b5e26424a40b80a5ca6e643",
                    "size": 466
                }
            ]
        },
        "38-20240227": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:728227022c2ba6cd2193c761e4e2b65e99aa863b4d0d7e7d426565d25e603f64",
                "size": 6810
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3aae694a5eee87d89f05e7d069add3611bfac3b1f9488446d9f484e00e268258",
                    "size": 65655494
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3e590c6dbdc96b1cdbacfe1edf9c0cd1a8d274ab9f64fcc727a9b8e531dd2cd4",
                    "size": 2592233
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7adb706717b650f823b13f7c6bb4c282be1a52690199e6f455cfb30d5cbca021",
                    "size": 38654943
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:423d419b6640476cb76b200c9f282eeae646a2e6cfecc2031156e13b9dad4b7f",
                    "size": 473575
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8ac9f745039954e9a75bd5b770563cf3125dfa45774358751a883b41f6055e6d",
                    "size": 1012
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f26142fae26d26aef024cc33f49b3ed51f70b996d1d2dd77338eab55f74f6971",
                    "size": 278
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6dc59657604b207e982b92ee10c9209906db18c87aeac61679b4b9713931a9a6",
                    "size": 677
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5996e90f577025eb8a85d74dbbda6775db92ab5af6b03561273305fc0d42d737",
                    "size": 461
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:47d19c734c99525e8a563c406f562a4627ce7b90670506d67f91515036739cdb",
                    "size": 7026573
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3f1a34867776b1ef728b3b544079ca3089c9c1f1d2398d3faf6c04d8e85ed177",
                    "size": 467
                }
            ]
        },
        "38-20240304": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:86c642b52c2d3ab9cf495bce89b2fe29c8dafc13df45ffaff7ccbc336178065d",
                "size": 6810
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3aae694a5eee87d89f05e7d069add3611bfac3b1f9488446d9f484e00e268258",
                    "size": 65655494
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:79b599003222175835e1970954e9519145d402578af3b20e11f3ca2cf50f9fd1",
                    "size": 2592227
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:735b184569da057a3a27ffc4e0458248f8683681c2b5aaf874f8a86e0c6a7e52",
                    "size": 38655023
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:225147945e23054c0b9d4ecc254f42c0cfd7dd6414e8bc13cb2fa054d95600d4",
                    "size": 473574
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:46dfb557ffde70435f342251cdac53f7ba6b7047f858c4fae563553aa7d9deb5",
                    "size": 1010
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5e1edb9a59a184f87f5dad7580e05bfb45f04c855962693b34d0ac28e0794b9a",
                    "size": 277
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f1b94eb18edf2c26967fed53ec8bd49d33c18b0432078cf67640436e7923552c",
                    "size": 677
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:68bb8a514653a6465e96d23a3e1534dafeb20dc7615d5f98386e125d682677ba",
                    "size": 461
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:46357ba38debe8837596983f76a012dfe9be0c711e86a01b63784c521eda4bbe",
                    "size": 7026360
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6d99d9d00a591934eabb20e3a01beb8ab35c09a3fbf5afd8b189fe730935d2b4",
                    "size": 466
                }
            ]
        },
        "38-20240401": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:ce6774a3a9da5b22060af9d85ae1253cc8e2459410c8f20be559055a7fe836e0",
                "size": 6797
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3aae694a5eee87d89f05e7d069add3611bfac3b1f9488446d9f484e00e268258",
                    "size": 65655494
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5c8a07cf7e0a6610b389237666844a0c93f0042b105e99fc1128ba49157a7a8a",
                    "size": 2592232
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f6c33e17fe4a960c76b12f34fd78f661a1e818432520307b00c7935866ab0623",
                    "size": 43688134
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a5eaebb4c97c56647af86311d98554cace9891838bee9093423ecf3f101e5b1a",
                    "size": 473578
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ee87f3843998a99a46c9560aa1d631660954eae2d583aca0eb974334f7b297f0",
                    "size": 1010
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a8d38676405c3fa5b42b13ac40a2b44c68d9e5a8b71f40bcafdde8a8a8c17c95",
                    "size": 277
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:556bf3cf41263f53c8916f59c8da3bd38d8d0af02e9f832ca81341fafb49683c",
                    "size": 677
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1ef0f1fe648699e4b93f679558b9d0e31bdd61320e7df39ccf0441adf648998a",
                    "size": 459
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2a706fc3935741807db0be8b53135fec92ac13bfd8d269588c5c75b7841bbcaa",
                    "size": 7055978
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3e1e1d66195fe2d14a466bbdee923853cf6205c5f712354a4d5d4298305477b7",
                    "size": 466
                }
            ]
        },
        "38-20240408": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:3e842e6847da3876a38f77b3e2e3a9d6ddccc098f0249ea0ddf753dc567498ed",
                "size": 6795
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3aae694a5eee87d89f05e7d069add3611bfac3b1f9488446d9f484e00e268258",
                    "size": 65655494
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e3a29097b88d916c4c9d4805b3b5006a58f8f232c1035ec25a81757fce450681",
                    "size": 2592221
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b4fe12d3e79f34600efc5ecc27cd450141a6e551a379ebd5833b8b8aa425bcd2",
                    "size": 43774767
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:49bf492858ba01f4e87111272605ed1e297c655e4dfcd99e48f9bd2721786069",
                    "size": 473574
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b9b2a1a7222acfa84d0d257c56a93f843e3803c86dc363c2e3fd13a1d32356a0",
                    "size": 1011
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d5a53a0ba073aea6cca6c67d729e1693383253ae45368d5abe2474624275f679",
                    "size": 277
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:dcc229854562155539218cff0ebf1c5265ef1bd70adc2cab474f6567ff358ec8",
                    "size": 678
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9037230e582ab47d63fb807ca5b6188b4b74053f5a1133ecec9fc1ff4fe40080",
                    "size": 460
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:51f290121c4e7d779dabe67094da2d7de94cde1550402a61e75c0820fb553697",
                    "size": 7058839
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0a33f83f336f3473a0e5ddb982f7a177fddb487c02dd17b9b9899922cb05cdcb",
                    "size": 467
                }
            ]
        },
        "38-20240429": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:11240a2fbb1ad9466fbb9511922bb85d2153fe2adc8e16ee1222fb504c2e7783",
                "size": 6797
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3aae694a5eee87d89f05e7d069add3611bfac3b1f9488446d9f484e00e268258",
                    "size": 65655494
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e3a29097b88d916c4c9d4805b3b5006a58f8f232c1035ec25a81757fce450681",
                    "size": 2592221
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b4fe12d3e79f34600efc5ecc27cd450141a6e551a379ebd5833b8b8aa425bcd2",
                    "size": 43774767
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:49bf492858ba01f4e87111272605ed1e297c655e4dfcd99e48f9bd2721786069",
                    "size": 473574
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b9b2a1a7222acfa84d0d257c56a93f843e3803c86dc363c2e3fd13a1d32356a0",
                    "size": 1011
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d5a53a0ba073aea6cca6c67d729e1693383253ae45368d5abe2474624275f679",
                    "size": 277
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:dcc229854562155539218cff0ebf1c5265ef1bd70adc2cab474f6567ff358ec8",
                    "size": 678
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9037230e582ab47d63fb807ca5b6188b4b74053f5a1133ecec9fc1ff4fe40080",
                    "size": 460
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2f40d3650aa1b29942eba2af6573c01578ed7a72aa45da1c800fba6f12ceee8b",
                    "size": 7065197
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2ac1bcb20f76b74515cb8113dc0008f386405c9bc71e752b3d4d24de71c75a8d",
                    "size": 468
                }
            ]
        },
        "38-build": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:87588418e6a05201125803fbef272d2ced30a0d4c93046c258fcc074a32e6afe",
                "size": 7554
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3aae694a5eee87d89f05e7d069add3611bfac3b1f9488446d9f484e00e268258",
                    "size": 65655494
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:98497adddbae4de490fcc1d04edf735aec4a83cbc9ba5af1f1e65fbde562983e",
                    "size": 2592225
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6360d6ec9ad08998c00390ca47a7bd8cc87409fcaf713afd73b689b918b01438",
                    "size": 43774660
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:055af6a5333deae0eff8ae00dac4ea238156b511fe973fabe60f028c580994a2",
                    "size": 226660520
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:01daed6b4313e6915e63f67b4c51191e2e74999bd73c3c6e7a177fdd969e2568",
                    "size": 473572
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2f2510c732d5e8c6d4f2659881c9a3563b54b4a0c18c278a0a1cd35cfdc6c8f2",
                    "size": 1011
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6e9ff13c8e735763b572fac974b254a92ff8ed58829c7c45b30ee881dc470bc9",
                    "size": 278
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d0bb6ea75d932375589b31fb55875c485ea7731e58b798bd4b6d897c59b1fd84",
                    "size": 677
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:47114f532225fca85828e20ee26ed3b91cb32c3702011f7a59618389bb5e5f9c",
                    "size": 461
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c76d7b12b61346267ed4068e45f3946216a3bb7ec050eaaf8a5ef0620b73f347",
                    "size": 15286390
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a1e27906a5e9844197ffdb436b0b0042dd2ec58f6cf250d45a25e58c4a7300a0",
                    "size": 469
                }
            ]
        },
        "38-build-20230502": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 8896,
                "digest": "sha256:8c42aed9ee815f4a799415ff0fcab1a6279af514f73bfd69ae339df11ac08305"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 66349426,
                    "digest": "sha256:fced517a1bc365e9d636e44c544ed08558b5d5b64353a227d8632d5d9b634799"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2592240,
                    "digest": "sha256:0494f20995ff1fb59f684c8e264979494612520653835a06dbbb5e6affa510ae"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 36518415,
                    "digest": "sha256:444be0c165c24603818c9c9cad745bb00e6df5086ee3a527489f1b51b546a971"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 226883102,
                    "digest": "sha256:b7e3fc2d4f19a6649e9e2be17b83b453b391da9765f9c0bbe08d51a6c911aef1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 473585,
                    "digest": "sha256:f620c4929b9e84d2e31c40df54c2672208a625645e0e436daa57d67838a7d988"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1019,
                    "digest": "sha256:d35e99e5f8daafa731f80f270358f23029fb975590be31c8f0caef5d90abe939"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 284,
                    "digest": "sha256:923ac7d429bc87bb50287a1eaeaff4d223f76cc1d6dc78d3e7ea9d31c863d093"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 684,
                    "digest": "sha256:faed98dc758216da4cf7e29316847407681e54f98dac6c9df50003df094d12b7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 460,
                    "digest": "sha256:51c165149e6c28e00637ab74ef52fa66a795b002a7c40b5a3a298a1d717f1620"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 15007487,
                    "digest": "sha256:64af5e69fa17818352307746afc1448ce0e854687a07b47fa46a2d86f4daae2f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 467,
                    "digest": "sha256:46fd6cfcba82476685538c6b415639406c514bc80f43ad98271574db2677e0af"
                }
            ]
        },
        "38-build-20230530": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 8895,
                "digest": "sha256:1f47995e3222a4f61b241b236c3de503a461ddf1dc7762f4cb748673f2bed238"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 67062512,
                    "digest": "sha256:6de646d847962d715d442d2418a1db2af7865404589a8662898ebdc94d68ac9e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2592239,
                    "digest": "sha256:ed5d781461da7de556669c57834186c3e1722e9050d30eb3983084e07687956e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 24456034,
                    "digest": "sha256:372d81d223e81b494726bf38f59192640850fe739ca85b0c982cf0ed9a6c2284"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 225245223,
                    "digest": "sha256:bd3afd8c32a18b712022d83697d1bac37237394cd39d6d9e8f963330ca8b7a41"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 473583,
                    "digest": "sha256:bd78769a2dbce40123b30df1feed98f0943a86a388702962d2054e774993bade"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1017,
                    "digest": "sha256:6a0c4b9487acd2b3da5dc6c32ff87ad1c5236ae10362a3ce68ecdac64aa1e5f5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 283,
                    "digest": "sha256:21762233b8a853c122746e2a7a3c4819c2494e5e3347633870a8855c484ec828"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 684,
                    "digest": "sha256:d3cbe1e1ad30ee280c752a600389292bfdec52081b0709390243e9cba3182cb5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 463,
                    "digest": "sha256:1a3741cd0dc5fc127a29e415ef35f3ccb442bb821836d447b8592a53e29b4384"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 15123093,
                    "digest": "sha256:0d56687bee0a86b9e3d3e14f7c7358090b4096090eb5244adbcabd88665e59d7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 471,
                    "digest": "sha256:b11a93350b2a9503de793717b454c2d6d2020859cf9dfa2b38d96eaf3e8f7029"
                }
            ]
        },
        "38-build-20230803": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 7907,
                "digest": "sha256:6fff0398233c92b773ce6288eb48cc68b025138401304e5600301d245e19c8fd"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 67189372,
                    "digest": "sha256:9523322a2d97b6a26a31c5c19b62d9ec9e3ea7e7ed808d90b225b9c6081ffb13"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2592239,
                    "digest": "sha256:39091d9a033595f6674daec6b2fab7fd26657fe2969a03a672326fcfd9bb1dbb"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 22588863,
                    "digest": "sha256:3bd1f7882d29417d6d5c354be92fcc797421e4d40c199573aa1c17ae7493855a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 225064137,
                    "digest": "sha256:e85429502169901884735c000d60cadb0116353bcf80541f83602fbb659585bb"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 473582,
                    "digest": "sha256:a2add6e671e2e122688e52e2ec0a33baa459f213c74e37ce7b0212ff92c0335e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1018,
                    "digest": "sha256:b41c38b68a55333f4a4ded9bae62e6f999a1d0288421f11400c211e2b1714c8c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 283,
                    "digest": "sha256:1a07f980ccd53b96866c44d0efa533da0a7aa3960465c3b40959f19005d58cbe"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 683,
                    "digest": "sha256:fb5cb71fc973e3ace81d7387b1e0375e603858996cf5d6cc86ecbf28d599996c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 461,
                    "digest": "sha256:1f7af7a6a3ddca82c4cc4dbdc6632875c273e23b70ed87c52043d866a693d5f1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 15130463,
                    "digest": "sha256:48abd7f461ffaa6cac41cd0856dc142e9121b5a5fe894d081f69d94f115e66e2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 467,
                    "digest": "sha256:a3e2a64f85a2bfc981b44543cf4e7d4ba91cc0814cebd7b8d393afc851c7a567"
                }
            ]
        },
        "38-build-20230829": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 7566,
                "digest": "sha256:49d05de1a73dabffb2147d15c532472b085bc2b6770e88ecf52edd6f456878ce"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 67189372,
                    "digest": "sha256:9523322a2d97b6a26a31c5c19b62d9ec9e3ea7e7ed808d90b225b9c6081ffb13"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2592239,
                    "digest": "sha256:3fd95b85ecb5a66fd8953f7ed744b3ec15710c004fad7abdd6451e89459cce2b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 27374640,
                    "digest": "sha256:61f694e48a1705d78a07967393b88c5dcb7d62469ed86079dcaa9a97e758d499"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 227606551,
                    "digest": "sha256:5120536f1d108540a64a083ef01893daabda31c5589f9f4a6ceced14b82b3880"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 473571,
                    "digest": "sha256:b4cad6c6aa73505ede73a19e8cb59824df0437d68d4e5a98c0a2a3c240151891"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1015,
                    "digest": "sha256:457561b5232e6d8efb524a4cbb6d9886246de1591d09daa951d8acf94987ea45"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 281,
                    "digest": "sha256:b46924ce827014bd86c20a6d893a8b3e29284b3cdfb4b2b8cb1663e7aef2024a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 681,
                    "digest": "sha256:9ff4d40897530cf432d47ddf986bd326bd0a7ad1cecc3131ae130ad5acce8ddd"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 461,
                    "digest": "sha256:45602f55a11ff16c8648cf620620bfee220cce80bd0da532eaa08b101f7e8a49"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 15128995,
                    "digest": "sha256:a6c95543b4918e515a347edff90fd99c04d31356ce46482927931aa45b13aa0f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 467,
                    "digest": "sha256:b23f4a8ddacb0d2c110fd03becb4242cabd835aa27df07fe0dd321dbe778d992"
                }
            ]
        },
        "38-build-20230904": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 7567,
                "digest": "sha256:1f116c2bb9697fa048c948e7c02e6d30c5fac3d1639bdb0e16e4b3c760b71208"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 67189372,
                    "digest": "sha256:9523322a2d97b6a26a31c5c19b62d9ec9e3ea7e7ed808d90b225b9c6081ffb13"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2592240,
                    "digest": "sha256:a6d99b1591f4a2ac8c7f1063b08df11152da017afef86609dedd5fe617e8a699"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 29150787,
                    "digest": "sha256:2cf6a9255a2d6156a2411b3bf5d43d89037cb35e5f3c1ec7132209cecc6b903c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 227668373,
                    "digest": "sha256:b5ed1c20e12ff1e52f83467d747d4e18692dc81e5232d66cbe9b03719f26b37a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 473575,
                    "digest": "sha256:d703cb4193979978f68db2360235e9dc4eba7eb6cf0d37db49877a0d8763b647"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1015,
                    "digest": "sha256:eb78fd9e84376d78cc6dc008808a664fe5f779024bc5fb1047c162f94cd63aea"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 281,
                    "digest": "sha256:70a49c3a85ca229f71ffd443e7646cdec25e31d29213d89783e0461dcd250408"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 681,
                    "digest": "sha256:14145367757eca4591f179bb11bf85d9334cd122c562c802f0021deb922c8165"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 460,
                    "digest": "sha256:6100929971b4f4337bb2c899c69595adb01fe278a394b954f726bb1c4cd3ddd8"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 15147086,
                    "digest": "sha256:77175763b3b9d104bc04098759f14648e6426f91ac51d565baeeff76b7c9c6e2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 469,
                    "digest": "sha256:19d5f6647e5203539e2f51ad2d5752c5b30a10194ba7b5ae151a1955bbef3f40"
                }
            ]
        },
        "38-build-20230911": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:d93b903aea9c369a2b62612cacff34717c2f8c1abdd17cbf34b1ff86584bc39d",
                "size": 7571
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9523322a2d97b6a26a31c5c19b62d9ec9e3ea7e7ed808d90b225b9c6081ffb13",
                    "size": 67189372
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a6d99b1591f4a2ac8c7f1063b08df11152da017afef86609dedd5fe617e8a699",
                    "size": 2592240
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2cf6a9255a2d6156a2411b3bf5d43d89037cb35e5f3c1ec7132209cecc6b903c",
                    "size": 29150787
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b5ed1c20e12ff1e52f83467d747d4e18692dc81e5232d66cbe9b03719f26b37a",
                    "size": 227668373
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d703cb4193979978f68db2360235e9dc4eba7eb6cf0d37db49877a0d8763b647",
                    "size": 473575
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:eb78fd9e84376d78cc6dc008808a664fe5f779024bc5fb1047c162f94cd63aea",
                    "size": 1015
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:70a49c3a85ca229f71ffd443e7646cdec25e31d29213d89783e0461dcd250408",
                    "size": 281
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:14145367757eca4591f179bb11bf85d9334cd122c562c802f0021deb922c8165",
                    "size": 681
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6100929971b4f4337bb2c899c69595adb01fe278a394b954f726bb1c4cd3ddd8",
                    "size": 460
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:45d0f861cc83868dff14f01ade0e41913a8023672176b87cb63415fe51483254",
                    "size": 15147432
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bdc18f55821878376784968f580ddefc28b679b7b0767f3cacde61e066388b1a",
                    "size": 468
                }
            ]
        },
        "38-build-20231103": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:93f9e5a796c0f11df2a85a6c4201de622ec924b9ae5c4a12f82db46a8e5503fb",
                "size": 7571
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:994fd3fca5751f6e1c90c062034ff93a6b3f342958e643366a96aae667d543f2",
                    "size": 67303181
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0935cb4e3913d5b70eed21c21bfcad9e50ffb9c64c23a531273cb0567f3d9971",
                    "size": 2592223
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e934f22ad3e7d31680fa824db8c311455b178b0b514224439d6d935275d5fcba",
                    "size": 47536950
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c59c8dc545242ee6d4d8fe8aa12053cfeb16cbfff73cba1e7de901afe220c200",
                    "size": 225451486
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7626772cc366719be14238cf5784af66bf4b3a280dd32ef762d7199f121aa9c1",
                    "size": 473569
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8ad80855f8fcbe70dedc8691335f7a0338243c4caf626ca0ef93b15921038182",
                    "size": 1011
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2f9e33d02f5244487244960d4009bb4fc0836faf6957a37c11cfe33b3da8ff15",
                    "size": 278
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9bdfbd3c76ab5a932a50b14a4967b51cbf4a813e81f75c45122f71f4ba46eaa6",
                    "size": 677
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2f8d1ed0eacff961484f396e60514158e97a22da916ed93321ff17df79ea04cc",
                    "size": 461
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ed87e6b7686b679e6f12bd092b460fea952540ff47a1219d805209b4d084d9c8",
                    "size": 15188881
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:44d7acd7569f2e3cb2e3aaae845ec6dfd59e3c6b28caed84b7c98f5827a69aca",
                    "size": 467
                }
            ]
        },
        "38-build-20231106": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:ddf9cf7196c94accdbbc9158b85c9898df88f1fa1cc63503b4a1feb65ae0379f",
                "size": 7569
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:994fd3fca5751f6e1c90c062034ff93a6b3f342958e643366a96aae667d543f2",
                    "size": 67303181
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b9c256a6f919dbb3c90d501194fde29b46d3db6bdd7826ac8509ae15a9180ca5",
                    "size": 2592230
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:108c1a43cd8e84c3eb92b8cdc362143f30b4bb9fb6621cbe44a2092c6fc705a9",
                    "size": 47537464
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5b9f112c0e36d8ca224a0f228c6f6663a0db989cb4dfa525eb4ffc560b3595f4",
                    "size": 225434868
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:573198235dd8f34baf309d0f8a5334478cb498aa70de7a4d2a5a1db442a3bd61",
                    "size": 473573
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9f3fad4dfef406bfd755aca0f91fc309588335b38583be969480f37a5fbef9fa",
                    "size": 1013
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:157d1997f07a1f15499992243c23b2937d06855ee58bfec3967acd7ae574aa91",
                    "size": 279
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c2effad4c9611844f8a2bad6b970ac40a0d9e463474e8282455ef37ddde78b40",
                    "size": 677
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1fb2106e02104aacbdc6e1d462f6f9f1b3514c8faecdbcdaa5eb8458e7a29719",
                    "size": 460
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8c2dfdeedf602f4259a95da7dbaadffdd0c6c53bc67823dfc6e8c930e5f10c18",
                    "size": 15183267
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9a63d51f5b5843246228bf99fade8315f0370d1ced20aec5874ff100266f69af",
                    "size": 467
                }
            ]
        },
        "38-build-20231127": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:6278795726c7f09784a153d970fa221adf50753150ac6e84cce00d2138b18ab3",
                "size": 7572
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3d928c985542784e5bc7c6fca298f5b3a4ac1bfec6b17159c10ceee12ce55b6f",
                    "size": 65592571
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:656e97fa810c49c611de64776411de7b8af8dcaca8a641e71e7141b3e6851568",
                    "size": 2592228
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d9e0f7ed7e93cccc0731fb16229639465d20f8d11e3c564d36cd25d01f019fb6",
                    "size": 23224115
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:461f954f27f2d8d1eca9c25ab1b1e42b883937a52407c7c04d450b06d11a46c3",
                    "size": 225777019
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:307ef5bd5d77b4c1dcdc883f30d3b811dca33502d8f4436d283efe6c9fc93e0f",
                    "size": 473572
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a04fbd8b7d85027c34d9a7dcc8ea3c53abe7357c7d3da84df463e84abad61dbf",
                    "size": 1011
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a194af57345ac91e32ad6e5bfc2ac708b5f5e167fb6d91fc33d7de9272a8b5ae",
                    "size": 278
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:aa4e6846723bfcffe2df90737462b3359a43b84b02afc85f2eabdcc87265794c",
                    "size": 676
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:670e61471cfed3c8bb741059102769026d31c651eaf45af75bc7f45919ac5079",
                    "size": 461
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6021c3e3ccb8968ff968fc7941b4d6e3aa9d4b6197e9943d2e17b1ae49d233cd",
                    "size": 15226459
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6c9b2c924848dc63d187713e9ec6823e8411425530eee641d779bed83314d51c",
                    "size": 465
                }
            ]
        },
        "38-build-20231204": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:2cbd2766b745e3ad35e488f2facc2ad0bc34f6b9e19b2962cda273a177c0d4b6",
                "size": 7564
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3d928c985542784e5bc7c6fca298f5b3a4ac1bfec6b17159c10ceee12ce55b6f",
                    "size": 65592571
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bb9e9125d1a94d15454fedd5e84df0adbb403eebd338f3a3bb7dd0857d455e61",
                    "size": 2592227
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4b0c823ad4be967e13700b7ea36d0274f62dfad5e6fb052d391f069550f3b45c",
                    "size": 24268604
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7eb71369589b4454a8f457cb36f2552e93a70cb3eecebe7ee436e5ce5fde6a84",
                    "size": 225783702
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d74e4078daa5d6db0ce2d620b7da0589e7c2ac855ab75b722e9f9b8e396e0ed5",
                    "size": 473572
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8e1b9b16efc0f665a7000f270b9af1223e94ecadda6b81e366afcb86615b9fcd",
                    "size": 1010
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:88be7132dff3a48888776ed46c3d56727937bbca47e4300cf1e766941f01a052",
                    "size": 277
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b5b726edf96bef2f61de3ad78159ed3c0fbc506dfb85415f90d817aa59350a6a",
                    "size": 677
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f48c1985e19f34562783e3c6e3c506510e3d155b352157e6210750ec0f74037f",
                    "size": 461
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1dc5d03f74d744d43e2661fb91406584cbc71c233db42d8e44d94501780898fc",
                    "size": 15236588
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:683f81bf675ea13d9d4683b7add827d648a667bcf45f925418acfe87b2c54551",
                    "size": 467
                }
            ]
        },
        "38-build-20240205": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:5810132c959e92715b328d145882ba8aa665d64e70d396dbe2436ac3e6ad6f25",
                "size": 7572
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3d928c985542784e5bc7c6fca298f5b3a4ac1bfec6b17159c10ceee12ce55b6f",
                    "size": 65592571
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:91bfec1f5a7797c0b2358ee1d96e4af2dd13ca25a782f751941f63861310ab63",
                    "size": 2592227
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3bdc430956b05a945bb024174c76e13cbb1f722bac02256eea2ba2748989dcec",
                    "size": 48784152
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0f0506bebf1bfd2041e11e2be78a1b5ad62e5226645ef47e592562924a8d0c1d",
                    "size": 226241483
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a05cec1639aa9dc70ddd659f22accc4f1d6900af4d83b4049988ea9f69b6b39c",
                    "size": 473575
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e34ed3f99b707791b6367efa10d69378e2f25aaa38af7d1b5da87ba61a169689",
                    "size": 1011
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:93cca6e30b8ad623a9d41665ed3b6d4939cfe51c354bdf36c314d3618777043d",
                    "size": 277
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:41dcc55edff1fb1d5f0dfd391f1fc01458f2e805f627d9aa07815b2dbb0b8198",
                    "size": 677
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6181e7f2ae217007869c85aef428df6d65f6ad77258bffff870f535764a378d6",
                    "size": 460
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1100c3c9a8575b0ded55c6f5cf31ad5f83648ded3de2af45282315fa7ae3a631",
                    "size": 15210540
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d080d024023841e5dbd4f5dd5443e360f9808d9a24f2cd97892abce61966f10d",
                    "size": 466
                }
            ]
        },
        "38-build-20240227": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:3f7e418846be708b456ec356c64d88ba42743ec19b1f92871610ebe2334bdd52",
                "size": 7570
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3aae694a5eee87d89f05e7d069add3611bfac3b1f9488446d9f484e00e268258",
                    "size": 65655494
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a959596924082edfa799128bafb3725cbbbaff1735bff3a18e2530fa3f40911f",
                    "size": 2592233
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b2d440bd27a5625de567075e0fe762e042a2e6048ac4250d1b95036e48134cf4",
                    "size": 38655023
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e28cfc79d1bea0dc753f24603ea064a85f05611f6824d06a4e2c6fe360f57069",
                    "size": 226528739
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bfc9560a04191c0b1e05974b8f878daa54430455dbc13b3bab7c414b08f1d8e8",
                    "size": 473571
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:64347769f50f36376ab908c5c80600f6a7409c8d48880aaf03f30ce46d670d71",
                    "size": 1008
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b55185618671bced84a3f40db84e13ff8036402ddd3a373ed399c05ec9aca931",
                    "size": 276
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ca1a0f949fd966d277e8ac54559890aaf1f40586ed38cd2251809fb900955043",
                    "size": 674
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b96b475b2fee5d9453522951ce6301c0362efcb1025d15fc6796711ba2e6fb4f",
                    "size": 460
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f5e48838b76e0845721216bc81426222ab84d1c0f3dd9dbdf55fddc737cb10b1",
                    "size": 15261604
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:077c1ee7d232a0c20f8dbd9e940e1ed97ea627e75092234e8e7dac859c7c77ab",
                    "size": 466
                }
            ]
        },
        "38-build-20240304": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:df9318219f2def45e36c3da8d8254d84dfd100c8ad696c321c3df8258b307088",
                "size": 7572
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3aae694a5eee87d89f05e7d069add3611bfac3b1f9488446d9f484e00e268258",
                    "size": 65655494
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:953f1ac2fc695d00b8cb596f3d65fe80f70f5271005525597dca0507b6c0241a",
                    "size": 2592228
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9b13d79b02a136ed18da662852eef9383d30ad41c5d30fdb3c1921bea393862e",
                    "size": 38655068
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:19c9f12ffe707bd1798e044978b8884b2434a602e5e76f85a909549ee14764d5",
                    "size": 226548393
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3dbceebd6f97de98353f0ba6238437790b45bdc083332ebe5fbaa0a96d283a09",
                    "size": 473575
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:00fbb58f64a60f59883f14c6038254756c7c35c451cdf584fc518b712722c291",
                    "size": 1012
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:04aea93dd22d5e071b67ad766ec9facb57f3ebbd5d16f8e8b276091ed5854aad",
                    "size": 278
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:dab2639b751995f8a5c885ea0152e4ebb6fa69e2accb6e31ca54c88963be414b",
                    "size": 679
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:481c6fb71f9d659dcc9dd7a617d53cb2c1516a45ea697ab4753a513ef922dfa4",
                    "size": 461
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1c4bba19492108dd784fca300423daa47840f9fce5788068964be850050eef87",
                    "size": 15260862
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:dc463e42e0d76260278d39b395b1a0b9d812e4d6a77dcf35ea22263001d5db1e",
                    "size": 467
                }
            ]
        },
        "38-build-20240401": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:afef253cad7043e37d3432ba2f4424882899cb59dd11417911fd82cd51214fa7",
                "size": 7556
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3aae694a5eee87d89f05e7d069add3611bfac3b1f9488446d9f484e00e268258",
                    "size": 65655494
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b779f45ea316a3231c479d69fdb7560e47194490fbf9217210d8a271cc746732",
                    "size": 2592227
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:55605f1089f3b87325f06254c4d7a03eeb71871c57364acaf50b8f40fab2c10f",
                    "size": 43688152
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:34ff44b163eff62c9d558c657a41c4b56ffde46fdb3693e27faa0b0193b3d10c",
                    "size": 226441351
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e64d263f6c53c0eb520510fb0fbf71a332cb670773609e11d97e850059b8c2d6",
                    "size": 473572
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ad1d9af600b3b6fd4c1006aa08787bc8c8f46c116efa3d8b793c04f4c24c4f24",
                    "size": 1012
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a3a47fa3a1545256930e5f618f84f762d43369005a9cda3b597dda27d1d1e1d4",
                    "size": 278
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:35a02201e807e373dd496b80c01b5987887717815a538ffb7fb23ca0b5256cea",
                    "size": 677
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bc4306fda37b5454d8a79d3fac814cae1b4f05a0eefc5a4285a7ac0058447e19",
                    "size": 459
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:13a19ff3acb1263757e4dc0db141d68cb9f8099709983eca818385c22919ab9c",
                    "size": 15260039
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:51d3bbcbbc826f7b307beb42540654aa33384d11e51c1937f1fe4a5fc881a259",
                    "size": 465
                }
            ]
        },
        "38-build-20240408": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:6963e2e5c0041d587db09dcf0d65cf0d7675a88c304337075f482af22af6faba",
                "size": 7554
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3aae694a5eee87d89f05e7d069add3611bfac3b1f9488446d9f484e00e268258",
                    "size": 65655494
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:98497adddbae4de490fcc1d04edf735aec4a83cbc9ba5af1f1e65fbde562983e",
                    "size": 2592225
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6360d6ec9ad08998c00390ca47a7bd8cc87409fcaf713afd73b689b918b01438",
                    "size": 43774660
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:055af6a5333deae0eff8ae00dac4ea238156b511fe973fabe60f028c580994a2",
                    "size": 226660520
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:01daed6b4313e6915e63f67b4c51191e2e74999bd73c3c6e7a177fdd969e2568",
                    "size": 473572
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2f2510c732d5e8c6d4f2659881c9a3563b54b4a0c18c278a0a1cd35cfdc6c8f2",
                    "size": 1011
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6e9ff13c8e735763b572fac974b254a92ff8ed58829c7c45b30ee881dc470bc9",
                    "size": 278
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d0bb6ea75d932375589b31fb55875c485ea7731e58b798bd4b6d897c59b1fd84",
                    "size": 677
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:47114f532225fca85828e20ee26ed3b91cb32c3702011f7a59618389bb5e5f9c",
                    "size": 461
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6592d03e08e3000f634e12b9eadeedd486d6d7c55641fad65034e49da17a0a0a",
                    "size": 15277259
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a956f42314c6f86dc6af17778fa26937beeba500f4b644cd9736abae229c51a5",
                    "size": 467
                }
            ]
        },
        "38-build-20240429": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:87588418e6a05201125803fbef272d2ced30a0d4c93046c258fcc074a32e6afe",
                "size": 7554
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3aae694a5eee87d89f05e7d069add3611bfac3b1f9488446d9f484e00e268258",
                    "size": 65655494
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:98497adddbae4de490fcc1d04edf735aec4a83cbc9ba5af1f1e65fbde562983e",
                    "size": 2592225
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6360d6ec9ad08998c00390ca47a7bd8cc87409fcaf713afd73b689b918b01438",
                    "size": 43774660
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:055af6a5333deae0eff8ae00dac4ea238156b511fe973fabe60f028c580994a2",
                    "size": 226660520
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:01daed6b4313e6915e63f67b4c51191e2e74999bd73c3c6e7a177fdd969e2568",
                    "size": 473572
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2f2510c732d5e8c6d4f2659881c9a3563b54b4a0c18c278a0a1cd35cfdc6c8f2",
                    "size": 1011
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6e9ff13c8e735763b572fac974b254a92ff8ed58829c7c45b30ee881dc470bc9",
                    "size": 278
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d0bb6ea75d932375589b31fb55875c485ea7731e58b798bd4b6d897c59b1fd84",
                    "size": 677
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:47114f532225fca85828e20ee26ed3b91cb32c3702011f7a59618389bb5e5f9c",
                    "size": 461
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c76d7b12b61346267ed4068e45f3946216a3bb7ec050eaaf8a5ef0620b73f347",
                    "size": 15286390
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a1e27906a5e9844197ffdb436b0b0042dd2ec58f6cf250d45a25e58c4a7300a0",
                    "size": 469
                }
            ]
        },
        "38-run": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:11240a2fbb1ad9466fbb9511922bb85d2153fe2adc8e16ee1222fb504c2e7783",
                "size": 6797
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3aae694a5eee87d89f05e7d069add3611bfac3b1f9488446d9f484e00e268258",
                    "size": 65655494
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e3a29097b88d916c4c9d4805b3b5006a58f8f232c1035ec25a81757fce450681",
                    "size": 2592221
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b4fe12d3e79f34600efc5ecc27cd450141a6e551a379ebd5833b8b8aa425bcd2",
                    "size": 43774767
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:49bf492858ba01f4e87111272605ed1e297c655e4dfcd99e48f9bd2721786069",
                    "size": 473574
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b9b2a1a7222acfa84d0d257c56a93f843e3803c86dc363c2e3fd13a1d32356a0",
                    "size": 1011
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d5a53a0ba073aea6cca6c67d729e1693383253ae45368d5abe2474624275f679",
                    "size": 277
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:dcc229854562155539218cff0ebf1c5265ef1bd70adc2cab474f6567ff358ec8",
                    "size": 678
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9037230e582ab47d63fb807ca5b6188b4b74053f5a1133ecec9fc1ff4fe40080",
                    "size": 460
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2f40d3650aa1b29942eba2af6573c01578ed7a72aa45da1c800fba6f12ceee8b",
                    "size": 7065197
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2ac1bcb20f76b74515cb8113dc0008f386405c9bc71e752b3d4d24de71c75a8d",
                    "size": 468
                }
            ]
        },
        "38-run-20230502": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 8184,
                "digest": "sha256:3234628c04d318c5e6f7bb5b7c80e9b265fdbbd931ae7044b68813e88f1826ff"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 66349426,
                    "digest": "sha256:fced517a1bc365e9d636e44c544ed08558b5d5b64353a227d8632d5d9b634799"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2592240,
                    "digest": "sha256:0494f20995ff1fb59f684c8e264979494612520653835a06dbbb5e6affa510ae"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 36518415,
                    "digest": "sha256:444be0c165c24603818c9c9cad745bb00e6df5086ee3a527489f1b51b546a971"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 473578,
                    "digest": "sha256:108a0bf672d0f75696d579fc1706d3d234d07ca24b5863b839fc38765e514d64"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1017,
                    "digest": "sha256:bc51d6c2833b965bd6c58fee39feb027b9a9ae15bb07fd687e6fecfd2eccada4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 284,
                    "digest": "sha256:660c23d4bf65a0b9015e3fe91097baded682ba7e7b67dc7eaa404f7864982e9c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 684,
                    "digest": "sha256:07a4cdce7200bff11f4558d5169974ab971f15b67e38dca1099153e2dac0a942"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 461,
                    "digest": "sha256:fdf136a08a729c3c4eea0c5f5ea7a7195434c52539a316e15dfe044fd76153d5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 7139136,
                    "digest": "sha256:aa512fcb36edfaa106047e1cb40522011edfe114d99532f5cf1d04b8ca8b63df"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 469,
                    "digest": "sha256:aaca21f904e4ed8e63b436e52e15fb5755de30c4c249864bf7ba84b50093fed2"
                }
            ]
        },
        "38-run-20230530": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 8184,
                "digest": "sha256:e144f1355ceb9142fa26310c8b06952d7b756d8d37e5b1c9eb93e5e8f760bc14"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 67062512,
                    "digest": "sha256:6de646d847962d715d442d2418a1db2af7865404589a8662898ebdc94d68ac9e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2592239,
                    "digest": "sha256:ed5d781461da7de556669c57834186c3e1722e9050d30eb3983084e07687956e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 24456034,
                    "digest": "sha256:372d81d223e81b494726bf38f59192640850fe739ca85b0c982cf0ed9a6c2284"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 473583,
                    "digest": "sha256:903df3d440f2062248e74611345dfe334a8620bae5fd0d22209ad028aceb6069"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1017,
                    "digest": "sha256:6e23ab059f620398a60c2a31d6ec1f20ae0ba7d915df70d2aeb59f5662ae8bb1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 282,
                    "digest": "sha256:542e25e5302455d345da9e9a6d226a78538bcd39ea3e08a78aff24e26343070f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 683,
                    "digest": "sha256:5ee3909d37d6e90e97d4720550697f56268d947c901e0c2072aa45115057939e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 461,
                    "digest": "sha256:c89d89f368d9000bf4478a880f212d11ad6e5f5d622785931bb20ef4434e8652"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 6939821,
                    "digest": "sha256:ae1c7609b1882ef694d640aa03291cd10c53329a00d81b622529e3effc3ad06e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 468,
                    "digest": "sha256:7c541f3afe2080f2e9df96ae9e1bcb79bc418b3761e3f618a12d2bfeedb90e88"
                }
            ]
        },
        "38-run-20230803": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 7143,
                "digest": "sha256:8e96f7624f90a8803636250138fa7f01abd39a85d3f61a4d0fb961e75a25b6b9"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 67189372,
                    "digest": "sha256:9523322a2d97b6a26a31c5c19b62d9ec9e3ea7e7ed808d90b225b9c6081ffb13"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2592239,
                    "digest": "sha256:39091d9a033595f6674daec6b2fab7fd26657fe2969a03a672326fcfd9bb1dbb"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 22588863,
                    "digest": "sha256:3bd1f7882d29417d6d5c354be92fcc797421e4d40c199573aa1c17ae7493855a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 473582,
                    "digest": "sha256:971dfbceff04805ec2ffd288322ff8d24bb0b5d4aa6a2501ecb634ea96ed13f3"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1016,
                    "digest": "sha256:e48f05f5dc21eca4e30229f489fdb1802a419f17e86a5974fb4a6a2655676627"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 283,
                    "digest": "sha256:a7730d42a839d8c924fbf9d2f8a23a476764de09e42658df1fb7b1b2dc9f894f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 682,
                    "digest": "sha256:0e8d31a242aac802e6bd1c6d214922be76612aec07e6ddd92e160a020b44f0da"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 461,
                    "digest": "sha256:d2d1966fe70c6df6c13c26997af42dad6829160ad845e6bbd15044da8134244b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 6931622,
                    "digest": "sha256:502bdaa5ee0135c90cdee70f4ff8cc20ef0c62dc088354b93457f739533f5d77"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 468,
                    "digest": "sha256:1f75afdb3b906ddecf7c7cee7a4c3fa0c49e112bf73dabb0f9ef8bfad0c54e09"
                }
            ]
        },
        "38-run-20230829": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 6807,
                "digest": "sha256:62c94b4d3624453db217e272eeb6d0f22047e7effc092246522e83fb755894a9"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 67189372,
                    "digest": "sha256:9523322a2d97b6a26a31c5c19b62d9ec9e3ea7e7ed808d90b225b9c6081ffb13"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2592239,
                    "digest": "sha256:3fd95b85ecb5a66fd8953f7ed744b3ec15710c004fad7abdd6451e89459cce2b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 27374640,
                    "digest": "sha256:61f694e48a1705d78a07967393b88c5dcb7d62469ed86079dcaa9a97e758d499"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 473575,
                    "digest": "sha256:54460417f56d7f1e140bcfaa2466608d5bf81a16c53541f7db584911e8b92ae3"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1015,
                    "digest": "sha256:b6d9b1abdb82137e52c795b522c1ddf9e05a4b32f88b6d5a6f849b1a714fb896"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 282,
                    "digest": "sha256:8427b37928dcb1b6bac4bcf93805d4a282877db24b1bb623b3b6911e772af4db"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 681,
                    "digest": "sha256:d9e574ecab32870a717873b7866e642eb2f1cce2397bb1bd901c296ca25fefbc"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 461,
                    "digest": "sha256:4db15315e9d42c57d432837cb86e721c184ef028118fe4cdd5358ed2e5469e32"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 6995970,
                    "digest": "sha256:9fba23cbcb76d36ee1f4ba48b3e635d91d79d30c4afe3b4ad68cbb696a4629f4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 467,
                    "digest": "sha256:830e256e87cf2fc0d754f2edd99b3151048afd4ddb19837cece5c8b5cb7cc41a"
                }
            ]
        },
        "38-run-20230904": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 6806,
                "digest": "sha256:884fd383eaf6d645240f3152b7f9e9e39526358baea12fb725f854270d188b53"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 67189372,
                    "digest": "sha256:9523322a2d97b6a26a31c5c19b62d9ec9e3ea7e7ed808d90b225b9c6081ffb13"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2592240,
                    "digest": "sha256:a6d99b1591f4a2ac8c7f1063b08df11152da017afef86609dedd5fe617e8a699"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 29150787,
                    "digest": "sha256:2cf6a9255a2d6156a2411b3bf5d43d89037cb35e5f3c1ec7132209cecc6b903c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 473571,
                    "digest": "sha256:b4847da95c2e5aa31861600e2fc4a9cf64f59b2f56e370410025c1c05dfb7e12"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1013,
                    "digest": "sha256:a591cbfa2b15eaeda430f6a6bed77257d07189373b36f0ebf75fc2f1173b5012"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 280,
                    "digest": "sha256:b549fca8a7cd69f6d251512dd03d24d16adb8be178cd0770426f92d649447d13"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 680,
                    "digest": "sha256:ee29642da2366253e21262ef770cf7ca279e58f01dfc0a405d0004bcf7c0b49c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 461,
                    "digest": "sha256:01a84a333883d5f0c1b98c0076a78a70ac251c15bc08c6c7f07e21a5bc48d7c6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 7002533,
                    "digest": "sha256:b2abc6587bbe6ea3001b29565f41f5d79a451f28d113c72fe163181960152317"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 467,
                    "digest": "sha256:7ba7149c68b2111fa9e551aff4e2a57baa49170c09487182f8f57a68a7f2ab6c"
                }
            ]
        },
        "38-run-20230911": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:977218b65e6e9e455576fc6df62f5f7fe08d52fe239298f4da683c95436e9e0b",
                "size": 6810
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9523322a2d97b6a26a31c5c19b62d9ec9e3ea7e7ed808d90b225b9c6081ffb13",
                    "size": 67189372
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a6d99b1591f4a2ac8c7f1063b08df11152da017afef86609dedd5fe617e8a699",
                    "size": 2592240
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2cf6a9255a2d6156a2411b3bf5d43d89037cb35e5f3c1ec7132209cecc6b903c",
                    "size": 29150787
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b4847da95c2e5aa31861600e2fc4a9cf64f59b2f56e370410025c1c05dfb7e12",
                    "size": 473571
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a591cbfa2b15eaeda430f6a6bed77257d07189373b36f0ebf75fc2f1173b5012",
                    "size": 1013
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b549fca8a7cd69f6d251512dd03d24d16adb8be178cd0770426f92d649447d13",
                    "size": 280
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ee29642da2366253e21262ef770cf7ca279e58f01dfc0a405d0004bcf7c0b49c",
                    "size": 680
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:01a84a333883d5f0c1b98c0076a78a70ac251c15bc08c6c7f07e21a5bc48d7c6",
                    "size": 461
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:677b032023dd4b57c04f9ed0580f63a0ce7e8df2b2b7d48f940f955060c24b26",
                    "size": 7002985
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fb2f3d1b093ade59104278535a313893b7f3262336ad069cc478ecb89872384e",
                    "size": 467
                }
            ]
        },
        "38-run-20231103": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:698cf3b4158d5b91ff6d01bea83f77c8f2f55b4fb60f63be7c453eef5c9c4252",
                "size": 6812
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:994fd3fca5751f6e1c90c062034ff93a6b3f342958e643366a96aae667d543f2",
                    "size": 67303181
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4042a15f73abe729aa6a99e8c875836c7bfd95e4bbf238631ad2978fbe0b3b1f",
                    "size": 2592223
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4466fd6697681c10ae500b288256ffcf0ceb861c4551dac45dec279e44472b4e",
                    "size": 47537530
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ffde60dc30cdf33ca4cbec80345579f0534b61ac5745a5401dd77e75b059c920",
                    "size": 473572
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:63b554587e75e5ab9b303823f9fbd84d71ba6648b638774a3207ea509ad774c3",
                    "size": 1012
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:250a90a9dc885de9b73b2de5149c6206a0f75dd7bec0c2ef9ca8e6a19c600e91",
                    "size": 279
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6e2a5878fd8eed1858580e278041ec339be436a62e9dae2f2b31d0a95b7f2ee3",
                    "size": 677
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e10f13f0a1d66bcf73c81cb6c2a9e17a8eb64685d495dca52cc8980af4d571e1",
                    "size": 461
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0c9d6b651fe9fc1913b6b69e41cbec492ce91690bb7f4091febd6647d11255f2",
                    "size": 7117350
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d587f854c0c9911b7ca1d7e3323ef587a8a2d2761b76753483da48d2748cd795",
                    "size": 467
                }
            ]
        },
        "38-run-20231106": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:cdffdfb693d7886a3e0840e8e8ab905160f8db56b23f345e14f25f92119251dc",
                "size": 6806
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:994fd3fca5751f6e1c90c062034ff93a6b3f342958e643366a96aae667d543f2",
                    "size": 67303181
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:cbad3804ca9a1990d11b1dab8512437a6d2207cb2e3b91fdce89923f9fb02fc4",
                    "size": 2592228
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:843af85ee0e2cba3ad15eb602a87dfb85611c8565ba7b219eb7d9f1037b92247",
                    "size": 47537535
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8d6d06253da0cc7ad0444fbe83086513855b925743b7703c46160860956838c0",
                    "size": 473568
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3dc7f18dc8b28fd6e6fc02a41a3d830e1f386fb747a91baecf98d2c2a10be567",
                    "size": 1010
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0fce6bd897ca96240dc822f3e09ac9a893d6aebfc8a8f44490e2ac3cba19db18",
                    "size": 277
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d9458ad05af8c5c75e86f95dfe67b1528149fc6be910daa882f7eb2c7d52a11c",
                    "size": 677
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:297ac5b778550a8c477f9ce1dcf5b586c0241b41f6060f6228ef34c2711bb801",
                    "size": 461
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f2f4da48d634178a336d1685e1236fa220f9003725c7a7f7232940ef8c6f9e73",
                    "size": 7117218
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2786cc3d311e316646450b5deffaea6adaf5c7f035270a17101771ef5fde7c50",
                    "size": 466
                }
            ]
        },
        "38-run-20231127": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:cd2bc1af681101fc8111e31d9a93c9845f34717fb13de1b47aa0a6ee5f42dfa0",
                "size": 6812
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3d928c985542784e5bc7c6fca298f5b3a4ac1bfec6b17159c10ceee12ce55b6f",
                    "size": 65592571
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9ec881267433f57c40f9e61b9cacfc759deeabc358ec1d3ab79e7d3d9352108b",
                    "size": 2592223
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:781f4f5a3dde4c9a61c80922544acac969445bf6bbef57b8b4cde27fa279a5d3",
                    "size": 23224341
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e3c80ac69ae01565561ccd29f02448ac74392b0b5192ebbd68b44539849f16b6",
                    "size": 473572
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:79c681c3b3a541a0d672b6c0d4fcc5580c9a6f6745c2cd3a0781a3d7353b8311",
                    "size": 1010
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4e528eaac518431865ce34b46050da9fd107a9358dc9944df7f312a04d9eb22e",
                    "size": 277
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:575a74a07660a4ba56a0649e03ba939749f1345458b4fe3faefd5a794fa840df",
                    "size": 675
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2134d9bc86b427048cd2f61383ad0ba5ba19558dc6da89578c2eec248ea7736d",
                    "size": 461
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fa7ec7bf6b70661727edfa01d630eee3039eed2f6ca60cbe658603bfec768a92",
                    "size": 6964642
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a42163093ad613fbc02486907e264a5181a75872a487c76f52cb50dfcf2c0658",
                    "size": 467
                }
            ]
        },
        "38-run-20231204": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:18d58ab05a366f555ce8cc45be740b4aa3d5ebef0c493d54cba6ac30d714c777",
                "size": 6810
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3d928c985542784e5bc7c6fca298f5b3a4ac1bfec6b17159c10ceee12ce55b6f",
                    "size": 65592571
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fa6cb229accf0202ead41553eb23f045d2d0b4b7c654edc4a7703fae1b1fd4f1",
                    "size": 2592228
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:794e2484fc3502b0985c9be83646c613d677fd7bdd2eaac82b87175f45afe192",
                    "size": 24268758
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:26ed8809c1463ea30b9f3e26eafef2451aa7e113497f4b9b8d3ef9b313bce66d",
                    "size": 473572
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f556958f040f66a457d183ace4961e9ab16685e3fffc7799c5791eb17712d4fb",
                    "size": 1012
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0978745a9a8ce87ffc5b13a80bcea5daaafe483a29cc45fd7463f155779e2270",
                    "size": 278
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6b066ba991e828e9f289e27f708122171f5275731ed2b82c4ba73e2748471fc0",
                    "size": 676
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ee6896184ac2908e9a3714c17f90d8c1be8a60382453e1e67fd6d89c29e415bc",
                    "size": 461
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:cf1b78cc6cf430d18f1f7993901e7ca4a0163b4c3eb1a345db2f923dc9972079",
                    "size": 6973865
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:62079b99b733d64444b1ed301137022933fd2a35c1b904d384300c2db1fe5927",
                    "size": 466
                }
            ]
        },
        "38-run-20240205": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:216268f51bb8efbf32c3d76c838316c6bbad3bff83d5f32fe50bb6d2cc930152",
                "size": 6811
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3d928c985542784e5bc7c6fca298f5b3a4ac1bfec6b17159c10ceee12ce55b6f",
                    "size": 65592571
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ad178d72905db2a360115bb6849c8068832e4984036fba003f04068ac6a6bd97",
                    "size": 2592222
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c0c4e6507e8b5bea4db351b8a6e8235876e2ff0673b210ee3e0bdea64763e01f",
                    "size": 48784154
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:13d9bb662b3794aedd8f8aa98c68058a1760a1356d9a3f42f3c63d2c86f83493",
                    "size": 473570
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:60f2e0bf0733ba97b5cc94b41bad01f6ebbec1f3416e566df0a97f774801ce5a",
                    "size": 1008
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1e4c008363977243f758162e1a713e2c92b1ecc41fa5c026da5c93adc75c6e4c",
                    "size": 275
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:52dec7d4914ffbbd75752bfccb0ae75fcd88a831e71b41e00592971eebde608b",
                    "size": 674
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6ca74a7f0011a23ced2243105850369609f2211be0d769bc193ee941b2520a08",
                    "size": 460
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:00487df0ebe80339f4de4fe5211f85d8c8f8cb7a085fdbe187a7706d81a4df25",
                    "size": 7404476
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b243a3acf85a956775c70a7a98eba1002522c8615b5e26424a40b80a5ca6e643",
                    "size": 466
                }
            ]
        },
        "38-run-20240227": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:728227022c2ba6cd2193c761e4e2b65e99aa863b4d0d7e7d426565d25e603f64",
                "size": 6810
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3aae694a5eee87d89f05e7d069add3611bfac3b1f9488446d9f484e00e268258",
                    "size": 65655494
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3e590c6dbdc96b1cdbacfe1edf9c0cd1a8d274ab9f64fcc727a9b8e531dd2cd4",
                    "size": 2592233
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7adb706717b650f823b13f7c6bb4c282be1a52690199e6f455cfb30d5cbca021",
                    "size": 38654943
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:423d419b6640476cb76b200c9f282eeae646a2e6cfecc2031156e13b9dad4b7f",
                    "size": 473575
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8ac9f745039954e9a75bd5b770563cf3125dfa45774358751a883b41f6055e6d",
                    "size": 1012
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f26142fae26d26aef024cc33f49b3ed51f70b996d1d2dd77338eab55f74f6971",
                    "size": 278
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6dc59657604b207e982b92ee10c9209906db18c87aeac61679b4b9713931a9a6",
                    "size": 677
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5996e90f577025eb8a85d74dbbda6775db92ab5af6b03561273305fc0d42d737",
                    "size": 461
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:47d19c734c99525e8a563c406f562a4627ce7b90670506d67f91515036739cdb",
                    "size": 7026573
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3f1a34867776b1ef728b3b544079ca3089c9c1f1d2398d3faf6c04d8e85ed177",
                    "size": 467
                }
            ]
        },
        "38-run-20240304": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:86c642b52c2d3ab9cf495bce89b2fe29c8dafc13df45ffaff7ccbc336178065d",
                "size": 6810
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3aae694a5eee87d89f05e7d069add3611bfac3b1f9488446d9f484e00e268258",
                    "size": 65655494
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:79b599003222175835e1970954e9519145d402578af3b20e11f3ca2cf50f9fd1",
                    "size": 2592227
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:735b184569da057a3a27ffc4e0458248f8683681c2b5aaf874f8a86e0c6a7e52",
                    "size": 38655023
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:225147945e23054c0b9d4ecc254f42c0cfd7dd6414e8bc13cb2fa054d95600d4",
                    "size": 473574
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:46dfb557ffde70435f342251cdac53f7ba6b7047f858c4fae563553aa7d9deb5",
                    "size": 1010
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5e1edb9a59a184f87f5dad7580e05bfb45f04c855962693b34d0ac28e0794b9a",
                    "size": 277
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f1b94eb18edf2c26967fed53ec8bd49d33c18b0432078cf67640436e7923552c",
                    "size": 677
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:68bb8a514653a6465e96d23a3e1534dafeb20dc7615d5f98386e125d682677ba",
                    "size": 461
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:46357ba38debe8837596983f76a012dfe9be0c711e86a01b63784c521eda4bbe",
                    "size": 7026360
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6d99d9d00a591934eabb20e3a01beb8ab35c09a3fbf5afd8b189fe730935d2b4",
                    "size": 466
                }
            ]
        },
        "38-run-20240401": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:ce6774a3a9da5b22060af9d85ae1253cc8e2459410c8f20be559055a7fe836e0",
                "size": 6797
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3aae694a5eee87d89f05e7d069add3611bfac3b1f9488446d9f484e00e268258",
                    "size": 65655494
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5c8a07cf7e0a6610b389237666844a0c93f0042b105e99fc1128ba49157a7a8a",
                    "size": 2592232
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f6c33e17fe4a960c76b12f34fd78f661a1e818432520307b00c7935866ab0623",
                    "size": 43688134
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a5eaebb4c97c56647af86311d98554cace9891838bee9093423ecf3f101e5b1a",
                    "size": 473578
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ee87f3843998a99a46c9560aa1d631660954eae2d583aca0eb974334f7b297f0",
                    "size": 1010
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a8d38676405c3fa5b42b13ac40a2b44c68d9e5a8b71f40bcafdde8a8a8c17c95",
                    "size": 277
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:556bf3cf41263f53c8916f59c8da3bd38d8d0af02e9f832ca81341fafb49683c",
                    "size": 677
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1ef0f1fe648699e4b93f679558b9d0e31bdd61320e7df39ccf0441adf648998a",
                    "size": 459
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2a706fc3935741807db0be8b53135fec92ac13bfd8d269588c5c75b7841bbcaa",
                    "size": 7055978
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3e1e1d66195fe2d14a466bbdee923853cf6205c5f712354a4d5d4298305477b7",
                    "size": 466
                }
            ]
        },
        "38-run-20240408": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:3e842e6847da3876a38f77b3e2e3a9d6ddccc098f0249ea0ddf753dc567498ed",
                "size": 6795
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3aae694a5eee87d89f05e7d069add3611bfac3b1f9488446d9f484e00e268258",
                    "size": 65655494
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e3a29097b88d916c4c9d4805b3b5006a58f8f232c1035ec25a81757fce450681",
                    "size": 2592221
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b4fe12d3e79f34600efc5ecc27cd450141a6e551a379ebd5833b8b8aa425bcd2",
                    "size": 43774767
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:49bf492858ba01f4e87111272605ed1e297c655e4dfcd99e48f9bd2721786069",
                    "size": 473574
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b9b2a1a7222acfa84d0d257c56a93f843e3803c86dc363c2e3fd13a1d32356a0",
                    "size": 1011
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d5a53a0ba073aea6cca6c67d729e1693383253ae45368d5abe2474624275f679",
                    "size": 277
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:dcc229854562155539218cff0ebf1c5265ef1bd70adc2cab474f6567ff358ec8",
                    "size": 678
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9037230e582ab47d63fb807ca5b6188b4b74053f5a1133ecec9fc1ff4fe40080",
                    "size": 460
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:51f290121c4e7d779dabe67094da2d7de94cde1550402a61e75c0820fb553697",
                    "size": 7058839
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0a33f83f336f3473a0e5ddb982f7a177fddb487c02dd17b9b9899922cb05cdcb",
                    "size": 467
                }
            ]
        },
        "38-run-20240429": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:11240a2fbb1ad9466fbb9511922bb85d2153fe2adc8e16ee1222fb504c2e7783",
                "size": 6797
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3aae694a5eee87d89f05e7d069add3611bfac3b1f9488446d9f484e00e268258",
                    "size": 65655494
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e3a29097b88d916c4c9d4805b3b5006a58f8f232c1035ec25a81757fce450681",
                    "size": 2592221
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b4fe12d3e79f34600efc5ecc27cd450141a6e551a379ebd5833b8b8aa425bcd2",
                    "size": 43774767
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:49bf492858ba01f4e87111272605ed1e297c655e4dfcd99e48f9bd2721786069",
                    "size": 473574
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b9b2a1a7222acfa84d0d257c56a93f843e3803c86dc363c2e3fd13a1d32356a0",
                    "size": 1011
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d5a53a0ba073aea6cca6c67d729e1693383253ae45368d5abe2474624275f679",
                    "size": 277
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:dcc229854562155539218cff0ebf1c5265ef1bd70adc2cab474f6567ff358ec8",
                    "size": 678
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9037230e582ab47d63fb807ca5b6188b4b74053f5a1133ecec9fc1ff4fe40080",
                    "size": 460
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2f40d3650aa1b29942eba2af6573c01578ed7a72aa45da1c800fba6f12ceee8b",
                    "size": 7065197
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2ac1bcb20f76b74515cb8113dc0008f386405c9bc71e752b3d4d24de71c75a8d",
                    "size": 468
                }
            ]
        },
        "build": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:0afab04fbb9bfaffef114e8a13a8c063b224f909a56aa58f3ebe0fa082202804",
                "size": 7552
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:69fff380046369a47fbc74b0aa03f61fb243f73dc5795e3ecf69c6577ee84908",
                    "size": 63118399
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:82317edea666666d707ace0b03aad8572e29a838bb12b4c4dfd016b2ab4ce736",
                    "size": 2592233
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c2e5455188b6eb0cff89590382e7b0ecb02ea2b714d55bba2fa7dd06af5aec88",
                    "size": 23448711
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d715dbac72a798e8d0d0ffba83669baf0bbc4da2276a5a381ac22d652d5e13d9",
                    "size": 217029439
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7ff7cea49a20cad0aebae3fa3c701db7c3491385aea25f0e543cc59538fa5ee4",
                    "size": 473573
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d5a769b6122b0d526950c3579d87d5664c827ecd65688a38c75087c4f80db959",
                    "size": 1012
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:49c4a2084afc1da3b08c57198b9d7982cb4ad987197a29eb1c0b905a29331a4a",
                    "size": 277
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4baaeb452bcc05b92b082e0b84e390a65c6e08ed28ef13295f9b16ba167a9c10",
                    "size": 679
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8cba45c189962bae1d2ff247ddff62c95a79794bffefeb6283787d28c6b320ff",
                    "size": 462
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0c73585f5ae2e5501ea84cf210bb3e2ef339e5be2c28647477fc616783a259c7",
                    "size": 14184607
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e90fa7528fda4f4affd9f071788d390dbcdffe27db7b2ff37ffa26b1889f15c5",
                    "size": 467
                }
            ]
        },
        "build-20230502": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 8893,
                "digest": "sha256:1b238db562a2c5701cbaac65230fd44f2106fddcc123690b8762f48cda4e341b"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 64445578,
                    "digest": "sha256:e733ff1786fde464ae5c487ee23562295e5ec377f322e1a0ddbeb9eb0b767770"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2592235,
                    "digest": "sha256:779fdfa64b09f2b03c7a5e10d4ef87952d83da7f023ce1d66e2147c526b1d341"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 24144690,
                    "digest": "sha256:ff421aaabac7bbc65ca876f9b39319846832cde3697714f4f73ca7a076fac22c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 215589874,
                    "digest": "sha256:e36768648393a27be5fe6a721c2afb057b1e8838d5e3a07a9f9dbade846815b4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 473573,
                    "digest": "sha256:9fafb3780d95867794d9e100e8ab440b040d90e78ae273e589c8d265b21e33ea"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1015,
                    "digest": "sha256:3cc2f7f66b172ff9ab224010454302af8afe1203027fca9d6e4c81cd58673ef2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 282,
                    "digest": "sha256:85c04457b3588b30710cc9db1f9f51f78892c774810e31f3f2b991ccfb8a7c3f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 682,
                    "digest": "sha256:ffe285366352754f210f0aeb22523ddbe5b4a0d9261e4f5613823c250f38feaf"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 462,
                    "digest": "sha256:716ba18af0495321712b68a2be349ce3691b12361fb757cc7908c01067b2a8d1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 13518334,
                    "digest": "sha256:bf46b1f779009bcc2ce2ac09ae6ce132223ac3d407f26ac38ebe705f9417a18b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 468,
                    "digest": "sha256:9ef880154357b7a8a95cb9c8731bf126b38a41c30b421558aad6514d013e8a4b"
                }
            ]
        },
        "build-20230530": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 8894,
                "digest": "sha256:3ca4d38eb8209ccf27e8f5fe8b6f98d1dbe5164f1b3c1da387f497979ce01fe6"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 64674351,
                    "digest": "sha256:72e086bfec66fd3950d44dad0170ad1c4eeb3cb44d6bd0cd2d14d15f6493114e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2592234,
                    "digest": "sha256:94903bee787b61baef32c2f253cb7e456f92dd60dc2361d2686d84c676846461"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 22875081,
                    "digest": "sha256:aa85fc6b6d58818eaf697af244b4cc17ddc780e40a839d858be0cc5c693a00cb"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 216340171,
                    "digest": "sha256:a991a52277c7bace6c0879890673876841c4c050a173c857bdb387071cba7778"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 473583,
                    "digest": "sha256:1035d78600d4388198200c1b590c5d95cb1065e9a86e603218f4580b9b6e1a83"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1017,
                    "digest": "sha256:654b974ff1b637da4434ddb7569cf3bc9faa377a621a8ea1b6151fce0be781df"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 283,
                    "digest": "sha256:f3776d99ac385e31879f0d64b559602e3762689bea12d868f1580f2192b40eca"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 681,
                    "digest": "sha256:5485d34a7aee447b794ecd2a158e864348c3e2c3a750c6bf89f64d8498c94b59"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 462,
                    "digest": "sha256:ebbd9ff62a1a327e2cde3000019f75c8bf5b0dc705a264455238f98b7c9fedad"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 14080423,
                    "digest": "sha256:c3cab7b61245390e3dbbb8334d7d383730a2d4d88dc6e565596c2df0cf2cd8f5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 467,
                    "digest": "sha256:ebeba48468c54aee0abdeed9c780163574e31fd52b093552bec9abcae5120615"
                }
            ]
        },
        "build-20230803": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 7907,
                "digest": "sha256:a5b47113871e56ab03cac44da9aa450c98310b7eb896193434c261bb2d9811f5"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 64705637,
                    "digest": "sha256:ea792534a213e62c62a1c4772dfcf53eaf82f7635dbc9f71bb0a60a91226d118"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2592239,
                    "digest": "sha256:f7a79e920ec27ac3117c18067a73bfa21db8e6dc263ed85a35120c2ef5f03b39"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 21178581,
                    "digest": "sha256:33ae549057fd4a09796b47bc886cf296e26c6c8c00a5e2a5b3b4a0fb10827be8"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 216063397,
                    "digest": "sha256:5ee6c95214792fcda2897d2dcf5872d1711b5439e46d203751057a92cceca0f7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 473583,
                    "digest": "sha256:3f0b989c720e9cd2a8cc02d523c498641a84a510db783cfe8337de5e8a857ca9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1017,
                    "digest": "sha256:b196d7fc162f2889e39c621cab1453c822801be5010c05560a3f01f3db06d43f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 283,
                    "digest": "sha256:92bfb55494eb27a740e8eee6b16708829efab976bbc16a469c82001f63394531"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 684,
                    "digest": "sha256:5062ebc19e9e0278ae498272864d903d0482d236215dfdd6f5fdf1d6b177e328"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 462,
                    "digest": "sha256:ae0f0e8e33c3eb7fd5a2e225b59e01af9d359afe1c37e2149ad597067a52e609"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 14100335,
                    "digest": "sha256:a69ec78f1ed826c30b11e73db0925b3112cc1415f10c43a247cba8525d80a606"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 467,
                    "digest": "sha256:d53d6256cdba7f429ee794999357632260ffa5fa3c5b5112c454207dd8ff0457"
                }
            ]
        },
        "build-20230829": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 7567,
                "digest": "sha256:dc88f6892f07353aa388b370d2b5e7734080321708cc664f9b40f18b13b5d7e4"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 64705637,
                    "digest": "sha256:ea792534a213e62c62a1c4772dfcf53eaf82f7635dbc9f71bb0a60a91226d118"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2592234,
                    "digest": "sha256:8a23d1bc357a016559421550aa91e0204a8a255102a9224be83008caeaf996da"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 25809278,
                    "digest": "sha256:f940068d3ef039efcb0ca5f66ee60c0bd0cf4760713964a44d6374b497b2a9b5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 219418060,
                    "digest": "sha256:c610f078f4f1062005d75cf270c9bdf93e0f8b4d7409a59ca7e6356ddac1b812"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 473584,
                    "digest": "sha256:555b39c1f18e701ee0def238d9b5e46f4bc997a6eb810371ecfb574a26a6298e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1016,
                    "digest": "sha256:d341993c29914dc81520882c387d27e6bdad12e2b6b63159c74e5372086a1d1c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 282,
                    "digest": "sha256:6881bc51eb6e33607fe9bc713997860ecf2e32c2a7995079c041d41982cf7786"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 682,
                    "digest": "sha256:a99f2a9159cbaaf9367e1560cea638e9882d6a0aa14d0ff0dab11743c069ed28"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 462,
                    "digest": "sha256:688f6bffc055661b1e3e9134aa217d7451c23382a5e8dcbf5d81ad3cd0749da7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 14189459,
                    "digest": "sha256:76bb5053c24104eccbdafc299b21bd528ec0101d804ce47b8940fef4eeb2ef13"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 467,
                    "digest": "sha256:daee23fdfb680fb4d711b7c176cae0bfca1f61711a0f1431ff6c003890a3bf24"
                }
            ]
        },
        "build-20230904": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 7568,
                "digest": "sha256:42c61385543f673e538d26b607ecf4fda270f7c27b29445fa48dc488a9529116"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 64705637,
                    "digest": "sha256:ea792534a213e62c62a1c4772dfcf53eaf82f7635dbc9f71bb0a60a91226d118"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2592232,
                    "digest": "sha256:57e197807ba0a519d1edb0779ce76a06124dbef05029811c4cd40f0584de6bac"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 28511392,
                    "digest": "sha256:471a3338d976e468e7f618dd22fbdde0e2373e61be9ba9fe8ba4b2e72baecef0"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 216664890,
                    "digest": "sha256:b83979765e4c0e1796530bd00bc646610b38f365257e80b2085b5af058f24a4c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 473570,
                    "digest": "sha256:81879a19910e1a496d0c411ff2df904ee88a6408bea71d1d609271432a4191b6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1013,
                    "digest": "sha256:9e800c1f80f8401c189157dd7d7e4ebcd8f2e0376a3d21f7191ddb79b8794971"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 281,
                    "digest": "sha256:e14e21ec6264d33a865243f3f009144460bb90639c04fc3afa6c46a08c027046"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 681,
                    "digest": "sha256:af714c407ccba3319ab928f255b9ca302ccde44746e669d35f56b6cfa5c7882a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 460,
                    "digest": "sha256:2e42947fed8288eb956d961238c22a61cd9ce2ca22b0e86c0190dcfeef46faec"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 14137010,
                    "digest": "sha256:d084bca945b24cbc3f8ca49dd0d627b18190b389b76b34395a4dda1eac3e20b1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 466,
                    "digest": "sha256:f3700d9834e608be309cb49c6da7dea0c60f514c43ed7807a3ca39868d819820"
                }
            ]
        },
        "build-20230911": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:f807f758a7cf3ae3bf60aba3e0e042f6cbc0280ae385bb352372e308b11672e3",
                "size": 7572
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ea792534a213e62c62a1c4772dfcf53eaf82f7635dbc9f71bb0a60a91226d118",
                    "size": 64705637
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:57e197807ba0a519d1edb0779ce76a06124dbef05029811c4cd40f0584de6bac",
                    "size": 2592232
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:471a3338d976e468e7f618dd22fbdde0e2373e61be9ba9fe8ba4b2e72baecef0",
                    "size": 28511392
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b83979765e4c0e1796530bd00bc646610b38f365257e80b2085b5af058f24a4c",
                    "size": 216664890
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:81879a19910e1a496d0c411ff2df904ee88a6408bea71d1d609271432a4191b6",
                    "size": 473570
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9e800c1f80f8401c189157dd7d7e4ebcd8f2e0376a3d21f7191ddb79b8794971",
                    "size": 1013
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e14e21ec6264d33a865243f3f009144460bb90639c04fc3afa6c46a08c027046",
                    "size": 281
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:af714c407ccba3319ab928f255b9ca302ccde44746e669d35f56b6cfa5c7882a",
                    "size": 681
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2e42947fed8288eb956d961238c22a61cd9ce2ca22b0e86c0190dcfeef46faec",
                    "size": 460
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:37bbb76c3e7f1d53287e08af9c78e8d359e56693a701c185575e10a49af0fa38",
                    "size": 14137120
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:095f0b688064183399a88e61c553298f906d3bbe7d780c48b2226ab4c5a57e24",
                    "size": 467
                }
            ]
        },
        "build-20231103": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:9ac9c365c82cc947d04266dc2e5c2212cf1ff9a4d18799921393b241830c2b9e",
                "size": 7571
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9d8d1f79d667e0d33c19dcab3e1da521941331416c217cc74601d8d9f6eb34ab",
                    "size": 64844849
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0770b89f72b418017bafd34c1d5552048c5eed91faa033af7187c646a6592cf9",
                    "size": 2592229
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:29d309c8b3459e8477ca5e914be65c3e4e83ef21695a692f92c7b52fc198f2eb",
                    "size": 44064224
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a28acef6ee54c426ff17c9667f83540ef5cb43fdc3e3d664c847608b783be445",
                    "size": 216980025
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4c184b301d67b652578996acdc883d362ba56ee1d7961845e82a445fc8a3dd3e",
                    "size": 473568
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e88619da9641c1a99919b4fe52c48a15e4aa52d56e55d000d918576825ce0b6f",
                    "size": 1011
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:65ec30ea4e6e929ba2a9cfc9ea06dbd4c70137c62ff0ce8c31ba525ad3be1884",
                    "size": 277
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0f7ff1ffd46bd5431d360e8fcb55926935c214fc26015f8905538a14da17b14b",
                    "size": 676
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f83df3c49a1eebf8dbcb319e217aac00df4952838803b3ff962c7dd7957de30b",
                    "size": 462
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:386cd3b0021f03600390285e79f2b4a2b1c4af4763884dd4b8981eab2055c25e",
                    "size": 14174536
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:212df4b7c54e98bfb0cc7458ba7a23e332e7b3a7bd36601a2e2fdccdebe633ff",
                    "size": 466
                }
            ]
        },
        "build-20231106": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:674f5ced1279c67762c2672df1fef041927974f9ea714bbcc4ead9ff7d765244",
                "size": 7564
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9d8d1f79d667e0d33c19dcab3e1da521941331416c217cc74601d8d9f6eb34ab",
                    "size": 64844849
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:17ba3eac7c1f9ce9e04f05070a25561c9868bdcef663e68aa5ac8bd96c25b520",
                    "size": 2592233
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:285657690fbde02ba48611d3dd000f47b7c396651e283097f742181b60efba35",
                    "size": 44064946
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4e95e27869fa54cdc0812a839fe46f625b70ba99ce93d7f659480e6a4e1592d6",
                    "size": 216991202
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:dd992c92a0f592cad50a4aea59a1e3abbfdfc50f36449abe8be63813ecdbd3cb",
                    "size": 473574
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8d87a781fcef58ffe8d62d3cf860c226fb6bd64f59da4ded4c94850b90f1c4a6",
                    "size": 1012
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f6cbc2eb8a9998e5abebb20f735e54fa5fe6fe98f4ebe7936eb3ba03c3f0ded0",
                    "size": 279
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8783360b72f39fa722e56e53f2e8425e426bd937db8f07668131a09545834c4d",
                    "size": 677
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:dba5c227294800c799660501956b8746867066f6c53dda172235fc9aedc674c4",
                    "size": 462
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:12b36c7b6c43df93771b317fffffdf0a923fc7a26a7aa80a5aa2ca96f56cc59f",
                    "size": 14177088
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:29d7782bba2bc68d998441f8300b41809f7adcae51d74d1c35f28ccf45458ec6",
                    "size": 466
                }
            ]
        },
        "build-20231127": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:bc3367ef47d36cb174680b6b9430bc15bd282c2c61242444950e720615630035",
                "size": 7568
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:69fff380046369a47fbc74b0aa03f61fb243f73dc5795e3ecf69c6577ee84908",
                    "size": 63118399
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6641d4e23883de336ed449229e82843e5c72e3f1c81c8dd83135346960efdc5a",
                    "size": 2592224
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1b1e517fb0275fc4621249537f0da6236e1cd69bf862d820c876333462493f3f",
                    "size": 22318515
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:165564d821c1037960b170fea0079cf103fda6666513335e98b6968d8c3b8949",
                    "size": 217051070
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:01e9e8459499b3bc80b1b59e093b711165e883a6b0b34cecc147192d6647a93e",
                    "size": 473574
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:74619d00050fd0824b99ae241a8517f158d42b3343465fa6a78cafb4d6e70522",
                    "size": 1012
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:49b562c66c266d31dfe6f77e08fbf606c721fe74fe3756a0fc70572d0a9e2ae7",
                    "size": 277
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:eecd0d10f4b58b52bb36ae388d9d633ae650558ff64874899f7de0e019094c26",
                    "size": 677
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0f119eeaa7b1d1ee4109e4bb3f17232a250013fca828e92e654cb5ddb16da097",
                    "size": 462
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6896fa3376d4e7ebf6792c340b2222a99f863810da8b5f9f5b77435473e46299",
                    "size": 14197510
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:14b469b70cfeb9230c6a5c19bca42e320188b66d4c01cf283c08f62eef8efe9e",
                    "size": 468
                }
            ]
        },
        "build-20231204": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:67c8148a050e37cc747873b01bfed7e3032d02330dcf0ec78ebb2ac6554e82c2",
                "size": 7571
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:69fff380046369a47fbc74b0aa03f61fb243f73dc5795e3ecf69c6577ee84908",
                    "size": 63118399
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f0ca99f7b063cce65d52273a4f2101d346418bdd8a7352f4af9785e2ba52c05e",
                    "size": 2592224
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d3ef5f06a980545479bdc090e802b2a72a2c93d49fecdc47c50cc8357a279eb5",
                    "size": 23448791
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0e6eee1f98642a0b9ea66873f6f6bbc955484317743fa4c8d53660f136d5bb83",
                    "size": 217028879
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3e2ff8beebba14a582e830769648b12ea0b2f4a228d63c45d1aa4f46afaf0066",
                    "size": 473573
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4e458a328d96b94763f7d9f7f65c86f99b34e9b495422a2c95974a479df994b4",
                    "size": 1013
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2959fa0cc7c12e351b42c74a818d4f9aa5cb261407867e24a6ebc87062ec7a0e",
                    "size": 278
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:673c09069e4697b12af04dc085dd22f9b86c51024bbdf19a4f969cc74a67f80d",
                    "size": 679
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:19ce9cb7ae33b72478454483374a2eda66bc4f88d8f7b9fab48c46f5622433be",
                    "size": 461
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:96719765ae6dd8087766abf9b08053d13754e67149272d0eaef35be8f3fd7926",
                    "size": 14184561
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:36c82738ca59864f47fc88ccd71888c3a59a8aad2088d3082b2ef4dc78ddb518",
                    "size": 466
                }
            ]
        },
        "build-20240205": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:7d349082f663196103668950e382a6188b5a15c7d9a6ce6e617058138853ac0d",
                "size": 7569
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:69fff380046369a47fbc74b0aa03f61fb243f73dc5795e3ecf69c6577ee84908",
                    "size": 63118399
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:af78cc0520f170b906a82f421a37356d2c269781502c5f7d2c396abdfa55d6a9",
                    "size": 2592222
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7edbd9813867cb3dddc51da4d40538bd9695d5b483b8ed59539b24b19c133b4e",
                    "size": 23448737
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:44dc7c873245302e133bf36d8149b48643b19afe9a7540a40abe1eae736eaed8",
                    "size": 217029550
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4dc8c6e0f74fad71d0a2e17368a0c25cccb51945f997463748b8def1421f4f81",
                    "size": 473575
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4bc00a878dab5ef147d98e03eb2e1a5a19985e5e5fdcd18ff8defac4938695b5",
                    "size": 1012
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fb87ee75d18626f6429938563bfa6b76bda1ac557019c8354f99cc04c16fb1d0",
                    "size": 278
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e36e3c571cd31032afd2e63729a6a6885268fbecb1a32d4ab477e88b760c6925",
                    "size": 677
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:75fc38abf14743c0cb98e30147fdaf527dc87c34a8cd91db118b48425c25a493",
                    "size": 461
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:59338c7a88cd557189e77fd914146dbc70667084f77a28ae97d92a2f451ec287",
                    "size": 14184438
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a642b532fe22b19c5126bf3102f6d7f3b1063839365ccb0ca4dc109018d06854",
                    "size": 466
                }
            ]
        },
        "build-20240227": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:9cb05eda97a4183166402d3caba4ec6f522284997fbb9bd8feb2e180caf9f32d",
                "size": 7571
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:69fff380046369a47fbc74b0aa03f61fb243f73dc5795e3ecf69c6577ee84908",
                    "size": 63118399
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:65764d35c6ba7bc01cd8c1c7c80dedd0fba41e8aed4fe20f32b8104e40811b27",
                    "size": 2592230
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ccb26de59532c7a3ca4e330f6259f0a22d5502c63fce64953cfb835da2a89232",
                    "size": 23448765
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:dbffb8cd0d199db9da89c0a8f6be633d403ae9577895ef76ed8559e0e6a2fce6",
                    "size": 217030397
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f2cdbf2b50a12d0c904c51a1aa6a78d769e31ab23e681213a8dcd625845a43fa",
                    "size": 473575
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:caf29b48f9a19f9f082026316d26fb42e73b1f7a2585ff1f86457c794c8ca68d",
                    "size": 1012
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:821dddb4fbe51867593b530bacd209ea5cec4104a56beb6362389970d19aaa68",
                    "size": 278
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a0fa218cb0068ba037fef0d258fb86dfbfed2c4590d7b39e86733b5c8b69f61b",
                    "size": 679
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9d68feee9a64aaf2316e4f6f65cdc6fbf9e80169d4bf9cd0152c507a525b3155",
                    "size": 460
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:43621ec178694a694bc346c24853a1e34462fba94fcf0f69409ac1846dfe9cc8",
                    "size": 14184944
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9cd033b9f1f0cbfdccb6b6415ae6c383a3dac402e9e6d88d7887720e6d6b1695",
                    "size": 465
                }
            ]
        },
        "build-20240304": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:68a2cd063249963f98e465a25fc0cc1ed14beedb772a4e503d3033a3b5fd99b0",
                "size": 7571
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:69fff380046369a47fbc74b0aa03f61fb243f73dc5795e3ecf69c6577ee84908",
                    "size": 63118399
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:365c152eab29768a6002cd30191cfe30aa5a9c7670afb3dd05e5568d60598b53",
                    "size": 2592229
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9cfac25b66436aaad9254043374a8a0bce94c1fcc73328f0009e4c633a489dab",
                    "size": 23448738
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:eec58c8baedb56f03697759c56cc8b52846aa6b359079d478ffe547bd11683f2",
                    "size": 217029920
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d5ea14a5b029f6e9168ba600f7829994ee94710831ae531cc8575103cb5f9076",
                    "size": 473576
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7b5e5aded2a12ddea2c899e597f6b276bdbb070022f582eb5ffef5eab6706f4c",
                    "size": 1012
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2fdfe10b79cf925c4a4f205beee5164056995aa8d5d10cae49aeae14093d612d",
                    "size": 278
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:563ad2bf80f0e61e8048e26e2680eceb622c9b84a0e9b242dc26a7272ef9ee62",
                    "size": 677
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:87d42fc86fb1bef824e1ec397f2adeb648ebde6cb39d75fa5d79da952fead6a4",
                    "size": 461
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:cea06176e2b8947b6e1d07e4dd4689c9ea39eeee409eb8a40bfbcdfc6a93e01e",
                    "size": 14184994
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0286b594c700d8350d55410891c24b476d417a813c65c34611a77804cde81125",
                    "size": 467
                }
            ]
        },
        "build-20240401": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:a5b2a5d11aa97c3838e9d86da414021a15758018bd22468d4507c80ebb730f17",
                "size": 7550
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:69fff380046369a47fbc74b0aa03f61fb243f73dc5795e3ecf69c6577ee84908",
                    "size": 63118399
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d3a4176e53d7e5697395953f42ef76b08d9fef8fe5a662a442cd4f13740c7a1d",
                    "size": 2592234
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b1d05a709ad59f905b2bb738079267053a09a0f4f535e32192bcd83e0dce163c",
                    "size": 23448641
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3f3f5fce4a1b94b586b0523b225e6b5436e9dd40567f898aaaffd4c2302a2399",
                    "size": 217029391
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:de3c36bd181e84497d428d49b10abc3694cd9a0c75ec31064623d54cb4f8c211",
                    "size": 473577
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:565296760a52acc955f0523e8e8213020ff97bec4df095452a9633f053cb710d",
                    "size": 1013
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bf3fbff6d013e83413ee8ed775faa0f5e3350e9b987d24b28cb8715ea67d31ed",
                    "size": 278
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4363ad41c733c6b3e9c7a4610329a637d3d876504b93320bb9b4612bba294335",
                    "size": 678
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:38693fb89d5d2d6143564a7b4bd2d1c7da21077550cbe4d5e8a7ec5096625ff1",
                    "size": 462
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e0c2317dce13f5c27b06c146aefd4e35d134ef13e22244d043d097a01799bd83",
                    "size": 14184540
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7a3f18913787da49f9c675ce2d79ac9909314af6711d9c1c4651cf5590d124ce",
                    "size": 464
                }
            ]
        },
        "build-20240408": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:52356e3f70c7853deecbe68ee7624028f85a081f25f675c8afcf6bb0ed39dee9",
                "size": 7556
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:69fff380046369a47fbc74b0aa03f61fb243f73dc5795e3ecf69c6577ee84908",
                    "size": 63118399
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7e54c1365f15bf88b17ba38f79d2a428ac06b2fadf6f6c91f27bb25c858dbc60",
                    "size": 2592231
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:017b908d94c1c349a53970523ee7a139bef37f34ad362e03d6bec2d726504a0d",
                    "size": 23448703
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1b5c50d01e785c4728ab89718fa8aaa45a81c0af2408ac0cc79f3ee163c253bd",
                    "size": 217028541
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d83e2fae00f6ab84a73baecccee1b9773d59ae4b450a12e360a5effca4944ac4",
                    "size": 473576
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fadda5faf2fcc02b62f25d0f9c548bc0d5c1abdeda6da2328fc79ddb5b8b91ca",
                    "size": 1011
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e1e9b66fa7cafdd2423279eb1c13f4052734fd9472c334ca49bfa60216bfccc8",
                    "size": 279
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4cbd57e7f4360c9cbeecd7408e549686853d4c97c491b59f4d07d320805ce98a",
                    "size": 679
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a4759f7eafc183e7e416b2fb6e564ecd7cf14425e5e7ccad33b50b3ea539f38e",
                    "size": 461
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0afad639f212391e415a6d539d9a549d806a221b1f680869f18652a572af7ade",
                    "size": 14185062
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:79f175372083d1ccbd5fa122d59afc0195bc3a1187e64f3cc08659b3b4d01c8d",
                    "size": 467
                }
            ]
        },
        "build-20240429": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:0afab04fbb9bfaffef114e8a13a8c063b224f909a56aa58f3ebe0fa082202804",
                "size": 7552
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:69fff380046369a47fbc74b0aa03f61fb243f73dc5795e3ecf69c6577ee84908",
                    "size": 63118399
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:82317edea666666d707ace0b03aad8572e29a838bb12b4c4dfd016b2ab4ce736",
                    "size": 2592233
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c2e5455188b6eb0cff89590382e7b0ecb02ea2b714d55bba2fa7dd06af5aec88",
                    "size": 23448711
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d715dbac72a798e8d0d0ffba83669baf0bbc4da2276a5a381ac22d652d5e13d9",
                    "size": 217029439
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7ff7cea49a20cad0aebae3fa3c701db7c3491385aea25f0e543cc59538fa5ee4",
                    "size": 473573
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d5a769b6122b0d526950c3579d87d5664c827ecd65688a38c75087c4f80db959",
                    "size": 1012
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:49c4a2084afc1da3b08c57198b9d7982cb4ad987197a29eb1c0b905a29331a4a",
                    "size": 277
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4baaeb452bcc05b92b082e0b84e390a65c6e08ed28ef13295f9b16ba167a9c10",
                    "size": 679
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8cba45c189962bae1d2ff247ddff62c95a79794bffefeb6283787d28c6b320ff",
                    "size": 462
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0c73585f5ae2e5501ea84cf210bb3e2ef339e5be2c28647477fc616783a259c7",
                    "size": 14184607
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e90fa7528fda4f4affd9f071788d390dbcdffe27db7b2ff37ffa26b1889f15c5",
                    "size": 467
                }
            ]
        },
        "latest": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:095f26299c408e415d1325f671f001cea75f10a0f13b0414649b3e3fa087b420",
                "size": 6796
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:69fff380046369a47fbc74b0aa03f61fb243f73dc5795e3ecf69c6577ee84908",
                    "size": 63118399
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d67deff5c71a351663d4faf25c3b38f412142a31bca7a8d888c8821bfe5e18e9",
                    "size": 2592229
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:aef089e78d846edbce27f2669c47ec3fcef142e589e1867ef5908636b93f70a1",
                    "size": 23448814
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d2e3aa275cbb3a947522d3ea6580677ee9aa12d44c091352980066a1fb89bef8",
                    "size": 473573
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5f9e31015a5229413246198fe29fd337da9e65c8a8af3238c1f8824969f6e872",
                    "size": 1012
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3a3a2d6852cd0e1051942f064efb1ca5ed52209ef47cd0bf05a7e8752026738c",
                    "size": 278
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c3c8080aaea2aac7e2ff9499b2a0acda4cb7e625ee3cded157d534b54c647108",
                    "size": 678
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1e138be9b56c798718197323eafa69ddc869347ebd57ddc632dd70c020d34717",
                    "size": 462
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:aa51496e6b7060ef2c7a15d4cd416d98fd59f28987ff76a9eea9b0b0f309fc3b",
                    "size": 6663565
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9f1a7fa6c0cefb6a6b4fbf46bfc0b3000c99d8708a7e68e57e7b7993bdeb50ef",
                    "size": 466
                }
            ]
        },
        "latest-20230502": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 8184,
                "digest": "sha256:3dfcd66b3f0adbe0ff584c043ddc506ac93a14e251d7ec2e85f59ba041c822ab"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 64445578,
                    "digest": "sha256:e733ff1786fde464ae5c487ee23562295e5ec377f322e1a0ddbeb9eb0b767770"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2592235,
                    "digest": "sha256:779fdfa64b09f2b03c7a5e10d4ef87952d83da7f023ce1d66e2147c526b1d341"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 24144690,
                    "digest": "sha256:ff421aaabac7bbc65ca876f9b39319846832cde3697714f4f73ca7a076fac22c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 473576,
                    "digest": "sha256:ec59658df998edad9693fc215cde79d353e70dbfbe1341db33220c67d9c7989a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1015,
                    "digest": "sha256:36079b38428c307f2bf975c0469bc873376a43624adf1bb4bbd24688c3491d13"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 282,
                    "digest": "sha256:8461a9fa9e696794b86076991c15fefb22bb5f7cb00a0794ca50435f331878dd"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 681,
                    "digest": "sha256:1bf0146f9f3eb6c0d7f45063920fb8a873c6791e0de411d72db985228f24aa67"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 462,
                    "digest": "sha256:88733766d34217ae72bffd4818ea0519e3e6a604d5849f9fae03116a87121164"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 6436992,
                    "digest": "sha256:6e77c5f6fa75e934d9cdfa8dec8a896649b498a7c18a0f54f1ec90554d16152d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 469,
                    "digest": "sha256:df8ec00c118ce5f7f484d44b178ba9e3f46651c48f6c1cd04f8a77152077a7f0"
                }
            ]
        },
        "latest-20230530": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 8182,
                "digest": "sha256:6b8638befd4f8f0dae701eba5c11fb84f97ba29f018ccacec987f18166ae9ea5"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 64674351,
                    "digest": "sha256:72e086bfec66fd3950d44dad0170ad1c4eeb3cb44d6bd0cd2d14d15f6493114e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2592234,
                    "digest": "sha256:94903bee787b61baef32c2f253cb7e456f92dd60dc2361d2686d84c676846461"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 22875081,
                    "digest": "sha256:aa85fc6b6d58818eaf697af244b4cc17ddc780e40a839d858be0cc5c693a00cb"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 473577,
                    "digest": "sha256:41436fae5c77e853c134ddc6bbf6b4a74dd92ca423b9dbd096740ba87de8b735"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1016,
                    "digest": "sha256:4db02dd47c7ef88ecb112623f1b5753ba3ad6f91f2b0d5c0252d8cd50d82b2b2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 282,
                    "digest": "sha256:566e5b2cc67991dc19d9e141b3515ec02430c23387f48a93f3c197b9a0103816"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 681,
                    "digest": "sha256:0d571eac575438553a1f49cd92bdf9f3b653b903f1c47d12c0bad9de4e0914e7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 461,
                    "digest": "sha256:0e39fc7b103b9fa548bdc50aa87c397286bfc8f6408cf52aee07ab4fcf68c349"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 6612050,
                    "digest": "sha256:8cd975824feb2126495edb380988b4ede9854d24603e97888bc919aadfe56874"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 467,
                    "digest": "sha256:e03c34c49195b4e5405a7d360ff8b2eb6770456b8f2a88007512cf30473e30ce"
                }
            ]
        },
        "latest-20230803": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 7144,
                "digest": "sha256:8cbaf4f856e00b36d71f9d0bb8cf7d29d95fcfa16ca63e0e37fa89a4f79de01c"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 64705637,
                    "digest": "sha256:ea792534a213e62c62a1c4772dfcf53eaf82f7635dbc9f71bb0a60a91226d118"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2592239,
                    "digest": "sha256:f7a79e920ec27ac3117c18067a73bfa21db8e6dc263ed85a35120c2ef5f03b39"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 21178581,
                    "digest": "sha256:33ae549057fd4a09796b47bc886cf296e26c6c8c00a5e2a5b3b4a0fb10827be8"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 473583,
                    "digest": "sha256:d64dd38c14dedf1503a4af00054c39c3f612029657db30d0fc8dca727b61b0bc"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1017,
                    "digest": "sha256:ee1494250a35dd274c3982b4c5f5c483d78c70833020b443dbde6d77d273aeb2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 283,
                    "digest": "sha256:064b89e53b25bf2e4b376f278dae78d03c75920d9c29900d41513f91449fe67e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 683,
                    "digest": "sha256:8964cfc20919de072fdf02c430f7b849108b52ed644236f48193ec4ee50a209a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 462,
                    "digest": "sha256:5501f5fbe7ed46c469c697f3b47fae5e0c81160f7293cbd3dfc3c287f01cc109"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 6634626,
                    "digest": "sha256:d2955ac883b628be8ac0bc54626feff7546067e1883cd683d933071741b03b23"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 467,
                    "digest": "sha256:461922f1dececc29f78941696fb1874a39a3e5dea211ac1f4aff557223d92527"
                }
            ]
        },
        "latest-20230829": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 6807,
                "digest": "sha256:ec1a101b6a59750bc679fabc283524acb4213d9542c0b39982b8c23a8c241271"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 64705637,
                    "digest": "sha256:ea792534a213e62c62a1c4772dfcf53eaf82f7635dbc9f71bb0a60a91226d118"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2592234,
                    "digest": "sha256:8a23d1bc357a016559421550aa91e0204a8a255102a9224be83008caeaf996da"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 25809278,
                    "digest": "sha256:f940068d3ef039efcb0ca5f66ee60c0bd0cf4760713964a44d6374b497b2a9b5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 473573,
                    "digest": "sha256:8930b41cb100d0197249ded6ea0bcdb52943edd72fdfb23c1e37e2465cff32a9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1016,
                    "digest": "sha256:a577c46bc85a1eca7057d6940255eb92584d7207344f27d5873361fa86b41658"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 282,
                    "digest": "sha256:586c7444d44703ed4dc6565512cc8cca2f0e4835e70d5aca6ad327406a7e7a64"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 682,
                    "digest": "sha256:a32ef540d1e852b24d14374a1bc3285034d6ff96bb276015e19412e9d51d29e5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 462,
                    "digest": "sha256:1c9a15d990e00c06610ca1b360a6a38d60b1a995503f841ba62dc00e53c6d5e6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 6708121,
                    "digest": "sha256:7ef80ac2a48ca9dda8723f9fa1c817bf23325f3a6bc60f7636003516305641ba"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 467,
                    "digest": "sha256:77b3b9fa0f66df333dd6dd7489c6152eab62a47d9581ca0ac3035c1a6b6d5467"
                }
            ]
        },
        "latest-20230904": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 6808,
                "digest": "sha256:35bb38fc03a9ba225dd9c28e08d8cee0247c6c4f68a2570008e624988af394b6"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 64705637,
                    "digest": "sha256:ea792534a213e62c62a1c4772dfcf53eaf82f7635dbc9f71bb0a60a91226d118"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2592232,
                    "digest": "sha256:57e197807ba0a519d1edb0779ce76a06124dbef05029811c4cd40f0584de6bac"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 28511392,
                    "digest": "sha256:471a3338d976e468e7f618dd22fbdde0e2373e61be9ba9fe8ba4b2e72baecef0"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 473571,
                    "digest": "sha256:43acb285765a1566a09368e26f802363c73729a1ae513cb100c40d7d5f2c9fd4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1015,
                    "digest": "sha256:1f7a541e39d90075887bbdb2cc816aabc30dbffcf6b53f81374d58c099208d3a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 281,
                    "digest": "sha256:f64cf4e6488b8740244403e8dfeecf1fd1eca6cee27302b8246883ac41a1084b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 681,
                    "digest": "sha256:455b8b17e8e1b86358879c1c85bb769d1d32ef5a39654a9da1ca47fe376a9941"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 461,
                    "digest": "sha256:79974a50afa759f12e48dd7814fb83e5849ad292c42e28177d22c79b13419d23"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 6737268,
                    "digest": "sha256:6f68f0458988d9ea2d4539b34a4d8e1047da8e2e192bcd222891bf5e14aca6d7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 467,
                    "digest": "sha256:bbba5de64a9134d844b86ed83b6c37ed1a56e010b6a804df42763dbc6cf60971"
                }
            ]
        },
        "latest-20230911": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:59ab8344b94aeea30a5b00a2a6cd24551b09fac270fb87ebd88bc0e6a3156915",
                "size": 6812
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ea792534a213e62c62a1c4772dfcf53eaf82f7635dbc9f71bb0a60a91226d118",
                    "size": 64705637
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:57e197807ba0a519d1edb0779ce76a06124dbef05029811c4cd40f0584de6bac",
                    "size": 2592232
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:471a3338d976e468e7f618dd22fbdde0e2373e61be9ba9fe8ba4b2e72baecef0",
                    "size": 28511392
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:43acb285765a1566a09368e26f802363c73729a1ae513cb100c40d7d5f2c9fd4",
                    "size": 473571
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1f7a541e39d90075887bbdb2cc816aabc30dbffcf6b53f81374d58c099208d3a",
                    "size": 1015
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f64cf4e6488b8740244403e8dfeecf1fd1eca6cee27302b8246883ac41a1084b",
                    "size": 281
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:455b8b17e8e1b86358879c1c85bb769d1d32ef5a39654a9da1ca47fe376a9941",
                    "size": 681
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:79974a50afa759f12e48dd7814fb83e5849ad292c42e28177d22c79b13419d23",
                    "size": 461
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d61a53ba1310310feb2b3ba03d0504c23710dd3c4eff88c132d71096c536197c",
                    "size": 6737668
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:69ee5385f36a99dcdf9dd724d6bf6b826815c1aa9486c1f5d263deca5505eb8e",
                    "size": 467
                }
            ]
        },
        "latest-20231103": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:09e41a197679e7713c47271ce2f8b68f9c08605f303bfda9d231d8750df6b4ba",
                "size": 6807
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9d8d1f79d667e0d33c19dcab3e1da521941331416c217cc74601d8d9f6eb34ab",
                    "size": 64844849
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:70f1454c069b387e5af8b9d91b5470e7c4785b9a3290f7113ad42e664f16f534",
                    "size": 2592223
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d76a558193cb7b66b0700ad5870a13652edf878e9142a0d74f9a71180fa098d3",
                    "size": 44064717
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6f396e4d4a3dac8410ab225cbad45fb13592e944fdf1ab97a953ead54f0fb00d",
                    "size": 473572
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:12c35de3a810ce75e005471dd252f007b4ee65305ff26ddc28b8dfa744f9b86f",
                    "size": 1012
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:476049291d6250253e43958e82448d6c862427743c148732b2a832f70c372a56",
                    "size": 278
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8e0ba4f7e5a572e065f592740afcf5c1f8313b9813191abe3a2b5fd75ccdd00e",
                    "size": 677
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d6b9fe800ceade297a03f9af34ae2921bb7a789025c1dcfcb5b389739c04d457",
                    "size": 462
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3d8e284ba8dee1296161cd9459c3e8f98ba86c486f85b5015f73ddb509914577",
                    "size": 6852289
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6f0caa6e8a5f8f9cd7c1c1f67d372b2055929aeca735e0d50630bf0f50cea363",
                    "size": 466
                }
            ]
        },
        "latest-20231106": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:76b45d8037b32b3cacdb9c27e6d6a2e4cd144108852ccf76d8f3667562de8075",
                "size": 6809
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9d8d1f79d667e0d33c19dcab3e1da521941331416c217cc74601d8d9f6eb34ab",
                    "size": 64844849
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:03e4b9d169336e58479c799e52d209343f4fd63f113b03b9cc3778d78eefc36f",
                    "size": 2592228
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9ebd0b84befc3bef3f3a1a315ae5e7ec38574027144908174718797f0a00360c",
                    "size": 44065020
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4d11386853aeab8cd5baa963e4328bffa12cd29a1ce5240ad9607cc9c3e875fa",
                    "size": 473574
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7331c59cbf560592c7caacaec5a5b0e7c1412d0ee6c53af4a6afd0b75120350c",
                    "size": 1012
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:01cc8bad0eb150412ebd78b17a1ec8ddb84bf7bfda9878c71e39cec3d021ee7a",
                    "size": 278
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:204195aa087948caf7654cea0a3a5700bce5edb30a573214210d4567dfefe883",
                    "size": 677
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c45bba7cbbc35ad8b4c7416a9df0446d0594c82b7244266706a7a42cfd423cda",
                    "size": 462
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:cacf54655129ce716db200628b3703abbc8871043195d1ec3efa480a889ba61a",
                    "size": 6851883
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c85ba2e57aab76ff38e9e7853c7b26d9c582fa1c1c03ff2aed0531e929b8f18c",
                    "size": 467
                }
            ]
        },
        "latest-20231127": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:8709ed34a283091e502fb5ce449e9839c04a21c21e451cb804b38bc451669c4c",
                "size": 6811
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:69fff380046369a47fbc74b0aa03f61fb243f73dc5795e3ecf69c6577ee84908",
                    "size": 63118399
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0bb5eada9fb8c922ecc9f8444aaa0ee8a62fcac70ee74abc4710b2495f0bfd08",
                    "size": 2592228
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3ab8b31915862687dcc837ff941a87caf4c07e9f37527c8ff82b84c62d432e58",
                    "size": 22318509
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:491f82e7458e6e17bae05aa839d6b366e87513662f4340abcac0a9696a7480c0",
                    "size": 473573
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:744368413ff21e9a4e526bd1640cb20d58d0ac97385af7363e6ccfaa0a24b050",
                    "size": 1010
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d600c7ca91fb3e6cda2851db48eb14cc780b01a3eb28cb3b5cc1c157b30e5ce8",
                    "size": 278
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b803570392d88303afd7a2018b05dbf63c3295a143048a2729f5436e4f82f62e",
                    "size": 676
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c82c00cdd78937eb219600038c3a9ba8501aa8ae7b114cd8e577f8fe1107a36c",
                    "size": 462
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:cd39f3ef999bb9b47e7eebc7e98f1ccac30437131a41052a7abd6cc4977c3562",
                    "size": 6664271
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b4de3682dc6fbe5f51a6dd4d1b6250729df9ba860e419f7c6dc296cfe495d071",
                    "size": 467
                }
            ]
        },
        "latest-20231204": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:fb2863f09ce135a7a239e4455519a12c79e762cfd7be9a02c78805dc4e6c84bc",
                "size": 6807
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:69fff380046369a47fbc74b0aa03f61fb243f73dc5795e3ecf69c6577ee84908",
                    "size": 63118399
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d33718b133be58c12c588d020799740b8f5d0e1659f4305bd3a42e0be1ca53e9",
                    "size": 2592227
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:638dc3ba02ae0d436831ec2e65f80cf3a0df85f54b4dd0e7ef6c930f2c9ab6a9",
                    "size": 23448833
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:320c005249b51b04b58caf58affd18499aee26124689ea955f510182122cfab7",
                    "size": 473569
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7d3113c0c18b1dea309c42932b22901908926108a8103cdab78170405c7a600b",
                    "size": 1013
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ac6ed7c321ff834e5966003c322a533aea0543816c96955876c3ab5646e3079f",
                    "size": 278
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:297b2ba3b641a48b1e90733cb70836ce9c195ca3803cf200e37417506cf0bb66",
                    "size": 678
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1f73b516ad766efd99f0fe8db17e4e328b2f6accabc971ecfa3d27b53c981a71",
                    "size": 461
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:abf0891c42000248476b222d3be10a7c4e5d822c1874e0ae5e32f13bea2d505e",
                    "size": 6663532
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0ebb49b97c23ff12b83aa2601531d558996a6bbb0c72aadc4720174d58422743",
                    "size": 467
                }
            ]
        },
        "latest-20240205": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:410d43528a7d4903eb26fd629298a3c2dd7482c133351585c931b7f55cdf5a61",
                "size": 6809
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:69fff380046369a47fbc74b0aa03f61fb243f73dc5795e3ecf69c6577ee84908",
                    "size": 63118399
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:043f40b98b892b40de8f366a4877d9d156b79e078c159e8ba29e516bd6d1c1f3",
                    "size": 2592229
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a5741c1c9c7a9fefc40c6616a877c25ae7e2d3b4e3f445bc7366d05c2eadaabf",
                    "size": 23448765
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2b7fbfed82651bb013b52b5f9e575eb057922dd32dbea33546ffd3791fd6f318",
                    "size": 473574
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:31345e8a4ebd6f75c8d04b1987bb10dda6e287bb914c12f9506f73ae22df8918",
                    "size": 1011
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:64c5ff84cb6737b8e4034ed8c0c032049484812c53fac7bd3922ac1887619c7b",
                    "size": 277
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8151e9be2f5daef339c61f7281525da71de532fd3a55c08d147c7de15b1c0e4b",
                    "size": 675
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c014d4420297605e816aee496643987e4894d4bccb07a796c70c571e2feb60d8",
                    "size": 461
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:39459ee280ebffd152e96a6390c1daf6b71bb9555902bee9d7c6ba3045393bc8",
                    "size": 6663313
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:00ce2536274788851cb716c6d7a32bbdd4d3a0ad6be776cded5aa0ac2d7c43c8",
                    "size": 467
                }
            ]
        },
        "latest-20240227": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:b941e87b44da4f4b13abafd4ae3536a0567d0afe18378f0c3f029d273b3698ac",
                "size": 6810
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:69fff380046369a47fbc74b0aa03f61fb243f73dc5795e3ecf69c6577ee84908",
                    "size": 63118399
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0c9cb203b87166e0d09b81a8d1f5b49ea5bb80d37799c1ddd6d0f58f482ba0ca",
                    "size": 2592228
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:cd15d660a3890fbc117644cc7e00384e54cf47a86db50fb85d3e3924a3b6e0f7",
                    "size": 23448836
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:69feda61e8a6a07d2f8173016c73ff91210e0484140825e75e597b45142b7ae1",
                    "size": 473570
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ce20a220ec40b0412743b54d0120c434710d00f3b54a54502308b76efc9dd983",
                    "size": 1012
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d47f351240c88d3748188f2ef0e0b48f6e891509bebda6f18393ad51c6305e70",
                    "size": 278
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fe1a2b8c0123677dd17cbf5897edd521c063917ffff70729a2e1211219421c57",
                    "size": 678
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f0bc84079738c7cb444a751732c831109078ebd828f39565c765bfc72f1e32d9",
                    "size": 462
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4b98df28b09b73ffc1489ca23ce312956e40b0f6e53b61ab37376b020839a18f",
                    "size": 6663446
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:700dbae8774302e97aa6313b485a35a294b03952a48c501b93011fa2b4c23dc3",
                    "size": 466
                }
            ]
        },
        "latest-20240304": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:e5773ee2f753084cef8c3c7aa6dcbe278ce6a1c3eb22ecfced0d24e1a45db48d",
                "size": 6802
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:69fff380046369a47fbc74b0aa03f61fb243f73dc5795e3ecf69c6577ee84908",
                    "size": 63118399
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1838771b8ec87483e105e112d8024f9e9029a53bae9d1ef0c34c061003181dfb",
                    "size": 2592227
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9086ea61d95c1ab147c8270e5a9b1830e96d367d41663c7617ebb4b06043f2fa",
                    "size": 23448747
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e665d30b7799b95a1fefa213155d46f59fff56b68586082bf191741035863ca9",
                    "size": 473573
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:eca08035356a02b31523d0089c92c641151221e1163f6f69259640069fc93325",
                    "size": 1011
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1dbbb8991fb8ec274be4b21cf0c12fa2b72fea515b37daf96cee76915bf6a3ad",
                    "size": 278
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0a012ba1f4d0af3a86a253d6ee08223c9446a2cf6250bdab21f839ebc7d16354",
                    "size": 677
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:30495c77303f15af04a882c71d278cea6699924428092ff409840f02e3455bec",
                    "size": 460
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:19d5b7e0594881fd77d57a551e8b15159c37ec8f3e435358d047c09482de8e4c",
                    "size": 6663577
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8d43526f563b39aab347db11764f60f26e634c67f19a0e91dfd8991703dbb56c",
                    "size": 467
                }
            ]
        },
        "latest-20240401": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:a18edbffa73f5cee66ce9aea2af5d8cdd928adb4e4ca7f8994138606a8b66262",
                "size": 6794
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:69fff380046369a47fbc74b0aa03f61fb243f73dc5795e3ecf69c6577ee84908",
                    "size": 63118399
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:326b20e912351ee1cd36eb4928f89de7420c89cff4fe26170cede56d5b53defb",
                    "size": 2592233
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f39d9f2f25dbd3d6ef3ad45ac705c80b09499c0886ce65119c20d6fc0873f021",
                    "size": 23448664
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:149aacaa82b179c640f96dd6fa65cb2df58f00055c9a94c3886a4906672573a7",
                    "size": 473577
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e7514cd29789812983b2a947f44fce3f7bcce347440875a08883bcd9b53e739f",
                    "size": 1012
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4b84039a432480f5ffe416931d3e349c4318c99332a368f259bac7fd40b1d2c5",
                    "size": 278
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:85dfe6b177a514d70942f90882fe77a64a24af14ef6f9f8be9f6e0ac8271c2d2",
                    "size": 679
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:75ac5a1c7aa9ff94b80b26d3cff3e1a67892548f05c0ca35405a77c861a15ab8",
                    "size": 462
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1f022462928363be1279b3231b7e96b3898c864a7b010a97fb5ebea90eb4c374",
                    "size": 6663541
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5360dc3ffd036ca843609057ed2be35a65bfd12645d1ce1916fbcbcfc08ec95b",
                    "size": 466
                }
            ]
        },
        "latest-20240408": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:8c67c47962a26c1315f6407b9d19fea6176f2c2ff0dec881bec3da457dd24c6d",
                "size": 6796
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:69fff380046369a47fbc74b0aa03f61fb243f73dc5795e3ecf69c6577ee84908",
                    "size": 63118399
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:689676ef4dfbe38a100ec0fd8bde8b49c700bedf04ca010d64d0e38e212b9404",
                    "size": 2592230
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:20de4a94e0f41f23dbdf295a23279b3082a2b94c36276a1517ff184d9dae8e62",
                    "size": 23448793
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:aba17861f514dbec43f4f00bc73113c6ead88d0daf01cd5af8c0468d2e6ee6d6",
                    "size": 473577
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:44561f9120b7b96b19381819ea39413a89fe135ccffbc8f4f6586ce34ddef54d",
                    "size": 1011
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6246de46784e0baf4fe4448538c5536535e1dd8374a16e2e22c5fb226e3f400d",
                    "size": 278
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:008ed895bd8ec822f5bbb391c610f13b97036c9b6a66d8ad9815fcd75fe5517e",
                    "size": 679
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:752a73f6143a147cf9dd80aa9e2296a8678cefd5393206c50f4df7a5303521d0",
                    "size": 460
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:45fed00e756eea66b1ee2613e64de2f08f080a866bb316f416b3633ce11cfd84",
                    "size": 6663859
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:afa13b6c3661e13d5afa23cc4e60ac0e08919c97ef0997520981b0eca115db70",
                    "size": 466
                }
            ]
        },
        "latest-20240429": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:095f26299c408e415d1325f671f001cea75f10a0f13b0414649b3e3fa087b420",
                "size": 6796
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:69fff380046369a47fbc74b0aa03f61fb243f73dc5795e3ecf69c6577ee84908",
                    "size": 63118399
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d67deff5c71a351663d4faf25c3b38f412142a31bca7a8d888c8821bfe5e18e9",
                    "size": 2592229
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:aef089e78d846edbce27f2669c47ec3fcef142e589e1867ef5908636b93f70a1",
                    "size": 23448814
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d2e3aa275cbb3a947522d3ea6580677ee9aa12d44c091352980066a1fb89bef8",
                    "size": 473573
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5f9e31015a5229413246198fe29fd337da9e65c8a8af3238c1f8824969f6e872",
                    "size": 1012
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3a3a2d6852cd0e1051942f064efb1ca5ed52209ef47cd0bf05a7e8752026738c",
                    "size": 278
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c3c8080aaea2aac7e2ff9499b2a0acda4cb7e625ee3cded157d534b54c647108",
                    "size": 678
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1e138be9b56c798718197323eafa69ddc869347ebd57ddc632dd70c020d34717",
                    "size": 462
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:aa51496e6b7060ef2c7a15d4cd416d98fd59f28987ff76a9eea9b0b0f309fc3b",
                    "size": 6663565
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9f1a7fa6c0cefb6a6b4fbf46bfc0b3000c99d8708a7e68e57e7b7993bdeb50ef",
                    "size": 466
                }
            ]
        },
        "latest-build": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:0afab04fbb9bfaffef114e8a13a8c063b224f909a56aa58f3ebe0fa082202804",
                "size": 7552
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:69fff380046369a47fbc74b0aa03f61fb243f73dc5795e3ecf69c6577ee84908",
                    "size": 63118399
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:82317edea666666d707ace0b03aad8572e29a838bb12b4c4dfd016b2ab4ce736",
                    "size": 2592233
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c2e5455188b6eb0cff89590382e7b0ecb02ea2b714d55bba2fa7dd06af5aec88",
                    "size": 23448711
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d715dbac72a798e8d0d0ffba83669baf0bbc4da2276a5a381ac22d652d5e13d9",
                    "size": 217029439
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7ff7cea49a20cad0aebae3fa3c701db7c3491385aea25f0e543cc59538fa5ee4",
                    "size": 473573
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d5a769b6122b0d526950c3579d87d5664c827ecd65688a38c75087c4f80db959",
                    "size": 1012
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:49c4a2084afc1da3b08c57198b9d7982cb4ad987197a29eb1c0b905a29331a4a",
                    "size": 277
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4baaeb452bcc05b92b082e0b84e390a65c6e08ed28ef13295f9b16ba167a9c10",
                    "size": 679
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8cba45c189962bae1d2ff247ddff62c95a79794bffefeb6283787d28c6b320ff",
                    "size": 462
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0c73585f5ae2e5501ea84cf210bb3e2ef339e5be2c28647477fc616783a259c7",
                    "size": 14184607
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e90fa7528fda4f4affd9f071788d390dbcdffe27db7b2ff37ffa26b1889f15c5",
                    "size": 467
                }
            ]
        },
        "latest-build-20230502": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 8893,
                "digest": "sha256:1b238db562a2c5701cbaac65230fd44f2106fddcc123690b8762f48cda4e341b"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 64445578,
                    "digest": "sha256:e733ff1786fde464ae5c487ee23562295e5ec377f322e1a0ddbeb9eb0b767770"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2592235,
                    "digest": "sha256:779fdfa64b09f2b03c7a5e10d4ef87952d83da7f023ce1d66e2147c526b1d341"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 24144690,
                    "digest": "sha256:ff421aaabac7bbc65ca876f9b39319846832cde3697714f4f73ca7a076fac22c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 215589874,
                    "digest": "sha256:e36768648393a27be5fe6a721c2afb057b1e8838d5e3a07a9f9dbade846815b4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 473573,
                    "digest": "sha256:9fafb3780d95867794d9e100e8ab440b040d90e78ae273e589c8d265b21e33ea"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1015,
                    "digest": "sha256:3cc2f7f66b172ff9ab224010454302af8afe1203027fca9d6e4c81cd58673ef2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 282,
                    "digest": "sha256:85c04457b3588b30710cc9db1f9f51f78892c774810e31f3f2b991ccfb8a7c3f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 682,
                    "digest": "sha256:ffe285366352754f210f0aeb22523ddbe5b4a0d9261e4f5613823c250f38feaf"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 462,
                    "digest": "sha256:716ba18af0495321712b68a2be349ce3691b12361fb757cc7908c01067b2a8d1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 13518334,
                    "digest": "sha256:bf46b1f779009bcc2ce2ac09ae6ce132223ac3d407f26ac38ebe705f9417a18b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 468,
                    "digest": "sha256:9ef880154357b7a8a95cb9c8731bf126b38a41c30b421558aad6514d013e8a4b"
                }
            ]
        },
        "latest-build-20230530": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 8894,
                "digest": "sha256:3ca4d38eb8209ccf27e8f5fe8b6f98d1dbe5164f1b3c1da387f497979ce01fe6"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 64674351,
                    "digest": "sha256:72e086bfec66fd3950d44dad0170ad1c4eeb3cb44d6bd0cd2d14d15f6493114e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2592234,
                    "digest": "sha256:94903bee787b61baef32c2f253cb7e456f92dd60dc2361d2686d84c676846461"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 22875081,
                    "digest": "sha256:aa85fc6b6d58818eaf697af244b4cc17ddc780e40a839d858be0cc5c693a00cb"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 216340171,
                    "digest": "sha256:a991a52277c7bace6c0879890673876841c4c050a173c857bdb387071cba7778"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 473583,
                    "digest": "sha256:1035d78600d4388198200c1b590c5d95cb1065e9a86e603218f4580b9b6e1a83"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1017,
                    "digest": "sha256:654b974ff1b637da4434ddb7569cf3bc9faa377a621a8ea1b6151fce0be781df"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 283,
                    "digest": "sha256:f3776d99ac385e31879f0d64b559602e3762689bea12d868f1580f2192b40eca"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 681,
                    "digest": "sha256:5485d34a7aee447b794ecd2a158e864348c3e2c3a750c6bf89f64d8498c94b59"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 462,
                    "digest": "sha256:ebbd9ff62a1a327e2cde3000019f75c8bf5b0dc705a264455238f98b7c9fedad"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 14080423,
                    "digest": "sha256:c3cab7b61245390e3dbbb8334d7d383730a2d4d88dc6e565596c2df0cf2cd8f5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 467,
                    "digest": "sha256:ebeba48468c54aee0abdeed9c780163574e31fd52b093552bec9abcae5120615"
                }
            ]
        },
        "latest-build-20230803": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 7907,
                "digest": "sha256:a5b47113871e56ab03cac44da9aa450c98310b7eb896193434c261bb2d9811f5"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 64705637,
                    "digest": "sha256:ea792534a213e62c62a1c4772dfcf53eaf82f7635dbc9f71bb0a60a91226d118"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2592239,
                    "digest": "sha256:f7a79e920ec27ac3117c18067a73bfa21db8e6dc263ed85a35120c2ef5f03b39"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 21178581,
                    "digest": "sha256:33ae549057fd4a09796b47bc886cf296e26c6c8c00a5e2a5b3b4a0fb10827be8"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 216063397,
                    "digest": "sha256:5ee6c95214792fcda2897d2dcf5872d1711b5439e46d203751057a92cceca0f7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 473583,
                    "digest": "sha256:3f0b989c720e9cd2a8cc02d523c498641a84a510db783cfe8337de5e8a857ca9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1017,
                    "digest": "sha256:b196d7fc162f2889e39c621cab1453c822801be5010c05560a3f01f3db06d43f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 283,
                    "digest": "sha256:92bfb55494eb27a740e8eee6b16708829efab976bbc16a469c82001f63394531"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 684,
                    "digest": "sha256:5062ebc19e9e0278ae498272864d903d0482d236215dfdd6f5fdf1d6b177e328"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 462,
                    "digest": "sha256:ae0f0e8e33c3eb7fd5a2e225b59e01af9d359afe1c37e2149ad597067a52e609"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 14100335,
                    "digest": "sha256:a69ec78f1ed826c30b11e73db0925b3112cc1415f10c43a247cba8525d80a606"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 467,
                    "digest": "sha256:d53d6256cdba7f429ee794999357632260ffa5fa3c5b5112c454207dd8ff0457"
                }
            ]
        },
        "latest-build-20230829": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 7567,
                "digest": "sha256:dc88f6892f07353aa388b370d2b5e7734080321708cc664f9b40f18b13b5d7e4"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 64705637,
                    "digest": "sha256:ea792534a213e62c62a1c4772dfcf53eaf82f7635dbc9f71bb0a60a91226d118"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2592234,
                    "digest": "sha256:8a23d1bc357a016559421550aa91e0204a8a255102a9224be83008caeaf996da"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 25809278,
                    "digest": "sha256:f940068d3ef039efcb0ca5f66ee60c0bd0cf4760713964a44d6374b497b2a9b5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 219418060,
                    "digest": "sha256:c610f078f4f1062005d75cf270c9bdf93e0f8b4d7409a59ca7e6356ddac1b812"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 473584,
                    "digest": "sha256:555b39c1f18e701ee0def238d9b5e46f4bc997a6eb810371ecfb574a26a6298e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1016,
                    "digest": "sha256:d341993c29914dc81520882c387d27e6bdad12e2b6b63159c74e5372086a1d1c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 282,
                    "digest": "sha256:6881bc51eb6e33607fe9bc713997860ecf2e32c2a7995079c041d41982cf7786"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 682,
                    "digest": "sha256:a99f2a9159cbaaf9367e1560cea638e9882d6a0aa14d0ff0dab11743c069ed28"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 462,
                    "digest": "sha256:688f6bffc055661b1e3e9134aa217d7451c23382a5e8dcbf5d81ad3cd0749da7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 14189459,
                    "digest": "sha256:76bb5053c24104eccbdafc299b21bd528ec0101d804ce47b8940fef4eeb2ef13"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 467,
                    "digest": "sha256:daee23fdfb680fb4d711b7c176cae0bfca1f61711a0f1431ff6c003890a3bf24"
                }
            ]
        },
        "latest-build-20230904": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 7568,
                "digest": "sha256:42c61385543f673e538d26b607ecf4fda270f7c27b29445fa48dc488a9529116"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 64705637,
                    "digest": "sha256:ea792534a213e62c62a1c4772dfcf53eaf82f7635dbc9f71bb0a60a91226d118"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2592232,
                    "digest": "sha256:57e197807ba0a519d1edb0779ce76a06124dbef05029811c4cd40f0584de6bac"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 28511392,
                    "digest": "sha256:471a3338d976e468e7f618dd22fbdde0e2373e61be9ba9fe8ba4b2e72baecef0"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 216664890,
                    "digest": "sha256:b83979765e4c0e1796530bd00bc646610b38f365257e80b2085b5af058f24a4c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 473570,
                    "digest": "sha256:81879a19910e1a496d0c411ff2df904ee88a6408bea71d1d609271432a4191b6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1013,
                    "digest": "sha256:9e800c1f80f8401c189157dd7d7e4ebcd8f2e0376a3d21f7191ddb79b8794971"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 281,
                    "digest": "sha256:e14e21ec6264d33a865243f3f009144460bb90639c04fc3afa6c46a08c027046"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 681,
                    "digest": "sha256:af714c407ccba3319ab928f255b9ca302ccde44746e669d35f56b6cfa5c7882a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 460,
                    "digest": "sha256:2e42947fed8288eb956d961238c22a61cd9ce2ca22b0e86c0190dcfeef46faec"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 14137010,
                    "digest": "sha256:d084bca945b24cbc3f8ca49dd0d627b18190b389b76b34395a4dda1eac3e20b1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 466,
                    "digest": "sha256:f3700d9834e608be309cb49c6da7dea0c60f514c43ed7807a3ca39868d819820"
                }
            ]
        },
        "latest-build-20230911": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:f807f758a7cf3ae3bf60aba3e0e042f6cbc0280ae385bb352372e308b11672e3",
                "size": 7572
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ea792534a213e62c62a1c4772dfcf53eaf82f7635dbc9f71bb0a60a91226d118",
                    "size": 64705637
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:57e197807ba0a519d1edb0779ce76a06124dbef05029811c4cd40f0584de6bac",
                    "size": 2592232
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:471a3338d976e468e7f618dd22fbdde0e2373e61be9ba9fe8ba4b2e72baecef0",
                    "size": 28511392
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b83979765e4c0e1796530bd00bc646610b38f365257e80b2085b5af058f24a4c",
                    "size": 216664890
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:81879a19910e1a496d0c411ff2df904ee88a6408bea71d1d609271432a4191b6",
                    "size": 473570
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9e800c1f80f8401c189157dd7d7e4ebcd8f2e0376a3d21f7191ddb79b8794971",
                    "size": 1013
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e14e21ec6264d33a865243f3f009144460bb90639c04fc3afa6c46a08c027046",
                    "size": 281
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:af714c407ccba3319ab928f255b9ca302ccde44746e669d35f56b6cfa5c7882a",
                    "size": 681
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2e42947fed8288eb956d961238c22a61cd9ce2ca22b0e86c0190dcfeef46faec",
                    "size": 460
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:37bbb76c3e7f1d53287e08af9c78e8d359e56693a701c185575e10a49af0fa38",
                    "size": 14137120
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:095f0b688064183399a88e61c553298f906d3bbe7d780c48b2226ab4c5a57e24",
                    "size": 467
                }
            ]
        },
        "latest-build-20231103": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:9ac9c365c82cc947d04266dc2e5c2212cf1ff9a4d18799921393b241830c2b9e",
                "size": 7571
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9d8d1f79d667e0d33c19dcab3e1da521941331416c217cc74601d8d9f6eb34ab",
                    "size": 64844849
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0770b89f72b418017bafd34c1d5552048c5eed91faa033af7187c646a6592cf9",
                    "size": 2592229
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:29d309c8b3459e8477ca5e914be65c3e4e83ef21695a692f92c7b52fc198f2eb",
                    "size": 44064224
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a28acef6ee54c426ff17c9667f83540ef5cb43fdc3e3d664c847608b783be445",
                    "size": 216980025
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4c184b301d67b652578996acdc883d362ba56ee1d7961845e82a445fc8a3dd3e",
                    "size": 473568
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e88619da9641c1a99919b4fe52c48a15e4aa52d56e55d000d918576825ce0b6f",
                    "size": 1011
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:65ec30ea4e6e929ba2a9cfc9ea06dbd4c70137c62ff0ce8c31ba525ad3be1884",
                    "size": 277
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0f7ff1ffd46bd5431d360e8fcb55926935c214fc26015f8905538a14da17b14b",
                    "size": 676
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f83df3c49a1eebf8dbcb319e217aac00df4952838803b3ff962c7dd7957de30b",
                    "size": 462
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:386cd3b0021f03600390285e79f2b4a2b1c4af4763884dd4b8981eab2055c25e",
                    "size": 14174536
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:212df4b7c54e98bfb0cc7458ba7a23e332e7b3a7bd36601a2e2fdccdebe633ff",
                    "size": 466
                }
            ]
        },
        "latest-build-20231106": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:674f5ced1279c67762c2672df1fef041927974f9ea714bbcc4ead9ff7d765244",
                "size": 7564
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9d8d1f79d667e0d33c19dcab3e1da521941331416c217cc74601d8d9f6eb34ab",
                    "size": 64844849
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:17ba3eac7c1f9ce9e04f05070a25561c9868bdcef663e68aa5ac8bd96c25b520",
                    "size": 2592233
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:285657690fbde02ba48611d3dd000f47b7c396651e283097f742181b60efba35",
                    "size": 44064946
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4e95e27869fa54cdc0812a839fe46f625b70ba99ce93d7f659480e6a4e1592d6",
                    "size": 216991202
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:dd992c92a0f592cad50a4aea59a1e3abbfdfc50f36449abe8be63813ecdbd3cb",
                    "size": 473574
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8d87a781fcef58ffe8d62d3cf860c226fb6bd64f59da4ded4c94850b90f1c4a6",
                    "size": 1012
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f6cbc2eb8a9998e5abebb20f735e54fa5fe6fe98f4ebe7936eb3ba03c3f0ded0",
                    "size": 279
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8783360b72f39fa722e56e53f2e8425e426bd937db8f07668131a09545834c4d",
                    "size": 677
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:dba5c227294800c799660501956b8746867066f6c53dda172235fc9aedc674c4",
                    "size": 462
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:12b36c7b6c43df93771b317fffffdf0a923fc7a26a7aa80a5aa2ca96f56cc59f",
                    "size": 14177088
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:29d7782bba2bc68d998441f8300b41809f7adcae51d74d1c35f28ccf45458ec6",
                    "size": 466
                }
            ]
        },
        "latest-build-20231127": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:bc3367ef47d36cb174680b6b9430bc15bd282c2c61242444950e720615630035",
                "size": 7568
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:69fff380046369a47fbc74b0aa03f61fb243f73dc5795e3ecf69c6577ee84908",
                    "size": 63118399
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6641d4e23883de336ed449229e82843e5c72e3f1c81c8dd83135346960efdc5a",
                    "size": 2592224
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1b1e517fb0275fc4621249537f0da6236e1cd69bf862d820c876333462493f3f",
                    "size": 22318515
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:165564d821c1037960b170fea0079cf103fda6666513335e98b6968d8c3b8949",
                    "size": 217051070
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:01e9e8459499b3bc80b1b59e093b711165e883a6b0b34cecc147192d6647a93e",
                    "size": 473574
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:74619d00050fd0824b99ae241a8517f158d42b3343465fa6a78cafb4d6e70522",
                    "size": 1012
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:49b562c66c266d31dfe6f77e08fbf606c721fe74fe3756a0fc70572d0a9e2ae7",
                    "size": 277
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:eecd0d10f4b58b52bb36ae388d9d633ae650558ff64874899f7de0e019094c26",
                    "size": 677
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0f119eeaa7b1d1ee4109e4bb3f17232a250013fca828e92e654cb5ddb16da097",
                    "size": 462
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6896fa3376d4e7ebf6792c340b2222a99f863810da8b5f9f5b77435473e46299",
                    "size": 14197510
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:14b469b70cfeb9230c6a5c19bca42e320188b66d4c01cf283c08f62eef8efe9e",
                    "size": 468
                }
            ]
        },
        "latest-build-20231204": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:67c8148a050e37cc747873b01bfed7e3032d02330dcf0ec78ebb2ac6554e82c2",
                "size": 7571
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:69fff380046369a47fbc74b0aa03f61fb243f73dc5795e3ecf69c6577ee84908",
                    "size": 63118399
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f0ca99f7b063cce65d52273a4f2101d346418bdd8a7352f4af9785e2ba52c05e",
                    "size": 2592224
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d3ef5f06a980545479bdc090e802b2a72a2c93d49fecdc47c50cc8357a279eb5",
                    "size": 23448791
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0e6eee1f98642a0b9ea66873f6f6bbc955484317743fa4c8d53660f136d5bb83",
                    "size": 217028879
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3e2ff8beebba14a582e830769648b12ea0b2f4a228d63c45d1aa4f46afaf0066",
                    "size": 473573
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4e458a328d96b94763f7d9f7f65c86f99b34e9b495422a2c95974a479df994b4",
                    "size": 1013
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2959fa0cc7c12e351b42c74a818d4f9aa5cb261407867e24a6ebc87062ec7a0e",
                    "size": 278
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:673c09069e4697b12af04dc085dd22f9b86c51024bbdf19a4f969cc74a67f80d",
                    "size": 679
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:19ce9cb7ae33b72478454483374a2eda66bc4f88d8f7b9fab48c46f5622433be",
                    "size": 461
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:96719765ae6dd8087766abf9b08053d13754e67149272d0eaef35be8f3fd7926",
                    "size": 14184561
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:36c82738ca59864f47fc88ccd71888c3a59a8aad2088d3082b2ef4dc78ddb518",
                    "size": 466
                }
            ]
        },
        "latest-build-20240205": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:7d349082f663196103668950e382a6188b5a15c7d9a6ce6e617058138853ac0d",
                "size": 7569
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:69fff380046369a47fbc74b0aa03f61fb243f73dc5795e3ecf69c6577ee84908",
                    "size": 63118399
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:af78cc0520f170b906a82f421a37356d2c269781502c5f7d2c396abdfa55d6a9",
                    "size": 2592222
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7edbd9813867cb3dddc51da4d40538bd9695d5b483b8ed59539b24b19c133b4e",
                    "size": 23448737
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:44dc7c873245302e133bf36d8149b48643b19afe9a7540a40abe1eae736eaed8",
                    "size": 217029550
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4dc8c6e0f74fad71d0a2e17368a0c25cccb51945f997463748b8def1421f4f81",
                    "size": 473575
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4bc00a878dab5ef147d98e03eb2e1a5a19985e5e5fdcd18ff8defac4938695b5",
                    "size": 1012
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fb87ee75d18626f6429938563bfa6b76bda1ac557019c8354f99cc04c16fb1d0",
                    "size": 278
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e36e3c571cd31032afd2e63729a6a6885268fbecb1a32d4ab477e88b760c6925",
                    "size": 677
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:75fc38abf14743c0cb98e30147fdaf527dc87c34a8cd91db118b48425c25a493",
                    "size": 461
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:59338c7a88cd557189e77fd914146dbc70667084f77a28ae97d92a2f451ec287",
                    "size": 14184438
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a642b532fe22b19c5126bf3102f6d7f3b1063839365ccb0ca4dc109018d06854",
                    "size": 466
                }
            ]
        },
        "latest-build-20240227": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:9cb05eda97a4183166402d3caba4ec6f522284997fbb9bd8feb2e180caf9f32d",
                "size": 7571
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:69fff380046369a47fbc74b0aa03f61fb243f73dc5795e3ecf69c6577ee84908",
                    "size": 63118399
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:65764d35c6ba7bc01cd8c1c7c80dedd0fba41e8aed4fe20f32b8104e40811b27",
                    "size": 2592230
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ccb26de59532c7a3ca4e330f6259f0a22d5502c63fce64953cfb835da2a89232",
                    "size": 23448765
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:dbffb8cd0d199db9da89c0a8f6be633d403ae9577895ef76ed8559e0e6a2fce6",
                    "size": 217030397
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f2cdbf2b50a12d0c904c51a1aa6a78d769e31ab23e681213a8dcd625845a43fa",
                    "size": 473575
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:caf29b48f9a19f9f082026316d26fb42e73b1f7a2585ff1f86457c794c8ca68d",
                    "size": 1012
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:821dddb4fbe51867593b530bacd209ea5cec4104a56beb6362389970d19aaa68",
                    "size": 278
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a0fa218cb0068ba037fef0d258fb86dfbfed2c4590d7b39e86733b5c8b69f61b",
                    "size": 679
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9d68feee9a64aaf2316e4f6f65cdc6fbf9e80169d4bf9cd0152c507a525b3155",
                    "size": 460
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:43621ec178694a694bc346c24853a1e34462fba94fcf0f69409ac1846dfe9cc8",
                    "size": 14184944
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9cd033b9f1f0cbfdccb6b6415ae6c383a3dac402e9e6d88d7887720e6d6b1695",
                    "size": 465
                }
            ]
        },
        "latest-build-20240304": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:68a2cd063249963f98e465a25fc0cc1ed14beedb772a4e503d3033a3b5fd99b0",
                "size": 7571
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:69fff380046369a47fbc74b0aa03f61fb243f73dc5795e3ecf69c6577ee84908",
                    "size": 63118399
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:365c152eab29768a6002cd30191cfe30aa5a9c7670afb3dd05e5568d60598b53",
                    "size": 2592229
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9cfac25b66436aaad9254043374a8a0bce94c1fcc73328f0009e4c633a489dab",
                    "size": 23448738
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:eec58c8baedb56f03697759c56cc8b52846aa6b359079d478ffe547bd11683f2",
                    "size": 217029920
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d5ea14a5b029f6e9168ba600f7829994ee94710831ae531cc8575103cb5f9076",
                    "size": 473576
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7b5e5aded2a12ddea2c899e597f6b276bdbb070022f582eb5ffef5eab6706f4c",
                    "size": 1012
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2fdfe10b79cf925c4a4f205beee5164056995aa8d5d10cae49aeae14093d612d",
                    "size": 278
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:563ad2bf80f0e61e8048e26e2680eceb622c9b84a0e9b242dc26a7272ef9ee62",
                    "size": 677
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:87d42fc86fb1bef824e1ec397f2adeb648ebde6cb39d75fa5d79da952fead6a4",
                    "size": 461
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:cea06176e2b8947b6e1d07e4dd4689c9ea39eeee409eb8a40bfbcdfc6a93e01e",
                    "size": 14184994
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0286b594c700d8350d55410891c24b476d417a813c65c34611a77804cde81125",
                    "size": 467
                }
            ]
        },
        "latest-build-20240401": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:a5b2a5d11aa97c3838e9d86da414021a15758018bd22468d4507c80ebb730f17",
                "size": 7550
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:69fff380046369a47fbc74b0aa03f61fb243f73dc5795e3ecf69c6577ee84908",
                    "size": 63118399
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d3a4176e53d7e5697395953f42ef76b08d9fef8fe5a662a442cd4f13740c7a1d",
                    "size": 2592234
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b1d05a709ad59f905b2bb738079267053a09a0f4f535e32192bcd83e0dce163c",
                    "size": 23448641
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3f3f5fce4a1b94b586b0523b225e6b5436e9dd40567f898aaaffd4c2302a2399",
                    "size": 217029391
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:de3c36bd181e84497d428d49b10abc3694cd9a0c75ec31064623d54cb4f8c211",
                    "size": 473577
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:565296760a52acc955f0523e8e8213020ff97bec4df095452a9633f053cb710d",
                    "size": 1013
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bf3fbff6d013e83413ee8ed775faa0f5e3350e9b987d24b28cb8715ea67d31ed",
                    "size": 278
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4363ad41c733c6b3e9c7a4610329a637d3d876504b93320bb9b4612bba294335",
                    "size": 678
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:38693fb89d5d2d6143564a7b4bd2d1c7da21077550cbe4d5e8a7ec5096625ff1",
                    "size": 462
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e0c2317dce13f5c27b06c146aefd4e35d134ef13e22244d043d097a01799bd83",
                    "size": 14184540
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7a3f18913787da49f9c675ce2d79ac9909314af6711d9c1c4651cf5590d124ce",
                    "size": 464
                }
            ]
        },
        "latest-build-20240408": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:52356e3f70c7853deecbe68ee7624028f85a081f25f675c8afcf6bb0ed39dee9",
                "size": 7556
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:69fff380046369a47fbc74b0aa03f61fb243f73dc5795e3ecf69c6577ee84908",
                    "size": 63118399
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7e54c1365f15bf88b17ba38f79d2a428ac06b2fadf6f6c91f27bb25c858dbc60",
                    "size": 2592231
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:017b908d94c1c349a53970523ee7a139bef37f34ad362e03d6bec2d726504a0d",
                    "size": 23448703
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1b5c50d01e785c4728ab89718fa8aaa45a81c0af2408ac0cc79f3ee163c253bd",
                    "size": 217028541
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d83e2fae00f6ab84a73baecccee1b9773d59ae4b450a12e360a5effca4944ac4",
                    "size": 473576
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fadda5faf2fcc02b62f25d0f9c548bc0d5c1abdeda6da2328fc79ddb5b8b91ca",
                    "size": 1011
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e1e9b66fa7cafdd2423279eb1c13f4052734fd9472c334ca49bfa60216bfccc8",
                    "size": 279
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4cbd57e7f4360c9cbeecd7408e549686853d4c97c491b59f4d07d320805ce98a",
                    "size": 679
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a4759f7eafc183e7e416b2fb6e564ecd7cf14425e5e7ccad33b50b3ea539f38e",
                    "size": 461
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0afad639f212391e415a6d539d9a549d806a221b1f680869f18652a572af7ade",
                    "size": 14185062
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:79f175372083d1ccbd5fa122d59afc0195bc3a1187e64f3cc08659b3b4d01c8d",
                    "size": 467
                }
            ]
        },
        "latest-build-20240429": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:0afab04fbb9bfaffef114e8a13a8c063b224f909a56aa58f3ebe0fa082202804",
                "size": 7552
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:69fff380046369a47fbc74b0aa03f61fb243f73dc5795e3ecf69c6577ee84908",
                    "size": 63118399
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:82317edea666666d707ace0b03aad8572e29a838bb12b4c4dfd016b2ab4ce736",
                    "size": 2592233
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c2e5455188b6eb0cff89590382e7b0ecb02ea2b714d55bba2fa7dd06af5aec88",
                    "size": 23448711
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d715dbac72a798e8d0d0ffba83669baf0bbc4da2276a5a381ac22d652d5e13d9",
                    "size": 217029439
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7ff7cea49a20cad0aebae3fa3c701db7c3491385aea25f0e543cc59538fa5ee4",
                    "size": 473573
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d5a769b6122b0d526950c3579d87d5664c827ecd65688a38c75087c4f80db959",
                    "size": 1012
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:49c4a2084afc1da3b08c57198b9d7982cb4ad987197a29eb1c0b905a29331a4a",
                    "size": 277
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4baaeb452bcc05b92b082e0b84e390a65c6e08ed28ef13295f9b16ba167a9c10",
                    "size": 679
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8cba45c189962bae1d2ff247ddff62c95a79794bffefeb6283787d28c6b320ff",
                    "size": 462
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0c73585f5ae2e5501ea84cf210bb3e2ef339e5be2c28647477fc616783a259c7",
                    "size": 14184607
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e90fa7528fda4f4affd9f071788d390dbcdffe27db7b2ff37ffa26b1889f15c5",
                    "size": 467
                }
            ]
        },
        "latest-run": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:095f26299c408e415d1325f671f001cea75f10a0f13b0414649b3e3fa087b420",
                "size": 6796
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:69fff380046369a47fbc74b0aa03f61fb243f73dc5795e3ecf69c6577ee84908",
                    "size": 63118399
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d67deff5c71a351663d4faf25c3b38f412142a31bca7a8d888c8821bfe5e18e9",
                    "size": 2592229
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:aef089e78d846edbce27f2669c47ec3fcef142e589e1867ef5908636b93f70a1",
                    "size": 23448814
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d2e3aa275cbb3a947522d3ea6580677ee9aa12d44c091352980066a1fb89bef8",
                    "size": 473573
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5f9e31015a5229413246198fe29fd337da9e65c8a8af3238c1f8824969f6e872",
                    "size": 1012
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3a3a2d6852cd0e1051942f064efb1ca5ed52209ef47cd0bf05a7e8752026738c",
                    "size": 278
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c3c8080aaea2aac7e2ff9499b2a0acda4cb7e625ee3cded157d534b54c647108",
                    "size": 678
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1e138be9b56c798718197323eafa69ddc869347ebd57ddc632dd70c020d34717",
                    "size": 462
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:aa51496e6b7060ef2c7a15d4cd416d98fd59f28987ff76a9eea9b0b0f309fc3b",
                    "size": 6663565
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9f1a7fa6c0cefb6a6b4fbf46bfc0b3000c99d8708a7e68e57e7b7993bdeb50ef",
                    "size": 466
                }
            ]
        },
        "latest-run-20230502": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 8184,
                "digest": "sha256:3dfcd66b3f0adbe0ff584c043ddc506ac93a14e251d7ec2e85f59ba041c822ab"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 64445578,
                    "digest": "sha256:e733ff1786fde464ae5c487ee23562295e5ec377f322e1a0ddbeb9eb0b767770"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2592235,
                    "digest": "sha256:779fdfa64b09f2b03c7a5e10d4ef87952d83da7f023ce1d66e2147c526b1d341"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 24144690,
                    "digest": "sha256:ff421aaabac7bbc65ca876f9b39319846832cde3697714f4f73ca7a076fac22c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 473576,
                    "digest": "sha256:ec59658df998edad9693fc215cde79d353e70dbfbe1341db33220c67d9c7989a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1015,
                    "digest": "sha256:36079b38428c307f2bf975c0469bc873376a43624adf1bb4bbd24688c3491d13"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 282,
                    "digest": "sha256:8461a9fa9e696794b86076991c15fefb22bb5f7cb00a0794ca50435f331878dd"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 681,
                    "digest": "sha256:1bf0146f9f3eb6c0d7f45063920fb8a873c6791e0de411d72db985228f24aa67"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 462,
                    "digest": "sha256:88733766d34217ae72bffd4818ea0519e3e6a604d5849f9fae03116a87121164"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 6436992,
                    "digest": "sha256:6e77c5f6fa75e934d9cdfa8dec8a896649b498a7c18a0f54f1ec90554d16152d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 469,
                    "digest": "sha256:df8ec00c118ce5f7f484d44b178ba9e3f46651c48f6c1cd04f8a77152077a7f0"
                }
            ]
        },
        "latest-run-20230530": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 8182,
                "digest": "sha256:6b8638befd4f8f0dae701eba5c11fb84f97ba29f018ccacec987f18166ae9ea5"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 64674351,
                    "digest": "sha256:72e086bfec66fd3950d44dad0170ad1c4eeb3cb44d6bd0cd2d14d15f6493114e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2592234,
                    "digest": "sha256:94903bee787b61baef32c2f253cb7e456f92dd60dc2361d2686d84c676846461"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 22875081,
                    "digest": "sha256:aa85fc6b6d58818eaf697af244b4cc17ddc780e40a839d858be0cc5c693a00cb"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 473577,
                    "digest": "sha256:41436fae5c77e853c134ddc6bbf6b4a74dd92ca423b9dbd096740ba87de8b735"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1016,
                    "digest": "sha256:4db02dd47c7ef88ecb112623f1b5753ba3ad6f91f2b0d5c0252d8cd50d82b2b2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 282,
                    "digest": "sha256:566e5b2cc67991dc19d9e141b3515ec02430c23387f48a93f3c197b9a0103816"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 681,
                    "digest": "sha256:0d571eac575438553a1f49cd92bdf9f3b653b903f1c47d12c0bad9de4e0914e7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 461,
                    "digest": "sha256:0e39fc7b103b9fa548bdc50aa87c397286bfc8f6408cf52aee07ab4fcf68c349"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 6612050,
                    "digest": "sha256:8cd975824feb2126495edb380988b4ede9854d24603e97888bc919aadfe56874"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 467,
                    "digest": "sha256:e03c34c49195b4e5405a7d360ff8b2eb6770456b8f2a88007512cf30473e30ce"
                }
            ]
        },
        "latest-run-20230803": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 7144,
                "digest": "sha256:8cbaf4f856e00b36d71f9d0bb8cf7d29d95fcfa16ca63e0e37fa89a4f79de01c"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 64705637,
                    "digest": "sha256:ea792534a213e62c62a1c4772dfcf53eaf82f7635dbc9f71bb0a60a91226d118"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2592239,
                    "digest": "sha256:f7a79e920ec27ac3117c18067a73bfa21db8e6dc263ed85a35120c2ef5f03b39"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 21178581,
                    "digest": "sha256:33ae549057fd4a09796b47bc886cf296e26c6c8c00a5e2a5b3b4a0fb10827be8"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 473583,
                    "digest": "sha256:d64dd38c14dedf1503a4af00054c39c3f612029657db30d0fc8dca727b61b0bc"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1017,
                    "digest": "sha256:ee1494250a35dd274c3982b4c5f5c483d78c70833020b443dbde6d77d273aeb2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 283,
                    "digest": "sha256:064b89e53b25bf2e4b376f278dae78d03c75920d9c29900d41513f91449fe67e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 683,
                    "digest": "sha256:8964cfc20919de072fdf02c430f7b849108b52ed644236f48193ec4ee50a209a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 462,
                    "digest": "sha256:5501f5fbe7ed46c469c697f3b47fae5e0c81160f7293cbd3dfc3c287f01cc109"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 6634626,
                    "digest": "sha256:d2955ac883b628be8ac0bc54626feff7546067e1883cd683d933071741b03b23"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 467,
                    "digest": "sha256:461922f1dececc29f78941696fb1874a39a3e5dea211ac1f4aff557223d92527"
                }
            ]
        },
        "latest-run-20230829": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 6807,
                "digest": "sha256:ec1a101b6a59750bc679fabc283524acb4213d9542c0b39982b8c23a8c241271"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 64705637,
                    "digest": "sha256:ea792534a213e62c62a1c4772dfcf53eaf82f7635dbc9f71bb0a60a91226d118"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2592234,
                    "digest": "sha256:8a23d1bc357a016559421550aa91e0204a8a255102a9224be83008caeaf996da"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 25809278,
                    "digest": "sha256:f940068d3ef039efcb0ca5f66ee60c0bd0cf4760713964a44d6374b497b2a9b5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 473573,
                    "digest": "sha256:8930b41cb100d0197249ded6ea0bcdb52943edd72fdfb23c1e37e2465cff32a9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1016,
                    "digest": "sha256:a577c46bc85a1eca7057d6940255eb92584d7207344f27d5873361fa86b41658"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 282,
                    "digest": "sha256:586c7444d44703ed4dc6565512cc8cca2f0e4835e70d5aca6ad327406a7e7a64"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 682,
                    "digest": "sha256:a32ef540d1e852b24d14374a1bc3285034d6ff96bb276015e19412e9d51d29e5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 462,
                    "digest": "sha256:1c9a15d990e00c06610ca1b360a6a38d60b1a995503f841ba62dc00e53c6d5e6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 6708121,
                    "digest": "sha256:7ef80ac2a48ca9dda8723f9fa1c817bf23325f3a6bc60f7636003516305641ba"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 467,
                    "digest": "sha256:77b3b9fa0f66df333dd6dd7489c6152eab62a47d9581ca0ac3035c1a6b6d5467"
                }
            ]
        },
        "latest-run-20230904": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 6808,
                "digest": "sha256:35bb38fc03a9ba225dd9c28e08d8cee0247c6c4f68a2570008e624988af394b6"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 64705637,
                    "digest": "sha256:ea792534a213e62c62a1c4772dfcf53eaf82f7635dbc9f71bb0a60a91226d118"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2592232,
                    "digest": "sha256:57e197807ba0a519d1edb0779ce76a06124dbef05029811c4cd40f0584de6bac"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 28511392,
                    "digest": "sha256:471a3338d976e468e7f618dd22fbdde0e2373e61be9ba9fe8ba4b2e72baecef0"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 473571,
                    "digest": "sha256:43acb285765a1566a09368e26f802363c73729a1ae513cb100c40d7d5f2c9fd4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1015,
                    "digest": "sha256:1f7a541e39d90075887bbdb2cc816aabc30dbffcf6b53f81374d58c099208d3a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 281,
                    "digest": "sha256:f64cf4e6488b8740244403e8dfeecf1fd1eca6cee27302b8246883ac41a1084b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 681,
                    "digest": "sha256:455b8b17e8e1b86358879c1c85bb769d1d32ef5a39654a9da1ca47fe376a9941"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 461,
                    "digest": "sha256:79974a50afa759f12e48dd7814fb83e5849ad292c42e28177d22c79b13419d23"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 6737268,
                    "digest": "sha256:6f68f0458988d9ea2d4539b34a4d8e1047da8e2e192bcd222891bf5e14aca6d7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 467,
                    "digest": "sha256:bbba5de64a9134d844b86ed83b6c37ed1a56e010b6a804df42763dbc6cf60971"
                }
            ]
        },
        "latest-run-20230911": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:59ab8344b94aeea30a5b00a2a6cd24551b09fac270fb87ebd88bc0e6a3156915",
                "size": 6812
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ea792534a213e62c62a1c4772dfcf53eaf82f7635dbc9f71bb0a60a91226d118",
                    "size": 64705637
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:57e197807ba0a519d1edb0779ce76a06124dbef05029811c4cd40f0584de6bac",
                    "size": 2592232
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:471a3338d976e468e7f618dd22fbdde0e2373e61be9ba9fe8ba4b2e72baecef0",
                    "size": 28511392
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:43acb285765a1566a09368e26f802363c73729a1ae513cb100c40d7d5f2c9fd4",
                    "size": 473571
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1f7a541e39d90075887bbdb2cc816aabc30dbffcf6b53f81374d58c099208d3a",
                    "size": 1015
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f64cf4e6488b8740244403e8dfeecf1fd1eca6cee27302b8246883ac41a1084b",
                    "size": 281
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:455b8b17e8e1b86358879c1c85bb769d1d32ef5a39654a9da1ca47fe376a9941",
                    "size": 681
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:79974a50afa759f12e48dd7814fb83e5849ad292c42e28177d22c79b13419d23",
                    "size": 461
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d61a53ba1310310feb2b3ba03d0504c23710dd3c4eff88c132d71096c536197c",
                    "size": 6737668
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:69ee5385f36a99dcdf9dd724d6bf6b826815c1aa9486c1f5d263deca5505eb8e",
                    "size": 467
                }
            ]
        },
        "latest-run-20231103": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:09e41a197679e7713c47271ce2f8b68f9c08605f303bfda9d231d8750df6b4ba",
                "size": 6807
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9d8d1f79d667e0d33c19dcab3e1da521941331416c217cc74601d8d9f6eb34ab",
                    "size": 64844849
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:70f1454c069b387e5af8b9d91b5470e7c4785b9a3290f7113ad42e664f16f534",
                    "size": 2592223
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d76a558193cb7b66b0700ad5870a13652edf878e9142a0d74f9a71180fa098d3",
                    "size": 44064717
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6f396e4d4a3dac8410ab225cbad45fb13592e944fdf1ab97a953ead54f0fb00d",
                    "size": 473572
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:12c35de3a810ce75e005471dd252f007b4ee65305ff26ddc28b8dfa744f9b86f",
                    "size": 1012
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:476049291d6250253e43958e82448d6c862427743c148732b2a832f70c372a56",
                    "size": 278
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8e0ba4f7e5a572e065f592740afcf5c1f8313b9813191abe3a2b5fd75ccdd00e",
                    "size": 677
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d6b9fe800ceade297a03f9af34ae2921bb7a789025c1dcfcb5b389739c04d457",
                    "size": 462
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3d8e284ba8dee1296161cd9459c3e8f98ba86c486f85b5015f73ddb509914577",
                    "size": 6852289
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6f0caa6e8a5f8f9cd7c1c1f67d372b2055929aeca735e0d50630bf0f50cea363",
                    "size": 466
                }
            ]
        },
        "latest-run-20231106": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:76b45d8037b32b3cacdb9c27e6d6a2e4cd144108852ccf76d8f3667562de8075",
                "size": 6809
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9d8d1f79d667e0d33c19dcab3e1da521941331416c217cc74601d8d9f6eb34ab",
                    "size": 64844849
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:03e4b9d169336e58479c799e52d209343f4fd63f113b03b9cc3778d78eefc36f",
                    "size": 2592228
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9ebd0b84befc3bef3f3a1a315ae5e7ec38574027144908174718797f0a00360c",
                    "size": 44065020
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4d11386853aeab8cd5baa963e4328bffa12cd29a1ce5240ad9607cc9c3e875fa",
                    "size": 473574
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7331c59cbf560592c7caacaec5a5b0e7c1412d0ee6c53af4a6afd0b75120350c",
                    "size": 1012
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:01cc8bad0eb150412ebd78b17a1ec8ddb84bf7bfda9878c71e39cec3d021ee7a",
                    "size": 278
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:204195aa087948caf7654cea0a3a5700bce5edb30a573214210d4567dfefe883",
                    "size": 677
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c45bba7cbbc35ad8b4c7416a9df0446d0594c82b7244266706a7a42cfd423cda",
                    "size": 462
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:cacf54655129ce716db200628b3703abbc8871043195d1ec3efa480a889ba61a",
                    "size": 6851883
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c85ba2e57aab76ff38e9e7853c7b26d9c582fa1c1c03ff2aed0531e929b8f18c",
                    "size": 467
                }
            ]
        },
        "latest-run-20231127": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:8709ed34a283091e502fb5ce449e9839c04a21c21e451cb804b38bc451669c4c",
                "size": 6811
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:69fff380046369a47fbc74b0aa03f61fb243f73dc5795e3ecf69c6577ee84908",
                    "size": 63118399
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0bb5eada9fb8c922ecc9f8444aaa0ee8a62fcac70ee74abc4710b2495f0bfd08",
                    "size": 2592228
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3ab8b31915862687dcc837ff941a87caf4c07e9f37527c8ff82b84c62d432e58",
                    "size": 22318509
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:491f82e7458e6e17bae05aa839d6b366e87513662f4340abcac0a9696a7480c0",
                    "size": 473573
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:744368413ff21e9a4e526bd1640cb20d58d0ac97385af7363e6ccfaa0a24b050",
                    "size": 1010
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d600c7ca91fb3e6cda2851db48eb14cc780b01a3eb28cb3b5cc1c157b30e5ce8",
                    "size": 278
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b803570392d88303afd7a2018b05dbf63c3295a143048a2729f5436e4f82f62e",
                    "size": 676
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c82c00cdd78937eb219600038c3a9ba8501aa8ae7b114cd8e577f8fe1107a36c",
                    "size": 462
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:cd39f3ef999bb9b47e7eebc7e98f1ccac30437131a41052a7abd6cc4977c3562",
                    "size": 6664271
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b4de3682dc6fbe5f51a6dd4d1b6250729df9ba860e419f7c6dc296cfe495d071",
                    "size": 467
                }
            ]
        },
        "latest-run-20231204": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:fb2863f09ce135a7a239e4455519a12c79e762cfd7be9a02c78805dc4e6c84bc",
                "size": 6807
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:69fff380046369a47fbc74b0aa03f61fb243f73dc5795e3ecf69c6577ee84908",
                    "size": 63118399
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d33718b133be58c12c588d020799740b8f5d0e1659f4305bd3a42e0be1ca53e9",
                    "size": 2592227
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:638dc3ba02ae0d436831ec2e65f80cf3a0df85f54b4dd0e7ef6c930f2c9ab6a9",
                    "size": 23448833
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:320c005249b51b04b58caf58affd18499aee26124689ea955f510182122cfab7",
                    "size": 473569
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7d3113c0c18b1dea309c42932b22901908926108a8103cdab78170405c7a600b",
                    "size": 1013
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ac6ed7c321ff834e5966003c322a533aea0543816c96955876c3ab5646e3079f",
                    "size": 278
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:297b2ba3b641a48b1e90733cb70836ce9c195ca3803cf200e37417506cf0bb66",
                    "size": 678
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1f73b516ad766efd99f0fe8db17e4e328b2f6accabc971ecfa3d27b53c981a71",
                    "size": 461
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:abf0891c42000248476b222d3be10a7c4e5d822c1874e0ae5e32f13bea2d505e",
                    "size": 6663532
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0ebb49b97c23ff12b83aa2601531d558996a6bbb0c72aadc4720174d58422743",
                    "size": 467
                }
            ]
        },
        "latest-run-20240205": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:410d43528a7d4903eb26fd629298a3c2dd7482c133351585c931b7f55cdf5a61",
                "size": 6809
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:69fff380046369a47fbc74b0aa03f61fb243f73dc5795e3ecf69c6577ee84908",
                    "size": 63118399
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:043f40b98b892b40de8f366a4877d9d156b79e078c159e8ba29e516bd6d1c1f3",
                    "size": 2592229
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a5741c1c9c7a9fefc40c6616a877c25ae7e2d3b4e3f445bc7366d05c2eadaabf",
                    "size": 23448765
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2b7fbfed82651bb013b52b5f9e575eb057922dd32dbea33546ffd3791fd6f318",
                    "size": 473574
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:31345e8a4ebd6f75c8d04b1987bb10dda6e287bb914c12f9506f73ae22df8918",
                    "size": 1011
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:64c5ff84cb6737b8e4034ed8c0c032049484812c53fac7bd3922ac1887619c7b",
                    "size": 277
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8151e9be2f5daef339c61f7281525da71de532fd3a55c08d147c7de15b1c0e4b",
                    "size": 675
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c014d4420297605e816aee496643987e4894d4bccb07a796c70c571e2feb60d8",
                    "size": 461
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:39459ee280ebffd152e96a6390c1daf6b71bb9555902bee9d7c6ba3045393bc8",
                    "size": 6663313
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:00ce2536274788851cb716c6d7a32bbdd4d3a0ad6be776cded5aa0ac2d7c43c8",
                    "size": 467
                }
            ]
        },
        "latest-run-20240227": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:b941e87b44da4f4b13abafd4ae3536a0567d0afe18378f0c3f029d273b3698ac",
                "size": 6810
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:69fff380046369a47fbc74b0aa03f61fb243f73dc5795e3ecf69c6577ee84908",
                    "size": 63118399
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0c9cb203b87166e0d09b81a8d1f5b49ea5bb80d37799c1ddd6d0f58f482ba0ca",
                    "size": 2592228
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:cd15d660a3890fbc117644cc7e00384e54cf47a86db50fb85d3e3924a3b6e0f7",
                    "size": 23448836
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:69feda61e8a6a07d2f8173016c73ff91210e0484140825e75e597b45142b7ae1",
                    "size": 473570
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ce20a220ec40b0412743b54d0120c434710d00f3b54a54502308b76efc9dd983",
                    "size": 1012
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d47f351240c88d3748188f2ef0e0b48f6e891509bebda6f18393ad51c6305e70",
                    "size": 278
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fe1a2b8c0123677dd17cbf5897edd521c063917ffff70729a2e1211219421c57",
                    "size": 678
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f0bc84079738c7cb444a751732c831109078ebd828f39565c765bfc72f1e32d9",
                    "size": 462
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4b98df28b09b73ffc1489ca23ce312956e40b0f6e53b61ab37376b020839a18f",
                    "size": 6663446
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:700dbae8774302e97aa6313b485a35a294b03952a48c501b93011fa2b4c23dc3",
                    "size": 466
                }
            ]
        },
        "latest-run-20240304": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:e5773ee2f753084cef8c3c7aa6dcbe278ce6a1c3eb22ecfced0d24e1a45db48d",
                "size": 6802
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:69fff380046369a47fbc74b0aa03f61fb243f73dc5795e3ecf69c6577ee84908",
                    "size": 63118399
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1838771b8ec87483e105e112d8024f9e9029a53bae9d1ef0c34c061003181dfb",
                    "size": 2592227
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9086ea61d95c1ab147c8270e5a9b1830e96d367d41663c7617ebb4b06043f2fa",
                    "size": 23448747
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e665d30b7799b95a1fefa213155d46f59fff56b68586082bf191741035863ca9",
                    "size": 473573
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:eca08035356a02b31523d0089c92c641151221e1163f6f69259640069fc93325",
                    "size": 1011
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1dbbb8991fb8ec274be4b21cf0c12fa2b72fea515b37daf96cee76915bf6a3ad",
                    "size": 278
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0a012ba1f4d0af3a86a253d6ee08223c9446a2cf6250bdab21f839ebc7d16354",
                    "size": 677
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:30495c77303f15af04a882c71d278cea6699924428092ff409840f02e3455bec",
                    "size": 460
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:19d5b7e0594881fd77d57a551e8b15159c37ec8f3e435358d047c09482de8e4c",
                    "size": 6663577
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8d43526f563b39aab347db11764f60f26e634c67f19a0e91dfd8991703dbb56c",
                    "size": 467
                }
            ]
        },
        "latest-run-20240401": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:a18edbffa73f5cee66ce9aea2af5d8cdd928adb4e4ca7f8994138606a8b66262",
                "size": 6794
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:69fff380046369a47fbc74b0aa03f61fb243f73dc5795e3ecf69c6577ee84908",
                    "size": 63118399
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:326b20e912351ee1cd36eb4928f89de7420c89cff4fe26170cede56d5b53defb",
                    "size": 2592233
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f39d9f2f25dbd3d6ef3ad45ac705c80b09499c0886ce65119c20d6fc0873f021",
                    "size": 23448664
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:149aacaa82b179c640f96dd6fa65cb2df58f00055c9a94c3886a4906672573a7",
                    "size": 473577
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e7514cd29789812983b2a947f44fce3f7bcce347440875a08883bcd9b53e739f",
                    "size": 1012
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4b84039a432480f5ffe416931d3e349c4318c99332a368f259bac7fd40b1d2c5",
                    "size": 278
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:85dfe6b177a514d70942f90882fe77a64a24af14ef6f9f8be9f6e0ac8271c2d2",
                    "size": 679
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:75ac5a1c7aa9ff94b80b26d3cff3e1a67892548f05c0ca35405a77c861a15ab8",
                    "size": 462
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1f022462928363be1279b3231b7e96b3898c864a7b010a97fb5ebea90eb4c374",
                    "size": 6663541
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5360dc3ffd036ca843609057ed2be35a65bfd12645d1ce1916fbcbcfc08ec95b",
                    "size": 466
                }
            ]
        },
        "latest-run-20240408": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:8c67c47962a26c1315f6407b9d19fea6176f2c2ff0dec881bec3da457dd24c6d",
                "size": 6796
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:69fff380046369a47fbc74b0aa03f61fb243f73dc5795e3ecf69c6577ee84908",
                    "size": 63118399
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:689676ef4dfbe38a100ec0fd8bde8b49c700bedf04ca010d64d0e38e212b9404",
                    "size": 2592230
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:20de4a94e0f41f23dbdf295a23279b3082a2b94c36276a1517ff184d9dae8e62",
                    "size": 23448793
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:aba17861f514dbec43f4f00bc73113c6ead88d0daf01cd5af8c0468d2e6ee6d6",
                    "size": 473577
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:44561f9120b7b96b19381819ea39413a89fe135ccffbc8f4f6586ce34ddef54d",
                    "size": 1011
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6246de46784e0baf4fe4448538c5536535e1dd8374a16e2e22c5fb226e3f400d",
                    "size": 278
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:008ed895bd8ec822f5bbb391c610f13b97036c9b6a66d8ad9815fcd75fe5517e",
                    "size": 679
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:752a73f6143a147cf9dd80aa9e2296a8678cefd5393206c50f4df7a5303521d0",
                    "size": 460
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:45fed00e756eea66b1ee2613e64de2f08f080a866bb316f416b3633ce11cfd84",
                    "size": 6663859
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:afa13b6c3661e13d5afa23cc4e60ac0e08919c97ef0997520981b0eca115db70",
                    "size": 466
                }
            ]
        },
        "latest-run-20240429": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:095f26299c408e415d1325f671f001cea75f10a0f13b0414649b3e3fa087b420",
                "size": 6796
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:69fff380046369a47fbc74b0aa03f61fb243f73dc5795e3ecf69c6577ee84908",
                    "size": 63118399
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d67deff5c71a351663d4faf25c3b38f412142a31bca7a8d888c8821bfe5e18e9",
                    "size": 2592229
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:aef089e78d846edbce27f2669c47ec3fcef142e589e1867ef5908636b93f70a1",
                    "size": 23448814
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d2e3aa275cbb3a947522d3ea6580677ee9aa12d44c091352980066a1fb89bef8",
                    "size": 473573
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5f9e31015a5229413246198fe29fd337da9e65c8a8af3238c1f8824969f6e872",
                    "size": 1012
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3a3a2d6852cd0e1051942f064efb1ca5ed52209ef47cd0bf05a7e8752026738c",
                    "size": 278
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c3c8080aaea2aac7e2ff9499b2a0acda4cb7e625ee3cded157d534b54c647108",
                    "size": 678
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1e138be9b56c798718197323eafa69ddc869347ebd57ddc632dd70c020d34717",
                    "size": 462
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:aa51496e6b7060ef2c7a15d4cd416d98fd59f28987ff76a9eea9b0b0f309fc3b",
                    "size": 6663565
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9f1a7fa6c0cefb6a6b4fbf46bfc0b3000c99d8708a7e68e57e7b7993bdeb50ef",
                    "size": 466
                }
            ]
        },
        "run": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:095f26299c408e415d1325f671f001cea75f10a0f13b0414649b3e3fa087b420",
                "size": 6796
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:69fff380046369a47fbc74b0aa03f61fb243f73dc5795e3ecf69c6577ee84908",
                    "size": 63118399
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d67deff5c71a351663d4faf25c3b38f412142a31bca7a8d888c8821bfe5e18e9",
                    "size": 2592229
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:aef089e78d846edbce27f2669c47ec3fcef142e589e1867ef5908636b93f70a1",
                    "size": 23448814
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d2e3aa275cbb3a947522d3ea6580677ee9aa12d44c091352980066a1fb89bef8",
                    "size": 473573
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5f9e31015a5229413246198fe29fd337da9e65c8a8af3238c1f8824969f6e872",
                    "size": 1012
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3a3a2d6852cd0e1051942f064efb1ca5ed52209ef47cd0bf05a7e8752026738c",
                    "size": 278
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c3c8080aaea2aac7e2ff9499b2a0acda4cb7e625ee3cded157d534b54c647108",
                    "size": 678
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1e138be9b56c798718197323eafa69ddc869347ebd57ddc632dd70c020d34717",
                    "size": 462
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:aa51496e6b7060ef2c7a15d4cd416d98fd59f28987ff76a9eea9b0b0f309fc3b",
                    "size": 6663565
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9f1a7fa6c0cefb6a6b4fbf46bfc0b3000c99d8708a7e68e57e7b7993bdeb50ef",
                    "size": 466
                }
            ]
        },
        "run-20230502": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 8184,
                "digest": "sha256:3dfcd66b3f0adbe0ff584c043ddc506ac93a14e251d7ec2e85f59ba041c822ab"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 64445578,
                    "digest": "sha256:e733ff1786fde464ae5c487ee23562295e5ec377f322e1a0ddbeb9eb0b767770"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2592235,
                    "digest": "sha256:779fdfa64b09f2b03c7a5e10d4ef87952d83da7f023ce1d66e2147c526b1d341"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 24144690,
                    "digest": "sha256:ff421aaabac7bbc65ca876f9b39319846832cde3697714f4f73ca7a076fac22c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 473576,
                    "digest": "sha256:ec59658df998edad9693fc215cde79d353e70dbfbe1341db33220c67d9c7989a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1015,
                    "digest": "sha256:36079b38428c307f2bf975c0469bc873376a43624adf1bb4bbd24688c3491d13"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 282,
                    "digest": "sha256:8461a9fa9e696794b86076991c15fefb22bb5f7cb00a0794ca50435f331878dd"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 681,
                    "digest": "sha256:1bf0146f9f3eb6c0d7f45063920fb8a873c6791e0de411d72db985228f24aa67"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 462,
                    "digest": "sha256:88733766d34217ae72bffd4818ea0519e3e6a604d5849f9fae03116a87121164"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 6436992,
                    "digest": "sha256:6e77c5f6fa75e934d9cdfa8dec8a896649b498a7c18a0f54f1ec90554d16152d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 469,
                    "digest": "sha256:df8ec00c118ce5f7f484d44b178ba9e3f46651c48f6c1cd04f8a77152077a7f0"
                }
            ]
        },
        "run-20230530": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 8182,
                "digest": "sha256:6b8638befd4f8f0dae701eba5c11fb84f97ba29f018ccacec987f18166ae9ea5"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 64674351,
                    "digest": "sha256:72e086bfec66fd3950d44dad0170ad1c4eeb3cb44d6bd0cd2d14d15f6493114e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2592234,
                    "digest": "sha256:94903bee787b61baef32c2f253cb7e456f92dd60dc2361d2686d84c676846461"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 22875081,
                    "digest": "sha256:aa85fc6b6d58818eaf697af244b4cc17ddc780e40a839d858be0cc5c693a00cb"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 473577,
                    "digest": "sha256:41436fae5c77e853c134ddc6bbf6b4a74dd92ca423b9dbd096740ba87de8b735"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1016,
                    "digest": "sha256:4db02dd47c7ef88ecb112623f1b5753ba3ad6f91f2b0d5c0252d8cd50d82b2b2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 282,
                    "digest": "sha256:566e5b2cc67991dc19d9e141b3515ec02430c23387f48a93f3c197b9a0103816"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 681,
                    "digest": "sha256:0d571eac575438553a1f49cd92bdf9f3b653b903f1c47d12c0bad9de4e0914e7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 461,
                    "digest": "sha256:0e39fc7b103b9fa548bdc50aa87c397286bfc8f6408cf52aee07ab4fcf68c349"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 6612050,
                    "digest": "sha256:8cd975824feb2126495edb380988b4ede9854d24603e97888bc919aadfe56874"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 467,
                    "digest": "sha256:e03c34c49195b4e5405a7d360ff8b2eb6770456b8f2a88007512cf30473e30ce"
                }
            ]
        },
        "run-20230803": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 7144,
                "digest": "sha256:8cbaf4f856e00b36d71f9d0bb8cf7d29d95fcfa16ca63e0e37fa89a4f79de01c"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 64705637,
                    "digest": "sha256:ea792534a213e62c62a1c4772dfcf53eaf82f7635dbc9f71bb0a60a91226d118"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2592239,
                    "digest": "sha256:f7a79e920ec27ac3117c18067a73bfa21db8e6dc263ed85a35120c2ef5f03b39"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 21178581,
                    "digest": "sha256:33ae549057fd4a09796b47bc886cf296e26c6c8c00a5e2a5b3b4a0fb10827be8"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 473583,
                    "digest": "sha256:d64dd38c14dedf1503a4af00054c39c3f612029657db30d0fc8dca727b61b0bc"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1017,
                    "digest": "sha256:ee1494250a35dd274c3982b4c5f5c483d78c70833020b443dbde6d77d273aeb2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 283,
                    "digest": "sha256:064b89e53b25bf2e4b376f278dae78d03c75920d9c29900d41513f91449fe67e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 683,
                    "digest": "sha256:8964cfc20919de072fdf02c430f7b849108b52ed644236f48193ec4ee50a209a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 462,
                    "digest": "sha256:5501f5fbe7ed46c469c697f3b47fae5e0c81160f7293cbd3dfc3c287f01cc109"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 6634626,
                    "digest": "sha256:d2955ac883b628be8ac0bc54626feff7546067e1883cd683d933071741b03b23"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 467,
                    "digest": "sha256:461922f1dececc29f78941696fb1874a39a3e5dea211ac1f4aff557223d92527"
                }
            ]
        },
        "run-20230829": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 6807,
                "digest": "sha256:ec1a101b6a59750bc679fabc283524acb4213d9542c0b39982b8c23a8c241271"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 64705637,
                    "digest": "sha256:ea792534a213e62c62a1c4772dfcf53eaf82f7635dbc9f71bb0a60a91226d118"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2592234,
                    "digest": "sha256:8a23d1bc357a016559421550aa91e0204a8a255102a9224be83008caeaf996da"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 25809278,
                    "digest": "sha256:f940068d3ef039efcb0ca5f66ee60c0bd0cf4760713964a44d6374b497b2a9b5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 473573,
                    "digest": "sha256:8930b41cb100d0197249ded6ea0bcdb52943edd72fdfb23c1e37e2465cff32a9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1016,
                    "digest": "sha256:a577c46bc85a1eca7057d6940255eb92584d7207344f27d5873361fa86b41658"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 282,
                    "digest": "sha256:586c7444d44703ed4dc6565512cc8cca2f0e4835e70d5aca6ad327406a7e7a64"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 682,
                    "digest": "sha256:a32ef540d1e852b24d14374a1bc3285034d6ff96bb276015e19412e9d51d29e5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 462,
                    "digest": "sha256:1c9a15d990e00c06610ca1b360a6a38d60b1a995503f841ba62dc00e53c6d5e6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 6708121,
                    "digest": "sha256:7ef80ac2a48ca9dda8723f9fa1c817bf23325f3a6bc60f7636003516305641ba"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 467,
                    "digest": "sha256:77b3b9fa0f66df333dd6dd7489c6152eab62a47d9581ca0ac3035c1a6b6d5467"
                }
            ]
        },
        "run-20230904": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 6808,
                "digest": "sha256:35bb38fc03a9ba225dd9c28e08d8cee0247c6c4f68a2570008e624988af394b6"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 64705637,
                    "digest": "sha256:ea792534a213e62c62a1c4772dfcf53eaf82f7635dbc9f71bb0a60a91226d118"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2592232,
                    "digest": "sha256:57e197807ba0a519d1edb0779ce76a06124dbef05029811c4cd40f0584de6bac"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 28511392,
                    "digest": "sha256:471a3338d976e468e7f618dd22fbdde0e2373e61be9ba9fe8ba4b2e72baecef0"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 473571,
                    "digest": "sha256:43acb285765a1566a09368e26f802363c73729a1ae513cb100c40d7d5f2c9fd4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1015,
                    "digest": "sha256:1f7a541e39d90075887bbdb2cc816aabc30dbffcf6b53f81374d58c099208d3a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 281,
                    "digest": "sha256:f64cf4e6488b8740244403e8dfeecf1fd1eca6cee27302b8246883ac41a1084b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 681,
                    "digest": "sha256:455b8b17e8e1b86358879c1c85bb769d1d32ef5a39654a9da1ca47fe376a9941"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 461,
                    "digest": "sha256:79974a50afa759f12e48dd7814fb83e5849ad292c42e28177d22c79b13419d23"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 6737268,
                    "digest": "sha256:6f68f0458988d9ea2d4539b34a4d8e1047da8e2e192bcd222891bf5e14aca6d7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 467,
                    "digest": "sha256:bbba5de64a9134d844b86ed83b6c37ed1a56e010b6a804df42763dbc6cf60971"
                }
            ]
        },
        "run-20230911": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:59ab8344b94aeea30a5b00a2a6cd24551b09fac270fb87ebd88bc0e6a3156915",
                "size": 6812
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ea792534a213e62c62a1c4772dfcf53eaf82f7635dbc9f71bb0a60a91226d118",
                    "size": 64705637
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:57e197807ba0a519d1edb0779ce76a06124dbef05029811c4cd40f0584de6bac",
                    "size": 2592232
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:471a3338d976e468e7f618dd22fbdde0e2373e61be9ba9fe8ba4b2e72baecef0",
                    "size": 28511392
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:43acb285765a1566a09368e26f802363c73729a1ae513cb100c40d7d5f2c9fd4",
                    "size": 473571
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1f7a541e39d90075887bbdb2cc816aabc30dbffcf6b53f81374d58c099208d3a",
                    "size": 1015
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f64cf4e6488b8740244403e8dfeecf1fd1eca6cee27302b8246883ac41a1084b",
                    "size": 281
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:455b8b17e8e1b86358879c1c85bb769d1d32ef5a39654a9da1ca47fe376a9941",
                    "size": 681
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:79974a50afa759f12e48dd7814fb83e5849ad292c42e28177d22c79b13419d23",
                    "size": 461
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d61a53ba1310310feb2b3ba03d0504c23710dd3c4eff88c132d71096c536197c",
                    "size": 6737668
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:69ee5385f36a99dcdf9dd724d6bf6b826815c1aa9486c1f5d263deca5505eb8e",
                    "size": 467
                }
            ]
        },
        "run-20231103": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:09e41a197679e7713c47271ce2f8b68f9c08605f303bfda9d231d8750df6b4ba",
                "size": 6807
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9d8d1f79d667e0d33c19dcab3e1da521941331416c217cc74601d8d9f6eb34ab",
                    "size": 64844849
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:70f1454c069b387e5af8b9d91b5470e7c4785b9a3290f7113ad42e664f16f534",
                    "size": 2592223
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d76a558193cb7b66b0700ad5870a13652edf878e9142a0d74f9a71180fa098d3",
                    "size": 44064717
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6f396e4d4a3dac8410ab225cbad45fb13592e944fdf1ab97a953ead54f0fb00d",
                    "size": 473572
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:12c35de3a810ce75e005471dd252f007b4ee65305ff26ddc28b8dfa744f9b86f",
                    "size": 1012
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:476049291d6250253e43958e82448d6c862427743c148732b2a832f70c372a56",
                    "size": 278
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8e0ba4f7e5a572e065f592740afcf5c1f8313b9813191abe3a2b5fd75ccdd00e",
                    "size": 677
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d6b9fe800ceade297a03f9af34ae2921bb7a789025c1dcfcb5b389739c04d457",
                    "size": 462
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3d8e284ba8dee1296161cd9459c3e8f98ba86c486f85b5015f73ddb509914577",
                    "size": 6852289
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6f0caa6e8a5f8f9cd7c1c1f67d372b2055929aeca735e0d50630bf0f50cea363",
                    "size": 466
                }
            ]
        },
        "run-20231106": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:76b45d8037b32b3cacdb9c27e6d6a2e4cd144108852ccf76d8f3667562de8075",
                "size": 6809
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9d8d1f79d667e0d33c19dcab3e1da521941331416c217cc74601d8d9f6eb34ab",
                    "size": 64844849
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:03e4b9d169336e58479c799e52d209343f4fd63f113b03b9cc3778d78eefc36f",
                    "size": 2592228
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9ebd0b84befc3bef3f3a1a315ae5e7ec38574027144908174718797f0a00360c",
                    "size": 44065020
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4d11386853aeab8cd5baa963e4328bffa12cd29a1ce5240ad9607cc9c3e875fa",
                    "size": 473574
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7331c59cbf560592c7caacaec5a5b0e7c1412d0ee6c53af4a6afd0b75120350c",
                    "size": 1012
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:01cc8bad0eb150412ebd78b17a1ec8ddb84bf7bfda9878c71e39cec3d021ee7a",
                    "size": 278
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:204195aa087948caf7654cea0a3a5700bce5edb30a573214210d4567dfefe883",
                    "size": 677
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c45bba7cbbc35ad8b4c7416a9df0446d0594c82b7244266706a7a42cfd423cda",
                    "size": 462
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:cacf54655129ce716db200628b3703abbc8871043195d1ec3efa480a889ba61a",
                    "size": 6851883
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c85ba2e57aab76ff38e9e7853c7b26d9c582fa1c1c03ff2aed0531e929b8f18c",
                    "size": 467
                }
            ]
        },
        "run-20231127": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:8709ed34a283091e502fb5ce449e9839c04a21c21e451cb804b38bc451669c4c",
                "size": 6811
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:69fff380046369a47fbc74b0aa03f61fb243f73dc5795e3ecf69c6577ee84908",
                    "size": 63118399
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0bb5eada9fb8c922ecc9f8444aaa0ee8a62fcac70ee74abc4710b2495f0bfd08",
                    "size": 2592228
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3ab8b31915862687dcc837ff941a87caf4c07e9f37527c8ff82b84c62d432e58",
                    "size": 22318509
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:491f82e7458e6e17bae05aa839d6b366e87513662f4340abcac0a9696a7480c0",
                    "size": 473573
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:744368413ff21e9a4e526bd1640cb20d58d0ac97385af7363e6ccfaa0a24b050",
                    "size": 1010
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d600c7ca91fb3e6cda2851db48eb14cc780b01a3eb28cb3b5cc1c157b30e5ce8",
                    "size": 278
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b803570392d88303afd7a2018b05dbf63c3295a143048a2729f5436e4f82f62e",
                    "size": 676
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c82c00cdd78937eb219600038c3a9ba8501aa8ae7b114cd8e577f8fe1107a36c",
                    "size": 462
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:cd39f3ef999bb9b47e7eebc7e98f1ccac30437131a41052a7abd6cc4977c3562",
                    "size": 6664271
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b4de3682dc6fbe5f51a6dd4d1b6250729df9ba860e419f7c6dc296cfe495d071",
                    "size": 467
                }
            ]
        },
        "run-20231204": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:fb2863f09ce135a7a239e4455519a12c79e762cfd7be9a02c78805dc4e6c84bc",
                "size": 6807
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:69fff380046369a47fbc74b0aa03f61fb243f73dc5795e3ecf69c6577ee84908",
                    "size": 63118399
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d33718b133be58c12c588d020799740b8f5d0e1659f4305bd3a42e0be1ca53e9",
                    "size": 2592227
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:638dc3ba02ae0d436831ec2e65f80cf3a0df85f54b4dd0e7ef6c930f2c9ab6a9",
                    "size": 23448833
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:320c005249b51b04b58caf58affd18499aee26124689ea955f510182122cfab7",
                    "size": 473569
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7d3113c0c18b1dea309c42932b22901908926108a8103cdab78170405c7a600b",
                    "size": 1013
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ac6ed7c321ff834e5966003c322a533aea0543816c96955876c3ab5646e3079f",
                    "size": 278
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:297b2ba3b641a48b1e90733cb70836ce9c195ca3803cf200e37417506cf0bb66",
                    "size": 678
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1f73b516ad766efd99f0fe8db17e4e328b2f6accabc971ecfa3d27b53c981a71",
                    "size": 461
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:abf0891c42000248476b222d3be10a7c4e5d822c1874e0ae5e32f13bea2d505e",
                    "size": 6663532
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0ebb49b97c23ff12b83aa2601531d558996a6bbb0c72aadc4720174d58422743",
                    "size": 467
                }
            ]
        },
        "run-20240205": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:410d43528a7d4903eb26fd629298a3c2dd7482c133351585c931b7f55cdf5a61",
                "size": 6809
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:69fff380046369a47fbc74b0aa03f61fb243f73dc5795e3ecf69c6577ee84908",
                    "size": 63118399
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:043f40b98b892b40de8f366a4877d9d156b79e078c159e8ba29e516bd6d1c1f3",
                    "size": 2592229
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a5741c1c9c7a9fefc40c6616a877c25ae7e2d3b4e3f445bc7366d05c2eadaabf",
                    "size": 23448765
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2b7fbfed82651bb013b52b5f9e575eb057922dd32dbea33546ffd3791fd6f318",
                    "size": 473574
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:31345e8a4ebd6f75c8d04b1987bb10dda6e287bb914c12f9506f73ae22df8918",
                    "size": 1011
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:64c5ff84cb6737b8e4034ed8c0c032049484812c53fac7bd3922ac1887619c7b",
                    "size": 277
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8151e9be2f5daef339c61f7281525da71de532fd3a55c08d147c7de15b1c0e4b",
                    "size": 675
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c014d4420297605e816aee496643987e4894d4bccb07a796c70c571e2feb60d8",
                    "size": 461
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:39459ee280ebffd152e96a6390c1daf6b71bb9555902bee9d7c6ba3045393bc8",
                    "size": 6663313
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:00ce2536274788851cb716c6d7a32bbdd4d3a0ad6be776cded5aa0ac2d7c43c8",
                    "size": 467
                }
            ]
        },
        "run-20240227": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:b941e87b44da4f4b13abafd4ae3536a0567d0afe18378f0c3f029d273b3698ac",
                "size": 6810
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:69fff380046369a47fbc74b0aa03f61fb243f73dc5795e3ecf69c6577ee84908",
                    "size": 63118399
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0c9cb203b87166e0d09b81a8d1f5b49ea5bb80d37799c1ddd6d0f58f482ba0ca",
                    "size": 2592228
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:cd15d660a3890fbc117644cc7e00384e54cf47a86db50fb85d3e3924a3b6e0f7",
                    "size": 23448836
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:69feda61e8a6a07d2f8173016c73ff91210e0484140825e75e597b45142b7ae1",
                    "size": 473570
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ce20a220ec40b0412743b54d0120c434710d00f3b54a54502308b76efc9dd983",
                    "size": 1012
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d47f351240c88d3748188f2ef0e0b48f6e891509bebda6f18393ad51c6305e70",
                    "size": 278
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fe1a2b8c0123677dd17cbf5897edd521c063917ffff70729a2e1211219421c57",
                    "size": 678
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f0bc84079738c7cb444a751732c831109078ebd828f39565c765bfc72f1e32d9",
                    "size": 462
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4b98df28b09b73ffc1489ca23ce312956e40b0f6e53b61ab37376b020839a18f",
                    "size": 6663446
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:700dbae8774302e97aa6313b485a35a294b03952a48c501b93011fa2b4c23dc3",
                    "size": 466
                }
            ]
        },
        "run-20240304": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:e5773ee2f753084cef8c3c7aa6dcbe278ce6a1c3eb22ecfced0d24e1a45db48d",
                "size": 6802
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:69fff380046369a47fbc74b0aa03f61fb243f73dc5795e3ecf69c6577ee84908",
                    "size": 63118399
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1838771b8ec87483e105e112d8024f9e9029a53bae9d1ef0c34c061003181dfb",
                    "size": 2592227
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9086ea61d95c1ab147c8270e5a9b1830e96d367d41663c7617ebb4b06043f2fa",
                    "size": 23448747
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e665d30b7799b95a1fefa213155d46f59fff56b68586082bf191741035863ca9",
                    "size": 473573
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:eca08035356a02b31523d0089c92c641151221e1163f6f69259640069fc93325",
                    "size": 1011
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1dbbb8991fb8ec274be4b21cf0c12fa2b72fea515b37daf96cee76915bf6a3ad",
                    "size": 278
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0a012ba1f4d0af3a86a253d6ee08223c9446a2cf6250bdab21f839ebc7d16354",
                    "size": 677
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:30495c77303f15af04a882c71d278cea6699924428092ff409840f02e3455bec",
                    "size": 460
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:19d5b7e0594881fd77d57a551e8b15159c37ec8f3e435358d047c09482de8e4c",
                    "size": 6663577
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8d43526f563b39aab347db11764f60f26e634c67f19a0e91dfd8991703dbb56c",
                    "size": 467
                }
            ]
        },
        "run-20240401": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:a18edbffa73f5cee66ce9aea2af5d8cdd928adb4e4ca7f8994138606a8b66262",
                "size": 6794
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:69fff380046369a47fbc74b0aa03f61fb243f73dc5795e3ecf69c6577ee84908",
                    "size": 63118399
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:326b20e912351ee1cd36eb4928f89de7420c89cff4fe26170cede56d5b53defb",
                    "size": 2592233
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f39d9f2f25dbd3d6ef3ad45ac705c80b09499c0886ce65119c20d6fc0873f021",
                    "size": 23448664
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:149aacaa82b179c640f96dd6fa65cb2df58f00055c9a94c3886a4906672573a7",
                    "size": 473577
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e7514cd29789812983b2a947f44fce3f7bcce347440875a08883bcd9b53e739f",
                    "size": 1012
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4b84039a432480f5ffe416931d3e349c4318c99332a368f259bac7fd40b1d2c5",
                    "size": 278
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:85dfe6b177a514d70942f90882fe77a64a24af14ef6f9f8be9f6e0ac8271c2d2",
                    "size": 679
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:75ac5a1c7aa9ff94b80b26d3cff3e1a67892548f05c0ca35405a77c861a15ab8",
                    "size": 462
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1f022462928363be1279b3231b7e96b3898c864a7b010a97fb5ebea90eb4c374",
                    "size": 6663541
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5360dc3ffd036ca843609057ed2be35a65bfd12645d1ce1916fbcbcfc08ec95b",
                    "size": 466
                }
            ]
        },
        "run-20240408": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:8c67c47962a26c1315f6407b9d19fea6176f2c2ff0dec881bec3da457dd24c6d",
                "size": 6796
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:69fff380046369a47fbc74b0aa03f61fb243f73dc5795e3ecf69c6577ee84908",
                    "size": 63118399
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:689676ef4dfbe38a100ec0fd8bde8b49c700bedf04ca010d64d0e38e212b9404",
                    "size": 2592230
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:20de4a94e0f41f23dbdf295a23279b3082a2b94c36276a1517ff184d9dae8e62",
                    "size": 23448793
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:aba17861f514dbec43f4f00bc73113c6ead88d0daf01cd5af8c0468d2e6ee6d6",
                    "size": 473577
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:44561f9120b7b96b19381819ea39413a89fe135ccffbc8f4f6586ce34ddef54d",
                    "size": 1011
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6246de46784e0baf4fe4448538c5536535e1dd8374a16e2e22c5fb226e3f400d",
                    "size": 278
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:008ed895bd8ec822f5bbb391c610f13b97036c9b6a66d8ad9815fcd75fe5517e",
                    "size": 679
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:752a73f6143a147cf9dd80aa9e2296a8678cefd5393206c50f4df7a5303521d0",
                    "size": 460
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:45fed00e756eea66b1ee2613e64de2f08f080a866bb316f416b3633ce11cfd84",
                    "size": 6663859
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:afa13b6c3661e13d5afa23cc4e60ac0e08919c97ef0997520981b0eca115db70",
                    "size": 466
                }
            ]
        },
        "run-20240429": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:095f26299c408e415d1325f671f001cea75f10a0f13b0414649b3e3fa087b420",
                "size": 6796
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:69fff380046369a47fbc74b0aa03f61fb243f73dc5795e3ecf69c6577ee84908",
                    "size": 63118399
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d67deff5c71a351663d4faf25c3b38f412142a31bca7a8d888c8821bfe5e18e9",
                    "size": 2592229
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:aef089e78d846edbce27f2669c47ec3fcef142e589e1867ef5908636b93f70a1",
                    "size": 23448814
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d2e3aa275cbb3a947522d3ea6580677ee9aa12d44c091352980066a1fb89bef8",
                    "size": 473573
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5f9e31015a5229413246198fe29fd337da9e65c8a8af3238c1f8824969f6e872",
                    "size": 1012
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3a3a2d6852cd0e1051942f064efb1ca5ed52209ef47cd0bf05a7e8752026738c",
                    "size": 278
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c3c8080aaea2aac7e2ff9499b2a0acda4cb7e625ee3cded157d534b54c647108",
                    "size": 678
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1e138be9b56c798718197323eafa69ddc869347ebd57ddc632dd70c020d34717",
                    "size": 462
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:aa51496e6b7060ef2c7a15d4cd416d98fd59f28987ff76a9eea9b0b0f309fc3b",
                    "size": 6663565
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9f1a7fa6c0cefb6a6b4fbf46bfc0b3000c99d8708a7e68e57e7b7993bdeb50ef",
                    "size": 466
                }
            ]
        }
    },
    "tags": [
        "20230502",
        "20230530",
        "20230803",
        "20230829",
        "20230904",
        "20230911",
        "20231103",
        "20231106",
        "20231127",
        "20231204",
        "20240205",
        "20240227",
        "20240304",
        "20240401",
        "20240408",
        "20240429",
        "36",
        "36-20230502",
        "36-20230530",
        "36-20230803",
        "36-20230829",
        "36-20230904",
        "36-20230911",
        "36-20231103",
        "36-20231106",
        "36-20231127",
        "36-20231204",
        "36-20240205",
        "36-20240227",
        "36-20240304",
        "36-20240401",
        "36-20240408",
        "36-build",
        "36-build-20230502",
        "36-build-20230530",
        "36-build-20230803",
        "36-build-20230811",
        "36-build-20230829",
        "36-build-20230904",
        "36-build-20230911",
        "36-build-20231103",
        "36-build-20231106",
        "36-build-20231127",
        "36-build-20231204",
        "36-build-20240205",
        "36-build-20240227",
        "36-build-20240304",
        "36-build-20240401",
        "36-build-20240408",
        "36-run",
        "36-run-20230502",
        "36-run-20230530",
        "36-run-20230803",
        "36-run-20230829",
        "36-run-20230904",
        "36-run-20230911",
        "36-run-20231103",
        "36-run-20231106",
        "36-run-20231127",
        "36-run-20231204",
        "36-run-20240205",
        "36-run-20240227",
        "36-run-20240304",
        "36-run-20240401",
        "36-run-20240408",
        "37",
        "37-20230502",
        "37-20230530",
        "37-20230803",
        "37-20230829",
        "37-20230904",
        "37-20230911",
        "37-20231103",
        "37-20231106",
        "37-20231127",
        "37-20231204",
        "37-20240205",
        "37-20240227",
        "37-20240304",
        "37-20240401",
        "37-20240408",
        "37-20240429",
        "37-build",
        "37-build-20230502",
        "37-build-20230530",
        "37-build-20230803",
        "37-build-20230829",
        "37-build-20230904",
        "37-build-20230911",
        "37-build-20231103",
        "37-build-20231106",
        "37-build-20231127",
        "37-build-20231204",
        "37-build-20240205",
        "37-build-20240227",
        "37-build-20240304",
        "37-build-20240401",
        "37-build-20240408",
        "37-build-20240429",
        "37-run",
        "37-run-20230502",
        "37-run-20230530",
        "37-run-20230803",
        "37-run-20230829",
        "37-run-20230904",
        "37-run-20230911",
        "37-run-20231103",
        "37-run-20231106",
        "37-run-20231127",
        "37-run-20231204",
        "37-run-20240205",
        "37-run-20240227",
        "37-run-20240304",
        "37-run-20240401",
        "37-run-20240408",
        "37-run-20240429",
        "38",
        "38-20230502",
        "38-20230530",
        "38-20230803",
        "38-20230829",
        "38-20230904",
        "38-20230911",
        "38-20231103",
        "38-20231106",
        "38-20231127",
        "38-20231204",
        "38-20240205",
        "38-20240227",
        "38-20240304",
        "38-20240401",
        "38-20240408",
        "38-20240429",
        "38-build",
        "38-build-20230502",
        "38-build-20230530",
        "38-build-20230803",
        "38-build-20230829",
        "38-build-20230904",
        "38-build-20230911",
        "38-build-20231103",
        "38-build-20231106",
        "38-build-20231127",
        "38-build-20231204",
        "38-build-20240205",
        "38-build-20240227",
        "38-build-20240304",
        "38-build-20240401",
        "38-build-20240408",
        "38-build-20240429",
        "38-run",
        "38-run-20230502",
        "38-run-20230530",
        "38-run-20230803",
        "38-run-20230829",
        "38-run-20230904",
        "38-run-20230911",
        "38-run-20231103",
        "38-run-20231106",
        "38-run-20231127",
        "38-run-20231204",
        "38-run-20240205",
        "38-run-20240227",
        "38-run-20240304",
        "38-run-20240401",
        "38-run-20240408",
        "38-run-20240429",
        "build",
        "build-20230502",
        "build-20230530",
        "build-20230803",
        "build-20230829",
        "build-20230904",
        "build-20230911",
        "build-20231103",
        "build-20231106",
        "build-20231127",
        "build-20231204",
        "build-20240205",
        "build-20240227",
        "build-20240304",
        "build-20240401",
        "build-20240408",
        "build-20240429",
        "latest",
        "latest-20230502",
        "latest-20230530",
        "latest-20230803",
        "latest-20230829",
        "latest-20230904",
        "latest-20230911",
        "latest-20231103",
        "latest-20231106",
        "latest-20231127",
        "latest-20231204",
        "latest-20240205",
        "latest-20240227",
        "latest-20240304",
        "latest-20240401",
        "latest-20240408",
        "latest-20240429",
        "latest-build",
        "latest-build-20230502",
        "latest-build-20230530",
        "latest-build-20230803",
        "latest-build-20230829",
        "latest-build-20230904",
        "latest-build-20230911",
        "latest-build-20231103",
        "latest-build-20231106",
        "latest-build-20231127",
        "latest-build-20231204",
        "latest-build-20240205",
        "latest-build-20240227",
        "latest-build-20240304",
        "latest-build-20240401",
        "latest-build-20240408",
        "latest-build-20240429",
        "latest-run",
        "latest-run-20230502",
        "latest-run-20230530",
        "latest-run-20230803",
        "latest-run-20230829",
        "latest-run-20230904",
        "latest-run-20230911",
        "latest-run-20231103",
        "latest-run-20231106",
        "latest-run-20231127",
        "latest-run-20231204",
        "latest-run-20240205",
        "latest-run-20240227",
        "latest-run-20240304",
        "latest-run-20240401",
        "latest-run-20240408",
        "latest-run-20240429",
        "run",
        "run-20230502",
        "run-20230530",
        "run-20230803",
        "run-20230829",
        "run-20230904",
        "run-20230911",
        "run-20231103",
        "run-20231106",
        "run-20231127",
        "run-20231204",
        "run-20240205",
        "run-20240227",
        "run-20240304",
        "run-20240401",
        "run-20240408",
        "run-20240429"
    ],
    "configs": {
        "20230502": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Cmd": null,
                "Image": "sha256:a68b119daf3e28debdf078c13084aef27795d0c41eca3070757270c37007dcff",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "OnBuild": null,
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-tx2",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                }
            },
            "container": "7423fe45f993649cd50a86110c3aade31acd4783b1f8f74b94b9a14cd0d3e651",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "[ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info"
                ],
                "Image": "sha256:a68b119daf3e28debdf078c13084aef27795d0c41eca3070757270c37007dcff",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-tx2",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                }
            },
            "created": "2023-05-08T16:20:14.664626498Z",
            "docker_version": "20.10.21",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:31.895761202Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-13T20:39:36.516425489Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:8f1c4c2e60330243e66c553f2377951b11c09601b874f6c778e90ff74c6dc376 in / "
                },
                {
                    "created": "2023-03-13T20:39:37.717809378Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-04-02T00:15:42.184062394Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL io.balena.architecture=aarch64",
                    "empty_layer": true
                },
                {
                    "created": "2023-04-02T00:15:42.325999277Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "empty_layer": true
                },
                {
                    "created": "2023-04-02T00:15:42.488342363Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:24916d641d0ee761d2bebd935412ac2263719e3f48829dd83555470573235ed9 in /usr/bin "
                },
                {
                    "created": "2023-04-02T00:34:27.312050054Z",
                    "created_by": "/bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\""
                },
                {
                    "created": "2023-04-02T01:08:25.388465514Z",
                    "created_by": "/bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end"
                },
                {
                    "created": "2023-04-02T01:08:25.551533349Z",
                    "created_by": "/bin/sh -c #(nop)  ENV UDEV=off",
                    "empty_layer": true
                },
                {
                    "created": "2023-04-02T01:08:25.703401831Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:0e8e5e7fcb5ff4b4caac2552d3c5cbf829703430466832566297680a5b09c62b in /usr/bin/entry.sh "
                },
                {
                    "created": "2023-04-02T01:08:25.832144045Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:207cdc191bada5970fb21d3481971b4a391e6e52061bd584dc75404c36d01fcf in /usr/bin/balena-info "
                },
                {
                    "created": "2023-04-02T01:08:25.936921778Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:def7f364bfe93992865dfba2017def9a3c407b6cf8ac0233dcd0aabaa9e4b75b in /usr/bin/balena-idle "
                },
                {
                    "created": "2023-04-02T01:08:26.059241016Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-04-02T01:08:30.523539615Z",
                    "created_by": "/bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh",
                    "empty_layer": true
                },
                {
                    "created": "2023-04-02T01:08:31.078585399Z",
                    "created_by": "/bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info"
                },
                {
                    "created": "2023-05-08T16:04:48.123965098Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL io.balena.device-type=jetson-tx2",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-08T16:20:13.834488214Z",
                    "created_by": "/bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all"
                },
                {
                    "created": "2023-05-08T16:20:14.664626498Z",
                    "created_by": "/bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:6fa23825e7d36de818dd635e6ddcfb1a63b42c8d2a2ebe9dc929a2d8e763fe3f",
                    "sha256:07b0d4da5e04230bb8db9790c1ff3923ecfeaf3f1e9a415e2aab47b5a9a3c0f1",
                    "sha256:48150357fa88a44cf5998c4a5b7e13f8107d4a0b881d13e4aca84aebe66babea",
                    "sha256:efe5d73677d2d6bf2c9aff6540e5fd3471e4445a5ebd050fcf61edacabd24493",
                    "sha256:a4786e5f9479fd133d3e0656a2d110fa7171de1d557215c0963994517a246db0",
                    "sha256:ac16514f34947310a8a17a27f099a5c82bb2f563a28a4e1431998927adaa1e53",
                    "sha256:eda8f31ef2f8144169de7e12869fc1e897e7427c6cab3e81041c33c07d11ff5b",
                    "sha256:6f7ea015bad319a12178cc9deed86ad6432b252ebd6dc7141a974eee74653f64",
                    "sha256:cfd8b93ad27a03808da6e42d10bfd05a9317239d5bfaf63b1e62b4f172372cbc",
                    "sha256:59c871739bd4ff474a5cef9442579177864a340096aa438609cddb64c1b102f0"
                ]
            }
        },
        "20230530": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Cmd": null,
                "Image": "sha256:20f9e37cab056b4dae525c039f7037ba42e096a6f55717137afee04271e77e96",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "OnBuild": null,
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-tx2",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                }
            },
            "container": "02586b804b62abfb75793d789ea4c7363176723ca5b24c0b44b7cf4458c84c71",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "[ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info"
                ],
                "Image": "sha256:20f9e37cab056b4dae525c039f7037ba42e096a6f55717137afee04271e77e96",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-tx2",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                }
            },
            "created": "2023-06-07T02:52:23.839260472Z",
            "docker_version": "20.10.21",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:31.895761202Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-31T18:09:14.311114615Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:ba657df1d10e8dc0a769b25e4ab09a73bca3a89df41b3a1b4e10f5fef058d1de in / "
                },
                {
                    "created": "2023-05-31T18:09:15.547149675Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-05T02:03:26.945834815Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL io.balena.architecture=aarch64",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-05T02:03:27.13778573Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-05T02:03:27.332819661Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:24916d641d0ee761d2bebd935412ac2263719e3f48829dd83555470573235ed9 in /usr/bin "
                },
                {
                    "created": "2023-06-05T02:24:26.189516816Z",
                    "created_by": "/bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\""
                },
                {
                    "created": "2023-06-05T03:02:04.392445503Z",
                    "created_by": "/bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end"
                },
                {
                    "created": "2023-06-05T03:02:04.646844986Z",
                    "created_by": "/bin/sh -c #(nop)  ENV UDEV=off",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-05T03:02:04.825711363Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:0e8e5e7fcb5ff4b4caac2552d3c5cbf829703430466832566297680a5b09c62b in /usr/bin/entry.sh "
                },
                {
                    "created": "2023-06-05T03:02:04.983337019Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:207cdc191bada5970fb21d3481971b4a391e6e52061bd584dc75404c36d01fcf in /usr/bin/balena-info "
                },
                {
                    "created": "2023-06-05T03:02:05.123767699Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:def7f364bfe93992865dfba2017def9a3c407b6cf8ac0233dcd0aabaa9e4b75b in /usr/bin/balena-idle "
                },
                {
                    "created": "2023-06-05T03:02:05.338685177Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-05T03:02:12.042609634Z",
                    "created_by": "/bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-05T03:02:13.377800909Z",
                    "created_by": "/bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info"
                },
                {
                    "created": "2023-06-07T02:34:44.82287582Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL io.balena.device-type=jetson-tx2",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-07T02:52:22.830368797Z",
                    "created_by": "/bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all"
                },
                {
                    "created": "2023-06-07T02:52:23.839260472Z",
                    "created_by": "/bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:249911891a8331ea3bbb5bf844c0feaad6066fdc936878a8c464416b1d78b22e",
                    "sha256:bc78f7b899700e4367bb848ecbc496f06865e82c6015e2a802406742f1cbefcf",
                    "sha256:284c09b1cb3f1977b7c56605e5ae1944d5ce3a83c3d77c0a22357607feb3701c",
                    "sha256:003aced5afcb43cee3c9363048741d8467dca9a7dfc7978926eeba94c0c793f5",
                    "sha256:83dfca5fa07e53ca9393a9653242046ccad66ffed2c2b472e349ccc34984f78f",
                    "sha256:546722af04ce5a848511c0f9b3850aefac740a4d7aff4fbbe9cf3e1caacbdaf8",
                    "sha256:fd8a15cd2653a1a0a698c31f8c62ce5e4920a30df101f4d3b8c125c83cdb0d3e",
                    "sha256:c497def0fd9a40925b091eb2a284460584d191e6f8bc647f5f3aa8c26565ff0b",
                    "sha256:1075349ad85152e3b31e6065a7f2f80d43d7f13314a1ef8a342ec2ebb114cc6f",
                    "sha256:adec9d84947aa22da33ef3f88120acb40c3a38fdcb36d111ea65e0514b23f071"
                ]
            }
        },
        "20230803": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "generic-aarch64",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2023-08-04T23:07:43.375331667Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:31.895761202Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-04T18:40:58.001277299Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:614dff70ca4206841645edfd3dab48901efeefccc8ef99772f475ee9bac861ff in / "
                },
                {
                    "created": "2023-08-04T18:40:59.951513662Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-04T18:54:04.279599867Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-04T18:54:04.279599867Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-04T18:54:04.279599867Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-04T19:20:03.223955138Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-04T20:07:46.587328502Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-04T20:07:46.587328502Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-04T20:07:46.609548438Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-04T20:07:46.619000353Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-04T20:07:46.643784193Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-04T20:07:46.643784193Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-04T20:07:51.914868814Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-04T20:07:52.316641812Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-04T23:07:42.902689671Z",
                    "created_by": "LABEL io.balena.device-type=generic-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-04T23:07:42.902689671Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-04T23:07:43.375331667Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "moby.buildkit.buildinfo.v1": "eyJmcm9udGVuZCI6ImRvY2tlcmZpbGUudjAiLCJhdHRycyI6eyJmaWxlbmFtZSI6IkRvY2tlcmZpbGUifSwic291cmNlcyI6W3sidHlwZSI6ImRvY2tlci1pbWFnZSIsInJlZiI6ImRvY2tlci5pby9iYWxlbmFsaWIvYWFyY2g2NC1mZWRvcmE6MzctcnVuIiwicGluIjoic2hhMjU2OjYyZDgyMzU1YTk1ZGFkNjNkZmFiYjAwYWRmMDg0ZDM1YjFlODUxYTQyZWU1OTQzYjE3OGQ5ODE5NjljMmFkZjIifV19",
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:cf819d1f191d71ce750fc0b9ca71726d50fc052d7c695682165a84c2bd1eb716",
                    "sha256:03789feb1993fcca25eacd7c042a5e0da237c9f2fa4a6f2ba8ad8ddcbcc047df",
                    "sha256:df63306f05b409fc7c242f10144cdea2d6eb06bd1c0d437922509682bf196d4f",
                    "sha256:bbdfed2dd994f5e7e9323593f9ca29bfb8b828a195790f981d11f82dc13c624f",
                    "sha256:2776818030d35900166dbf5a502fabc1ff88dd330f244d1162ca86ce8a18233b",
                    "sha256:26be61103dde02ae7eeb259ca681c784e0d557bf6b12df2a1a6552473280bedd",
                    "sha256:bb747782f19553a77f709283cb961b77fe72e296acc3ead020eca924dc5fce01",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:e8b5341d265b6c5db48a0f11ed785549f85f32a54ea1909674b6c08a33a2d0f7",
                    "sha256:a623c30286ac9d16628692759bdc53e28ae39e8e61efd5ee7364a36d900d6042",
                    "sha256:24834edc35e897ebb0f69be2daa23f220350916750c2c3d6586074bbd8ec730d"
                ]
            }
        },
        "20230829": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "generic-aarch64",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2023-09-02T08:58:38.635902453Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:31.895761202Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-04T18:40:58.001277299Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:614dff70ca4206841645edfd3dab48901efeefccc8ef99772f475ee9bac861ff in / "
                },
                {
                    "created": "2023-08-04T18:40:59.951513662Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-02T05:03:54.900306555Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-02T05:03:54.900306555Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-02T05:03:54.900306555Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T05:29:59.032216117Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T07:49:31.667835224Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T07:49:31.667835224Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-02T07:49:31.703166771Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T07:49:31.71048196Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T07:49:31.717951149Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T07:49:31.717951149Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-02T07:49:36.906076254Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T07:49:37.296912313Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T08:58:38.205221045Z",
                    "created_by": "LABEL io.balena.device-type=generic-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-02T08:58:38.205221045Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T08:58:38.635902453Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:cf819d1f191d71ce750fc0b9ca71726d50fc052d7c695682165a84c2bd1eb716",
                    "sha256:3c382cf512bf47b7376b28df697eafe60fb026ff08ad6264f571b1804576a531",
                    "sha256:242c49d1b03e40d91c941d76ea65e48dbfb13a6b7f6a8c0f17fa2b79bb3bf341",
                    "sha256:bba0a7dd26656a143d366c9386e193e577dde85487fea059991acb5311c337f8",
                    "sha256:0229146c9a8ae2f2d63e6a19a19370e3c3106fb917ff4041c69c337bafe20825",
                    "sha256:1b2572994e04be16791b3c500716eb39f1b1319dafd2c50ada219e826ddb81dc",
                    "sha256:4e58dca27db4d5d9ee1fdb2b00ba98010756175be3e905351b42f93464022edc",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:c6be8ccf7f63475573716aad14ea1215d6bee6236ef265531b27279cfde66460",
                    "sha256:430d5314f168d952339399356004a06369867fbb81a12c88de124e83359ed690",
                    "sha256:1eb82bdf03c1148a5816e4a3e00c8910fc70d37dee35dc007afe8037e2376b8e"
                ]
            }
        },
        "20230904": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "generic-aarch64",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2023-09-09T09:10:48.662664437Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:31.895761202Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-04T18:40:58.001277299Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:614dff70ca4206841645edfd3dab48901efeefccc8ef99772f475ee9bac861ff in / "
                },
                {
                    "created": "2023-08-04T18:40:59.951513662Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T05:16:42.403188583Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T05:16:42.403188583Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T05:16:42.403188583Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T05:41:14.882541843Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T05:41:16.309377049Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T05:41:16.309377049Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T05:41:16.340188202Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T05:41:16.351150734Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T05:41:16.360211026Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T05:41:16.360211026Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T05:41:21.389664273Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T05:41:21.747711571Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T09:10:48.373996507Z",
                    "created_by": "LABEL io.balena.device-type=generic-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T09:10:48.373996507Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T09:10:48.662664437Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:cf819d1f191d71ce750fc0b9ca71726d50fc052d7c695682165a84c2bd1eb716",
                    "sha256:2c61372b1614282bfdb58c104252b37a61be492de5c3298dffc56376adfe0a8f",
                    "sha256:3892fad87609c0724cb700c7b327865d8b642316f214825299540678c84e007b",
                    "sha256:47b1691c56a15153e34460e97d0615abbde7eb4128cffd187b3c4507be55c4a0",
                    "sha256:526255e20ebb75f4e4a9cd0b179342ccc59ea09dfb95f916aad1dfd38903c411",
                    "sha256:10a91abc01c07dd01c837dc1a35597c3030ffee89a81f6dcc760a204a2da9e5a",
                    "sha256:fb61a502b5a7e114c0e1b65ffbf1f5d42041b65c52f9ecb41e2fb9a1cdcdbd97",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:cc06c053add61653ccca8a1d621c01df905dfb240d202ad2f7452d1777852952",
                    "sha256:153e452baec08f41027fff3674c18b22fab8e703bf9fe321cbd5b2239a8b437a",
                    "sha256:4b49328db1c28b0599a6dba7094df0748381930f9162e62cd99f60c6d32cb0de"
                ]
            }
        },
        "20230911": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "iot-gate-imx8plus",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2023-09-12T03:05:53.243163887Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:31.895761202Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-04T18:40:58.001277299Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:614dff70ca4206841645edfd3dab48901efeefccc8ef99772f475ee9bac861ff in / "
                },
                {
                    "created": "2023-08-04T18:40:59.951513662Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T05:16:42.403188583Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T05:16:42.403188583Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T05:16:42.403188583Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T05:41:14.882541843Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T05:41:16.309377049Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T05:41:16.309377049Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T05:41:16.340188202Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T05:41:16.351150734Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T05:41:16.360211026Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T05:41:16.360211026Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T05:41:21.389664273Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T05:41:21.747711571Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-12T03:05:53.110371243Z",
                    "created_by": "LABEL io.balena.device-type=iot-gate-imx8plus",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-12T03:05:53.110371243Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-12T03:05:53.243163887Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:cf819d1f191d71ce750fc0b9ca71726d50fc052d7c695682165a84c2bd1eb716",
                    "sha256:2c61372b1614282bfdb58c104252b37a61be492de5c3298dffc56376adfe0a8f",
                    "sha256:3892fad87609c0724cb700c7b327865d8b642316f214825299540678c84e007b",
                    "sha256:47b1691c56a15153e34460e97d0615abbde7eb4128cffd187b3c4507be55c4a0",
                    "sha256:526255e20ebb75f4e4a9cd0b179342ccc59ea09dfb95f916aad1dfd38903c411",
                    "sha256:10a91abc01c07dd01c837dc1a35597c3030ffee89a81f6dcc760a204a2da9e5a",
                    "sha256:fb61a502b5a7e114c0e1b65ffbf1f5d42041b65c52f9ecb41e2fb9a1cdcdbd97",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:cc06c053add61653ccca8a1d621c01df905dfb240d202ad2f7452d1777852952",
                    "sha256:b8ed483edfdee7085e4a858d5943ce5fae61b59ccf5d6a7752f71ae9e0877449",
                    "sha256:7dcfcdfbc1c37f420235199d40c101579b8e90adcdc44c1990bf1d8334f375b0"
                ]
            }
        },
        "20231103": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "iot-gate-imx8plus",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2023-11-04T16:58:36.691823802Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:31.895761202Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-06T18:42:53.905315575Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:a506790441a5cd056fb456111da480939a46667d520b519dcb9b2e2aa16aae70 in / "
                },
                {
                    "created": "2023-10-06T18:42:54.852939758Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-04T14:05:43.22598589Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-04T14:05:43.22598589Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-04T14:05:43.22598589Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T14:34:18.977818495Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T14:34:20.236374739Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T14:34:20.236374739Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-04T14:34:20.246502673Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T14:34:20.255833503Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T14:34:20.26399513Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T14:34:20.26399513Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-04T14:34:25.601224907Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T14:34:25.783838009Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T16:58:36.562666967Z",
                    "created_by": "LABEL io.balena.device-type=iot-gate-imx8plus",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-04T16:58:36.562666967Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T16:58:36.691823802Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:a37bac7c99baeb556998a67a51775b34aa6df7829fa1ff19323033c5e19837b3",
                    "sha256:768fbcc1112a55954ab49021af3e5b3e77d06892f0018801cb6a68567a441e44",
                    "sha256:b339e6005ff8696452b8a5daf08c04afc137c0da129e399cf294d19b6213af01",
                    "sha256:80e7fcb77b05762cb4af7a336c31edd97b255eb9c5e68b5e2d99fcd0c0941c00",
                    "sha256:faa025149da6c8af6245b9feb2dfa133869871b24b83291212a581a8ac861951",
                    "sha256:85fb00c475997eaa7bf88fdc4a78bd8ad8ecfcafaa4870eb4c2e610747381ba2",
                    "sha256:707dbcf7ea87fd75e1d03a7f275e36d8fcfc1b4ea1f3c867ab6830318bf147e9",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:2509d1d7a240f88f51a41393363e38c35b81e3edf67fa356b59390c21617a3ab",
                    "sha256:a4c40202ed504a23f0061115359756ce4296061beebaccdceecebd8da4e63af9",
                    "sha256:ecdaaf53e54bd152818947b8d0306f4958ea11182202936dd9defa9f17ffdaa6"
                ]
            }
        },
        "20231106": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "iot-gate-imx8plus",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2023-11-06T12:31:35.98179637Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:31.895761202Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-06T18:42:53.905315575Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:a506790441a5cd056fb456111da480939a46667d520b519dcb9b2e2aa16aae70 in / "
                },
                {
                    "created": "2023-10-06T18:42:54.852939758Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T09:12:27.261337628Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T09:12:27.261337628Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T09:12:27.261337628Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T09:44:07.194449485Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T09:44:08.356242913Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T09:44:08.356242913Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T09:44:08.370923209Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T09:44:08.383861082Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T09:44:08.401598819Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T09:44:08.401598819Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T09:44:14.097449997Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T09:44:14.33458648Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T12:31:35.819901526Z",
                    "created_by": "LABEL io.balena.device-type=iot-gate-imx8plus",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T12:31:35.819901526Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T12:31:35.98179637Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:a37bac7c99baeb556998a67a51775b34aa6df7829fa1ff19323033c5e19837b3",
                    "sha256:bb42b2b57488a97c34e8f0aa9c9a04b6b5ddc51428a7f869c902e262985533fa",
                    "sha256:f41e2d07027059a658a46da06111805a1c38c357d7a263b65a57906a413afcb8",
                    "sha256:6dfd1348c7cf846716582db5414652bd266c84c3ceb084217d2c1faaa43610bd",
                    "sha256:1ef3bd9e556e1fe5e94ee5fc778405d0e160b3b2f911f7b73b841e3f2947d4ec",
                    "sha256:b00ab734246e3ab0a163af225efd04d30fbb893167c4883967444d8739b0a28b",
                    "sha256:505040d84b751f1b80aad25e47e2b5770da95393e303943d0e90452bb789625d",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:3de7d77508b1af83bfd44b6a7776ab5e9c687ecfe948f5f9d8f15802beed22b0",
                    "sha256:79f3108df0f2d1f13340291298342905907c027b115b3d6798004268b3aee89c",
                    "sha256:688938a5f4feaf8e78c732bb0f26f5b4b9bc6e12f1d5280518263bd268f74441"
                ]
            }
        },
        "20231127": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "iot-gate-imx8plus",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2023-12-01T13:07:24.709335954Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:31.895761202Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-29T00:47:03.16713451Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:270e11b4c18af1c1efb8b8579be7fbda5255d56dd69f83ef7d933cfd2c685e5c in / "
                },
                {
                    "created": "2023-11-29T00:47:04.125919026Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T10:52:09.172740458Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T10:52:09.172740458Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T10:52:09.172740458Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T11:10:46.008255947Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T11:10:47.111959762Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T11:10:47.111959762Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T11:10:47.123059062Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T11:10:47.148503741Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T11:10:47.157133896Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T11:10:47.157133896Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T11:10:50.883923644Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T11:10:51.046020579Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T13:07:24.562017117Z",
                    "created_by": "LABEL io.balena.device-type=iot-gate-imx8plus",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T13:07:24.562017117Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T13:07:24.709335954Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:22de68abb450063be7e40efd22fd3b41bec469efafdd95e25c65998648e52b28",
                    "sha256:60f2f571d3fb1d1d2155d703033185efdcb8fd06f11360aff3752c6009ddbba5",
                    "sha256:8bb3ecdba476409248d260241fff01266e4176e947fe811a5efe5456870e671e",
                    "sha256:6852dc1f1a771f4a7632382350c1dbaa2ae3e16802b4884d04618e03763e8376",
                    "sha256:9db2458df0d1ffca59509d5dbd49436ef952483f1042d53531ca90ba7d6de9e9",
                    "sha256:8d401a597be69855ebfaf84921f07b57da8bb7a5c49c370999b998f6062358a2",
                    "sha256:05f9f870334e6de793d303f103d1f1b35f7df1ff21724f7ebaeb6fc561bccc2c",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:24546f46791bf568236132bceae1cdf41c9ca9f6d3e09077cab2bc32ee6bb76c",
                    "sha256:0ee6e1af05fed5090277a4b66a20553164e97d4f26af60bcbbf5e8e130a0424b",
                    "sha256:ec20f57723356e56d8c7929c3a784ed0aae50b2d6f8cde6bb310e89190f528ca"
                ]
            }
        },
        "20231204": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "iot-gate-imx8plus",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2023-12-06T22:55:31.420425013Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:31.895761202Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-29T00:47:03.16713451Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:270e11b4c18af1c1efb8b8579be7fbda5255d56dd69f83ef7d933cfd2c685e5c in / "
                },
                {
                    "created": "2023-11-29T00:47:04.125919026Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T20:40:21.575448793Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T20:40:21.575448793Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T20:40:21.575448793Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T20:59:06.4416038Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T20:59:07.14149679Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T20:59:07.14149679Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T20:59:07.150718208Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T20:59:07.159290685Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T20:59:07.187587582Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T20:59:07.187587582Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T20:59:10.850419463Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T20:59:11.010511508Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T22:55:31.287807643Z",
                    "created_by": "LABEL io.balena.device-type=iot-gate-imx8plus",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T22:55:31.287807643Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T22:55:31.420425013Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:22de68abb450063be7e40efd22fd3b41bec469efafdd95e25c65998648e52b28",
                    "sha256:2c6b0df21f9efd51a24a59463b9265452ccc9cf8a26908c50d2742c0e67683bd",
                    "sha256:906012c4f278d0d6c4a614afd4c812fc55bc367d28aac2c10cbdd33ac6ec80b8",
                    "sha256:34fc306b51c5f84676518d54cf67a097f48bfc8e79fb8c0ffc71ed9b2d1b5def",
                    "sha256:aa005d370b40094b326443ce4f1b6d04a780598588bd8f8fa1dc601171d59314",
                    "sha256:e580b4505982459166845d47c3159777541e000c8826a05635c6f84f62f03011",
                    "sha256:79990d4ff119d7188fd5fdcaaa04c391747be11fefbbe682a6a2c495c8ca3a6b",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:0aff9ccfdfd88ab9194d2d15e49264900a8942406276260bf5fb479d637d2075",
                    "sha256:316c5f8b0fbeb6ffb3a0ce73220b175e794d17f6e310a3e0bc7a2ef50c645342",
                    "sha256:8ce4d7578ff5a2e8887d47cae9a1c35fc64d1636cfc68bbe8c15b48010e4dd60"
                ]
            }
        },
        "20240205": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "iot-gate-imx8plus",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2024-02-05T02:46:30.94219159Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:31.895761202Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-29T00:47:03.16713451Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:270e11b4c18af1c1efb8b8579be7fbda5255d56dd69f83ef7d933cfd2c685e5c in / "
                },
                {
                    "created": "2023-11-29T00:47:04.125919026Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-05T00:26:08.862006831Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-05T00:26:08.862006831Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-05T00:26:08.862006831Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T00:44:51.352289509Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T00:44:52.031271896Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T00:44:52.031271896Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-05T00:44:52.040913956Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T00:44:52.086913794Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T00:44:52.096058179Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T00:44:52.096058179Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-05T00:44:55.875508418Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T00:44:56.018376913Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T02:46:30.829833069Z",
                    "created_by": "LABEL io.balena.device-type=iot-gate-imx8plus",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-05T02:46:30.829833069Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T02:46:30.94219159Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:22de68abb450063be7e40efd22fd3b41bec469efafdd95e25c65998648e52b28",
                    "sha256:7d94e909dc19f31d9248e1ca5731a04da35c29e754dd69d2fb5a44a2502cc818",
                    "sha256:ed6509b907c0701f8a2a621cb39dbd26d066f869bf0b780990c71b717675bb3d",
                    "sha256:e03ba5a1224f9b985f2d94275263fa36221b3ab01f59437a07d3c1a623b76d77",
                    "sha256:9be68f287ebf7d1727a82714c098ca3ac0e021a4f0bd91d94de4992f010d993f",
                    "sha256:a5b159b9ba50945bb72f35a268a6bd8fca087febe08b2ec49f6982b5d39309e7",
                    "sha256:5efcacbddce62383428c47d9f0b7b716feaa80d8781fe6dd2b1dc81f391509df",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:4491643620a3eb30fa973704b1de6c31cc71b0330dda8cb2847cc88b0981d732",
                    "sha256:b2d88aa29c18001e4fcb693150a36e72f0dbafe39051ee215465168339f864fd",
                    "sha256:86521cd5b53fa059ea52a2ddcdd18f2a7c7e0e90e30865b1d1f18970eac65b84"
                ]
            }
        },
        "20240227": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "iot-gate-imx8plus",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2024-03-01T23:22:38.162250541Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:31.895761202Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-29T00:47:03.16713451Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:270e11b4c18af1c1efb8b8579be7fbda5255d56dd69f83ef7d933cfd2c685e5c in / "
                },
                {
                    "created": "2023-11-29T00:47:04.125919026Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T20:49:58.705358685Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T20:49:58.705358685Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T20:49:58.705358685Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:08:24.834287933Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:08:25.565567755Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:08:25.565567755Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T21:08:25.579271093Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:08:25.617204263Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:08:25.629384601Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:08:25.629384601Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T21:08:29.321790107Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:08:29.46619614Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T23:22:38.053697448Z",
                    "created_by": "LABEL io.balena.device-type=iot-gate-imx8plus",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T23:22:38.053697448Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T23:22:38.162250541Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:22de68abb450063be7e40efd22fd3b41bec469efafdd95e25c65998648e52b28",
                    "sha256:bfe341409759f9ccd364ecb2d335246560d19282f3ecf321c53836e101a82d2a",
                    "sha256:22279a1bcbb3b6a49c8d9ada414e0b58c5c83f35e20c9a33acc65e0aedb733a1",
                    "sha256:59b3dbe842a8cbc03ed09e65a15a87e8c46f6653b87eb93c5b37d8ab77060acf",
                    "sha256:2ad87538d509ffa4457cec4d29a36d570c8392257dab445452209d4097b7bf52",
                    "sha256:4b3f303bc53eefd36ad3db9ee937836bf0e5855a96ec2546c67cb8238fa8c5bc",
                    "sha256:27f44cee2cfb128916d178e2e1dd253065b766fcffe0f37cdb2588702c65bd5f",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:7f5845d6da8e4b02efd4b375c5222854a386a7b02c491fe3b96307345b96014d",
                    "sha256:a3ac2e153463933f1666d85b7eb6378535612a047bdd475eda21d486a894b92f",
                    "sha256:6f8dd89a74009292ee644b2c2ea6dde8488e5dae9ebf8cbd127f77b88f8bf4fc"
                ]
            }
        },
        "20240304": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "iot-gate-imx8plus",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2024-03-05T10:49:02.924094Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:31.895761202Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-29T00:47:03.16713451Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:270e11b4c18af1c1efb8b8579be7fbda5255d56dd69f83ef7d933cfd2c685e5c in / "
                },
                {
                    "created": "2023-11-29T00:47:04.125919026Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T08:24:13.360409226Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T08:24:13.360409226Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T08:24:13.360409226Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T08:43:22.770169859Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T08:43:23.650621519Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T08:43:23.650621519Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T08:43:23.66033272Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T08:43:23.670216283Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T08:43:23.695421657Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T08:43:23.695421657Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T08:43:27.455502812Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T08:43:27.593974423Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T10:49:02.81018686Z",
                    "created_by": "LABEL io.balena.device-type=iot-gate-imx8plus",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T10:49:02.81018686Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T10:49:02.924094Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:22de68abb450063be7e40efd22fd3b41bec469efafdd95e25c65998648e52b28",
                    "sha256:28463901e499aa0a1515b57d0fbafa9cb9a2cc02cc10ed1687c180941c557184",
                    "sha256:0ca6f2444de4ad55ab4af4fd74364d376cec4fab74ebda60cba78c9fa2d7e649",
                    "sha256:cfc10fd96b96916769b790f45b5a4f0a1a17202f2532d659330de963d4494ebf",
                    "sha256:d2c34fbda1de7685d96923948d480fbe0ebab10b9087bfebda73744dbe2a6f9a",
                    "sha256:0d88f38f1e25f8d79cc6f17c26de206e21378fdd492c88062ab3e718003d32df",
                    "sha256:01e1144fabf916d9df9dbc69c087247ccbb1e57b391ed28f7dac24153a50d7b2",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:7ad9ead66349340e94a99303f594e85c786a6fabee7368153801d079722794bc",
                    "sha256:6d9bc439379dc6b8df2f5253f7c1eb3eab4b7df41d36779811aef70800e08407",
                    "sha256:26ba84d0e46a6d26e818ccc2fbc28157723ab106845216c395ca1e47649fa446"
                ]
            }
        },
        "20240401": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "iot-gate-imx8plus",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                }
            },
            "created": "2024-04-01T23:47:50.81840626Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:31.895761202Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-29T00:47:03.16713451Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:270e11b4c18af1c1efb8b8579be7fbda5255d56dd69f83ef7d933cfd2c685e5c in / "
                },
                {
                    "created": "2023-11-29T00:47:04.125919026Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T21:26:29.343455526Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T21:26:29.343455526Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T21:26:29.343455526Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T21:45:10.957762154Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T21:45:11.852141047Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T21:45:11.852141047Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T21:45:11.862471903Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T21:45:11.872331413Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T21:45:11.898584749Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T21:45:11.898584749Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T21:45:15.686171825Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T21:45:15.820771715Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T23:47:50.707520722Z",
                    "created_by": "LABEL io.balena.device-type=iot-gate-imx8plus",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T23:47:50.707520722Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T23:47:50.81840626Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:22de68abb450063be7e40efd22fd3b41bec469efafdd95e25c65998648e52b28",
                    "sha256:3a6d39f67382783e2c69d9a448aa59d1d7654260210364d05c2cae2ef469e3c8",
                    "sha256:8b316e0949cd1905304ca774963ddae530565f690a65de9db1a2dafa9aed0363",
                    "sha256:7fa4949a4c79caf7d749cc4abcbc241a5dd3a5c8d0155458cf6d4d83ac483646",
                    "sha256:0a0eea417236fa5be4e06c1d20766fd9f3b0e064419a66f356dea0f1f6d794df",
                    "sha256:ad31ce618fd1f26b74bc2900fbd27319ed86917e85375f90b57d28b291156d51",
                    "sha256:7b8582873ef4cde2aca83ece090a3993ca7c4f8fe0b13c3b0b064f08c7b21c21",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:8050b5f7d3d161f91b3bad0576691d8640130b32c0b8f23db87cdd4fee47c82e",
                    "sha256:c51d3491b64019f87ef0efcdbc52139676fb9f32add80fde849c9fa5d585dc91",
                    "sha256:66dab9d052d7becc66f0b8b7ae75872806657705cd92ef92ca7ff6d4e51a4240"
                ]
            }
        },
        "20240408": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "iot-gate-imx8plus",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                }
            },
            "created": "2024-04-09T20:02:56.694145507Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:31.895761202Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-29T00:47:03.16713451Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:270e11b4c18af1c1efb8b8579be7fbda5255d56dd69f83ef7d933cfd2c685e5c in / "
                },
                {
                    "created": "2023-11-29T00:47:04.125919026Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:52.915602222Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:52.915602222Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:52.915602222Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:54:04.100191166Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:54:04.963844501Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:54:04.963844501Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:54:04.973366628Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:54:05.001513857Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:54:05.024710968Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:54:05.024710968Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:54:08.797015979Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:54:08.943058393Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T20:02:56.566729467Z",
                    "created_by": "LABEL io.balena.device-type=iot-gate-imx8plus",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T20:02:56.566729467Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T20:02:56.694145507Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:22de68abb450063be7e40efd22fd3b41bec469efafdd95e25c65998648e52b28",
                    "sha256:03dd9a4ed991dc43e9a504ad71941782bb6fd4cd57f8ade649bbe25b622e3902",
                    "sha256:d24e8e6aec171dc7068d2c19b85d8c6341381b2f0cf4e1d1a20d5419f2d1ec53",
                    "sha256:e743a07ebcce27b755341d992eb4148fe86bd04481c6d8f2b6fe7364a942af19",
                    "sha256:1c988fbb0bdd3374b1f72bebc1953bd62853c7e33608dbc885ff64eba44dc1eb",
                    "sha256:7fad6968fdbdd1afee5f76e3b2f3df1829677bc85be4fa920cb57db14562699c",
                    "sha256:2999088cf700c485af0973e03dd5e2ff9d96b3f604f5908307f3edb5377c6d58",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:a75c43802eb36b20a7183fe5c30e33ef495a904237a7483d5c73c1df1691887b",
                    "sha256:ba82a540cbc6793313055baaceac216ac219896739f6c0d5c70520d7498ba8f0",
                    "sha256:e6c9a7824e2c775d74446a1eca6572ba467b4af264e68ed89d05bc8535d080e4"
                ]
            }
        },
        "20240429": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "iot-gate-imx8plus",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                }
            },
            "created": "2024-05-06T10:39:20.130192892Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:31.895761202Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-29T00:47:03.16713451Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:270e11b4c18af1c1efb8b8579be7fbda5255d56dd69f83ef7d933cfd2c685e5c in / "
                },
                {
                    "created": "2023-11-29T00:47:04.125919026Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T09:28:47.993183335Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T09:28:47.993183335Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T09:28:47.993183335Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T09:47:56.501476974Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T09:47:57.631980985Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T09:47:57.631980985Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T09:47:57.644124262Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T09:47:57.678847981Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T09:47:57.688494096Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T09:47:57.688494096Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T09:48:01.526529414Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T09:48:01.665893428Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T10:39:20.006293092Z",
                    "created_by": "LABEL io.balena.device-type=iot-gate-imx8plus",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T10:39:20.006293092Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T10:39:20.130192892Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:22de68abb450063be7e40efd22fd3b41bec469efafdd95e25c65998648e52b28",
                    "sha256:ef64ad49ccf58709af070779ae49d014558d78a8b6a21fcc279c09ddac79e6c9",
                    "sha256:486e799e950e2b998ed0a1a7221aed44130002259c2b437524c7a8a72b725a56",
                    "sha256:5ad52f9d14deab1b2c3a79dfb68bf730440e209f5926a2cd2ebd561c519a08de",
                    "sha256:73001e4334a2e5a98b50faf87e712eaf851af09ac903e83a569150844ce9eda1",
                    "sha256:696c197b14bb7731bf0a36bbdc5e5272937b693f192b143e02dac747a1305ba1",
                    "sha256:f27b4f97c199fdc59cc49eb91fc7a348daf160285ca6bfce88ede5b64e4bb0a9",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:22341517b8222bb5810db07c816fbd0de10749523856c0263caf14789e77d27d",
                    "sha256:108db07c780851f92a4d8ef0c1926797631a48d81f409bc8850b3a37f31fe4bb",
                    "sha256:5019b6b6e2ea25b8b42acd497a8ea0bb3aa9edf8a150d35e826ed803ec8d3f57"
                ]
            }
        },
        "36": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f36container",
                    "FGC=f36",
                    "FBR=f36",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "iot-gate-imx8plus",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                }
            },
            "created": "2024-04-09T20:02:15.019145189Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:22.742482656Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f36container FGC=f36 FBR=f36",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-04T20:03:43.247035495Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:cee460779f9d1124ed00f2513a5161d8a111efd58c800bb362e4de8ee2ff74c6 in / "
                },
                {
                    "created": "2023-05-04T20:03:44.015472382Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:44.289415356Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:44.289415356Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:44.289415356Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:52:48.382975748Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:52:49.102483271Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:52:49.102483271Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:52:49.114498269Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:52:49.160258289Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:52:49.171704486Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:52:49.171704486Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:52:52.904600449Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 36   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:52:53.038869737Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 36 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T20:02:14.89785239Z",
                    "created_by": "LABEL io.balena.device-type=iot-gate-imx8plus",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T20:02:14.89785239Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T20:02:15.019145189Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 36 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:cd2d1f658717e76eb6caf0ebc0408c1c3e79889436d4de8e629563541cf3e3ac",
                    "sha256:96e8237f4a277db04c955fec05200b74f0da4fc11acef6e970444aa8d1ac4877",
                    "sha256:eebacd7727dd5f1adf1a458419bda175ca082cd8b48b6f5ab3162ceac82ead68",
                    "sha256:6847feafbfe5a6b06d1a3180b2725497fd90858670af4d7e07d859032794fee6",
                    "sha256:2329dcac2e30f4e2a05e85f5b8dbaa8227ee8eb85ef825dd7ac0cb8fad9571fe",
                    "sha256:ca51ce238f812d151cfee4e045e109e016d9a7f7d83543fe8f0f508ebc62399e",
                    "sha256:eaa4fd10880c293c373fc3aa5f36e6d0b2267661144b4b50b13423abdc65b432",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:57d8577708926141837b5cef818df1c257b9d966cce81182c4fbc54c0cf82336",
                    "sha256:f13b017c836ce0d039330be9672e6c9ef34137c140a07085471903cabf073e3b",
                    "sha256:86d4cc38ec98fb5e562b4bb9479638b57ad6b6de5e21fa4ce4dc5dfae1c8e4ec"
                ]
            }
        },
        "36-20230502": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f36container",
                    "FGC=f36",
                    "FBR=f36",
                    "UDEV=off"
                ],
                "Cmd": null,
                "Image": "sha256:608f2c688bf22d768faea8eb9a96d437d90064d4ce1f2e9ff548199379ba9559",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "OnBuild": null,
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-tx2",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                }
            },
            "container": "27a02cb2d2ce8932ed3ca4ed1f67fff578130900df15506f6f789fd89733435f",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f36container",
                    "FGC=f36",
                    "FBR=f36",
                    "UDEV=off"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "[ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 36 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info"
                ],
                "Image": "sha256:608f2c688bf22d768faea8eb9a96d437d90064d4ce1f2e9ff548199379ba9559",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-tx2",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                }
            },
            "created": "2023-05-08T15:04:15.3004883Z",
            "docker_version": "20.10.21",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:22.742482656Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f36container FGC=f36 FBR=f36",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-13T20:39:28.724714783Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:1e614afa90e013b347095b8b7b1b81500ef98b74ef30f606c0eeb1343a61839d in / "
                },
                {
                    "created": "2023-03-13T20:39:29.7812272Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-04-01T23:20:40.225983323Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL io.balena.architecture=aarch64",
                    "empty_layer": true
                },
                {
                    "created": "2023-04-01T23:20:40.456572622Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "empty_layer": true
                },
                {
                    "created": "2023-04-01T23:20:40.671215867Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:24916d641d0ee761d2bebd935412ac2263719e3f48829dd83555470573235ed9 in /usr/bin "
                },
                {
                    "created": "2023-04-01T23:40:32.529941955Z",
                    "created_by": "/bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\""
                },
                {
                    "created": "2023-04-02T00:15:10.51888747Z",
                    "created_by": "/bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end"
                },
                {
                    "created": "2023-04-02T00:15:10.662706416Z",
                    "created_by": "/bin/sh -c #(nop)  ENV UDEV=off",
                    "empty_layer": true
                },
                {
                    "created": "2023-04-02T00:15:10.773116101Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:0e8e5e7fcb5ff4b4caac2552d3c5cbf829703430466832566297680a5b09c62b in /usr/bin/entry.sh "
                },
                {
                    "created": "2023-04-02T00:15:10.881625198Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:207cdc191bada5970fb21d3481971b4a391e6e52061bd584dc75404c36d01fcf in /usr/bin/balena-info "
                },
                {
                    "created": "2023-04-02T00:15:10.984103971Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:def7f364bfe93992865dfba2017def9a3c407b6cf8ac0233dcd0aabaa9e4b75b in /usr/bin/balena-idle "
                },
                {
                    "created": "2023-04-02T00:15:11.102469064Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-04-02T00:15:15.554090902Z",
                    "created_by": "/bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 36   && rm -rf test-os.sh",
                    "empty_layer": true
                },
                {
                    "created": "2023-04-02T00:15:16.274075352Z",
                    "created_by": "/bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 36 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info"
                },
                {
                    "created": "2023-05-08T14:47:40.785932406Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL io.balena.device-type=jetson-tx2",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-08T15:04:14.677362936Z",
                    "created_by": "/bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all"
                },
                {
                    "created": "2023-05-08T15:04:15.3004883Z",
                    "created_by": "/bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 36 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:b6b09698065abba4f5eeb19d9e4e32aa2c4c1eeecc2df918bf73b86ead111ea0",
                    "sha256:67ed5eddcf9a3d6aca344d00e06a7a9ac7293e07b6d1af853ca11e5133346fa0",
                    "sha256:20a257cf794231e617222a2ab48ee1648fa3982d52ebef28460a81cc7984761c",
                    "sha256:918378b2eaef92551181515ed99d67ed0d6095716cd9ff816382b28d62cd718a",
                    "sha256:c34ce28257264806764d7d7f4b985f772912bde38be30c9cda6bf61d5400f207",
                    "sha256:a5dda905e0fa99bfce2de4f16e292baf6dfaffb95370cd414f4c3b7cd41cbda2",
                    "sha256:7263e7f17b39cd56c62bdd378ad804ed92a1ffe8d97d08f0b5efa9493d2fe217",
                    "sha256:e34791a006fd80ffda33c6c2cc5ca6255de5d183035c27b617332a035fd9217e",
                    "sha256:606ab18113cc28bb8b0c20ea525e5b22743704847f0b5ec53a02a5b6525f589a",
                    "sha256:7563b00bb24eca45be8b11cb99ebc808ada537f05f0d906e39c4963b60fc096f"
                ]
            }
        },
        "36-20230530": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f36container",
                    "FGC=f36",
                    "FBR=f36",
                    "UDEV=off"
                ],
                "Cmd": null,
                "Image": "sha256:471240683f9c9fd375c34390bb11b71c502617492aa9268d8b294665516ef533",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "OnBuild": null,
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-tx2",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                }
            },
            "container": "cd084c0634c74b66f59b84eef0436edbb4c24fb727e880b9c1b8f587855ad32e",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f36container",
                    "FGC=f36",
                    "FBR=f36",
                    "UDEV=off"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "[ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 36 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info"
                ],
                "Image": "sha256:471240683f9c9fd375c34390bb11b71c502617492aa9268d8b294665516ef533",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-tx2",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                }
            },
            "created": "2023-06-06T23:04:18.943843992Z",
            "docker_version": "20.10.21",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:22.742482656Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f36container FGC=f36 FBR=f36",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-04T20:03:43.247035495Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:cee460779f9d1124ed00f2513a5161d8a111efd58c800bb362e4de8ee2ff74c6 in / "
                },
                {
                    "created": "2023-05-04T20:03:44.015472382Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-05T01:05:18.044538547Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL io.balena.architecture=aarch64",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-05T01:05:18.445298053Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-05T01:05:18.985114572Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:24916d641d0ee761d2bebd935412ac2263719e3f48829dd83555470573235ed9 in /usr/bin "
                },
                {
                    "created": "2023-06-05T01:25:37.673310659Z",
                    "created_by": "/bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\""
                },
                {
                    "created": "2023-06-05T01:25:40.845054492Z",
                    "created_by": "/bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end"
                },
                {
                    "created": "2023-06-05T01:25:41.095090436Z",
                    "created_by": "/bin/sh -c #(nop)  ENV UDEV=off",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-05T01:25:41.289235457Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:0e8e5e7fcb5ff4b4caac2552d3c5cbf829703430466832566297680a5b09c62b in /usr/bin/entry.sh "
                },
                {
                    "created": "2023-06-05T01:25:41.44572259Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:207cdc191bada5970fb21d3481971b4a391e6e52061bd584dc75404c36d01fcf in /usr/bin/balena-info "
                },
                {
                    "created": "2023-06-05T01:25:41.596440952Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:def7f364bfe93992865dfba2017def9a3c407b6cf8ac0233dcd0aabaa9e4b75b in /usr/bin/balena-idle "
                },
                {
                    "created": "2023-06-05T01:25:41.820999829Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-05T01:25:46.893891108Z",
                    "created_by": "/bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 36   && rm -rf test-os.sh",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-05T01:25:47.812625125Z",
                    "created_by": "/bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 36 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info"
                },
                {
                    "created": "2023-06-06T22:45:54.815715097Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL io.balena.device-type=jetson-tx2",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-06T23:04:17.98475305Z",
                    "created_by": "/bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all"
                },
                {
                    "created": "2023-06-06T23:04:18.943843992Z",
                    "created_by": "/bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 36 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:cd2d1f658717e76eb6caf0ebc0408c1c3e79889436d4de8e629563541cf3e3ac",
                    "sha256:14ba70c5822910ee531cf53cc2aaa38785448dd98d0fff7dccedac58712056e5",
                    "sha256:97c587281066b363b7e9f42486c5e00caedddeeb2bf817ba3b23141b643c3f8b",
                    "sha256:af49fba9a468b93f823a404ab892a4fbc83346dbb8890ff50cf98531050a4b74",
                    "sha256:4bf633548e812a4579e72c509e0750b2c3b18766bfb0495dc11a00ffc7daf716",
                    "sha256:55d4a27300bf4fc325e7bb42d6f02e28d06ca59823d1c7fa7b1b11ed905c2a3c",
                    "sha256:dea7a48d3cf324d00cb7bc4667681b711a64aee2ee5b072b0a7e138855a7102f",
                    "sha256:04f6cdb135f1f74282869a9eb36e1ee2170ad942ff40248bc72a886599a6f611",
                    "sha256:ca567dd8f9f3858de847062fa32b72be8a5ae2f10106c0049ad987ad8ca473fd",
                    "sha256:20399a77786fb1f11eeb188806d4e3c272a35d14a67e1cdc2cb1d76cee558ea5"
                ]
            }
        },
        "36-20230803": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f36container",
                    "FGC=f36",
                    "FBR=f36",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "generic-aarch64",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2023-08-04T22:22:11.539530894Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:22.742482656Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f36container FGC=f36 FBR=f36",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-04T20:03:43.247035495Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:cee460779f9d1124ed00f2513a5161d8a111efd58c800bb362e4de8ee2ff74c6 in / "
                },
                {
                    "created": "2023-05-04T20:03:44.015472382Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-04T17:40:36.141576882Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-04T17:40:36.141576882Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-04T17:40:36.141576882Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-04T18:06:14.297664476Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-04T18:06:15.358838734Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-04T18:06:15.358838734Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-04T18:06:15.412515828Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-04T18:06:15.426515953Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-04T18:06:15.43645037Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-04T18:06:15.43645037Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-04T18:06:20.665036478Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 36   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-04T18:06:21.131901951Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 36 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-04T22:22:11.222185245Z",
                    "created_by": "LABEL io.balena.device-type=generic-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-04T22:22:11.222185245Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-04T22:22:11.539530894Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 36 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "moby.buildkit.buildinfo.v1": "eyJmcm9udGVuZCI6ImRvY2tlcmZpbGUudjAiLCJhdHRycyI6eyJmaWxlbmFtZSI6IkRvY2tlcmZpbGUifSwic291cmNlcyI6W3sidHlwZSI6ImRvY2tlci1pbWFnZSIsInJlZiI6ImRvY2tlci5pby9iYWxlbmFsaWIvYWFyY2g2NC1mZWRvcmE6MzYtcnVuIiwicGluIjoic2hhMjU2OmMyNmU2ZmM3MWNmNjljZWNjYjgzNTNlZWMxOTNkOTU0MDRiODAwZTAzYjJjMzY5ZDMzZjZmNDVlOTU4ZjY2NWYifV19",
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:cd2d1f658717e76eb6caf0ebc0408c1c3e79889436d4de8e629563541cf3e3ac",
                    "sha256:fbf8e5a70049ea22839d4ecedcaea4b522ccb8658c5b39e38b8ede3ff5b2cb09",
                    "sha256:adfc4adafd7d2920b35e241a395d5aff298ff1879801dd0d851ce4abed6f1ace",
                    "sha256:853761fe6cfc264c85bc70ff33887f7a4a7304394bcece9c10947f10f21d97c9",
                    "sha256:ac29ab898e94ca32ec66810fd8fc3f03f5e983e90c2d0b5b4d533b001298f39b",
                    "sha256:1d6c756ff8e22ccbfc3ea7ff15751dcf58cad18d6ff76fbd3420db0111c7ca24",
                    "sha256:514392aa70ce0b3f32efa7d2c78f6af266ee4404d22a8c939540f649a94683a9",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:852d14a6d834cc902b8b83870940fe4cae788eec813d3cdc5b72e00e1d7fffa2",
                    "sha256:58ed01b407259ec03191fef04797b6736108d6299a6ae7166b8535c4e108d8d2",
                    "sha256:c375ef454dc435ec4efd1ceb1fcc838a521095f913cbbb737e8763e619dbc1e6"
                ]
            }
        },
        "36-20230829": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f36container",
                    "FGC=f36",
                    "FBR=f36",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "generic-aarch64",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2023-09-02T08:36:27.753389924Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:22.742482656Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f36container FGC=f36 FBR=f36",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-04T20:03:43.247035495Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:cee460779f9d1124ed00f2513a5161d8a111efd58c800bb362e4de8ee2ff74c6 in / "
                },
                {
                    "created": "2023-05-04T20:03:44.015472382Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-02T03:51:11.242656749Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-02T03:51:11.242656749Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-02T03:51:11.242656749Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T04:16:49.188278521Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T04:16:50.627028573Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T04:16:50.627028573Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-02T04:16:50.638415505Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T04:16:50.655013053Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T04:16:50.661445372Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T04:16:50.661445372Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-02T04:16:56.029581054Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 36   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T04:16:56.441761743Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 36 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T08:36:27.33967037Z",
                    "created_by": "LABEL io.balena.device-type=generic-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-02T08:36:27.33967037Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T08:36:27.753389924Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 36 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:cd2d1f658717e76eb6caf0ebc0408c1c3e79889436d4de8e629563541cf3e3ac",
                    "sha256:e488629dc88977141b203763a345866dc21467cc18b228b17ec08963da10b6ae",
                    "sha256:5d60deaa6c1c2372902ebb735bd2845b8abbd62cb9c97fcee3ef199b12c73930",
                    "sha256:1270aeb3b12340e53bb44a8963832fab83e95ba3e8fdaf542ac74ff5ef0badb3",
                    "sha256:46b0d4015d0877a985555d00d708f241ea505630a1fa511974c5bd3ac3ac41cb",
                    "sha256:5824504cc9c95901f19344f626ad4c9ec30ee3567da01cdbc506b2087b6f56e9",
                    "sha256:515a05f2f3480d732d2f1d4ffbc863363c399ab9abe9970e085f0334177d1775",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:8bd06c23a5117511b75c64fade53c1c41c06ed8142439c842a3bc95f64f7d2b3",
                    "sha256:cdbe673064b67d0b64b871e15393c9c7adf50de5e0e6d821dfaf55b0c34da0bc",
                    "sha256:fbe78c445e483679fb6d5f12d8f2b82a27ed8fde47aa056b7b8e43264f9f2b94"
                ]
            }
        },
        "36-20230904": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f36container",
                    "FGC=f36",
                    "FBR=f36",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "generic-aarch64",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2023-09-09T08:03:01.357401763Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:22.742482656Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f36container FGC=f36 FBR=f36",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-04T20:03:43.247035495Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:cee460779f9d1124ed00f2513a5161d8a111efd58c800bb362e4de8ee2ff74c6 in / "
                },
                {
                    "created": "2023-05-04T20:03:44.015472382Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T06:28:26.44141738Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T06:28:26.44141738Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T06:28:26.44141738Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T06:52:10.14333682Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T06:52:11.560313193Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T06:52:11.560313193Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T06:52:11.59227561Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T06:52:11.60340289Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T06:52:11.619420149Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T06:52:11.619420149Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T06:52:16.486359938Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 36   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T06:52:16.828028478Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 36 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T08:03:01.072577935Z",
                    "created_by": "LABEL io.balena.device-type=generic-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T08:03:01.072577935Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T08:03:01.357401763Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 36 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:cd2d1f658717e76eb6caf0ebc0408c1c3e79889436d4de8e629563541cf3e3ac",
                    "sha256:05ce1b7fa6b0ced945e9fc1d7f1f0dfa18b03b07cdd6519f6ea474b052de883b",
                    "sha256:9e9f88eff6885b01860209ee41f449670562ec3746b2b29dd15e691c1bb16b93",
                    "sha256:26962155532afb1cf5af9c8452dabade728ab6dcc317cdc035ba3dfb4a625de3",
                    "sha256:2a8c67bac577afb58a1c7f8027a3ea327157889daade6bc813255fed4b28c7c6",
                    "sha256:19cde6d3569afc75f1fe7aeb1b94ccc4af816b762b0d936c97794daf78ed89de",
                    "sha256:ea7164d23b98002b69a33a0e805eb3371773875a916e8a49ec706c920b856d61",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:6ccdb93e087c02477234e1031bae4936d610cfb73384f3bfce75e3fec5f6865b",
                    "sha256:a894124dd372b2d3ce76dd12d97a67117ff06dfafe284fef152b8a29dad74532",
                    "sha256:b90b3cc56b64f5a8e8aa90da09b8ff9eae1a76c8c81febb71a3827094c80df09"
                ]
            }
        },
        "36-20230911": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f36container",
                    "FGC=f36",
                    "FBR=f36",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "iot-gate-imx8plus",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2023-09-12T03:03:27.647778562Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:22.742482656Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f36container FGC=f36 FBR=f36",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-04T20:03:43.247035495Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:cee460779f9d1124ed00f2513a5161d8a111efd58c800bb362e4de8ee2ff74c6 in / "
                },
                {
                    "created": "2023-05-04T20:03:44.015472382Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T06:28:26.44141738Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T06:28:26.44141738Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T06:28:26.44141738Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T06:52:10.14333682Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T06:52:11.560313193Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T06:52:11.560313193Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T06:52:11.59227561Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T06:52:11.60340289Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T06:52:11.619420149Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T06:52:11.619420149Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T06:52:16.486359938Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 36   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T06:52:16.828028478Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 36 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-12T03:03:27.510763842Z",
                    "created_by": "LABEL io.balena.device-type=iot-gate-imx8plus",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-12T03:03:27.510763842Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-12T03:03:27.647778562Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 36 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:cd2d1f658717e76eb6caf0ebc0408c1c3e79889436d4de8e629563541cf3e3ac",
                    "sha256:05ce1b7fa6b0ced945e9fc1d7f1f0dfa18b03b07cdd6519f6ea474b052de883b",
                    "sha256:9e9f88eff6885b01860209ee41f449670562ec3746b2b29dd15e691c1bb16b93",
                    "sha256:26962155532afb1cf5af9c8452dabade728ab6dcc317cdc035ba3dfb4a625de3",
                    "sha256:2a8c67bac577afb58a1c7f8027a3ea327157889daade6bc813255fed4b28c7c6",
                    "sha256:19cde6d3569afc75f1fe7aeb1b94ccc4af816b762b0d936c97794daf78ed89de",
                    "sha256:ea7164d23b98002b69a33a0e805eb3371773875a916e8a49ec706c920b856d61",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:6ccdb93e087c02477234e1031bae4936d610cfb73384f3bfce75e3fec5f6865b",
                    "sha256:81a01d84b811e7c03fe77d917b8b8f9cb24aff2ac7a9bf5d965db2c0eebc2620",
                    "sha256:66f994ecf87cd4a0b3d300ca40d4ef81cb5d11420cd6b62561a8a8d34c7902b5"
                ]
            }
        },
        "36-20231103": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f36container",
                    "FGC=f36",
                    "FBR=f36",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "iot-gate-imx8plus",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2023-11-04T17:03:55.996447339Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:22.742482656Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f36container FGC=f36 FBR=f36",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-04T20:03:43.247035495Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:cee460779f9d1124ed00f2513a5161d8a111efd58c800bb362e4de8ee2ff74c6 in / "
                },
                {
                    "created": "2023-05-04T20:03:44.015472382Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-04T14:05:51.77913656Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-04T14:05:51.77913656Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-04T14:05:51.77913656Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T14:34:52.146138052Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T14:34:53.485981428Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T14:34:53.485981428Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-04T14:34:53.501948442Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T14:34:53.534351296Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T14:34:53.551492077Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T14:34:53.551492077Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-04T14:34:59.163447727Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 36   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T14:34:59.407290408Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 36 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T17:03:55.857503111Z",
                    "created_by": "LABEL io.balena.device-type=iot-gate-imx8plus",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-04T17:03:55.857503111Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T17:03:55.996447339Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 36 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:cd2d1f658717e76eb6caf0ebc0408c1c3e79889436d4de8e629563541cf3e3ac",
                    "sha256:0951a032362c378170cff28bd69fda54b2a89b2358a705928c3e0a3e987de581",
                    "sha256:5f9c9ad1eab5caa95a2a457607e654cd1f1cb1ab74681557680887d6c77ced48",
                    "sha256:7226546a0d6b125b34e9ff76b8934bea9bdd152ede8f594fdb7130d1e5064b1d",
                    "sha256:0a83373bac0d6dfd8f735e9ed99ef382ad60478d2238eb196f172bc4f40a3c0b",
                    "sha256:70d6ae4d04a996f3217c4ca7fbc2a9523349cc8ee322d1680f24d9c9a796f04e",
                    "sha256:be43df9660d9c6e41bdf584275d2eb329a1e7e207869c5fc7274df5afd012bc5",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:1c056b9c3a4eaa0d2b14c92dafe4209699e36f30dc450f1fdb21c5503bb9e217",
                    "sha256:d73fef2635f9c01207f2b0ab35997f540a7ac9b9391c14bd7cc3756e0900befe",
                    "sha256:851e3a2ba501ad7f8a43407a707c2c5171d4b6e73bd55d30f36ca8f45e5a9196"
                ]
            }
        },
        "36-20231106": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f36container",
                    "FGC=f36",
                    "FBR=f36",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "iot-gate-imx8plus",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2023-11-06T12:32:12.377318701Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:22.742482656Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f36container FGC=f36 FBR=f36",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-04T20:03:43.247035495Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:cee460779f9d1124ed00f2513a5161d8a111efd58c800bb362e4de8ee2ff74c6 in / "
                },
                {
                    "created": "2023-05-04T20:03:44.015472382Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T09:12:35.649605283Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T09:12:35.649605283Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T09:12:35.649605283Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T09:41:53.130222292Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T09:41:54.435309446Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T09:41:54.435309446Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T09:41:54.44835057Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T09:41:54.477975525Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T09:41:54.492194652Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T09:41:54.492194652Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T09:42:00.200803708Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 36   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T09:42:00.424308379Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 36 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T12:32:12.213128704Z",
                    "created_by": "LABEL io.balena.device-type=iot-gate-imx8plus",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T12:32:12.213128704Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T12:32:12.377318701Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 36 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:cd2d1f658717e76eb6caf0ebc0408c1c3e79889436d4de8e629563541cf3e3ac",
                    "sha256:fbca01e85af298fa11995aee1bbd4658369fdb052de565344b04c2d7f69d042d",
                    "sha256:27ae2f7ef624598ce84145a76dbbeb76035333a3abb0bfddc5ab349f480f9827",
                    "sha256:ca23ee149b3d03336f78ece07cc113e5009e34ee3e2596c73ce1b0344a7d2a77",
                    "sha256:991306643e23f5f5fe287d555fb486b7c937395620e97cee8746e907e781f6d8",
                    "sha256:ea9472c023ea625c2ba44ca95f24307cd817e6b46bf9144332ac0b3ef6ee8ffb",
                    "sha256:8e88def0a52dfc3fcfdd1c0d176b0bf4cb0bf7c491ea42a1eda58dbec84ea733",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:0cd95cc22f322bdc8f04e36456eb49b4da908c3bb847d27d32a364f1d6d63253",
                    "sha256:0fbaf8466f82d3e5f0bd236097ed53f7d3f408a66f788b8d718c00ef6afbd7ea",
                    "sha256:2834d3037c6054d29ddd9db871aca95c8c5ac298d8acf48761a88090373c4758"
                ]
            }
        },
        "36-20231127": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f36container",
                    "FGC=f36",
                    "FBR=f36",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "iot-gate-imx8plus",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2023-12-01T13:07:26.306625603Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:22.742482656Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f36container FGC=f36 FBR=f36",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-04T20:03:43.247035495Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:cee460779f9d1124ed00f2513a5161d8a111efd58c800bb362e4de8ee2ff74c6 in / "
                },
                {
                    "created": "2023-05-04T20:03:44.015472382Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T10:52:16.234962769Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T10:52:16.234962769Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T10:52:16.234962769Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T11:10:25.32890941Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T11:10:26.409909941Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T11:10:26.409909941Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T11:10:26.419491063Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T11:10:26.428051209Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T11:10:26.43866507Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T11:10:26.43866507Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T11:10:30.344632509Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 36   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T11:10:30.508603857Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 36 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T13:07:26.157485267Z",
                    "created_by": "LABEL io.balena.device-type=iot-gate-imx8plus",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T13:07:26.157485267Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T13:07:26.306625603Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 36 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:cd2d1f658717e76eb6caf0ebc0408c1c3e79889436d4de8e629563541cf3e3ac",
                    "sha256:0988f5f003f0969108012f5d711269905aec30d22188d5f4f22f4806dffd83f5",
                    "sha256:6f4d35bad817db05463cdf3f43efd0862bdcab6e32ac7ab7a209c80048b3efa8",
                    "sha256:2cfb6e873f60f5ac84cabbf2304479d35de5ed6331cac9864aea1c0750b921f6",
                    "sha256:2ab48a6044f5f632d11728a70bfa1bf43fb88d3317b8a40a2871a3705ebf2bcd",
                    "sha256:7d8f3f0a00baddeca1dd73dda6026927206e5cec4531c9a682738b03fdd89845",
                    "sha256:9e8204a91a6fe42ae072bf8eca34adcbc454e46b72d65d5447362acd18c9bf6b",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:8445a4f8bc7491031f472014e64b8bcf637d32adcb86e6d9d61e6ecc0752c75a",
                    "sha256:05fdb67dea414b2e0524027710f9c77093102932761f7f2274bdc4533e851685",
                    "sha256:943f0f8bd4061fc6aee604e766aabd602db86eebe53a33cede1f05a81ae14f1d"
                ]
            }
        },
        "36-20231204": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f36container",
                    "FGC=f36",
                    "FBR=f36",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "iot-gate-imx8plus",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2023-12-06T22:55:32.348402606Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:22.742482656Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f36container FGC=f36 FBR=f36",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-04T20:03:43.247035495Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:cee460779f9d1124ed00f2513a5161d8a111efd58c800bb362e4de8ee2ff74c6 in / "
                },
                {
                    "created": "2023-05-04T20:03:44.015472382Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T20:40:18.714260335Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T20:40:18.714260335Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T20:40:18.714260335Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T20:58:20.290618266Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T20:58:21.05068733Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T20:58:21.05068733Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T20:58:21.063806516Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T20:58:21.103887941Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T20:58:21.118444605Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T20:58:21.118444605Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T20:58:24.947450657Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 36   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T20:58:25.0897754Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 36 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T22:55:32.208018723Z",
                    "created_by": "LABEL io.balena.device-type=iot-gate-imx8plus",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T22:55:32.208018723Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T22:55:32.348402606Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 36 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:cd2d1f658717e76eb6caf0ebc0408c1c3e79889436d4de8e629563541cf3e3ac",
                    "sha256:1c7db62dcfa18c79ff9899c266455d694030ff0f9a08cad5af263ccac7d5cfb2",
                    "sha256:6efaa96a298fa27a660499947df886ec2f9e28ca5c4c0696dc54c0daf012da13",
                    "sha256:7142d44abc28c8bbe2807baa567da519550742fd5824b6f07639b65ad8fdecca",
                    "sha256:1a40531135766009c0fa215d24e3e159db54a27d0a2a6c63d0b81504a20a4c89",
                    "sha256:ef2c2ed26c2c5681e957e761dc1ba1ffd9dcfdcf670bf1725173cb6a2a5866ce",
                    "sha256:998e969a67a9b686d7306559e3f40f25832ed04628aa75927315b8675a972f9a",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:8d72956b9828c889d2dbb87697fb117ef08f3865d27dc2aba86a25d15a369dae",
                    "sha256:5912446812b6eedecc78b906ff655e5378368e5f5a162277c42c83ddae5b8f7a",
                    "sha256:fe680e34d602c5fd30961d24685c9e73563e37d3f4a97c40d29832821ae441db"
                ]
            }
        },
        "36-20240205": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f36container",
                    "FGC=f36",
                    "FBR=f36",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "iot-gate-imx8plus",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2024-02-05T02:45:48.334138821Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:22.742482656Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f36container FGC=f36 FBR=f36",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-04T20:03:43.247035495Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:cee460779f9d1124ed00f2513a5161d8a111efd58c800bb362e4de8ee2ff74c6 in / "
                },
                {
                    "created": "2023-05-04T20:03:44.015472382Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-05T00:26:02.331567977Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-05T00:26:02.331567977Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-05T00:26:02.331567977Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T00:45:30.731081444Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T00:45:31.728887582Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T00:45:31.728887582Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-05T00:45:31.769327849Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T00:45:31.793427983Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T00:45:31.805803761Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T00:45:31.805803761Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-05T00:45:35.639168025Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 36   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T00:45:35.801238853Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 36 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T02:45:48.216794304Z",
                    "created_by": "LABEL io.balena.device-type=iot-gate-imx8plus",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-05T02:45:48.216794304Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T02:45:48.334138821Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 36 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:cd2d1f658717e76eb6caf0ebc0408c1c3e79889436d4de8e629563541cf3e3ac",
                    "sha256:70bec8b60420945ed68778b7651fdae5be1e762a544bda7cfe8646d3cfa496a8",
                    "sha256:46bb4885e89f9818f246467a6d6c22a4015e68ba76feafc7a95c2654ba1a864c",
                    "sha256:ffe006fc0417220624c7603f50db7af8cbaeb87775b8cad8121584dbc82190e0",
                    "sha256:7a426c3f2c3daf0a3a7b703c8810230c4f76ec54a5b3972aaf2ac4b44ed3c031",
                    "sha256:a17d3939a40b03dcd2d31f8b949632c3056d1fd7ba90b808bdcb69574f106cea",
                    "sha256:3a167f245df36cafb1689d9e83280f92db3a94410899c634a0e4eeb1278e12b2",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:7aefa85f0b6c07f7b79a8e1608f00c6e8d38f86e4d0051968c2fbf9587955bf2",
                    "sha256:ece46c986dd4daec283205c903eb31ec0f05beb20cc7a4dcef107c016a7b93c1",
                    "sha256:484b00ed5d598362abe9b29347f7a237e8b78e23ee37372e2bb62eeacb22242c"
                ]
            }
        },
        "36-20240227": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f36container",
                    "FGC=f36",
                    "FBR=f36",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "iot-gate-imx8plus",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2024-03-01T23:16:12.978976963Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:22.742482656Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f36container FGC=f36 FBR=f36",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-04T20:03:43.247035495Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:cee460779f9d1124ed00f2513a5161d8a111efd58c800bb362e4de8ee2ff74c6 in / "
                },
                {
                    "created": "2023-05-04T20:03:44.015472382Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T20:50:02.277291954Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T20:50:02.277291954Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T20:50:02.277291954Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:08:19.727432623Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:08:20.493667027Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:08:20.493667027Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T21:08:20.504558637Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:08:20.53410244Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:08:20.54393228Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:08:20.54393228Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T21:08:24.266191717Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 36   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:08:24.405560095Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 36 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T23:16:12.854672984Z",
                    "created_by": "LABEL io.balena.device-type=iot-gate-imx8plus",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T23:16:12.854672984Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T23:16:12.978976963Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 36 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:cd2d1f658717e76eb6caf0ebc0408c1c3e79889436d4de8e629563541cf3e3ac",
                    "sha256:e864a5fd5a85ea7de7c429ad3786adc43add7b3bad7605a5267f71b74ef4f46d",
                    "sha256:f9745bfda56c8769e29c7fe4418ec400bda3547d6f7e2b94cf1578c853decfb1",
                    "sha256:3b0bb44987d7ed3bb758a262b1cdb5cc89a8bb7caa6cf17d171ec9ffab456784",
                    "sha256:b668db57138d2f4d3a3a4fe2a4fca77d7a33a1147ea5193bc7f088a29bc3df6e",
                    "sha256:4fb9cef9cd8dfd649c46b33c2804e0ed65b39895160fd2940fa1e823a207137b",
                    "sha256:bf049f60667eee7c3ab494a865bbe46c948b2953f52aa4768f5eeb0ab3e7035f",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:9c4d3515b2ac6333e066ae20a1676f1c14cfa2e4013e83e034c0bfd5bce0137e",
                    "sha256:728663836f025d0c9d65bc4abe37bec8e7b611edcf40e3571c1163883ff61cba",
                    "sha256:ed04286efb18f4e7855df343fa753075e8cdfcc476d2c94e3c3f7f8d50205df1"
                ]
            }
        },
        "36-20240304": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f36container",
                    "FGC=f36",
                    "FBR=f36",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "iot-gate-imx8plus",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2024-03-05T10:50:08.299190812Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:22.742482656Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f36container FGC=f36 FBR=f36",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-04T20:03:43.247035495Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:cee460779f9d1124ed00f2513a5161d8a111efd58c800bb362e4de8ee2ff74c6 in / "
                },
                {
                    "created": "2023-05-04T20:03:44.015472382Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T08:24:14.922279421Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T08:24:14.922279421Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T08:24:14.922279421Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T08:42:21.859759897Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T08:42:23.326242746Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T08:42:23.326242746Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T08:42:23.336383154Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T08:42:23.346622195Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T08:42:23.377651932Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T08:42:23.377651932Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T08:42:27.266843534Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 36   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T08:42:27.402142548Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 36 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T10:50:08.181758934Z",
                    "created_by": "LABEL io.balena.device-type=iot-gate-imx8plus",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T10:50:08.181758934Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T10:50:08.299190812Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 36 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:cd2d1f658717e76eb6caf0ebc0408c1c3e79889436d4de8e629563541cf3e3ac",
                    "sha256:b59a6b5e1477f2c1760b9fafd534430e1b3e627940f206e2a912fc7cc99e8b5f",
                    "sha256:9d921ab8193391974ec2825bcb16b8687c1a495d839300d5976a46254f5cd319",
                    "sha256:357859910e787423ff442861725cd291a1d55ae5384cd316b21cac31999aed1e",
                    "sha256:41fb44363c3ee3098b05a3a643a8fe49f2a04b7ad67bcadf125aa1c2114bfece",
                    "sha256:34423e69f4515ba4a00b47bbfdf43063c6c1a46f6ec4f63ccb4a8f263d2854b1",
                    "sha256:2fcd075d152d2c1213ae41f4155e55bdab5602455031af70a1d006c325b4f722",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:d6c771aa19b713b8429a249e0328e601b8714348b76f00b828e7ae21393eedba",
                    "sha256:f3bd9f2ed37a653458bcce127dce3336c237d26ef82303d22492cc495825b9d6",
                    "sha256:a934d330e4bc8ebabaaebafe258d0b43980e410ad144e2f8bf82ac8929b2c8a5"
                ]
            }
        },
        "36-20240401": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f36container",
                    "FGC=f36",
                    "FBR=f36",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "iot-gate-imx8plus",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                }
            },
            "created": "2024-04-01T23:47:24.193445215Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:22.742482656Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f36container FGC=f36 FBR=f36",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-04T20:03:43.247035495Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:cee460779f9d1124ed00f2513a5161d8a111efd58c800bb362e4de8ee2ff74c6 in / "
                },
                {
                    "created": "2023-05-04T20:03:44.015472382Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T21:26:28.405977148Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T21:26:28.405977148Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T21:26:28.405977148Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T21:46:06.484116098Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T21:46:07.353362908Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T21:46:07.353362908Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T21:46:07.362716446Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T21:46:07.371056132Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T21:46:07.40557557Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T21:46:07.40557557Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T21:46:11.057940603Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 36   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T21:46:11.196274302Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 36 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T23:47:24.073906096Z",
                    "created_by": "LABEL io.balena.device-type=iot-gate-imx8plus",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T23:47:24.073906096Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T23:47:24.193445215Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 36 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:cd2d1f658717e76eb6caf0ebc0408c1c3e79889436d4de8e629563541cf3e3ac",
                    "sha256:0bcb93467a71db1d91f97206ca3d53ef7ed8325e886870c4f93254125506ccaf",
                    "sha256:ee5232de64f68e282c5152a2cf1ee54bf9a7144c661bb3f52975ed782c2f34c5",
                    "sha256:b5750ef0a3421417ee1aa11017b9e9cf5c58cb301c449b82d5c1db7ba06a1245",
                    "sha256:9e654b7993325650e6bdfe739d4519434ff8635d924db824318bd59c3052690a",
                    "sha256:6e0af07b0964b4201fcde2932ac07b59991415f655867d6e2b04e392114e6ef1",
                    "sha256:1a3e17d9bd0848c60750171e33d97cb75a1915a92f35b4c29e2e8e8088cbacf3",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:d024288ac0c97e8389226f634bba57c43cfd5b66544ada9f536ae4dc909264f6",
                    "sha256:6abefc0ce4295d67d0257b96846923b7bd0100aba49c22642a10ec6c622e4d32",
                    "sha256:28db173bc1135f72a884bae0b48d44ca944e96d6c7ac3fab5d3909d73222b866"
                ]
            }
        },
        "36-20240408": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f36container",
                    "FGC=f36",
                    "FBR=f36",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "iot-gate-imx8plus",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                }
            },
            "created": "2024-04-09T20:02:15.019145189Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:22.742482656Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f36container FGC=f36 FBR=f36",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-04T20:03:43.247035495Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:cee460779f9d1124ed00f2513a5161d8a111efd58c800bb362e4de8ee2ff74c6 in / "
                },
                {
                    "created": "2023-05-04T20:03:44.015472382Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:44.289415356Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:44.289415356Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:44.289415356Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:52:48.382975748Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:52:49.102483271Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:52:49.102483271Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:52:49.114498269Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:52:49.160258289Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:52:49.171704486Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:52:49.171704486Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:52:52.904600449Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 36   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:52:53.038869737Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 36 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T20:02:14.89785239Z",
                    "created_by": "LABEL io.balena.device-type=iot-gate-imx8plus",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T20:02:14.89785239Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T20:02:15.019145189Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 36 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:cd2d1f658717e76eb6caf0ebc0408c1c3e79889436d4de8e629563541cf3e3ac",
                    "sha256:96e8237f4a277db04c955fec05200b74f0da4fc11acef6e970444aa8d1ac4877",
                    "sha256:eebacd7727dd5f1adf1a458419bda175ca082cd8b48b6f5ab3162ceac82ead68",
                    "sha256:6847feafbfe5a6b06d1a3180b2725497fd90858670af4d7e07d859032794fee6",
                    "sha256:2329dcac2e30f4e2a05e85f5b8dbaa8227ee8eb85ef825dd7ac0cb8fad9571fe",
                    "sha256:ca51ce238f812d151cfee4e045e109e016d9a7f7d83543fe8f0f508ebc62399e",
                    "sha256:eaa4fd10880c293c373fc3aa5f36e6d0b2267661144b4b50b13423abdc65b432",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:57d8577708926141837b5cef818df1c257b9d966cce81182c4fbc54c0cf82336",
                    "sha256:f13b017c836ce0d039330be9672e6c9ef34137c140a07085471903cabf073e3b",
                    "sha256:86d4cc38ec98fb5e562b4bb9479638b57ad6b6de5e21fa4ce4dc5dfae1c8e4ec"
                ]
            }
        },
        "36-build": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f36container",
                    "FGC=f36",
                    "FBR=f36",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "iot-gate-imx8plus",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                }
            },
            "created": "2024-04-09T20:02:38.343339337Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:22.742482656Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f36container FGC=f36 FBR=f36",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-04T20:03:43.247035495Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:cee460779f9d1124ed00f2513a5161d8a111efd58c800bb362e4de8ee2ff74c6 in / "
                },
                {
                    "created": "2023-05-04T20:03:44.015472382Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:47.043995781Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:47.043995781Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:47.043995781Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:54:11.154952948Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:28:01.602172722Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-clients \t\tsubversion \t\tautoconf \t\tautomake \t\tbzip2-devel \t\tglib2-devel \t\tgcc \t\tgcc-c++ \t\tImageMagick \t\tImageMagick-devel \t\tkernel-devel \t\tlibcurl-devel \t\tlibevent-devel \t\tlibffi-devel \t\tlibjpeg-devel \t\tlibsqlite3x-devel \t\tlibxml2-devel \t\tlibxslt-devel \t\tlibyaml-devel \t\tmysql-devel \t\tmake \t\tncurses-devel \t\topenssl-devel \t\tpostgresql-devel \t\treadline-devel \t\tsqlite-devel \t\tzlib-devel \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:28:02.669154565Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:28:02.669154565Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T14:28:02.678110994Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:28:02.717145907Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:28:02.725640524Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:28:02.725640524Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T14:28:06.421086055Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 36   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:28:06.57556925Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 36 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T20:02:38.230542718Z",
                    "created_by": "LABEL io.balena.device-type=iot-gate-imx8plus",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T20:02:38.230542718Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T20:02:38.343339337Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 36 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:cd2d1f658717e76eb6caf0ebc0408c1c3e79889436d4de8e629563541cf3e3ac",
                    "sha256:0d92bca6cbdd49236d8ab390b5bb6ac41ad1f1c8d23f4e2eff84aa74e6b0a324",
                    "sha256:442f501872df89f0dc6c52cf8b623054b62b6ddedc68f22fc4d39264ea116c96",
                    "sha256:beee18a3a3563db9c8df1d299673d8892105565ce4a0fbc7ab63375155a5150a",
                    "sha256:19fe2308eeb82a5bdd2f562463979e055cd1b238180489f8127d3211082107bf",
                    "sha256:778d1a696f6513942baa52af3e55af5923b1f27ef37c676edafb2601a18fa36c",
                    "sha256:e06d6001a1da448e0bdf9cad4a5e6369a2e23db8b751ed0777b3e274c8de6aca",
                    "sha256:27daa9b0497e60e96c3080049db438971a51b6d95e6a5d96f55f19634ff03934",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:34f73f50614cc4a294d3688662502a33433d888ed3d269d982c05187c0af92df",
                    "sha256:0b4ea1c22c5ebd101eb8e31f77269831c629f71dfd46e6125d411784e2cbe4b0",
                    "sha256:980dac02c67a6f2e7fc4bbd7c69a2742f7cf900ed3ad40a3be8da362e76e6f1f"
                ]
            }
        },
        "36-build-20230502": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f36container",
                    "FGC=f36",
                    "FBR=f36",
                    "UDEV=off"
                ],
                "Cmd": null,
                "Image": "sha256:fc8ebc04efca96f68bddc2ced800fc05950c6293235f41f21f46213c5c2ed68b",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "OnBuild": null,
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-tx2",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                }
            },
            "container": "305e465d87149d1020cd5a91147fe817daa338e7ca138ec0985a636abe0e4720",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f36container",
                    "FGC=f36",
                    "FBR=f36",
                    "UDEV=off"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "[ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 36 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info"
                ],
                "Image": "sha256:fc8ebc04efca96f68bddc2ced800fc05950c6293235f41f21f46213c5c2ed68b",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-tx2",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                }
            },
            "created": "2023-05-08T15:29:54.460261621Z",
            "docker_version": "20.10.21",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:22.742482656Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f36container FGC=f36 FBR=f36",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-13T20:39:28.724714783Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:1e614afa90e013b347095b8b7b1b81500ef98b74ef30f606c0eeb1343a61839d in / "
                },
                {
                    "created": "2023-03-13T20:39:29.7812272Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-04-01T23:20:40.225983323Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL io.balena.architecture=aarch64",
                    "empty_layer": true
                },
                {
                    "created": "2023-04-01T23:20:40.456572622Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "empty_layer": true
                },
                {
                    "created": "2023-04-01T23:20:40.671215867Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:24916d641d0ee761d2bebd935412ac2263719e3f48829dd83555470573235ed9 in /usr/bin "
                },
                {
                    "created": "2023-04-01T23:40:32.529941955Z",
                    "created_by": "/bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\""
                },
                {
                    "created": "2023-04-02T00:14:50.963515366Z",
                    "created_by": "/bin/sh -c dnf install -y \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-clients \t\tsubversion \t\tautoconf \t\tautomake \t\tbzip2-devel \t\tglib2-devel \t\tgcc \t\tgcc-c++ \t\tImageMagick \t\tImageMagick-devel \t\tkernel-devel \t\tlibcurl-devel \t\tlibevent-devel \t\tlibffi-devel \t\tlibjpeg-devel \t\tlibsqlite3x-devel \t\tlibxml2-devel \t\tlibxslt-devel \t\tlibyaml-devel \t\tmysql-devel \t\tmake \t\tncurses-devel \t\topenssl-devel \t\tpostgresql-devel \t\treadline-devel \t\tsqlite-devel \t\tzlib-devel \t&& dnf clean all"
                },
                {
                    "created": "2023-04-02T00:14:53.962822366Z",
                    "created_by": "/bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end"
                },
                {
                    "created": "2023-04-02T00:14:54.082281986Z",
                    "created_by": "/bin/sh -c #(nop)  ENV UDEV=off",
                    "empty_layer": true
                },
                {
                    "created": "2023-04-02T00:14:54.178600289Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:0e8e5e7fcb5ff4b4caac2552d3c5cbf829703430466832566297680a5b09c62b in /usr/bin/entry.sh "
                },
                {
                    "created": "2023-04-02T00:14:54.273228371Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:207cdc191bada5970fb21d3481971b4a391e6e52061bd584dc75404c36d01fcf in /usr/bin/balena-info "
                },
                {
                    "created": "2023-04-02T00:14:54.360888428Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:def7f364bfe93992865dfba2017def9a3c407b6cf8ac0233dcd0aabaa9e4b75b in /usr/bin/balena-idle "
                },
                {
                    "created": "2023-04-02T00:14:54.454266771Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-04-02T00:14:59.023355947Z",
                    "created_by": "/bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 36   && rm -rf test-os.sh",
                    "empty_layer": true
                },
                {
                    "created": "2023-04-02T00:14:59.573952041Z",
                    "created_by": "/bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 36 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info"
                },
                {
                    "created": "2023-05-08T15:13:22.424662377Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL io.balena.device-type=jetson-tx2",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-08T15:29:53.843983523Z",
                    "created_by": "/bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all"
                },
                {
                    "created": "2023-05-08T15:29:54.460261621Z",
                    "created_by": "/bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 36 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:b6b09698065abba4f5eeb19d9e4e32aa2c4c1eeecc2df918bf73b86ead111ea0",
                    "sha256:67ed5eddcf9a3d6aca344d00e06a7a9ac7293e07b6d1af853ca11e5133346fa0",
                    "sha256:20a257cf794231e617222a2ab48ee1648fa3982d52ebef28460a81cc7984761c",
                    "sha256:277139ea4eb4ca4c543812f768f8244bb6398ba798e57e9bf610b12170ac434d",
                    "sha256:05c285a79becc275f58e660bdb08604423b0546263c94ffc17c9ca0201709495",
                    "sha256:a981bfd18540ea7f89e28af0b404730d6bd48998286237b917a7e94c794e9c39",
                    "sha256:6ba22763b19be0ec116c41880fd21c8d539f6809bb299d5c7b6cb0680ce2291d",
                    "sha256:3ef7ab410855321cf8c743aaf7a42398c82c435d16ee604825c80fb8aaf5f0e8",
                    "sha256:016f44c231a6543ceef4f6b6ec0a6c334743186c5bed33c056cd250e6ac9fa8c",
                    "sha256:ec138eb5efb66be2184a24a91e58ebba18707308c2644f112d76ac8988b4c843",
                    "sha256:d51f4fc8e2a59739cb04a4743103aa839e68d5d6630fcf96a5d9ed5197690d52"
                ]
            }
        },
        "36-build-20230530": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f36container",
                    "FGC=f36",
                    "FBR=f36",
                    "UDEV=off"
                ],
                "Cmd": null,
                "Image": "sha256:cfa8bf97b3f65652ff86b8e976308ad409df9d4d4834fdab380bbb1e436c8ebb",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "OnBuild": null,
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-tx2",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                }
            },
            "container": "38444f61f75b0dacdacfbd7798a8402acca368ec1623c6324dfcfba97cdd9d0b",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f36container",
                    "FGC=f36",
                    "FBR=f36",
                    "UDEV=off"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "[ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 36 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info"
                ],
                "Image": "sha256:cfa8bf97b3f65652ff86b8e976308ad409df9d4d4834fdab380bbb1e436c8ebb",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-tx2",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                }
            },
            "created": "2023-06-07T00:16:26.661644755Z",
            "docker_version": "20.10.21",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:22.742482656Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f36container FGC=f36 FBR=f36",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-04T20:03:43.247035495Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:cee460779f9d1124ed00f2513a5161d8a111efd58c800bb362e4de8ee2ff74c6 in / "
                },
                {
                    "created": "2023-05-04T20:03:44.015472382Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-05T01:05:18.044538547Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL io.balena.architecture=aarch64",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-05T01:05:18.445298053Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-05T01:05:18.985114572Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:24916d641d0ee761d2bebd935412ac2263719e3f48829dd83555470573235ed9 in /usr/bin "
                },
                {
                    "created": "2023-06-05T01:25:37.673310659Z",
                    "created_by": "/bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\""
                },
                {
                    "created": "2023-06-05T02:02:28.298961661Z",
                    "created_by": "/bin/sh -c dnf install -y \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-clients \t\tsubversion \t\tautoconf \t\tautomake \t\tbzip2-devel \t\tglib2-devel \t\tgcc \t\tgcc-c++ \t\tImageMagick \t\tImageMagick-devel \t\tkernel-devel \t\tlibcurl-devel \t\tlibevent-devel \t\tlibffi-devel \t\tlibjpeg-devel \t\tlibsqlite3x-devel \t\tlibxml2-devel \t\tlibxslt-devel \t\tlibyaml-devel \t\tmysql-devel \t\tmake \t\tncurses-devel \t\topenssl-devel \t\tpostgresql-devel \t\treadline-devel \t\tsqlite-devel \t\tzlib-devel \t&& dnf clean all"
                },
                {
                    "created": "2023-06-05T02:02:40.054221653Z",
                    "created_by": "/bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end"
                },
                {
                    "created": "2023-06-05T02:02:40.272326936Z",
                    "created_by": "/bin/sh -c #(nop)  ENV UDEV=off",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-05T02:02:40.409880128Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:0e8e5e7fcb5ff4b4caac2552d3c5cbf829703430466832566297680a5b09c62b in /usr/bin/entry.sh "
                },
                {
                    "created": "2023-06-05T02:02:40.548749247Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:207cdc191bada5970fb21d3481971b4a391e6e52061bd584dc75404c36d01fcf in /usr/bin/balena-info "
                },
                {
                    "created": "2023-06-05T02:02:40.691214112Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:def7f364bfe93992865dfba2017def9a3c407b6cf8ac0233dcd0aabaa9e4b75b in /usr/bin/balena-idle "
                },
                {
                    "created": "2023-06-05T02:02:40.857568533Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-05T02:02:45.430493569Z",
                    "created_by": "/bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 36   && rm -rf test-os.sh",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-05T02:02:46.118175322Z",
                    "created_by": "/bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 36 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info"
                },
                {
                    "created": "2023-06-06T23:57:55.868423726Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL io.balena.device-type=jetson-tx2",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-07T00:16:25.56239412Z",
                    "created_by": "/bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all"
                },
                {
                    "created": "2023-06-07T00:16:26.661644755Z",
                    "created_by": "/bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 36 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:cd2d1f658717e76eb6caf0ebc0408c1c3e79889436d4de8e629563541cf3e3ac",
                    "sha256:14ba70c5822910ee531cf53cc2aaa38785448dd98d0fff7dccedac58712056e5",
                    "sha256:97c587281066b363b7e9f42486c5e00caedddeeb2bf817ba3b23141b643c3f8b",
                    "sha256:99622b477806ad9cd261058778e721aaa7ca6ffd56899998e3ea5fac9afa206e",
                    "sha256:31cc4265d83c5df57474a96eb9a3764b9167b1ea9ca252ad3b2c645a79dea45f",
                    "sha256:63f00c4c21d193642a429256e5338939476d08822c157ace2666c01f5c3bc2c3",
                    "sha256:c36f98f4f87c20be8575049c35ea740c0f084b425f8e85cedb448f67e4cdefe2",
                    "sha256:4c9c3aa783298e96e81533d7da6616fbab4af673090e379a475b6d6f0b50f6f7",
                    "sha256:a5afb0f2d298728fe15caa35cde0eb61fbaff27af386c861f7c19f140f9d3c31",
                    "sha256:3aa25981ddea9e1c97896dacf08ee6965adc85df3a0be0d5d7eefc23ce0da2c9",
                    "sha256:2a13405c2fb4ac539931cd46e6c9e30d755c7647bbd8557ed7da228202152812"
                ]
            }
        },
        "36-build-20230803": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f36container",
                    "FGC=f36",
                    "FBR=f36",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "generic-aarch64",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2023-08-04T21:59:53.57654522Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:22.742482656Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f36container FGC=f36 FBR=f36",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-04T20:03:43.247035495Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:cee460779f9d1124ed00f2513a5161d8a111efd58c800bb362e4de8ee2ff74c6 in / "
                },
                {
                    "created": "2023-05-04T20:03:44.015472382Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-04T17:40:36.141576882Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-04T17:40:36.141576882Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-04T17:40:36.141576882Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-04T18:06:14.297664476Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-04T18:52:55.628642503Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-clients \t\tsubversion \t\tautoconf \t\tautomake \t\tbzip2-devel \t\tglib2-devel \t\tgcc \t\tgcc-c++ \t\tImageMagick \t\tImageMagick-devel \t\tkernel-devel \t\tlibcurl-devel \t\tlibevent-devel \t\tlibffi-devel \t\tlibjpeg-devel \t\tlibsqlite3x-devel \t\tlibxml2-devel \t\tlibxslt-devel \t\tlibyaml-devel \t\tmysql-devel \t\tmake \t\tncurses-devel \t\topenssl-devel \t\tpostgresql-devel \t\treadline-devel \t\tsqlite-devel \t\tzlib-devel \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-04T18:52:56.749401325Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-04T18:52:56.749401325Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-04T18:52:56.764426594Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-04T18:52:56.804448277Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-04T18:52:56.821630655Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-04T18:52:56.821630655Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-04T18:53:02.104924599Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 36   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-04T18:53:02.554784655Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 36 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-04T21:59:53.201727043Z",
                    "created_by": "LABEL io.balena.device-type=generic-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-04T21:59:53.201727043Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-04T21:59:53.57654522Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 36 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "moby.buildkit.buildinfo.v1": "eyJmcm9udGVuZCI6ImRvY2tlcmZpbGUudjAiLCJhdHRycyI6eyJmaWxlbmFtZSI6IkRvY2tlcmZpbGUifSwic291cmNlcyI6W3sidHlwZSI6ImRvY2tlci1pbWFnZSIsInJlZiI6ImRvY2tlci5pby9iYWxlbmFsaWIvYWFyY2g2NC1mZWRvcmE6MzYtYnVpbGQiLCJwaW4iOiJzaGEyNTY6ZDlkNDA2YzM0NGU5NGNjZjNkZTkxMzc1ZjhlZmUyMWZkZmI1YWYwOWFlOWM3ZmFhZjdiMGZiZjY0YjUyNzgzYSJ9XX0=",
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:cd2d1f658717e76eb6caf0ebc0408c1c3e79889436d4de8e629563541cf3e3ac",
                    "sha256:fbf8e5a70049ea22839d4ecedcaea4b522ccb8658c5b39e38b8ede3ff5b2cb09",
                    "sha256:adfc4adafd7d2920b35e241a395d5aff298ff1879801dd0d851ce4abed6f1ace",
                    "sha256:778488e50806aa539f6cb7b322bdc8cecc7f0ef8eb2033f8a70b0c981dcf3494",
                    "sha256:fad7c2abad0aab2fc98525333012a9840bb41c7e70fab1a021a28d9da21647d7",
                    "sha256:64585741a139e6a700e54a1070b19e4a1a07e3d0c6094eb759f2b73100f09710",
                    "sha256:96b828a947da5dc988974b70c179273bcea16ef46b0135e213f665300402119e",
                    "sha256:4e9949db579b4111d840402b6e1750e05be77147017f200eb8fe33f9bc3dfffa",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:380ff29893e0c8575aca3ddb147d325c25e5251adc2338dca986e843610bfa30",
                    "sha256:587ffaa0df6db272249da70b7be18660bcbc2078b87d7716b1a65c86e1af1e4b",
                    "sha256:c0b9137ad29a79b294c21707eeee172f93fbf04d142b1484c15c74992509d169"
                ]
            }
        },
        "36-build-20230811": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f36container",
                    "FGC=f36",
                    "FBR=f36",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "generic-aarch64",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2023-08-22T00:17:33.579849595Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:22.742482656Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f36container FGC=f36 FBR=f36",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-04T20:03:43.247035495Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:cee460779f9d1124ed00f2513a5161d8a111efd58c800bb362e4de8ee2ff74c6 in / "
                },
                {
                    "created": "2023-05-04T20:03:44.015472382Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-21T19:48:57.151333366Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-21T19:48:57.151333366Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-21T19:48:57.151333366Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-21T20:14:52.230469846Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-21T20:59:56.354093949Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-clients \t\tsubversion \t\tautoconf \t\tautomake \t\tbzip2-devel \t\tglib2-devel \t\tgcc \t\tgcc-c++ \t\tImageMagick \t\tImageMagick-devel \t\tkernel-devel \t\tlibcurl-devel \t\tlibevent-devel \t\tlibffi-devel \t\tlibjpeg-devel \t\tlibsqlite3x-devel \t\tlibxml2-devel \t\tlibxslt-devel \t\tlibyaml-devel \t\tmysql-devel \t\tmake \t\tncurses-devel \t\topenssl-devel \t\tpostgresql-devel \t\treadline-devel \t\tsqlite-devel \t\tzlib-devel \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-21T20:59:57.464201364Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-21T20:59:57.464201364Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-21T20:59:57.483077598Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-21T20:59:57.48958761Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-21T20:59:57.521070267Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-21T20:59:57.521070267Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-21T21:00:02.934965208Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 36   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-21T21:00:03.436513722Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 36 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-22T00:17:33.175362507Z",
                    "created_by": "LABEL io.balena.device-type=generic-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-22T00:17:33.175362507Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-22T00:17:33.579849595Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 36 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "moby.buildkit.buildinfo.v1": "eyJmcm9udGVuZCI6ImRvY2tlcmZpbGUudjAiLCJhdHRycyI6eyJmaWxlbmFtZSI6IkRvY2tlcmZpbGUifSwic291cmNlcyI6W3sidHlwZSI6ImRvY2tlci1pbWFnZSIsInJlZiI6ImRvY2tlci5pby9iYWxlbmFsaWIvYWFyY2g2NC1mZWRvcmE6MzYtYnVpbGQiLCJwaW4iOiJzaGEyNTY6MTc1YWNkNGZmZTZhY2RiYTNjMjBjNzYxMmQxOWMyYzc5NTM4YmRhNzVkMTI3OTUxNDlmY2RlZThhYjRhOGE1YiJ9XX0=",
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:cd2d1f658717e76eb6caf0ebc0408c1c3e79889436d4de8e629563541cf3e3ac",
                    "sha256:c0e303ea0334bcdd30fa29177f9e69da28153fb682ac4de72ac2e1a02c0f8ce7",
                    "sha256:b1767e5e76940a16775a33e58b13136490a86751c9fe3ee344bb327a54f445e7",
                    "sha256:5388fff4388564a9520574fc2e27e1c9d78a29b8fb5492ed8a42d60d40055ed6",
                    "sha256:772137c11abd0a58021a3e9e24988ba89a11a5ae348494fde03bf523dbb85271",
                    "sha256:4d2a67e706cbc12a0f4ea4b989ebea8f6a0d16c94a383c78c7530fbedf431cec",
                    "sha256:127080bab4280cdc3d92430506fbc482212f4654c82a44b75416577e12276d4a",
                    "sha256:f1d401b78a9cac396248a636bd8db24233505583c4f1034b4073cde85c6e9a42",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:e5552665cc43a91d268173f2efbf4be91d782571046ac5e396e161a5abf19018",
                    "sha256:41205a30e955c79b733560f3ede512932176879dbf40d133869c8b4217dadb35",
                    "sha256:2c9375739e416f42ebb2274a92087875275340b4d918317c058121e143c57ac5"
                ]
            }
        },
        "36-build-20230829": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f36container",
                    "FGC=f36",
                    "FBR=f36",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "generic-aarch64",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2023-09-02T08:13:59.041459204Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:22.742482656Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f36container FGC=f36 FBR=f36",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-04T20:03:43.247035495Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:cee460779f9d1124ed00f2513a5161d8a111efd58c800bb362e4de8ee2ff74c6 in / "
                },
                {
                    "created": "2023-05-04T20:03:44.015472382Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-02T03:51:11.242656749Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-02T03:51:11.242656749Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-02T03:51:11.242656749Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T04:16:49.188278521Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T05:02:50.318658176Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-clients \t\tsubversion \t\tautoconf \t\tautomake \t\tbzip2-devel \t\tglib2-devel \t\tgcc \t\tgcc-c++ \t\tImageMagick \t\tImageMagick-devel \t\tkernel-devel \t\tlibcurl-devel \t\tlibevent-devel \t\tlibffi-devel \t\tlibjpeg-devel \t\tlibsqlite3x-devel \t\tlibxml2-devel \t\tlibxslt-devel \t\tlibyaml-devel \t\tmysql-devel \t\tmake \t\tncurses-devel \t\topenssl-devel \t\tpostgresql-devel \t\treadline-devel \t\tsqlite-devel \t\tzlib-devel \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T05:02:51.727283547Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T05:02:51.727283547Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-02T05:02:51.760885325Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T05:02:51.769181044Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T05:02:51.776476461Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T05:02:51.776476461Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-02T05:02:57.154694434Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 36   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T05:02:57.510415366Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 36 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T08:13:58.709355105Z",
                    "created_by": "LABEL io.balena.device-type=generic-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-02T08:13:58.709355105Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T08:13:59.041459204Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 36 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:cd2d1f658717e76eb6caf0ebc0408c1c3e79889436d4de8e629563541cf3e3ac",
                    "sha256:e488629dc88977141b203763a345866dc21467cc18b228b17ec08963da10b6ae",
                    "sha256:5d60deaa6c1c2372902ebb735bd2845b8abbd62cb9c97fcee3ef199b12c73930",
                    "sha256:0d76a4b51f064d17efdbdcc3d6958c2342c689d0a9b7759dc1611be3e9a442bf",
                    "sha256:39ba64aa957e924d283809928a903f1fd24503e27a7b33a4626655756385c073",
                    "sha256:68a0a438af7c654460611c8b83fb9b0e81b64d41da25b2641e903b388447c0aa",
                    "sha256:0a6359df7d0f70ac16444aa0e0c188592815fd72d88a2cfc2b66f7696b6364b4",
                    "sha256:fcba3a3682bd06a6477ac76cf57432db4a189bf5d2e2cb74e5ac49955a5dc3b9",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:a0c28d08754aa585601c3d8478102ff1e1ac39ab8946a5166024019b69c88ae6",
                    "sha256:2525742470d03e5c769c1113208b84040296f11d7040310f4c072e5e1c481bc7",
                    "sha256:8e637cd8e71466836a2c880204c0d08801166cd228f85d5d278a2731283c4abc"
                ]
            }
        },
        "36-build-20230904": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f36container",
                    "FGC=f36",
                    "FBR=f36",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "generic-aarch64",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2023-09-09T08:25:42.407176845Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:22.742482656Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f36container FGC=f36 FBR=f36",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-04T20:03:43.247035495Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:cee460779f9d1124ed00f2513a5161d8a111efd58c800bb362e4de8ee2ff74c6 in / "
                },
                {
                    "created": "2023-05-04T20:03:44.015472382Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T06:28:26.44141738Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T06:28:26.44141738Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T06:28:26.44141738Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T06:52:10.14333682Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T07:37:48.484161578Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-clients \t\tsubversion \t\tautoconf \t\tautomake \t\tbzip2-devel \t\tglib2-devel \t\tgcc \t\tgcc-c++ \t\tImageMagick \t\tImageMagick-devel \t\tkernel-devel \t\tlibcurl-devel \t\tlibevent-devel \t\tlibffi-devel \t\tlibjpeg-devel \t\tlibsqlite3x-devel \t\tlibxml2-devel \t\tlibxslt-devel \t\tlibyaml-devel \t\tmysql-devel \t\tmake \t\tncurses-devel \t\topenssl-devel \t\tpostgresql-devel \t\treadline-devel \t\tsqlite-devel \t\tzlib-devel \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T07:37:49.864162587Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T07:37:49.864162587Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T07:37:49.92421462Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T07:37:49.942745854Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T07:37:49.952386132Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T07:37:49.952386132Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T07:37:54.836636718Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 36   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T07:37:55.219290743Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 36 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T08:25:42.028239709Z",
                    "created_by": "LABEL io.balena.device-type=generic-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T08:25:42.028239709Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T08:25:42.407176845Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 36 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:cd2d1f658717e76eb6caf0ebc0408c1c3e79889436d4de8e629563541cf3e3ac",
                    "sha256:05ce1b7fa6b0ced945e9fc1d7f1f0dfa18b03b07cdd6519f6ea474b052de883b",
                    "sha256:9e9f88eff6885b01860209ee41f449670562ec3746b2b29dd15e691c1bb16b93",
                    "sha256:cc6b9f773af4d7a1fad39b0ce68e4e9ffe1a1deae8b68c8279d243c56ee4bc1d",
                    "sha256:b465eb6a5e606e1cf825f8e7f2e3f07a81434ea9238295342d3c1785259cc4f4",
                    "sha256:a095b0378c335326849a8f8d980fa90f463287d8d30a50d4b2dd422396afb585",
                    "sha256:a3a129cbf4ebc3b5b82f45c931ec7626d8209c16b767280fb845b4ce5a04d78f",
                    "sha256:38ab8a459a656d42e1e011c177efe3094620d10d081c5f3ec0d77dc4baaa5426",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:e96693cd63491fd97c0e7e1a4608caeef679ecf8ef01e8436a578bbe6b707967",
                    "sha256:bef464527eed00ea099743583215489a0d12bfda28ac4ff97c832d72aed6e541",
                    "sha256:881d35639172b8467f9ccadf13cb0b2fce0f7a97905879333fa33a1331de09d3"
                ]
            }
        },
        "36-build-20230911": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f36container",
                    "FGC=f36",
                    "FBR=f36",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "iot-gate-imx8plus",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2023-09-12T03:04:33.144113346Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:22.742482656Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f36container FGC=f36 FBR=f36",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-04T20:03:43.247035495Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:cee460779f9d1124ed00f2513a5161d8a111efd58c800bb362e4de8ee2ff74c6 in / "
                },
                {
                    "created": "2023-05-04T20:03:44.015472382Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T06:28:26.44141738Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T06:28:26.44141738Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T06:28:26.44141738Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T06:52:10.14333682Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T07:37:48.484161578Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-clients \t\tsubversion \t\tautoconf \t\tautomake \t\tbzip2-devel \t\tglib2-devel \t\tgcc \t\tgcc-c++ \t\tImageMagick \t\tImageMagick-devel \t\tkernel-devel \t\tlibcurl-devel \t\tlibevent-devel \t\tlibffi-devel \t\tlibjpeg-devel \t\tlibsqlite3x-devel \t\tlibxml2-devel \t\tlibxslt-devel \t\tlibyaml-devel \t\tmysql-devel \t\tmake \t\tncurses-devel \t\topenssl-devel \t\tpostgresql-devel \t\treadline-devel \t\tsqlite-devel \t\tzlib-devel \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T07:37:49.864162587Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T07:37:49.864162587Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T07:37:49.92421462Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T07:37:49.942745854Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T07:37:49.952386132Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T07:37:49.952386132Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T07:37:54.836636718Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 36   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T07:37:55.219290743Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 36 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-12T03:04:33.022714469Z",
                    "created_by": "LABEL io.balena.device-type=iot-gate-imx8plus",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-12T03:04:33.022714469Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-12T03:04:33.144113346Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 36 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:cd2d1f658717e76eb6caf0ebc0408c1c3e79889436d4de8e629563541cf3e3ac",
                    "sha256:05ce1b7fa6b0ced945e9fc1d7f1f0dfa18b03b07cdd6519f6ea474b052de883b",
                    "sha256:9e9f88eff6885b01860209ee41f449670562ec3746b2b29dd15e691c1bb16b93",
                    "sha256:cc6b9f773af4d7a1fad39b0ce68e4e9ffe1a1deae8b68c8279d243c56ee4bc1d",
                    "sha256:b465eb6a5e606e1cf825f8e7f2e3f07a81434ea9238295342d3c1785259cc4f4",
                    "sha256:a095b0378c335326849a8f8d980fa90f463287d8d30a50d4b2dd422396afb585",
                    "sha256:a3a129cbf4ebc3b5b82f45c931ec7626d8209c16b767280fb845b4ce5a04d78f",
                    "sha256:38ab8a459a656d42e1e011c177efe3094620d10d081c5f3ec0d77dc4baaa5426",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:e96693cd63491fd97c0e7e1a4608caeef679ecf8ef01e8436a578bbe6b707967",
                    "sha256:e99d237a14fe3d98e324dd6e36cf33f9973f4fd915b2b6e0f0f91c3cdf60e27a",
                    "sha256:6367f625af8a5beb949b8755934038f3b25993c3d21c05e58f6d4c206a3b2ff0"
                ]
            }
        },
        "36-build-20231103": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f36container",
                    "FGC=f36",
                    "FBR=f36",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "iot-gate-imx8plus",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2023-11-04T17:04:14.570838846Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:22.742482656Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f36container FGC=f36 FBR=f36",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-04T20:03:43.247035495Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:cee460779f9d1124ed00f2513a5161d8a111efd58c800bb362e4de8ee2ff74c6 in / "
                },
                {
                    "created": "2023-05-04T20:03:44.015472382Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-04T14:05:50.102623549Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-04T14:05:50.102623549Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-04T14:05:50.102623549Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T14:32:00.021956482Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T15:21:28.43244893Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-clients \t\tsubversion \t\tautoconf \t\tautomake \t\tbzip2-devel \t\tglib2-devel \t\tgcc \t\tgcc-c++ \t\tImageMagick \t\tImageMagick-devel \t\tkernel-devel \t\tlibcurl-devel \t\tlibevent-devel \t\tlibffi-devel \t\tlibjpeg-devel \t\tlibsqlite3x-devel \t\tlibxml2-devel \t\tlibxslt-devel \t\tlibyaml-devel \t\tmysql-devel \t\tmake \t\tncurses-devel \t\topenssl-devel \t\tpostgresql-devel \t\treadline-devel \t\tsqlite-devel \t\tzlib-devel \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T15:21:29.762620973Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T15:21:29.762620973Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-04T15:21:29.779646292Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T15:21:29.961854941Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T15:21:30.0052635Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T15:21:30.0052635Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-04T15:21:35.605993316Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 36   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T15:21:35.825993306Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 36 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T17:04:14.391640447Z",
                    "created_by": "LABEL io.balena.device-type=iot-gate-imx8plus",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-04T17:04:14.391640447Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T17:04:14.570838846Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 36 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:cd2d1f658717e76eb6caf0ebc0408c1c3e79889436d4de8e629563541cf3e3ac",
                    "sha256:a63f36746b142a36f746685c04773f6310db178e94ea5b7bb76b9326f367b88f",
                    "sha256:de04dd6def25d680710bb5c91278de75bb0ecb04972e0a93b9a78b6f1ed2ed6c",
                    "sha256:721915a3d74dbf25bfc019117b408a792069e9d53c29bf08977a141703ef85b3",
                    "sha256:98ae1bd34f990b1d47d41e6275c4161a7672c984d3fdbbf3f7d4241aa96f5ee5",
                    "sha256:148a12c1a39c79204120b14418d599c9ec9b0d41e0c4d49421d4aa39a0af2159",
                    "sha256:23889e04df94067eb0674fc436d8fffe74e201acba16b934c164c823e9caf143",
                    "sha256:0db6a26d9ea8af21521bdb6f4e2c29fc06b1a88eabfce4072152fbad73abc802",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:04a7095e882568bf8c72411da171ca7778bcb6ab5344298ebdda62abb3057c02",
                    "sha256:242aedbeaba0888f1c3e6123529ad0ffe6050e34ab4217eefea7128320cbdeca",
                    "sha256:063e89a101a44e3b6481d02a4332769efa7712d2fef437866d1909e60743ab95"
                ]
            }
        },
        "36-build-20231106": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f36container",
                    "FGC=f36",
                    "FBR=f36",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "iot-gate-imx8plus",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2023-11-06T12:26:06.961769639Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:22.742482656Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f36container FGC=f36 FBR=f36",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-04T20:03:43.247035495Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:cee460779f9d1124ed00f2513a5161d8a111efd58c800bb362e4de8ee2ff74c6 in / "
                },
                {
                    "created": "2023-05-04T20:03:44.015472382Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T09:12:23.173496596Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T09:12:23.173496596Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T09:12:23.173496596Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T09:31:26.472831476Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T10:05:39.374343645Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-clients \t\tsubversion \t\tautoconf \t\tautomake \t\tbzip2-devel \t\tglib2-devel \t\tgcc \t\tgcc-c++ \t\tImageMagick \t\tImageMagick-devel \t\tkernel-devel \t\tlibcurl-devel \t\tlibevent-devel \t\tlibffi-devel \t\tlibjpeg-devel \t\tlibsqlite3x-devel \t\tlibxml2-devel \t\tlibxslt-devel \t\tlibyaml-devel \t\tmysql-devel \t\tmake \t\tncurses-devel \t\topenssl-devel \t\tpostgresql-devel \t\treadline-devel \t\tsqlite-devel \t\tzlib-devel \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T10:05:40.846202919Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T10:05:40.846202919Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T10:05:40.855350521Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T10:05:40.866126285Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T10:05:40.875330806Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T10:05:40.875330806Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T10:05:44.651612312Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 36   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T10:05:44.828843331Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 36 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T12:26:06.813550645Z",
                    "created_by": "LABEL io.balena.device-type=iot-gate-imx8plus",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T12:26:06.813550645Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T12:26:06.961769639Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 36 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:cd2d1f658717e76eb6caf0ebc0408c1c3e79889436d4de8e629563541cf3e3ac",
                    "sha256:732d36c0519b579947e1f3c144efc6bb1c72d6e34b7f88a20650ab53ac987a7c",
                    "sha256:e1e88c85aa4ff52a154ffa0934c27d786bcefb6e19f459952e4aa41d9427523d",
                    "sha256:2701c01331a3bff8a61fbfd8a9af42827a4aa18cae3a6433b22e92ee13f7fe07",
                    "sha256:02ff7fbb70f56fd918909e82b6643ca1ce474b0e6e3dc1875596c17fcdca07d1",
                    "sha256:989437bdcc558a8411fe768b647f798015adedc70b590681c71ce0518764aadf",
                    "sha256:9d13ee0df09beee1635448899d83cb34c171b9e4f5460d37b2b3eee915233054",
                    "sha256:7c32c3ec758ca9553393b3f1df23ffea0d6f72376f96932dc47a66bd6d022874",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:9c73f8e5c0cb7dfe6b412343d5a01f92808092fd0592c3651f78ce50a042afc8",
                    "sha256:fd9e63b1296790360bd564e8ae4cdb12410e1cda9efc76745b53a02fac96c014",
                    "sha256:498d6ad4266ae455177be06b3af5fa9373f87a688fc4517f8747947f079101e8"
                ]
            }
        },
        "36-build-20231127": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f36container",
                    "FGC=f36",
                    "FBR=f36",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "iot-gate-imx8plus",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2023-12-01T13:08:47.926615961Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:22.742482656Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f36container FGC=f36 FBR=f36",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-04T20:03:43.247035495Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:cee460779f9d1124ed00f2513a5161d8a111efd58c800bb362e4de8ee2ff74c6 in / "
                },
                {
                    "created": "2023-05-04T20:03:44.015472382Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T10:52:06.738067312Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T10:52:06.738067312Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T10:52:06.738067312Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T11:10:24.018253546Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T11:43:00.517543662Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-clients \t\tsubversion \t\tautoconf \t\tautomake \t\tbzip2-devel \t\tglib2-devel \t\tgcc \t\tgcc-c++ \t\tImageMagick \t\tImageMagick-devel \t\tkernel-devel \t\tlibcurl-devel \t\tlibevent-devel \t\tlibffi-devel \t\tlibjpeg-devel \t\tlibsqlite3x-devel \t\tlibxml2-devel \t\tlibxslt-devel \t\tlibyaml-devel \t\tmysql-devel \t\tmake \t\tncurses-devel \t\topenssl-devel \t\tpostgresql-devel \t\treadline-devel \t\tsqlite-devel \t\tzlib-devel \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T11:43:01.545407626Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T11:43:01.545407626Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T11:43:01.55432405Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T11:43:01.563269749Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T11:43:01.5730137Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T11:43:01.5730137Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T11:43:05.285904169Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 36   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T11:43:05.455974871Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 36 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T13:08:47.802077554Z",
                    "created_by": "LABEL io.balena.device-type=iot-gate-imx8plus",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T13:08:47.802077554Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T13:08:47.926615961Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 36 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:cd2d1f658717e76eb6caf0ebc0408c1c3e79889436d4de8e629563541cf3e3ac",
                    "sha256:1f177ebf18334e54b3e761ea719b35477d351671e3982d49cf2e6a749ce579ab",
                    "sha256:afd74a54833234407c7b03240f32dfda328d16bb109c75748f3ac560eb0c52a5",
                    "sha256:bf331644daa576fbb5b8586e516df3ef328ac237a48a73b5f5afb464739a535c",
                    "sha256:ae670d766b6e4b32a1516fa15eae5332b1329f8dcda118e46f83957e6b2ec162",
                    "sha256:09ac6fdfa3a43f75284c1ee054ce98e005c21311af2e3df2073ec52f557d769a",
                    "sha256:50dc6ee71681e6566ef126353669d6e44c1e0629ec326ad6482d6f72472d1642",
                    "sha256:4f354d95299d65d7e0b3f7f7563aa26e4ed7416c02c74361bda6c6c93e27863a",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:490bfd3b7c9de41c6dabbaf414009a79d987a5aa837a651fc02b3fdea1e112c5",
                    "sha256:4c0c4ec365a30c44c6da9fe5da3d409c63cfc1efff62e70e0d24334d307d585b",
                    "sha256:e6cb80aa48ec51ae8cb7eb0af321c332c3105918309d34692324bfc67a43ee89"
                ]
            }
        },
        "36-build-20231204": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f36container",
                    "FGC=f36",
                    "FBR=f36",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "iot-gate-imx8plus",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2023-12-06T22:55:34.055140151Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:22.742482656Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f36container FGC=f36 FBR=f36",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-04T20:03:43.247035495Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:cee460779f9d1124ed00f2513a5161d8a111efd58c800bb362e4de8ee2ff74c6 in / "
                },
                {
                    "created": "2023-05-04T20:03:44.015472382Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T20:40:31.234389525Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T20:40:31.234389525Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T20:40:31.234389525Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T20:58:36.648962471Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T21:31:58.739242472Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-clients \t\tsubversion \t\tautoconf \t\tautomake \t\tbzip2-devel \t\tglib2-devel \t\tgcc \t\tgcc-c++ \t\tImageMagick \t\tImageMagick-devel \t\tkernel-devel \t\tlibcurl-devel \t\tlibevent-devel \t\tlibffi-devel \t\tlibjpeg-devel \t\tlibsqlite3x-devel \t\tlibxml2-devel \t\tlibxslt-devel \t\tlibyaml-devel \t\tmysql-devel \t\tmake \t\tncurses-devel \t\topenssl-devel \t\tpostgresql-devel \t\treadline-devel \t\tsqlite-devel \t\tzlib-devel \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T21:32:00.034569347Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T21:32:00.034569347Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T21:32:00.044089353Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T21:32:00.054426886Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T21:32:00.065207966Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T21:32:00.065207966Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T21:32:03.916974271Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 36   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T21:32:04.094663656Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 36 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T22:55:33.931254258Z",
                    "created_by": "LABEL io.balena.device-type=iot-gate-imx8plus",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T22:55:33.931254258Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T22:55:34.055140151Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 36 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:cd2d1f658717e76eb6caf0ebc0408c1c3e79889436d4de8e629563541cf3e3ac",
                    "sha256:e541bc244135f4a534b32755e95a7a7bdae6f9ca9f8e19d4ee67b088ae367b86",
                    "sha256:e0d459eaeacb4f11c42c0d09a1aee8784ac0cb7cb73521999dc7b89e8c49dd26",
                    "sha256:f293b804776311e7b1f117dd5924dcb2ee39e552d9f79aa810c291c6920f66b3",
                    "sha256:5db57094f26aa01f5fcc1f52794e4bebad690560f42dee31fa5bcb39a7cbef8a",
                    "sha256:eed1c18dbf5477d8520287a188ee62280f4c2e2cdbff92b80b9766813ebceda3",
                    "sha256:b48c0406dd70e73ef73cf4c492c93f200a16c5226cdc7d62bd1cb3c085c626d0",
                    "sha256:bc9c45bc0f901ee781a4e34d92a2f1ff3107ffd7ebff1ca12dbdff5eea065640",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:d91b2e517bfe743a83ac51620cfe1cabcf024647c67d01ad2fab6821208b546f",
                    "sha256:90f236ddcf04a68848157a16244f439048277b1febf649927b83192b08ade601",
                    "sha256:0935cf7913909b842b1e7fd72172a23be2c2a54dbbfe33bafcc46be1bb1e721f"
                ]
            }
        },
        "36-build-20240205": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f36container",
                    "FGC=f36",
                    "FBR=f36",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "iot-gate-imx8plus",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2024-02-05T02:46:21.838253798Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:22.742482656Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f36container FGC=f36 FBR=f36",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-04T20:03:43.247035495Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:cee460779f9d1124ed00f2513a5161d8a111efd58c800bb362e4de8ee2ff74c6 in / "
                },
                {
                    "created": "2023-05-04T20:03:44.015472382Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-05T00:26:03.676079915Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-05T00:26:03.676079915Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-05T00:26:03.676079915Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T00:44:07.603291728Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T01:17:03.855255812Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-clients \t\tsubversion \t\tautoconf \t\tautomake \t\tbzip2-devel \t\tglib2-devel \t\tgcc \t\tgcc-c++ \t\tImageMagick \t\tImageMagick-devel \t\tkernel-devel \t\tlibcurl-devel \t\tlibevent-devel \t\tlibffi-devel \t\tlibjpeg-devel \t\tlibsqlite3x-devel \t\tlibxml2-devel \t\tlibxslt-devel \t\tlibyaml-devel \t\tmysql-devel \t\tmake \t\tncurses-devel \t\topenssl-devel \t\tpostgresql-devel \t\treadline-devel \t\tsqlite-devel \t\tzlib-devel \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T01:17:04.801615079Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T01:17:04.801615079Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-05T01:17:04.814085235Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T01:17:04.852162692Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T01:17:04.865067581Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T01:17:04.865067581Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-05T01:17:08.567247082Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 36   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T01:17:08.716497047Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 36 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T02:46:21.718179125Z",
                    "created_by": "LABEL io.balena.device-type=iot-gate-imx8plus",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-05T02:46:21.718179125Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T02:46:21.838253798Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 36 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:cd2d1f658717e76eb6caf0ebc0408c1c3e79889436d4de8e629563541cf3e3ac",
                    "sha256:9d44a11c7c4685e63e930874ba8ef98d23158b5146538f8777aea803a5b270aa",
                    "sha256:5744322f01c8168790b60628e81348558acca8bdab38a898297c49c00d70f30d",
                    "sha256:de88869daf243309e0876e6f37b3fb567ae4a6ab9ab5847e4a4233d0c3124858",
                    "sha256:a0bc242521196d2d113fd2d3024cb2195b296cc6c3a29389be7cfa0532e1b8ba",
                    "sha256:8c3c3cab1dadfdb076a40d329bc1382bb67566b5ef01d78198acf8f0b910ffc0",
                    "sha256:39e08dc57ab430c1e1cf9ce3efff02592819c75fc29c50216ef8125c8ee379b1",
                    "sha256:65b5e88f54346eb30ac80009479a7da0370d5a1719b16827ee1f9be87f13b638",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:19f0d68918ebdb8e6f5ec8a789d4e4a43a40e5449a5d8db5ac37cb6ab6ce6731",
                    "sha256:28440068f3d60c59afbd1292e48b15675a4044e065b1380d281564a0030ade04",
                    "sha256:e38bd1a98c420ff5eefb00d3fa188613867ad5cd3f3493f999051410df76ed14"
                ]
            }
        },
        "36-build-20240227": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f36container",
                    "FGC=f36",
                    "FBR=f36",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "iot-gate-imx8plus",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2024-03-01T23:16:28.040536402Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:22.742482656Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f36container FGC=f36 FBR=f36",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-04T20:03:43.247035495Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:cee460779f9d1124ed00f2513a5161d8a111efd58c800bb362e4de8ee2ff74c6 in / "
                },
                {
                    "created": "2023-05-04T20:03:44.015472382Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T20:49:58.363154019Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T20:49:58.363154019Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T20:49:58.363154019Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:08:04.379900568Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:40:35.627931567Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-clients \t\tsubversion \t\tautoconf \t\tautomake \t\tbzip2-devel \t\tglib2-devel \t\tgcc \t\tgcc-c++ \t\tImageMagick \t\tImageMagick-devel \t\tkernel-devel \t\tlibcurl-devel \t\tlibevent-devel \t\tlibffi-devel \t\tlibjpeg-devel \t\tlibsqlite3x-devel \t\tlibxml2-devel \t\tlibxslt-devel \t\tlibyaml-devel \t\tmysql-devel \t\tmake \t\tncurses-devel \t\topenssl-devel \t\tpostgresql-devel \t\treadline-devel \t\tsqlite-devel \t\tzlib-devel \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:40:36.537714792Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:40:36.537714792Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T21:40:36.546989379Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:40:36.594804758Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:40:36.60416499Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:40:36.60416499Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T21:40:40.28808744Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 36   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:40:40.427106425Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 36 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T23:16:27.918658044Z",
                    "created_by": "LABEL io.balena.device-type=iot-gate-imx8plus",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T23:16:27.918658044Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T23:16:28.040536402Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 36 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:cd2d1f658717e76eb6caf0ebc0408c1c3e79889436d4de8e629563541cf3e3ac",
                    "sha256:924511e57d79442e2bf7973c38bf065598299d04b35471eab6955bf1666a94c3",
                    "sha256:d8d421b9ca9350109e786f72e6e2d479a7489487e19e121318feb6a98d6a3c46",
                    "sha256:5f3f667a8c641c7ce78a40b3ed333bb6e0ab87339c88378778963b4d17b2c9fc",
                    "sha256:e4869793269ed6124242bff3bcd0855ddbf1e6efbe60a3c37e3456e6dc608009",
                    "sha256:45eef311cbfd9b312d16fefd5aeb94279dadb57574ed18613752a3c3088c383f",
                    "sha256:9f8687764932f06956ff72250373b745763b1d67354923fbeb20dc2f0b84160a",
                    "sha256:86e05b32052b9fc5471a682b1171640ad6904bc57aab472473741d6e4d43828e",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:a4f57127d58c280ca985f7dd4600d1dcea09b82842510826c8a125dacdb6e204",
                    "sha256:0a8014aaf37332c72da397c6ac985529c3ad66b9468b68b9e4cd92a4f96368d2",
                    "sha256:4a8ece25065d1bec1204a1db6e54f9b07ca7562ab76ce988e5318d09d45f9e48"
                ]
            }
        },
        "36-build-20240304": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f36container",
                    "FGC=f36",
                    "FBR=f36",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "iot-gate-imx8plus",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2024-03-05T10:49:09.328624931Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:22.742482656Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f36container FGC=f36 FBR=f36",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-04T20:03:43.247035495Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:cee460779f9d1124ed00f2513a5161d8a111efd58c800bb362e4de8ee2ff74c6 in / "
                },
                {
                    "created": "2023-05-04T20:03:44.015472382Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T08:24:14.448472689Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T08:24:14.448472689Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T08:24:14.448472689Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T08:42:18.25553519Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T09:14:44.522824852Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-clients \t\tsubversion \t\tautoconf \t\tautomake \t\tbzip2-devel \t\tglib2-devel \t\tgcc \t\tgcc-c++ \t\tImageMagick \t\tImageMagick-devel \t\tkernel-devel \t\tlibcurl-devel \t\tlibevent-devel \t\tlibffi-devel \t\tlibjpeg-devel \t\tlibsqlite3x-devel \t\tlibxml2-devel \t\tlibxslt-devel \t\tlibyaml-devel \t\tmysql-devel \t\tmake \t\tncurses-devel \t\topenssl-devel \t\tpostgresql-devel \t\treadline-devel \t\tsqlite-devel \t\tzlib-devel \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T09:14:45.462110722Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T09:14:45.462110722Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T09:14:45.470940956Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T09:14:45.479496771Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T09:14:45.527482553Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T09:14:45.527482553Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T09:14:49.280416402Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 36   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T09:14:49.423571008Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 36 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T10:49:09.215406119Z",
                    "created_by": "LABEL io.balena.device-type=iot-gate-imx8plus",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T10:49:09.215406119Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T10:49:09.328624931Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 36 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:cd2d1f658717e76eb6caf0ebc0408c1c3e79889436d4de8e629563541cf3e3ac",
                    "sha256:b4c9dd91c72a81ac4a202ff0748402788349045fe3597c5797e383c96bc6d5b1",
                    "sha256:2f66da14d3d811f096c502aea6eead828344d4261ec5532d960d5a2dcdbb469b",
                    "sha256:23fa17f094d5992d65ab0ef1f99d1fff0d19bb3fd83925b018b1f059aafe38f2",
                    "sha256:f0785819e675537037c3cea9aff10a75f41bed438da722737a4be828f7eefdff",
                    "sha256:042a6a8f10348e05e145155e331a88a844748f5a329d9a555e30c114ec629bda",
                    "sha256:24aae0af27aeacf4ccb8a67c40068bebf526a88e4cafdc8d4ab7ca35789e9843",
                    "sha256:960a300b6cbe4e665c6f83989be25a2cebe6fb08c225ee042d1cc9d97c62359a",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:8eb6e91fbc5c2b79888118e9c2ec63794a5c7a80698d9a85bcc2765b272d4017",
                    "sha256:381f2973c128721e1ba7f5f4ba348657ebe0c4875af9b47bf01ba4c1a86436b7",
                    "sha256:dbdd78e8757b4bec33377a371087fa97b9d3c1cf6c64d06d7d3c250b6a88fce2"
                ]
            }
        },
        "36-build-20240401": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f36container",
                    "FGC=f36",
                    "FBR=f36",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "iot-gate-imx8plus",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                }
            },
            "created": "2024-04-01T23:48:41.928641861Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:22.742482656Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f36container FGC=f36 FBR=f36",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-04T20:03:43.247035495Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:cee460779f9d1124ed00f2513a5161d8a111efd58c800bb362e4de8ee2ff74c6 in / "
                },
                {
                    "created": "2023-05-04T20:03:44.015472382Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T21:26:33.592232034Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T21:26:33.592232034Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T21:26:33.592232034Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T21:44:56.976355919Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T22:17:59.232940909Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-clients \t\tsubversion \t\tautoconf \t\tautomake \t\tbzip2-devel \t\tglib2-devel \t\tgcc \t\tgcc-c++ \t\tImageMagick \t\tImageMagick-devel \t\tkernel-devel \t\tlibcurl-devel \t\tlibevent-devel \t\tlibffi-devel \t\tlibjpeg-devel \t\tlibsqlite3x-devel \t\tlibxml2-devel \t\tlibxslt-devel \t\tlibyaml-devel \t\tmysql-devel \t\tmake \t\tncurses-devel \t\topenssl-devel \t\tpostgresql-devel \t\treadline-devel \t\tsqlite-devel \t\tzlib-devel \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T22:18:00.64397906Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T22:18:00.64397906Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T22:18:00.656438731Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T22:18:00.709323805Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T22:18:00.721159717Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T22:18:00.721159717Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T22:18:04.549668403Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 36   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T22:18:04.718901613Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 36 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T23:48:41.814012044Z",
                    "created_by": "LABEL io.balena.device-type=iot-gate-imx8plus",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T23:48:41.814012044Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T23:48:41.928641861Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 36 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:cd2d1f658717e76eb6caf0ebc0408c1c3e79889436d4de8e629563541cf3e3ac",
                    "sha256:e6fde95adb90fc37e5b5652ab1bad02d60972f7659f2fcbd7bc73b2927bbb4b0",
                    "sha256:373d666da30ff7d663200959ae1ce3843b56ceca76a0eed7bd53ca274da840c0",
                    "sha256:b52cfed2ec76d493b41d4bce85ce238bd70e369d628a9a9fcbc333a0d42f3350",
                    "sha256:0989bf391c4b6d2746e580cc456361f69a21dc59a4bc93b9df4820037790200b",
                    "sha256:a091b1b5298eb3ff3dd802fa8c77cf830fe9bf937bf359254f70135971eabe14",
                    "sha256:0160428d8d81785dcc48e306f2eeb07000e5122a3bc80f3e334a10cdc09baa7b",
                    "sha256:0e99d747dbcdff2971cfeb3a61d830f90d0feb64c9f71297d4197adf8adcde97",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:0625ea4b2bffeedc9748e66239136207a8bfda1fa83bd7da5d23eca35208195c",
                    "sha256:2fb5701fa9b063b1a5073a2b9248b40de4006b3b545eef4bf7441563a6a6fb85",
                    "sha256:2c74ba4e7740b0c1665cd205adb446c190b362d3d298117003d25b0e4f6c47d3"
                ]
            }
        },
        "36-build-20240408": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f36container",
                    "FGC=f36",
                    "FBR=f36",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "iot-gate-imx8plus",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                }
            },
            "created": "2024-04-09T20:02:38.343339337Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:22.742482656Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f36container FGC=f36 FBR=f36",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-04T20:03:43.247035495Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:cee460779f9d1124ed00f2513a5161d8a111efd58c800bb362e4de8ee2ff74c6 in / "
                },
                {
                    "created": "2023-05-04T20:03:44.015472382Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:47.043995781Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:47.043995781Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:47.043995781Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:54:11.154952948Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:28:01.602172722Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-clients \t\tsubversion \t\tautoconf \t\tautomake \t\tbzip2-devel \t\tglib2-devel \t\tgcc \t\tgcc-c++ \t\tImageMagick \t\tImageMagick-devel \t\tkernel-devel \t\tlibcurl-devel \t\tlibevent-devel \t\tlibffi-devel \t\tlibjpeg-devel \t\tlibsqlite3x-devel \t\tlibxml2-devel \t\tlibxslt-devel \t\tlibyaml-devel \t\tmysql-devel \t\tmake \t\tncurses-devel \t\topenssl-devel \t\tpostgresql-devel \t\treadline-devel \t\tsqlite-devel \t\tzlib-devel \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:28:02.669154565Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:28:02.669154565Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T14:28:02.678110994Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:28:02.717145907Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:28:02.725640524Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:28:02.725640524Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T14:28:06.421086055Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 36   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:28:06.57556925Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 36 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T20:02:38.230542718Z",
                    "created_by": "LABEL io.balena.device-type=iot-gate-imx8plus",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T20:02:38.230542718Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T20:02:38.343339337Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 36 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:cd2d1f658717e76eb6caf0ebc0408c1c3e79889436d4de8e629563541cf3e3ac",
                    "sha256:0d92bca6cbdd49236d8ab390b5bb6ac41ad1f1c8d23f4e2eff84aa74e6b0a324",
                    "sha256:442f501872df89f0dc6c52cf8b623054b62b6ddedc68f22fc4d39264ea116c96",
                    "sha256:beee18a3a3563db9c8df1d299673d8892105565ce4a0fbc7ab63375155a5150a",
                    "sha256:19fe2308eeb82a5bdd2f562463979e055cd1b238180489f8127d3211082107bf",
                    "sha256:778d1a696f6513942baa52af3e55af5923b1f27ef37c676edafb2601a18fa36c",
                    "sha256:e06d6001a1da448e0bdf9cad4a5e6369a2e23db8b751ed0777b3e274c8de6aca",
                    "sha256:27daa9b0497e60e96c3080049db438971a51b6d95e6a5d96f55f19634ff03934",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:34f73f50614cc4a294d3688662502a33433d888ed3d269d982c05187c0af92df",
                    "sha256:0b4ea1c22c5ebd101eb8e31f77269831c629f71dfd46e6125d411784e2cbe4b0",
                    "sha256:980dac02c67a6f2e7fc4bbd7c69a2742f7cf900ed3ad40a3be8da362e76e6f1f"
                ]
            }
        },
        "36-run": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f36container",
                    "FGC=f36",
                    "FBR=f36",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "iot-gate-imx8plus",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                }
            },
            "created": "2024-04-09T20:02:15.019145189Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:22.742482656Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f36container FGC=f36 FBR=f36",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-04T20:03:43.247035495Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:cee460779f9d1124ed00f2513a5161d8a111efd58c800bb362e4de8ee2ff74c6 in / "
                },
                {
                    "created": "2023-05-04T20:03:44.015472382Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:44.289415356Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:44.289415356Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:44.289415356Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:52:48.382975748Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:52:49.102483271Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:52:49.102483271Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:52:49.114498269Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:52:49.160258289Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:52:49.171704486Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:52:49.171704486Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:52:52.904600449Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 36   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:52:53.038869737Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 36 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T20:02:14.89785239Z",
                    "created_by": "LABEL io.balena.device-type=iot-gate-imx8plus",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T20:02:14.89785239Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T20:02:15.019145189Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 36 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:cd2d1f658717e76eb6caf0ebc0408c1c3e79889436d4de8e629563541cf3e3ac",
                    "sha256:96e8237f4a277db04c955fec05200b74f0da4fc11acef6e970444aa8d1ac4877",
                    "sha256:eebacd7727dd5f1adf1a458419bda175ca082cd8b48b6f5ab3162ceac82ead68",
                    "sha256:6847feafbfe5a6b06d1a3180b2725497fd90858670af4d7e07d859032794fee6",
                    "sha256:2329dcac2e30f4e2a05e85f5b8dbaa8227ee8eb85ef825dd7ac0cb8fad9571fe",
                    "sha256:ca51ce238f812d151cfee4e045e109e016d9a7f7d83543fe8f0f508ebc62399e",
                    "sha256:eaa4fd10880c293c373fc3aa5f36e6d0b2267661144b4b50b13423abdc65b432",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:57d8577708926141837b5cef818df1c257b9d966cce81182c4fbc54c0cf82336",
                    "sha256:f13b017c836ce0d039330be9672e6c9ef34137c140a07085471903cabf073e3b",
                    "sha256:86d4cc38ec98fb5e562b4bb9479638b57ad6b6de5e21fa4ce4dc5dfae1c8e4ec"
                ]
            }
        },
        "36-run-20230502": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f36container",
                    "FGC=f36",
                    "FBR=f36",
                    "UDEV=off"
                ],
                "Cmd": null,
                "Image": "sha256:608f2c688bf22d768faea8eb9a96d437d90064d4ce1f2e9ff548199379ba9559",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "OnBuild": null,
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-tx2",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                }
            },
            "container": "27a02cb2d2ce8932ed3ca4ed1f67fff578130900df15506f6f789fd89733435f",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f36container",
                    "FGC=f36",
                    "FBR=f36",
                    "UDEV=off"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "[ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 36 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info"
                ],
                "Image": "sha256:608f2c688bf22d768faea8eb9a96d437d90064d4ce1f2e9ff548199379ba9559",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-tx2",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                }
            },
            "created": "2023-05-08T15:04:15.3004883Z",
            "docker_version": "20.10.21",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:22.742482656Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f36container FGC=f36 FBR=f36",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-13T20:39:28.724714783Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:1e614afa90e013b347095b8b7b1b81500ef98b74ef30f606c0eeb1343a61839d in / "
                },
                {
                    "created": "2023-03-13T20:39:29.7812272Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-04-01T23:20:40.225983323Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL io.balena.architecture=aarch64",
                    "empty_layer": true
                },
                {
                    "created": "2023-04-01T23:20:40.456572622Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "empty_layer": true
                },
                {
                    "created": "2023-04-01T23:20:40.671215867Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:24916d641d0ee761d2bebd935412ac2263719e3f48829dd83555470573235ed9 in /usr/bin "
                },
                {
                    "created": "2023-04-01T23:40:32.529941955Z",
                    "created_by": "/bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\""
                },
                {
                    "created": "2023-04-02T00:15:10.51888747Z",
                    "created_by": "/bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end"
                },
                {
                    "created": "2023-04-02T00:15:10.662706416Z",
                    "created_by": "/bin/sh -c #(nop)  ENV UDEV=off",
                    "empty_layer": true
                },
                {
                    "created": "2023-04-02T00:15:10.773116101Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:0e8e5e7fcb5ff4b4caac2552d3c5cbf829703430466832566297680a5b09c62b in /usr/bin/entry.sh "
                },
                {
                    "created": "2023-04-02T00:15:10.881625198Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:207cdc191bada5970fb21d3481971b4a391e6e52061bd584dc75404c36d01fcf in /usr/bin/balena-info "
                },
                {
                    "created": "2023-04-02T00:15:10.984103971Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:def7f364bfe93992865dfba2017def9a3c407b6cf8ac0233dcd0aabaa9e4b75b in /usr/bin/balena-idle "
                },
                {
                    "created": "2023-04-02T00:15:11.102469064Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-04-02T00:15:15.554090902Z",
                    "created_by": "/bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 36   && rm -rf test-os.sh",
                    "empty_layer": true
                },
                {
                    "created": "2023-04-02T00:15:16.274075352Z",
                    "created_by": "/bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 36 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info"
                },
                {
                    "created": "2023-05-08T14:47:40.785932406Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL io.balena.device-type=jetson-tx2",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-08T15:04:14.677362936Z",
                    "created_by": "/bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all"
                },
                {
                    "created": "2023-05-08T15:04:15.3004883Z",
                    "created_by": "/bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 36 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:b6b09698065abba4f5eeb19d9e4e32aa2c4c1eeecc2df918bf73b86ead111ea0",
                    "sha256:67ed5eddcf9a3d6aca344d00e06a7a9ac7293e07b6d1af853ca11e5133346fa0",
                    "sha256:20a257cf794231e617222a2ab48ee1648fa3982d52ebef28460a81cc7984761c",
                    "sha256:918378b2eaef92551181515ed99d67ed0d6095716cd9ff816382b28d62cd718a",
                    "sha256:c34ce28257264806764d7d7f4b985f772912bde38be30c9cda6bf61d5400f207",
                    "sha256:a5dda905e0fa99bfce2de4f16e292baf6dfaffb95370cd414f4c3b7cd41cbda2",
                    "sha256:7263e7f17b39cd56c62bdd378ad804ed92a1ffe8d97d08f0b5efa9493d2fe217",
                    "sha256:e34791a006fd80ffda33c6c2cc5ca6255de5d183035c27b617332a035fd9217e",
                    "sha256:606ab18113cc28bb8b0c20ea525e5b22743704847f0b5ec53a02a5b6525f589a",
                    "sha256:7563b00bb24eca45be8b11cb99ebc808ada537f05f0d906e39c4963b60fc096f"
                ]
            }
        },
        "36-run-20230530": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f36container",
                    "FGC=f36",
                    "FBR=f36",
                    "UDEV=off"
                ],
                "Cmd": null,
                "Image": "sha256:471240683f9c9fd375c34390bb11b71c502617492aa9268d8b294665516ef533",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "OnBuild": null,
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-tx2",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                }
            },
            "container": "cd084c0634c74b66f59b84eef0436edbb4c24fb727e880b9c1b8f587855ad32e",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f36container",
                    "FGC=f36",
                    "FBR=f36",
                    "UDEV=off"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "[ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 36 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info"
                ],
                "Image": "sha256:471240683f9c9fd375c34390bb11b71c502617492aa9268d8b294665516ef533",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-tx2",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                }
            },
            "created": "2023-06-06T23:04:18.943843992Z",
            "docker_version": "20.10.21",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:22.742482656Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f36container FGC=f36 FBR=f36",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-04T20:03:43.247035495Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:cee460779f9d1124ed00f2513a5161d8a111efd58c800bb362e4de8ee2ff74c6 in / "
                },
                {
                    "created": "2023-05-04T20:03:44.015472382Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-05T01:05:18.044538547Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL io.balena.architecture=aarch64",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-05T01:05:18.445298053Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-05T01:05:18.985114572Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:24916d641d0ee761d2bebd935412ac2263719e3f48829dd83555470573235ed9 in /usr/bin "
                },
                {
                    "created": "2023-06-05T01:25:37.673310659Z",
                    "created_by": "/bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\""
                },
                {
                    "created": "2023-06-05T01:25:40.845054492Z",
                    "created_by": "/bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end"
                },
                {
                    "created": "2023-06-05T01:25:41.095090436Z",
                    "created_by": "/bin/sh -c #(nop)  ENV UDEV=off",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-05T01:25:41.289235457Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:0e8e5e7fcb5ff4b4caac2552d3c5cbf829703430466832566297680a5b09c62b in /usr/bin/entry.sh "
                },
                {
                    "created": "2023-06-05T01:25:41.44572259Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:207cdc191bada5970fb21d3481971b4a391e6e52061bd584dc75404c36d01fcf in /usr/bin/balena-info "
                },
                {
                    "created": "2023-06-05T01:25:41.596440952Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:def7f364bfe93992865dfba2017def9a3c407b6cf8ac0233dcd0aabaa9e4b75b in /usr/bin/balena-idle "
                },
                {
                    "created": "2023-06-05T01:25:41.820999829Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-05T01:25:46.893891108Z",
                    "created_by": "/bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 36   && rm -rf test-os.sh",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-05T01:25:47.812625125Z",
                    "created_by": "/bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 36 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info"
                },
                {
                    "created": "2023-06-06T22:45:54.815715097Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL io.balena.device-type=jetson-tx2",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-06T23:04:17.98475305Z",
                    "created_by": "/bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all"
                },
                {
                    "created": "2023-06-06T23:04:18.943843992Z",
                    "created_by": "/bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 36 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:cd2d1f658717e76eb6caf0ebc0408c1c3e79889436d4de8e629563541cf3e3ac",
                    "sha256:14ba70c5822910ee531cf53cc2aaa38785448dd98d0fff7dccedac58712056e5",
                    "sha256:97c587281066b363b7e9f42486c5e00caedddeeb2bf817ba3b23141b643c3f8b",
                    "sha256:af49fba9a468b93f823a404ab892a4fbc83346dbb8890ff50cf98531050a4b74",
                    "sha256:4bf633548e812a4579e72c509e0750b2c3b18766bfb0495dc11a00ffc7daf716",
                    "sha256:55d4a27300bf4fc325e7bb42d6f02e28d06ca59823d1c7fa7b1b11ed905c2a3c",
                    "sha256:dea7a48d3cf324d00cb7bc4667681b711a64aee2ee5b072b0a7e138855a7102f",
                    "sha256:04f6cdb135f1f74282869a9eb36e1ee2170ad942ff40248bc72a886599a6f611",
                    "sha256:ca567dd8f9f3858de847062fa32b72be8a5ae2f10106c0049ad987ad8ca473fd",
                    "sha256:20399a77786fb1f11eeb188806d4e3c272a35d14a67e1cdc2cb1d76cee558ea5"
                ]
            }
        },
        "36-run-20230803": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f36container",
                    "FGC=f36",
                    "FBR=f36",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "generic-aarch64",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2023-08-04T22:22:11.539530894Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:22.742482656Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f36container FGC=f36 FBR=f36",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-04T20:03:43.247035495Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:cee460779f9d1124ed00f2513a5161d8a111efd58c800bb362e4de8ee2ff74c6 in / "
                },
                {
                    "created": "2023-05-04T20:03:44.015472382Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-04T17:40:36.141576882Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-04T17:40:36.141576882Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-04T17:40:36.141576882Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-04T18:06:14.297664476Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-04T18:06:15.358838734Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-04T18:06:15.358838734Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-04T18:06:15.412515828Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-04T18:06:15.426515953Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-04T18:06:15.43645037Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-04T18:06:15.43645037Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-04T18:06:20.665036478Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 36   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-04T18:06:21.131901951Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 36 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-04T22:22:11.222185245Z",
                    "created_by": "LABEL io.balena.device-type=generic-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-04T22:22:11.222185245Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-04T22:22:11.539530894Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 36 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "moby.buildkit.buildinfo.v1": "eyJmcm9udGVuZCI6ImRvY2tlcmZpbGUudjAiLCJhdHRycyI6eyJmaWxlbmFtZSI6IkRvY2tlcmZpbGUifSwic291cmNlcyI6W3sidHlwZSI6ImRvY2tlci1pbWFnZSIsInJlZiI6ImRvY2tlci5pby9iYWxlbmFsaWIvYWFyY2g2NC1mZWRvcmE6MzYtcnVuIiwicGluIjoic2hhMjU2OmMyNmU2ZmM3MWNmNjljZWNjYjgzNTNlZWMxOTNkOTU0MDRiODAwZTAzYjJjMzY5ZDMzZjZmNDVlOTU4ZjY2NWYifV19",
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:cd2d1f658717e76eb6caf0ebc0408c1c3e79889436d4de8e629563541cf3e3ac",
                    "sha256:fbf8e5a70049ea22839d4ecedcaea4b522ccb8658c5b39e38b8ede3ff5b2cb09",
                    "sha256:adfc4adafd7d2920b35e241a395d5aff298ff1879801dd0d851ce4abed6f1ace",
                    "sha256:853761fe6cfc264c85bc70ff33887f7a4a7304394bcece9c10947f10f21d97c9",
                    "sha256:ac29ab898e94ca32ec66810fd8fc3f03f5e983e90c2d0b5b4d533b001298f39b",
                    "sha256:1d6c756ff8e22ccbfc3ea7ff15751dcf58cad18d6ff76fbd3420db0111c7ca24",
                    "sha256:514392aa70ce0b3f32efa7d2c78f6af266ee4404d22a8c939540f649a94683a9",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:852d14a6d834cc902b8b83870940fe4cae788eec813d3cdc5b72e00e1d7fffa2",
                    "sha256:58ed01b407259ec03191fef04797b6736108d6299a6ae7166b8535c4e108d8d2",
                    "sha256:c375ef454dc435ec4efd1ceb1fcc838a521095f913cbbb737e8763e619dbc1e6"
                ]
            }
        },
        "36-run-20230829": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f36container",
                    "FGC=f36",
                    "FBR=f36",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "generic-aarch64",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2023-09-02T08:36:27.753389924Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:22.742482656Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f36container FGC=f36 FBR=f36",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-04T20:03:43.247035495Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:cee460779f9d1124ed00f2513a5161d8a111efd58c800bb362e4de8ee2ff74c6 in / "
                },
                {
                    "created": "2023-05-04T20:03:44.015472382Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-02T03:51:11.242656749Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-02T03:51:11.242656749Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-02T03:51:11.242656749Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T04:16:49.188278521Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T04:16:50.627028573Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T04:16:50.627028573Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-02T04:16:50.638415505Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T04:16:50.655013053Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T04:16:50.661445372Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T04:16:50.661445372Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-02T04:16:56.029581054Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 36   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T04:16:56.441761743Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 36 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T08:36:27.33967037Z",
                    "created_by": "LABEL io.balena.device-type=generic-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-02T08:36:27.33967037Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T08:36:27.753389924Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 36 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:cd2d1f658717e76eb6caf0ebc0408c1c3e79889436d4de8e629563541cf3e3ac",
                    "sha256:e488629dc88977141b203763a345866dc21467cc18b228b17ec08963da10b6ae",
                    "sha256:5d60deaa6c1c2372902ebb735bd2845b8abbd62cb9c97fcee3ef199b12c73930",
                    "sha256:1270aeb3b12340e53bb44a8963832fab83e95ba3e8fdaf542ac74ff5ef0badb3",
                    "sha256:46b0d4015d0877a985555d00d708f241ea505630a1fa511974c5bd3ac3ac41cb",
                    "sha256:5824504cc9c95901f19344f626ad4c9ec30ee3567da01cdbc506b2087b6f56e9",
                    "sha256:515a05f2f3480d732d2f1d4ffbc863363c399ab9abe9970e085f0334177d1775",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:8bd06c23a5117511b75c64fade53c1c41c06ed8142439c842a3bc95f64f7d2b3",
                    "sha256:cdbe673064b67d0b64b871e15393c9c7adf50de5e0e6d821dfaf55b0c34da0bc",
                    "sha256:fbe78c445e483679fb6d5f12d8f2b82a27ed8fde47aa056b7b8e43264f9f2b94"
                ]
            }
        },
        "36-run-20230904": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f36container",
                    "FGC=f36",
                    "FBR=f36",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "generic-aarch64",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2023-09-09T08:03:01.357401763Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:22.742482656Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f36container FGC=f36 FBR=f36",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-04T20:03:43.247035495Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:cee460779f9d1124ed00f2513a5161d8a111efd58c800bb362e4de8ee2ff74c6 in / "
                },
                {
                    "created": "2023-05-04T20:03:44.015472382Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T06:28:26.44141738Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T06:28:26.44141738Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T06:28:26.44141738Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T06:52:10.14333682Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T06:52:11.560313193Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T06:52:11.560313193Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T06:52:11.59227561Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T06:52:11.60340289Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T06:52:11.619420149Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T06:52:11.619420149Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T06:52:16.486359938Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 36   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T06:52:16.828028478Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 36 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T08:03:01.072577935Z",
                    "created_by": "LABEL io.balena.device-type=generic-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T08:03:01.072577935Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T08:03:01.357401763Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 36 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:cd2d1f658717e76eb6caf0ebc0408c1c3e79889436d4de8e629563541cf3e3ac",
                    "sha256:05ce1b7fa6b0ced945e9fc1d7f1f0dfa18b03b07cdd6519f6ea474b052de883b",
                    "sha256:9e9f88eff6885b01860209ee41f449670562ec3746b2b29dd15e691c1bb16b93",
                    "sha256:26962155532afb1cf5af9c8452dabade728ab6dcc317cdc035ba3dfb4a625de3",
                    "sha256:2a8c67bac577afb58a1c7f8027a3ea327157889daade6bc813255fed4b28c7c6",
                    "sha256:19cde6d3569afc75f1fe7aeb1b94ccc4af816b762b0d936c97794daf78ed89de",
                    "sha256:ea7164d23b98002b69a33a0e805eb3371773875a916e8a49ec706c920b856d61",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:6ccdb93e087c02477234e1031bae4936d610cfb73384f3bfce75e3fec5f6865b",
                    "sha256:a894124dd372b2d3ce76dd12d97a67117ff06dfafe284fef152b8a29dad74532",
                    "sha256:b90b3cc56b64f5a8e8aa90da09b8ff9eae1a76c8c81febb71a3827094c80df09"
                ]
            }
        },
        "36-run-20230911": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f36container",
                    "FGC=f36",
                    "FBR=f36",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "iot-gate-imx8plus",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2023-09-12T03:03:27.647778562Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:22.742482656Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f36container FGC=f36 FBR=f36",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-04T20:03:43.247035495Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:cee460779f9d1124ed00f2513a5161d8a111efd58c800bb362e4de8ee2ff74c6 in / "
                },
                {
                    "created": "2023-05-04T20:03:44.015472382Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T06:28:26.44141738Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T06:28:26.44141738Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T06:28:26.44141738Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T06:52:10.14333682Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T06:52:11.560313193Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T06:52:11.560313193Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T06:52:11.59227561Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T06:52:11.60340289Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T06:52:11.619420149Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T06:52:11.619420149Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T06:52:16.486359938Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 36   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T06:52:16.828028478Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 36 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-12T03:03:27.510763842Z",
                    "created_by": "LABEL io.balena.device-type=iot-gate-imx8plus",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-12T03:03:27.510763842Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-12T03:03:27.647778562Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 36 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:cd2d1f658717e76eb6caf0ebc0408c1c3e79889436d4de8e629563541cf3e3ac",
                    "sha256:05ce1b7fa6b0ced945e9fc1d7f1f0dfa18b03b07cdd6519f6ea474b052de883b",
                    "sha256:9e9f88eff6885b01860209ee41f449670562ec3746b2b29dd15e691c1bb16b93",
                    "sha256:26962155532afb1cf5af9c8452dabade728ab6dcc317cdc035ba3dfb4a625de3",
                    "sha256:2a8c67bac577afb58a1c7f8027a3ea327157889daade6bc813255fed4b28c7c6",
                    "sha256:19cde6d3569afc75f1fe7aeb1b94ccc4af816b762b0d936c97794daf78ed89de",
                    "sha256:ea7164d23b98002b69a33a0e805eb3371773875a916e8a49ec706c920b856d61",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:6ccdb93e087c02477234e1031bae4936d610cfb73384f3bfce75e3fec5f6865b",
                    "sha256:81a01d84b811e7c03fe77d917b8b8f9cb24aff2ac7a9bf5d965db2c0eebc2620",
                    "sha256:66f994ecf87cd4a0b3d300ca40d4ef81cb5d11420cd6b62561a8a8d34c7902b5"
                ]
            }
        },
        "36-run-20231103": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f36container",
                    "FGC=f36",
                    "FBR=f36",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "iot-gate-imx8plus",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2023-11-04T17:03:55.996447339Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:22.742482656Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f36container FGC=f36 FBR=f36",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-04T20:03:43.247035495Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:cee460779f9d1124ed00f2513a5161d8a111efd58c800bb362e4de8ee2ff74c6 in / "
                },
                {
                    "created": "2023-05-04T20:03:44.015472382Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-04T14:05:51.77913656Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-04T14:05:51.77913656Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-04T14:05:51.77913656Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T14:34:52.146138052Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T14:34:53.485981428Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T14:34:53.485981428Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-04T14:34:53.501948442Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T14:34:53.534351296Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T14:34:53.551492077Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T14:34:53.551492077Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-04T14:34:59.163447727Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 36   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T14:34:59.407290408Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 36 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T17:03:55.857503111Z",
                    "created_by": "LABEL io.balena.device-type=iot-gate-imx8plus",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-04T17:03:55.857503111Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T17:03:55.996447339Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 36 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:cd2d1f658717e76eb6caf0ebc0408c1c3e79889436d4de8e629563541cf3e3ac",
                    "sha256:0951a032362c378170cff28bd69fda54b2a89b2358a705928c3e0a3e987de581",
                    "sha256:5f9c9ad1eab5caa95a2a457607e654cd1f1cb1ab74681557680887d6c77ced48",
                    "sha256:7226546a0d6b125b34e9ff76b8934bea9bdd152ede8f594fdb7130d1e5064b1d",
                    "sha256:0a83373bac0d6dfd8f735e9ed99ef382ad60478d2238eb196f172bc4f40a3c0b",
                    "sha256:70d6ae4d04a996f3217c4ca7fbc2a9523349cc8ee322d1680f24d9c9a796f04e",
                    "sha256:be43df9660d9c6e41bdf584275d2eb329a1e7e207869c5fc7274df5afd012bc5",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:1c056b9c3a4eaa0d2b14c92dafe4209699e36f30dc450f1fdb21c5503bb9e217",
                    "sha256:d73fef2635f9c01207f2b0ab35997f540a7ac9b9391c14bd7cc3756e0900befe",
                    "sha256:851e3a2ba501ad7f8a43407a707c2c5171d4b6e73bd55d30f36ca8f45e5a9196"
                ]
            }
        },
        "36-run-20231106": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f36container",
                    "FGC=f36",
                    "FBR=f36",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "iot-gate-imx8plus",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2023-11-06T12:32:12.377318701Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:22.742482656Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f36container FGC=f36 FBR=f36",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-04T20:03:43.247035495Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:cee460779f9d1124ed00f2513a5161d8a111efd58c800bb362e4de8ee2ff74c6 in / "
                },
                {
                    "created": "2023-05-04T20:03:44.015472382Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T09:12:35.649605283Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T09:12:35.649605283Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T09:12:35.649605283Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T09:41:53.130222292Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T09:41:54.435309446Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T09:41:54.435309446Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T09:41:54.44835057Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T09:41:54.477975525Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T09:41:54.492194652Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T09:41:54.492194652Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T09:42:00.200803708Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 36   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T09:42:00.424308379Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 36 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T12:32:12.213128704Z",
                    "created_by": "LABEL io.balena.device-type=iot-gate-imx8plus",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T12:32:12.213128704Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T12:32:12.377318701Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 36 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:cd2d1f658717e76eb6caf0ebc0408c1c3e79889436d4de8e629563541cf3e3ac",
                    "sha256:fbca01e85af298fa11995aee1bbd4658369fdb052de565344b04c2d7f69d042d",
                    "sha256:27ae2f7ef624598ce84145a76dbbeb76035333a3abb0bfddc5ab349f480f9827",
                    "sha256:ca23ee149b3d03336f78ece07cc113e5009e34ee3e2596c73ce1b0344a7d2a77",
                    "sha256:991306643e23f5f5fe287d555fb486b7c937395620e97cee8746e907e781f6d8",
                    "sha256:ea9472c023ea625c2ba44ca95f24307cd817e6b46bf9144332ac0b3ef6ee8ffb",
                    "sha256:8e88def0a52dfc3fcfdd1c0d176b0bf4cb0bf7c491ea42a1eda58dbec84ea733",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:0cd95cc22f322bdc8f04e36456eb49b4da908c3bb847d27d32a364f1d6d63253",
                    "sha256:0fbaf8466f82d3e5f0bd236097ed53f7d3f408a66f788b8d718c00ef6afbd7ea",
                    "sha256:2834d3037c6054d29ddd9db871aca95c8c5ac298d8acf48761a88090373c4758"
                ]
            }
        },
        "36-run-20231127": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f36container",
                    "FGC=f36",
                    "FBR=f36",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "iot-gate-imx8plus",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2023-12-01T13:07:26.306625603Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:22.742482656Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f36container FGC=f36 FBR=f36",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-04T20:03:43.247035495Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:cee460779f9d1124ed00f2513a5161d8a111efd58c800bb362e4de8ee2ff74c6 in / "
                },
                {
                    "created": "2023-05-04T20:03:44.015472382Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T10:52:16.234962769Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T10:52:16.234962769Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T10:52:16.234962769Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T11:10:25.32890941Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T11:10:26.409909941Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T11:10:26.409909941Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T11:10:26.419491063Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T11:10:26.428051209Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T11:10:26.43866507Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T11:10:26.43866507Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T11:10:30.344632509Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 36   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T11:10:30.508603857Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 36 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T13:07:26.157485267Z",
                    "created_by": "LABEL io.balena.device-type=iot-gate-imx8plus",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T13:07:26.157485267Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T13:07:26.306625603Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 36 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:cd2d1f658717e76eb6caf0ebc0408c1c3e79889436d4de8e629563541cf3e3ac",
                    "sha256:0988f5f003f0969108012f5d711269905aec30d22188d5f4f22f4806dffd83f5",
                    "sha256:6f4d35bad817db05463cdf3f43efd0862bdcab6e32ac7ab7a209c80048b3efa8",
                    "sha256:2cfb6e873f60f5ac84cabbf2304479d35de5ed6331cac9864aea1c0750b921f6",
                    "sha256:2ab48a6044f5f632d11728a70bfa1bf43fb88d3317b8a40a2871a3705ebf2bcd",
                    "sha256:7d8f3f0a00baddeca1dd73dda6026927206e5cec4531c9a682738b03fdd89845",
                    "sha256:9e8204a91a6fe42ae072bf8eca34adcbc454e46b72d65d5447362acd18c9bf6b",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:8445a4f8bc7491031f472014e64b8bcf637d32adcb86e6d9d61e6ecc0752c75a",
                    "sha256:05fdb67dea414b2e0524027710f9c77093102932761f7f2274bdc4533e851685",
                    "sha256:943f0f8bd4061fc6aee604e766aabd602db86eebe53a33cede1f05a81ae14f1d"
                ]
            }
        },
        "36-run-20231204": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f36container",
                    "FGC=f36",
                    "FBR=f36",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "iot-gate-imx8plus",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2023-12-06T22:55:32.348402606Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:22.742482656Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f36container FGC=f36 FBR=f36",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-04T20:03:43.247035495Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:cee460779f9d1124ed00f2513a5161d8a111efd58c800bb362e4de8ee2ff74c6 in / "
                },
                {
                    "created": "2023-05-04T20:03:44.015472382Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T20:40:18.714260335Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T20:40:18.714260335Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T20:40:18.714260335Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T20:58:20.290618266Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T20:58:21.05068733Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T20:58:21.05068733Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T20:58:21.063806516Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T20:58:21.103887941Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T20:58:21.118444605Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T20:58:21.118444605Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T20:58:24.947450657Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 36   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T20:58:25.0897754Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 36 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T22:55:32.208018723Z",
                    "created_by": "LABEL io.balena.device-type=iot-gate-imx8plus",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T22:55:32.208018723Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T22:55:32.348402606Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 36 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:cd2d1f658717e76eb6caf0ebc0408c1c3e79889436d4de8e629563541cf3e3ac",
                    "sha256:1c7db62dcfa18c79ff9899c266455d694030ff0f9a08cad5af263ccac7d5cfb2",
                    "sha256:6efaa96a298fa27a660499947df886ec2f9e28ca5c4c0696dc54c0daf012da13",
                    "sha256:7142d44abc28c8bbe2807baa567da519550742fd5824b6f07639b65ad8fdecca",
                    "sha256:1a40531135766009c0fa215d24e3e159db54a27d0a2a6c63d0b81504a20a4c89",
                    "sha256:ef2c2ed26c2c5681e957e761dc1ba1ffd9dcfdcf670bf1725173cb6a2a5866ce",
                    "sha256:998e969a67a9b686d7306559e3f40f25832ed04628aa75927315b8675a972f9a",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:8d72956b9828c889d2dbb87697fb117ef08f3865d27dc2aba86a25d15a369dae",
                    "sha256:5912446812b6eedecc78b906ff655e5378368e5f5a162277c42c83ddae5b8f7a",
                    "sha256:fe680e34d602c5fd30961d24685c9e73563e37d3f4a97c40d29832821ae441db"
                ]
            }
        },
        "36-run-20240205": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f36container",
                    "FGC=f36",
                    "FBR=f36",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "iot-gate-imx8plus",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2024-02-05T02:45:48.334138821Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:22.742482656Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f36container FGC=f36 FBR=f36",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-04T20:03:43.247035495Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:cee460779f9d1124ed00f2513a5161d8a111efd58c800bb362e4de8ee2ff74c6 in / "
                },
                {
                    "created": "2023-05-04T20:03:44.015472382Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-05T00:26:02.331567977Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-05T00:26:02.331567977Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-05T00:26:02.331567977Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T00:45:30.731081444Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T00:45:31.728887582Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T00:45:31.728887582Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-05T00:45:31.769327849Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T00:45:31.793427983Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T00:45:31.805803761Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T00:45:31.805803761Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-05T00:45:35.639168025Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 36   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T00:45:35.801238853Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 36 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T02:45:48.216794304Z",
                    "created_by": "LABEL io.balena.device-type=iot-gate-imx8plus",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-05T02:45:48.216794304Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T02:45:48.334138821Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 36 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:cd2d1f658717e76eb6caf0ebc0408c1c3e79889436d4de8e629563541cf3e3ac",
                    "sha256:70bec8b60420945ed68778b7651fdae5be1e762a544bda7cfe8646d3cfa496a8",
                    "sha256:46bb4885e89f9818f246467a6d6c22a4015e68ba76feafc7a95c2654ba1a864c",
                    "sha256:ffe006fc0417220624c7603f50db7af8cbaeb87775b8cad8121584dbc82190e0",
                    "sha256:7a426c3f2c3daf0a3a7b703c8810230c4f76ec54a5b3972aaf2ac4b44ed3c031",
                    "sha256:a17d3939a40b03dcd2d31f8b949632c3056d1fd7ba90b808bdcb69574f106cea",
                    "sha256:3a167f245df36cafb1689d9e83280f92db3a94410899c634a0e4eeb1278e12b2",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:7aefa85f0b6c07f7b79a8e1608f00c6e8d38f86e4d0051968c2fbf9587955bf2",
                    "sha256:ece46c986dd4daec283205c903eb31ec0f05beb20cc7a4dcef107c016a7b93c1",
                    "sha256:484b00ed5d598362abe9b29347f7a237e8b78e23ee37372e2bb62eeacb22242c"
                ]
            }
        },
        "36-run-20240227": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f36container",
                    "FGC=f36",
                    "FBR=f36",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "iot-gate-imx8plus",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2024-03-01T23:16:12.978976963Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:22.742482656Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f36container FGC=f36 FBR=f36",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-04T20:03:43.247035495Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:cee460779f9d1124ed00f2513a5161d8a111efd58c800bb362e4de8ee2ff74c6 in / "
                },
                {
                    "created": "2023-05-04T20:03:44.015472382Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T20:50:02.277291954Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T20:50:02.277291954Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T20:50:02.277291954Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:08:19.727432623Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:08:20.493667027Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:08:20.493667027Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T21:08:20.504558637Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:08:20.53410244Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:08:20.54393228Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:08:20.54393228Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T21:08:24.266191717Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 36   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:08:24.405560095Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 36 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T23:16:12.854672984Z",
                    "created_by": "LABEL io.balena.device-type=iot-gate-imx8plus",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T23:16:12.854672984Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T23:16:12.978976963Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 36 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:cd2d1f658717e76eb6caf0ebc0408c1c3e79889436d4de8e629563541cf3e3ac",
                    "sha256:e864a5fd5a85ea7de7c429ad3786adc43add7b3bad7605a5267f71b74ef4f46d",
                    "sha256:f9745bfda56c8769e29c7fe4418ec400bda3547d6f7e2b94cf1578c853decfb1",
                    "sha256:3b0bb44987d7ed3bb758a262b1cdb5cc89a8bb7caa6cf17d171ec9ffab456784",
                    "sha256:b668db57138d2f4d3a3a4fe2a4fca77d7a33a1147ea5193bc7f088a29bc3df6e",
                    "sha256:4fb9cef9cd8dfd649c46b33c2804e0ed65b39895160fd2940fa1e823a207137b",
                    "sha256:bf049f60667eee7c3ab494a865bbe46c948b2953f52aa4768f5eeb0ab3e7035f",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:9c4d3515b2ac6333e066ae20a1676f1c14cfa2e4013e83e034c0bfd5bce0137e",
                    "sha256:728663836f025d0c9d65bc4abe37bec8e7b611edcf40e3571c1163883ff61cba",
                    "sha256:ed04286efb18f4e7855df343fa753075e8cdfcc476d2c94e3c3f7f8d50205df1"
                ]
            }
        },
        "36-run-20240304": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f36container",
                    "FGC=f36",
                    "FBR=f36",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "iot-gate-imx8plus",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2024-03-05T10:50:08.299190812Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:22.742482656Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f36container FGC=f36 FBR=f36",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-04T20:03:43.247035495Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:cee460779f9d1124ed00f2513a5161d8a111efd58c800bb362e4de8ee2ff74c6 in / "
                },
                {
                    "created": "2023-05-04T20:03:44.015472382Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T08:24:14.922279421Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T08:24:14.922279421Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T08:24:14.922279421Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T08:42:21.859759897Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T08:42:23.326242746Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T08:42:23.326242746Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T08:42:23.336383154Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T08:42:23.346622195Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T08:42:23.377651932Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T08:42:23.377651932Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T08:42:27.266843534Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 36   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T08:42:27.402142548Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 36 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T10:50:08.181758934Z",
                    "created_by": "LABEL io.balena.device-type=iot-gate-imx8plus",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T10:50:08.181758934Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T10:50:08.299190812Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 36 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:cd2d1f658717e76eb6caf0ebc0408c1c3e79889436d4de8e629563541cf3e3ac",
                    "sha256:b59a6b5e1477f2c1760b9fafd534430e1b3e627940f206e2a912fc7cc99e8b5f",
                    "sha256:9d921ab8193391974ec2825bcb16b8687c1a495d839300d5976a46254f5cd319",
                    "sha256:357859910e787423ff442861725cd291a1d55ae5384cd316b21cac31999aed1e",
                    "sha256:41fb44363c3ee3098b05a3a643a8fe49f2a04b7ad67bcadf125aa1c2114bfece",
                    "sha256:34423e69f4515ba4a00b47bbfdf43063c6c1a46f6ec4f63ccb4a8f263d2854b1",
                    "sha256:2fcd075d152d2c1213ae41f4155e55bdab5602455031af70a1d006c325b4f722",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:d6c771aa19b713b8429a249e0328e601b8714348b76f00b828e7ae21393eedba",
                    "sha256:f3bd9f2ed37a653458bcce127dce3336c237d26ef82303d22492cc495825b9d6",
                    "sha256:a934d330e4bc8ebabaaebafe258d0b43980e410ad144e2f8bf82ac8929b2c8a5"
                ]
            }
        },
        "36-run-20240401": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f36container",
                    "FGC=f36",
                    "FBR=f36",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "iot-gate-imx8plus",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                }
            },
            "created": "2024-04-01T23:47:24.193445215Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:22.742482656Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f36container FGC=f36 FBR=f36",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-04T20:03:43.247035495Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:cee460779f9d1124ed00f2513a5161d8a111efd58c800bb362e4de8ee2ff74c6 in / "
                },
                {
                    "created": "2023-05-04T20:03:44.015472382Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T21:26:28.405977148Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T21:26:28.405977148Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T21:26:28.405977148Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T21:46:06.484116098Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T21:46:07.353362908Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T21:46:07.353362908Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T21:46:07.362716446Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T21:46:07.371056132Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T21:46:07.40557557Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T21:46:07.40557557Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T21:46:11.057940603Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 36   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T21:46:11.196274302Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 36 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T23:47:24.073906096Z",
                    "created_by": "LABEL io.balena.device-type=iot-gate-imx8plus",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T23:47:24.073906096Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T23:47:24.193445215Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 36 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:cd2d1f658717e76eb6caf0ebc0408c1c3e79889436d4de8e629563541cf3e3ac",
                    "sha256:0bcb93467a71db1d91f97206ca3d53ef7ed8325e886870c4f93254125506ccaf",
                    "sha256:ee5232de64f68e282c5152a2cf1ee54bf9a7144c661bb3f52975ed782c2f34c5",
                    "sha256:b5750ef0a3421417ee1aa11017b9e9cf5c58cb301c449b82d5c1db7ba06a1245",
                    "sha256:9e654b7993325650e6bdfe739d4519434ff8635d924db824318bd59c3052690a",
                    "sha256:6e0af07b0964b4201fcde2932ac07b59991415f655867d6e2b04e392114e6ef1",
                    "sha256:1a3e17d9bd0848c60750171e33d97cb75a1915a92f35b4c29e2e8e8088cbacf3",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:d024288ac0c97e8389226f634bba57c43cfd5b66544ada9f536ae4dc909264f6",
                    "sha256:6abefc0ce4295d67d0257b96846923b7bd0100aba49c22642a10ec6c622e4d32",
                    "sha256:28db173bc1135f72a884bae0b48d44ca944e96d6c7ac3fab5d3909d73222b866"
                ]
            }
        },
        "36-run-20240408": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f36container",
                    "FGC=f36",
                    "FBR=f36",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "iot-gate-imx8plus",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                }
            },
            "created": "2024-04-09T20:02:15.019145189Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:22.742482656Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f36container FGC=f36 FBR=f36",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-04T20:03:43.247035495Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:cee460779f9d1124ed00f2513a5161d8a111efd58c800bb362e4de8ee2ff74c6 in / "
                },
                {
                    "created": "2023-05-04T20:03:44.015472382Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:44.289415356Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:44.289415356Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:44.289415356Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:52:48.382975748Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:52:49.102483271Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:52:49.102483271Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:52:49.114498269Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:52:49.160258289Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:52:49.171704486Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:52:49.171704486Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:52:52.904600449Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 36   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:52:53.038869737Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 36 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T20:02:14.89785239Z",
                    "created_by": "LABEL io.balena.device-type=iot-gate-imx8plus",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T20:02:14.89785239Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T20:02:15.019145189Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 36 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:cd2d1f658717e76eb6caf0ebc0408c1c3e79889436d4de8e629563541cf3e3ac",
                    "sha256:96e8237f4a277db04c955fec05200b74f0da4fc11acef6e970444aa8d1ac4877",
                    "sha256:eebacd7727dd5f1adf1a458419bda175ca082cd8b48b6f5ab3162ceac82ead68",
                    "sha256:6847feafbfe5a6b06d1a3180b2725497fd90858670af4d7e07d859032794fee6",
                    "sha256:2329dcac2e30f4e2a05e85f5b8dbaa8227ee8eb85ef825dd7ac0cb8fad9571fe",
                    "sha256:ca51ce238f812d151cfee4e045e109e016d9a7f7d83543fe8f0f508ebc62399e",
                    "sha256:eaa4fd10880c293c373fc3aa5f36e6d0b2267661144b4b50b13423abdc65b432",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:57d8577708926141837b5cef818df1c257b9d966cce81182c4fbc54c0cf82336",
                    "sha256:f13b017c836ce0d039330be9672e6c9ef34137c140a07085471903cabf073e3b",
                    "sha256:86d4cc38ec98fb5e562b4bb9479638b57ad6b6de5e21fa4ce4dc5dfae1c8e4ec"
                ]
            }
        },
        "37": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "iot-gate-imx8plus",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                }
            },
            "created": "2024-05-06T10:39:20.130192892Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:31.895761202Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-29T00:47:03.16713451Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:270e11b4c18af1c1efb8b8579be7fbda5255d56dd69f83ef7d933cfd2c685e5c in / "
                },
                {
                    "created": "2023-11-29T00:47:04.125919026Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T09:28:47.993183335Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T09:28:47.993183335Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T09:28:47.993183335Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T09:47:56.501476974Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T09:47:57.631980985Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T09:47:57.631980985Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T09:47:57.644124262Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T09:47:57.678847981Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T09:47:57.688494096Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T09:47:57.688494096Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T09:48:01.526529414Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T09:48:01.665893428Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T10:39:20.006293092Z",
                    "created_by": "LABEL io.balena.device-type=iot-gate-imx8plus",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T10:39:20.006293092Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T10:39:20.130192892Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:22de68abb450063be7e40efd22fd3b41bec469efafdd95e25c65998648e52b28",
                    "sha256:ef64ad49ccf58709af070779ae49d014558d78a8b6a21fcc279c09ddac79e6c9",
                    "sha256:486e799e950e2b998ed0a1a7221aed44130002259c2b437524c7a8a72b725a56",
                    "sha256:5ad52f9d14deab1b2c3a79dfb68bf730440e209f5926a2cd2ebd561c519a08de",
                    "sha256:73001e4334a2e5a98b50faf87e712eaf851af09ac903e83a569150844ce9eda1",
                    "sha256:696c197b14bb7731bf0a36bbdc5e5272937b693f192b143e02dac747a1305ba1",
                    "sha256:f27b4f97c199fdc59cc49eb91fc7a348daf160285ca6bfce88ede5b64e4bb0a9",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:22341517b8222bb5810db07c816fbd0de10749523856c0263caf14789e77d27d",
                    "sha256:108db07c780851f92a4d8ef0c1926797631a48d81f409bc8850b3a37f31fe4bb",
                    "sha256:5019b6b6e2ea25b8b42acd497a8ea0bb3aa9edf8a150d35e826ed803ec8d3f57"
                ]
            }
        },
        "37-20230502": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Cmd": null,
                "Image": "sha256:a68b119daf3e28debdf078c13084aef27795d0c41eca3070757270c37007dcff",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "OnBuild": null,
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-tx2",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                }
            },
            "container": "7423fe45f993649cd50a86110c3aade31acd4783b1f8f74b94b9a14cd0d3e651",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "[ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info"
                ],
                "Image": "sha256:a68b119daf3e28debdf078c13084aef27795d0c41eca3070757270c37007dcff",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-tx2",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                }
            },
            "created": "2023-05-08T16:20:14.664626498Z",
            "docker_version": "20.10.21",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:31.895761202Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-13T20:39:36.516425489Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:8f1c4c2e60330243e66c553f2377951b11c09601b874f6c778e90ff74c6dc376 in / "
                },
                {
                    "created": "2023-03-13T20:39:37.717809378Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-04-02T00:15:42.184062394Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL io.balena.architecture=aarch64",
                    "empty_layer": true
                },
                {
                    "created": "2023-04-02T00:15:42.325999277Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "empty_layer": true
                },
                {
                    "created": "2023-04-02T00:15:42.488342363Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:24916d641d0ee761d2bebd935412ac2263719e3f48829dd83555470573235ed9 in /usr/bin "
                },
                {
                    "created": "2023-04-02T00:34:27.312050054Z",
                    "created_by": "/bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\""
                },
                {
                    "created": "2023-04-02T01:08:25.388465514Z",
                    "created_by": "/bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end"
                },
                {
                    "created": "2023-04-02T01:08:25.551533349Z",
                    "created_by": "/bin/sh -c #(nop)  ENV UDEV=off",
                    "empty_layer": true
                },
                {
                    "created": "2023-04-02T01:08:25.703401831Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:0e8e5e7fcb5ff4b4caac2552d3c5cbf829703430466832566297680a5b09c62b in /usr/bin/entry.sh "
                },
                {
                    "created": "2023-04-02T01:08:25.832144045Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:207cdc191bada5970fb21d3481971b4a391e6e52061bd584dc75404c36d01fcf in /usr/bin/balena-info "
                },
                {
                    "created": "2023-04-02T01:08:25.936921778Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:def7f364bfe93992865dfba2017def9a3c407b6cf8ac0233dcd0aabaa9e4b75b in /usr/bin/balena-idle "
                },
                {
                    "created": "2023-04-02T01:08:26.059241016Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-04-02T01:08:30.523539615Z",
                    "created_by": "/bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh",
                    "empty_layer": true
                },
                {
                    "created": "2023-04-02T01:08:31.078585399Z",
                    "created_by": "/bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info"
                },
                {
                    "created": "2023-05-08T16:04:48.123965098Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL io.balena.device-type=jetson-tx2",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-08T16:20:13.834488214Z",
                    "created_by": "/bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all"
                },
                {
                    "created": "2023-05-08T16:20:14.664626498Z",
                    "created_by": "/bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:6fa23825e7d36de818dd635e6ddcfb1a63b42c8d2a2ebe9dc929a2d8e763fe3f",
                    "sha256:07b0d4da5e04230bb8db9790c1ff3923ecfeaf3f1e9a415e2aab47b5a9a3c0f1",
                    "sha256:48150357fa88a44cf5998c4a5b7e13f8107d4a0b881d13e4aca84aebe66babea",
                    "sha256:efe5d73677d2d6bf2c9aff6540e5fd3471e4445a5ebd050fcf61edacabd24493",
                    "sha256:a4786e5f9479fd133d3e0656a2d110fa7171de1d557215c0963994517a246db0",
                    "sha256:ac16514f34947310a8a17a27f099a5c82bb2f563a28a4e1431998927adaa1e53",
                    "sha256:eda8f31ef2f8144169de7e12869fc1e897e7427c6cab3e81041c33c07d11ff5b",
                    "sha256:6f7ea015bad319a12178cc9deed86ad6432b252ebd6dc7141a974eee74653f64",
                    "sha256:cfd8b93ad27a03808da6e42d10bfd05a9317239d5bfaf63b1e62b4f172372cbc",
                    "sha256:59c871739bd4ff474a5cef9442579177864a340096aa438609cddb64c1b102f0"
                ]
            }
        },
        "37-20230530": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Cmd": null,
                "Image": "sha256:20f9e37cab056b4dae525c039f7037ba42e096a6f55717137afee04271e77e96",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "OnBuild": null,
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-tx2",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                }
            },
            "container": "02586b804b62abfb75793d789ea4c7363176723ca5b24c0b44b7cf4458c84c71",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "[ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info"
                ],
                "Image": "sha256:20f9e37cab056b4dae525c039f7037ba42e096a6f55717137afee04271e77e96",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-tx2",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                }
            },
            "created": "2023-06-07T02:52:23.839260472Z",
            "docker_version": "20.10.21",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:31.895761202Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-31T18:09:14.311114615Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:ba657df1d10e8dc0a769b25e4ab09a73bca3a89df41b3a1b4e10f5fef058d1de in / "
                },
                {
                    "created": "2023-05-31T18:09:15.547149675Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-05T02:03:26.945834815Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL io.balena.architecture=aarch64",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-05T02:03:27.13778573Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-05T02:03:27.332819661Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:24916d641d0ee761d2bebd935412ac2263719e3f48829dd83555470573235ed9 in /usr/bin "
                },
                {
                    "created": "2023-06-05T02:24:26.189516816Z",
                    "created_by": "/bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\""
                },
                {
                    "created": "2023-06-05T03:02:04.392445503Z",
                    "created_by": "/bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end"
                },
                {
                    "created": "2023-06-05T03:02:04.646844986Z",
                    "created_by": "/bin/sh -c #(nop)  ENV UDEV=off",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-05T03:02:04.825711363Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:0e8e5e7fcb5ff4b4caac2552d3c5cbf829703430466832566297680a5b09c62b in /usr/bin/entry.sh "
                },
                {
                    "created": "2023-06-05T03:02:04.983337019Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:207cdc191bada5970fb21d3481971b4a391e6e52061bd584dc75404c36d01fcf in /usr/bin/balena-info "
                },
                {
                    "created": "2023-06-05T03:02:05.123767699Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:def7f364bfe93992865dfba2017def9a3c407b6cf8ac0233dcd0aabaa9e4b75b in /usr/bin/balena-idle "
                },
                {
                    "created": "2023-06-05T03:02:05.338685177Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-05T03:02:12.042609634Z",
                    "created_by": "/bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-05T03:02:13.377800909Z",
                    "created_by": "/bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info"
                },
                {
                    "created": "2023-06-07T02:34:44.82287582Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL io.balena.device-type=jetson-tx2",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-07T02:52:22.830368797Z",
                    "created_by": "/bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all"
                },
                {
                    "created": "2023-06-07T02:52:23.839260472Z",
                    "created_by": "/bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:249911891a8331ea3bbb5bf844c0feaad6066fdc936878a8c464416b1d78b22e",
                    "sha256:bc78f7b899700e4367bb848ecbc496f06865e82c6015e2a802406742f1cbefcf",
                    "sha256:284c09b1cb3f1977b7c56605e5ae1944d5ce3a83c3d77c0a22357607feb3701c",
                    "sha256:003aced5afcb43cee3c9363048741d8467dca9a7dfc7978926eeba94c0c793f5",
                    "sha256:83dfca5fa07e53ca9393a9653242046ccad66ffed2c2b472e349ccc34984f78f",
                    "sha256:546722af04ce5a848511c0f9b3850aefac740a4d7aff4fbbe9cf3e1caacbdaf8",
                    "sha256:fd8a15cd2653a1a0a698c31f8c62ce5e4920a30df101f4d3b8c125c83cdb0d3e",
                    "sha256:c497def0fd9a40925b091eb2a284460584d191e6f8bc647f5f3aa8c26565ff0b",
                    "sha256:1075349ad85152e3b31e6065a7f2f80d43d7f13314a1ef8a342ec2ebb114cc6f",
                    "sha256:adec9d84947aa22da33ef3f88120acb40c3a38fdcb36d111ea65e0514b23f071"
                ]
            }
        },
        "37-20230803": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "generic-aarch64",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2023-08-04T23:07:43.375331667Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:31.895761202Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-04T18:40:58.001277299Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:614dff70ca4206841645edfd3dab48901efeefccc8ef99772f475ee9bac861ff in / "
                },
                {
                    "created": "2023-08-04T18:40:59.951513662Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-04T18:54:04.279599867Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-04T18:54:04.279599867Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-04T18:54:04.279599867Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-04T19:20:03.223955138Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-04T20:07:46.587328502Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-04T20:07:46.587328502Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-04T20:07:46.609548438Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-04T20:07:46.619000353Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-04T20:07:46.643784193Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-04T20:07:46.643784193Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-04T20:07:51.914868814Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-04T20:07:52.316641812Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-04T23:07:42.902689671Z",
                    "created_by": "LABEL io.balena.device-type=generic-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-04T23:07:42.902689671Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-04T23:07:43.375331667Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "moby.buildkit.buildinfo.v1": "eyJmcm9udGVuZCI6ImRvY2tlcmZpbGUudjAiLCJhdHRycyI6eyJmaWxlbmFtZSI6IkRvY2tlcmZpbGUifSwic291cmNlcyI6W3sidHlwZSI6ImRvY2tlci1pbWFnZSIsInJlZiI6ImRvY2tlci5pby9iYWxlbmFsaWIvYWFyY2g2NC1mZWRvcmE6MzctcnVuIiwicGluIjoic2hhMjU2OjYyZDgyMzU1YTk1ZGFkNjNkZmFiYjAwYWRmMDg0ZDM1YjFlODUxYTQyZWU1OTQzYjE3OGQ5ODE5NjljMmFkZjIifV19",
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:cf819d1f191d71ce750fc0b9ca71726d50fc052d7c695682165a84c2bd1eb716",
                    "sha256:03789feb1993fcca25eacd7c042a5e0da237c9f2fa4a6f2ba8ad8ddcbcc047df",
                    "sha256:df63306f05b409fc7c242f10144cdea2d6eb06bd1c0d437922509682bf196d4f",
                    "sha256:bbdfed2dd994f5e7e9323593f9ca29bfb8b828a195790f981d11f82dc13c624f",
                    "sha256:2776818030d35900166dbf5a502fabc1ff88dd330f244d1162ca86ce8a18233b",
                    "sha256:26be61103dde02ae7eeb259ca681c784e0d557bf6b12df2a1a6552473280bedd",
                    "sha256:bb747782f19553a77f709283cb961b77fe72e296acc3ead020eca924dc5fce01",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:e8b5341d265b6c5db48a0f11ed785549f85f32a54ea1909674b6c08a33a2d0f7",
                    "sha256:a623c30286ac9d16628692759bdc53e28ae39e8e61efd5ee7364a36d900d6042",
                    "sha256:24834edc35e897ebb0f69be2daa23f220350916750c2c3d6586074bbd8ec730d"
                ]
            }
        },
        "37-20230829": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "generic-aarch64",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2023-09-02T08:58:38.635902453Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:31.895761202Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-04T18:40:58.001277299Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:614dff70ca4206841645edfd3dab48901efeefccc8ef99772f475ee9bac861ff in / "
                },
                {
                    "created": "2023-08-04T18:40:59.951513662Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-02T05:03:54.900306555Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-02T05:03:54.900306555Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-02T05:03:54.900306555Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T05:29:59.032216117Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T07:49:31.667835224Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T07:49:31.667835224Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-02T07:49:31.703166771Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T07:49:31.71048196Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T07:49:31.717951149Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T07:49:31.717951149Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-02T07:49:36.906076254Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T07:49:37.296912313Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T08:58:38.205221045Z",
                    "created_by": "LABEL io.balena.device-type=generic-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-02T08:58:38.205221045Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T08:58:38.635902453Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:cf819d1f191d71ce750fc0b9ca71726d50fc052d7c695682165a84c2bd1eb716",
                    "sha256:3c382cf512bf47b7376b28df697eafe60fb026ff08ad6264f571b1804576a531",
                    "sha256:242c49d1b03e40d91c941d76ea65e48dbfb13a6b7f6a8c0f17fa2b79bb3bf341",
                    "sha256:bba0a7dd26656a143d366c9386e193e577dde85487fea059991acb5311c337f8",
                    "sha256:0229146c9a8ae2f2d63e6a19a19370e3c3106fb917ff4041c69c337bafe20825",
                    "sha256:1b2572994e04be16791b3c500716eb39f1b1319dafd2c50ada219e826ddb81dc",
                    "sha256:4e58dca27db4d5d9ee1fdb2b00ba98010756175be3e905351b42f93464022edc",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:c6be8ccf7f63475573716aad14ea1215d6bee6236ef265531b27279cfde66460",
                    "sha256:430d5314f168d952339399356004a06369867fbb81a12c88de124e83359ed690",
                    "sha256:1eb82bdf03c1148a5816e4a3e00c8910fc70d37dee35dc007afe8037e2376b8e"
                ]
            }
        },
        "37-20230904": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "generic-aarch64",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2023-09-09T09:10:48.662664437Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:31.895761202Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-04T18:40:58.001277299Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:614dff70ca4206841645edfd3dab48901efeefccc8ef99772f475ee9bac861ff in / "
                },
                {
                    "created": "2023-08-04T18:40:59.951513662Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T05:16:42.403188583Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T05:16:42.403188583Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T05:16:42.403188583Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T05:41:14.882541843Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T05:41:16.309377049Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T05:41:16.309377049Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T05:41:16.340188202Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T05:41:16.351150734Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T05:41:16.360211026Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T05:41:16.360211026Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T05:41:21.389664273Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T05:41:21.747711571Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T09:10:48.373996507Z",
                    "created_by": "LABEL io.balena.device-type=generic-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T09:10:48.373996507Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T09:10:48.662664437Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:cf819d1f191d71ce750fc0b9ca71726d50fc052d7c695682165a84c2bd1eb716",
                    "sha256:2c61372b1614282bfdb58c104252b37a61be492de5c3298dffc56376adfe0a8f",
                    "sha256:3892fad87609c0724cb700c7b327865d8b642316f214825299540678c84e007b",
                    "sha256:47b1691c56a15153e34460e97d0615abbde7eb4128cffd187b3c4507be55c4a0",
                    "sha256:526255e20ebb75f4e4a9cd0b179342ccc59ea09dfb95f916aad1dfd38903c411",
                    "sha256:10a91abc01c07dd01c837dc1a35597c3030ffee89a81f6dcc760a204a2da9e5a",
                    "sha256:fb61a502b5a7e114c0e1b65ffbf1f5d42041b65c52f9ecb41e2fb9a1cdcdbd97",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:cc06c053add61653ccca8a1d621c01df905dfb240d202ad2f7452d1777852952",
                    "sha256:153e452baec08f41027fff3674c18b22fab8e703bf9fe321cbd5b2239a8b437a",
                    "sha256:4b49328db1c28b0599a6dba7094df0748381930f9162e62cd99f60c6d32cb0de"
                ]
            }
        },
        "37-20230911": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "iot-gate-imx8plus",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2023-09-12T03:05:53.243163887Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:31.895761202Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-04T18:40:58.001277299Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:614dff70ca4206841645edfd3dab48901efeefccc8ef99772f475ee9bac861ff in / "
                },
                {
                    "created": "2023-08-04T18:40:59.951513662Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T05:16:42.403188583Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T05:16:42.403188583Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T05:16:42.403188583Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T05:41:14.882541843Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T05:41:16.309377049Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T05:41:16.309377049Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T05:41:16.340188202Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T05:41:16.351150734Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T05:41:16.360211026Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T05:41:16.360211026Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T05:41:21.389664273Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T05:41:21.747711571Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-12T03:05:53.110371243Z",
                    "created_by": "LABEL io.balena.device-type=iot-gate-imx8plus",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-12T03:05:53.110371243Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-12T03:05:53.243163887Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:cf819d1f191d71ce750fc0b9ca71726d50fc052d7c695682165a84c2bd1eb716",
                    "sha256:2c61372b1614282bfdb58c104252b37a61be492de5c3298dffc56376adfe0a8f",
                    "sha256:3892fad87609c0724cb700c7b327865d8b642316f214825299540678c84e007b",
                    "sha256:47b1691c56a15153e34460e97d0615abbde7eb4128cffd187b3c4507be55c4a0",
                    "sha256:526255e20ebb75f4e4a9cd0b179342ccc59ea09dfb95f916aad1dfd38903c411",
                    "sha256:10a91abc01c07dd01c837dc1a35597c3030ffee89a81f6dcc760a204a2da9e5a",
                    "sha256:fb61a502b5a7e114c0e1b65ffbf1f5d42041b65c52f9ecb41e2fb9a1cdcdbd97",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:cc06c053add61653ccca8a1d621c01df905dfb240d202ad2f7452d1777852952",
                    "sha256:b8ed483edfdee7085e4a858d5943ce5fae61b59ccf5d6a7752f71ae9e0877449",
                    "sha256:7dcfcdfbc1c37f420235199d40c101579b8e90adcdc44c1990bf1d8334f375b0"
                ]
            }
        },
        "37-20231103": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "iot-gate-imx8plus",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2023-11-04T16:58:36.691823802Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:31.895761202Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-06T18:42:53.905315575Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:a506790441a5cd056fb456111da480939a46667d520b519dcb9b2e2aa16aae70 in / "
                },
                {
                    "created": "2023-10-06T18:42:54.852939758Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-04T14:05:43.22598589Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-04T14:05:43.22598589Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-04T14:05:43.22598589Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T14:34:18.977818495Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T14:34:20.236374739Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T14:34:20.236374739Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-04T14:34:20.246502673Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T14:34:20.255833503Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T14:34:20.26399513Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T14:34:20.26399513Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-04T14:34:25.601224907Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T14:34:25.783838009Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T16:58:36.562666967Z",
                    "created_by": "LABEL io.balena.device-type=iot-gate-imx8plus",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-04T16:58:36.562666967Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T16:58:36.691823802Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:a37bac7c99baeb556998a67a51775b34aa6df7829fa1ff19323033c5e19837b3",
                    "sha256:768fbcc1112a55954ab49021af3e5b3e77d06892f0018801cb6a68567a441e44",
                    "sha256:b339e6005ff8696452b8a5daf08c04afc137c0da129e399cf294d19b6213af01",
                    "sha256:80e7fcb77b05762cb4af7a336c31edd97b255eb9c5e68b5e2d99fcd0c0941c00",
                    "sha256:faa025149da6c8af6245b9feb2dfa133869871b24b83291212a581a8ac861951",
                    "sha256:85fb00c475997eaa7bf88fdc4a78bd8ad8ecfcafaa4870eb4c2e610747381ba2",
                    "sha256:707dbcf7ea87fd75e1d03a7f275e36d8fcfc1b4ea1f3c867ab6830318bf147e9",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:2509d1d7a240f88f51a41393363e38c35b81e3edf67fa356b59390c21617a3ab",
                    "sha256:a4c40202ed504a23f0061115359756ce4296061beebaccdceecebd8da4e63af9",
                    "sha256:ecdaaf53e54bd152818947b8d0306f4958ea11182202936dd9defa9f17ffdaa6"
                ]
            }
        },
        "37-20231106": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "iot-gate-imx8plus",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2023-11-06T12:31:35.98179637Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:31.895761202Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-06T18:42:53.905315575Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:a506790441a5cd056fb456111da480939a46667d520b519dcb9b2e2aa16aae70 in / "
                },
                {
                    "created": "2023-10-06T18:42:54.852939758Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T09:12:27.261337628Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T09:12:27.261337628Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T09:12:27.261337628Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T09:44:07.194449485Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T09:44:08.356242913Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T09:44:08.356242913Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T09:44:08.370923209Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T09:44:08.383861082Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T09:44:08.401598819Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T09:44:08.401598819Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T09:44:14.097449997Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T09:44:14.33458648Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T12:31:35.819901526Z",
                    "created_by": "LABEL io.balena.device-type=iot-gate-imx8plus",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T12:31:35.819901526Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T12:31:35.98179637Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:a37bac7c99baeb556998a67a51775b34aa6df7829fa1ff19323033c5e19837b3",
                    "sha256:bb42b2b57488a97c34e8f0aa9c9a04b6b5ddc51428a7f869c902e262985533fa",
                    "sha256:f41e2d07027059a658a46da06111805a1c38c357d7a263b65a57906a413afcb8",
                    "sha256:6dfd1348c7cf846716582db5414652bd266c84c3ceb084217d2c1faaa43610bd",
                    "sha256:1ef3bd9e556e1fe5e94ee5fc778405d0e160b3b2f911f7b73b841e3f2947d4ec",
                    "sha256:b00ab734246e3ab0a163af225efd04d30fbb893167c4883967444d8739b0a28b",
                    "sha256:505040d84b751f1b80aad25e47e2b5770da95393e303943d0e90452bb789625d",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:3de7d77508b1af83bfd44b6a7776ab5e9c687ecfe948f5f9d8f15802beed22b0",
                    "sha256:79f3108df0f2d1f13340291298342905907c027b115b3d6798004268b3aee89c",
                    "sha256:688938a5f4feaf8e78c732bb0f26f5b4b9bc6e12f1d5280518263bd268f74441"
                ]
            }
        },
        "37-20231127": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "iot-gate-imx8plus",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2023-12-01T13:07:24.709335954Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:31.895761202Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-29T00:47:03.16713451Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:270e11b4c18af1c1efb8b8579be7fbda5255d56dd69f83ef7d933cfd2c685e5c in / "
                },
                {
                    "created": "2023-11-29T00:47:04.125919026Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T10:52:09.172740458Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T10:52:09.172740458Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T10:52:09.172740458Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T11:10:46.008255947Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T11:10:47.111959762Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T11:10:47.111959762Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T11:10:47.123059062Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T11:10:47.148503741Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T11:10:47.157133896Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T11:10:47.157133896Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T11:10:50.883923644Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T11:10:51.046020579Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T13:07:24.562017117Z",
                    "created_by": "LABEL io.balena.device-type=iot-gate-imx8plus",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T13:07:24.562017117Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T13:07:24.709335954Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:22de68abb450063be7e40efd22fd3b41bec469efafdd95e25c65998648e52b28",
                    "sha256:60f2f571d3fb1d1d2155d703033185efdcb8fd06f11360aff3752c6009ddbba5",
                    "sha256:8bb3ecdba476409248d260241fff01266e4176e947fe811a5efe5456870e671e",
                    "sha256:6852dc1f1a771f4a7632382350c1dbaa2ae3e16802b4884d04618e03763e8376",
                    "sha256:9db2458df0d1ffca59509d5dbd49436ef952483f1042d53531ca90ba7d6de9e9",
                    "sha256:8d401a597be69855ebfaf84921f07b57da8bb7a5c49c370999b998f6062358a2",
                    "sha256:05f9f870334e6de793d303f103d1f1b35f7df1ff21724f7ebaeb6fc561bccc2c",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:24546f46791bf568236132bceae1cdf41c9ca9f6d3e09077cab2bc32ee6bb76c",
                    "sha256:0ee6e1af05fed5090277a4b66a20553164e97d4f26af60bcbbf5e8e130a0424b",
                    "sha256:ec20f57723356e56d8c7929c3a784ed0aae50b2d6f8cde6bb310e89190f528ca"
                ]
            }
        },
        "37-20231204": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "iot-gate-imx8plus",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2023-12-06T22:55:31.420425013Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:31.895761202Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-29T00:47:03.16713451Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:270e11b4c18af1c1efb8b8579be7fbda5255d56dd69f83ef7d933cfd2c685e5c in / "
                },
                {
                    "created": "2023-11-29T00:47:04.125919026Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T20:40:21.575448793Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T20:40:21.575448793Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T20:40:21.575448793Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T20:59:06.4416038Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T20:59:07.14149679Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T20:59:07.14149679Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T20:59:07.150718208Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T20:59:07.159290685Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T20:59:07.187587582Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T20:59:07.187587582Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T20:59:10.850419463Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T20:59:11.010511508Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T22:55:31.287807643Z",
                    "created_by": "LABEL io.balena.device-type=iot-gate-imx8plus",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T22:55:31.287807643Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T22:55:31.420425013Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:22de68abb450063be7e40efd22fd3b41bec469efafdd95e25c65998648e52b28",
                    "sha256:2c6b0df21f9efd51a24a59463b9265452ccc9cf8a26908c50d2742c0e67683bd",
                    "sha256:906012c4f278d0d6c4a614afd4c812fc55bc367d28aac2c10cbdd33ac6ec80b8",
                    "sha256:34fc306b51c5f84676518d54cf67a097f48bfc8e79fb8c0ffc71ed9b2d1b5def",
                    "sha256:aa005d370b40094b326443ce4f1b6d04a780598588bd8f8fa1dc601171d59314",
                    "sha256:e580b4505982459166845d47c3159777541e000c8826a05635c6f84f62f03011",
                    "sha256:79990d4ff119d7188fd5fdcaaa04c391747be11fefbbe682a6a2c495c8ca3a6b",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:0aff9ccfdfd88ab9194d2d15e49264900a8942406276260bf5fb479d637d2075",
                    "sha256:316c5f8b0fbeb6ffb3a0ce73220b175e794d17f6e310a3e0bc7a2ef50c645342",
                    "sha256:8ce4d7578ff5a2e8887d47cae9a1c35fc64d1636cfc68bbe8c15b48010e4dd60"
                ]
            }
        },
        "37-20240205": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "iot-gate-imx8plus",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2024-02-05T02:46:30.94219159Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:31.895761202Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-29T00:47:03.16713451Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:270e11b4c18af1c1efb8b8579be7fbda5255d56dd69f83ef7d933cfd2c685e5c in / "
                },
                {
                    "created": "2023-11-29T00:47:04.125919026Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-05T00:26:08.862006831Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-05T00:26:08.862006831Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-05T00:26:08.862006831Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T00:44:51.352289509Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T00:44:52.031271896Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T00:44:52.031271896Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-05T00:44:52.040913956Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T00:44:52.086913794Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T00:44:52.096058179Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T00:44:52.096058179Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-05T00:44:55.875508418Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T00:44:56.018376913Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T02:46:30.829833069Z",
                    "created_by": "LABEL io.balena.device-type=iot-gate-imx8plus",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-05T02:46:30.829833069Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T02:46:30.94219159Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:22de68abb450063be7e40efd22fd3b41bec469efafdd95e25c65998648e52b28",
                    "sha256:7d94e909dc19f31d9248e1ca5731a04da35c29e754dd69d2fb5a44a2502cc818",
                    "sha256:ed6509b907c0701f8a2a621cb39dbd26d066f869bf0b780990c71b717675bb3d",
                    "sha256:e03ba5a1224f9b985f2d94275263fa36221b3ab01f59437a07d3c1a623b76d77",
                    "sha256:9be68f287ebf7d1727a82714c098ca3ac0e021a4f0bd91d94de4992f010d993f",
                    "sha256:a5b159b9ba50945bb72f35a268a6bd8fca087febe08b2ec49f6982b5d39309e7",
                    "sha256:5efcacbddce62383428c47d9f0b7b716feaa80d8781fe6dd2b1dc81f391509df",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:4491643620a3eb30fa973704b1de6c31cc71b0330dda8cb2847cc88b0981d732",
                    "sha256:b2d88aa29c18001e4fcb693150a36e72f0dbafe39051ee215465168339f864fd",
                    "sha256:86521cd5b53fa059ea52a2ddcdd18f2a7c7e0e90e30865b1d1f18970eac65b84"
                ]
            }
        },
        "37-20240227": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "iot-gate-imx8plus",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2024-03-01T23:22:38.162250541Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:31.895761202Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-29T00:47:03.16713451Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:270e11b4c18af1c1efb8b8579be7fbda5255d56dd69f83ef7d933cfd2c685e5c in / "
                },
                {
                    "created": "2023-11-29T00:47:04.125919026Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T20:49:58.705358685Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T20:49:58.705358685Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T20:49:58.705358685Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:08:24.834287933Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:08:25.565567755Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:08:25.565567755Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T21:08:25.579271093Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:08:25.617204263Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:08:25.629384601Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:08:25.629384601Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T21:08:29.321790107Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:08:29.46619614Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T23:22:38.053697448Z",
                    "created_by": "LABEL io.balena.device-type=iot-gate-imx8plus",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T23:22:38.053697448Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T23:22:38.162250541Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:22de68abb450063be7e40efd22fd3b41bec469efafdd95e25c65998648e52b28",
                    "sha256:bfe341409759f9ccd364ecb2d335246560d19282f3ecf321c53836e101a82d2a",
                    "sha256:22279a1bcbb3b6a49c8d9ada414e0b58c5c83f35e20c9a33acc65e0aedb733a1",
                    "sha256:59b3dbe842a8cbc03ed09e65a15a87e8c46f6653b87eb93c5b37d8ab77060acf",
                    "sha256:2ad87538d509ffa4457cec4d29a36d570c8392257dab445452209d4097b7bf52",
                    "sha256:4b3f303bc53eefd36ad3db9ee937836bf0e5855a96ec2546c67cb8238fa8c5bc",
                    "sha256:27f44cee2cfb128916d178e2e1dd253065b766fcffe0f37cdb2588702c65bd5f",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:7f5845d6da8e4b02efd4b375c5222854a386a7b02c491fe3b96307345b96014d",
                    "sha256:a3ac2e153463933f1666d85b7eb6378535612a047bdd475eda21d486a894b92f",
                    "sha256:6f8dd89a74009292ee644b2c2ea6dde8488e5dae9ebf8cbd127f77b88f8bf4fc"
                ]
            }
        },
        "37-20240304": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "iot-gate-imx8plus",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2024-03-05T10:49:02.924094Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:31.895761202Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-29T00:47:03.16713451Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:270e11b4c18af1c1efb8b8579be7fbda5255d56dd69f83ef7d933cfd2c685e5c in / "
                },
                {
                    "created": "2023-11-29T00:47:04.125919026Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T08:24:13.360409226Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T08:24:13.360409226Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T08:24:13.360409226Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T08:43:22.770169859Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T08:43:23.650621519Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T08:43:23.650621519Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T08:43:23.66033272Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T08:43:23.670216283Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T08:43:23.695421657Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T08:43:23.695421657Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T08:43:27.455502812Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T08:43:27.593974423Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T10:49:02.81018686Z",
                    "created_by": "LABEL io.balena.device-type=iot-gate-imx8plus",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T10:49:02.81018686Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T10:49:02.924094Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:22de68abb450063be7e40efd22fd3b41bec469efafdd95e25c65998648e52b28",
                    "sha256:28463901e499aa0a1515b57d0fbafa9cb9a2cc02cc10ed1687c180941c557184",
                    "sha256:0ca6f2444de4ad55ab4af4fd74364d376cec4fab74ebda60cba78c9fa2d7e649",
                    "sha256:cfc10fd96b96916769b790f45b5a4f0a1a17202f2532d659330de963d4494ebf",
                    "sha256:d2c34fbda1de7685d96923948d480fbe0ebab10b9087bfebda73744dbe2a6f9a",
                    "sha256:0d88f38f1e25f8d79cc6f17c26de206e21378fdd492c88062ab3e718003d32df",
                    "sha256:01e1144fabf916d9df9dbc69c087247ccbb1e57b391ed28f7dac24153a50d7b2",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:7ad9ead66349340e94a99303f594e85c786a6fabee7368153801d079722794bc",
                    "sha256:6d9bc439379dc6b8df2f5253f7c1eb3eab4b7df41d36779811aef70800e08407",
                    "sha256:26ba84d0e46a6d26e818ccc2fbc28157723ab106845216c395ca1e47649fa446"
                ]
            }
        },
        "37-20240401": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "iot-gate-imx8plus",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                }
            },
            "created": "2024-04-01T23:47:50.81840626Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:31.895761202Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-29T00:47:03.16713451Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:270e11b4c18af1c1efb8b8579be7fbda5255d56dd69f83ef7d933cfd2c685e5c in / "
                },
                {
                    "created": "2023-11-29T00:47:04.125919026Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T21:26:29.343455526Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T21:26:29.343455526Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T21:26:29.343455526Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T21:45:10.957762154Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T21:45:11.852141047Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T21:45:11.852141047Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T21:45:11.862471903Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T21:45:11.872331413Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T21:45:11.898584749Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T21:45:11.898584749Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T21:45:15.686171825Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T21:45:15.820771715Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T23:47:50.707520722Z",
                    "created_by": "LABEL io.balena.device-type=iot-gate-imx8plus",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T23:47:50.707520722Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T23:47:50.81840626Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:22de68abb450063be7e40efd22fd3b41bec469efafdd95e25c65998648e52b28",
                    "sha256:3a6d39f67382783e2c69d9a448aa59d1d7654260210364d05c2cae2ef469e3c8",
                    "sha256:8b316e0949cd1905304ca774963ddae530565f690a65de9db1a2dafa9aed0363",
                    "sha256:7fa4949a4c79caf7d749cc4abcbc241a5dd3a5c8d0155458cf6d4d83ac483646",
                    "sha256:0a0eea417236fa5be4e06c1d20766fd9f3b0e064419a66f356dea0f1f6d794df",
                    "sha256:ad31ce618fd1f26b74bc2900fbd27319ed86917e85375f90b57d28b291156d51",
                    "sha256:7b8582873ef4cde2aca83ece090a3993ca7c4f8fe0b13c3b0b064f08c7b21c21",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:8050b5f7d3d161f91b3bad0576691d8640130b32c0b8f23db87cdd4fee47c82e",
                    "sha256:c51d3491b64019f87ef0efcdbc52139676fb9f32add80fde849c9fa5d585dc91",
                    "sha256:66dab9d052d7becc66f0b8b7ae75872806657705cd92ef92ca7ff6d4e51a4240"
                ]
            }
        },
        "37-20240408": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "iot-gate-imx8plus",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                }
            },
            "created": "2024-04-09T20:02:56.694145507Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:31.895761202Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-29T00:47:03.16713451Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:270e11b4c18af1c1efb8b8579be7fbda5255d56dd69f83ef7d933cfd2c685e5c in / "
                },
                {
                    "created": "2023-11-29T00:47:04.125919026Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:52.915602222Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:52.915602222Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:52.915602222Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:54:04.100191166Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:54:04.963844501Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:54:04.963844501Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:54:04.973366628Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:54:05.001513857Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:54:05.024710968Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:54:05.024710968Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:54:08.797015979Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:54:08.943058393Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T20:02:56.566729467Z",
                    "created_by": "LABEL io.balena.device-type=iot-gate-imx8plus",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T20:02:56.566729467Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T20:02:56.694145507Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:22de68abb450063be7e40efd22fd3b41bec469efafdd95e25c65998648e52b28",
                    "sha256:03dd9a4ed991dc43e9a504ad71941782bb6fd4cd57f8ade649bbe25b622e3902",
                    "sha256:d24e8e6aec171dc7068d2c19b85d8c6341381b2f0cf4e1d1a20d5419f2d1ec53",
                    "sha256:e743a07ebcce27b755341d992eb4148fe86bd04481c6d8f2b6fe7364a942af19",
                    "sha256:1c988fbb0bdd3374b1f72bebc1953bd62853c7e33608dbc885ff64eba44dc1eb",
                    "sha256:7fad6968fdbdd1afee5f76e3b2f3df1829677bc85be4fa920cb57db14562699c",
                    "sha256:2999088cf700c485af0973e03dd5e2ff9d96b3f604f5908307f3edb5377c6d58",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:a75c43802eb36b20a7183fe5c30e33ef495a904237a7483d5c73c1df1691887b",
                    "sha256:ba82a540cbc6793313055baaceac216ac219896739f6c0d5c70520d7498ba8f0",
                    "sha256:e6c9a7824e2c775d74446a1eca6572ba467b4af264e68ed89d05bc8535d080e4"
                ]
            }
        },
        "37-20240429": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "iot-gate-imx8plus",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                }
            },
            "created": "2024-05-06T10:39:20.130192892Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:31.895761202Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-29T00:47:03.16713451Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:270e11b4c18af1c1efb8b8579be7fbda5255d56dd69f83ef7d933cfd2c685e5c in / "
                },
                {
                    "created": "2023-11-29T00:47:04.125919026Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T09:28:47.993183335Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T09:28:47.993183335Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T09:28:47.993183335Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T09:47:56.501476974Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T09:47:57.631980985Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T09:47:57.631980985Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T09:47:57.644124262Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T09:47:57.678847981Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T09:47:57.688494096Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T09:47:57.688494096Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T09:48:01.526529414Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T09:48:01.665893428Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T10:39:20.006293092Z",
                    "created_by": "LABEL io.balena.device-type=iot-gate-imx8plus",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T10:39:20.006293092Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T10:39:20.130192892Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:22de68abb450063be7e40efd22fd3b41bec469efafdd95e25c65998648e52b28",
                    "sha256:ef64ad49ccf58709af070779ae49d014558d78a8b6a21fcc279c09ddac79e6c9",
                    "sha256:486e799e950e2b998ed0a1a7221aed44130002259c2b437524c7a8a72b725a56",
                    "sha256:5ad52f9d14deab1b2c3a79dfb68bf730440e209f5926a2cd2ebd561c519a08de",
                    "sha256:73001e4334a2e5a98b50faf87e712eaf851af09ac903e83a569150844ce9eda1",
                    "sha256:696c197b14bb7731bf0a36bbdc5e5272937b693f192b143e02dac747a1305ba1",
                    "sha256:f27b4f97c199fdc59cc49eb91fc7a348daf160285ca6bfce88ede5b64e4bb0a9",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:22341517b8222bb5810db07c816fbd0de10749523856c0263caf14789e77d27d",
                    "sha256:108db07c780851f92a4d8ef0c1926797631a48d81f409bc8850b3a37f31fe4bb",
                    "sha256:5019b6b6e2ea25b8b42acd497a8ea0bb3aa9edf8a150d35e826ed803ec8d3f57"
                ]
            }
        },
        "37-build": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "iot-gate-imx8plus",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                }
            },
            "created": "2024-05-06T10:39:41.599323029Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:31.895761202Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-29T00:47:03.16713451Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:270e11b4c18af1c1efb8b8579be7fbda5255d56dd69f83ef7d933cfd2c685e5c in / "
                },
                {
                    "created": "2023-11-29T00:47:04.125919026Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T09:28:43.57977131Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T09:28:43.57977131Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T09:28:43.57977131Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T09:47:19.941756159Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T10:20:57.000511545Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-clients \t\tsubversion \t\tautoconf \t\tautomake \t\tbzip2-devel \t\tglib2-devel \t\tgcc \t\tgcc-c++ \t\tImageMagick \t\tImageMagick-devel \t\tkernel-devel \t\tlibcurl-devel \t\tlibevent-devel \t\tlibffi-devel \t\tlibjpeg-devel \t\tlibsqlite3x-devel \t\tlibxml2-devel \t\tlibxslt-devel \t\tlibyaml-devel \t\tmysql-devel \t\tmake \t\tncurses-devel \t\topenssl-devel \t\tpostgresql-devel \t\treadline-devel \t\tsqlite-devel \t\tzlib-devel \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T10:20:58.118390256Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T10:20:58.118390256Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T10:20:58.12798187Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T10:20:58.136722317Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T10:20:58.164403522Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T10:20:58.164403522Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T10:21:01.984279759Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T10:21:02.133999332Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T10:39:41.484219958Z",
                    "created_by": "LABEL io.balena.device-type=iot-gate-imx8plus",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T10:39:41.484219958Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T10:39:41.599323029Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:22de68abb450063be7e40efd22fd3b41bec469efafdd95e25c65998648e52b28",
                    "sha256:40252cde73a60fe319f0dc295c7b1e421631974cfbe16656b81f7c86e773254e",
                    "sha256:4a4de46c8a70d5743384977bb42ebacdec5e3cb5490677a398f1d36366084aab",
                    "sha256:1523c4d5a73b8f8409b03635be1be78f6592c3915fd459908ffe5c04fb7ca684",
                    "sha256:3165ae98a25560d143d61c6f8a3cc9b4f73d0c009bfd9de33cefc4747c481229",
                    "sha256:802383c11ce70505808614d078d961ddc3cfaf46a58ac795624520a44e2a7860",
                    "sha256:0590d31cf7630143e0d0e5677bb4407b0d1c0b49a56ef3a87a860603dcea1282",
                    "sha256:6f5ffd7cbb1f8862606014326bb38c35022c8eb43d2a0aff0af32878db49dbdc",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:8c0b4113e6a87b2271a715a924b205a5c9534f5b51c4f3d05b39a48bb6ad75be",
                    "sha256:8758cb7509bfd7224c0a5331ba8bc629479d9e98ab727b0f5fb7261197212daa",
                    "sha256:c39cd3a2ce47e0850a8f29b00283fbc12ffda9edc18a0a64ab0368a4352c82a0"
                ]
            }
        },
        "37-build-20230502": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Cmd": null,
                "Image": "sha256:4a37ca661516a04bd998efca4b98546e8251a303a8e28dc0e5a5d633427fce40",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "OnBuild": null,
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-tx2",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                }
            },
            "container": "53b7ed911177585f7fd0de6488f09d19424bbde11b744fc6308a6f0e4392c17f",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "[ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info"
                ],
                "Image": "sha256:4a37ca661516a04bd998efca4b98546e8251a303a8e28dc0e5a5d633427fce40",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-tx2",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                }
            },
            "created": "2023-05-08T15:51:00.41171855Z",
            "docker_version": "20.10.21",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:31.895761202Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-13T20:39:36.516425489Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:8f1c4c2e60330243e66c553f2377951b11c09601b874f6c778e90ff74c6dc376 in / "
                },
                {
                    "created": "2023-03-13T20:39:37.717809378Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-04-02T00:15:42.184062394Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL io.balena.architecture=aarch64",
                    "empty_layer": true
                },
                {
                    "created": "2023-04-02T00:15:42.325999277Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "empty_layer": true
                },
                {
                    "created": "2023-04-02T00:15:42.488342363Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:24916d641d0ee761d2bebd935412ac2263719e3f48829dd83555470573235ed9 in /usr/bin "
                },
                {
                    "created": "2023-04-02T00:34:27.312050054Z",
                    "created_by": "/bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\""
                },
                {
                    "created": "2023-04-02T01:07:59.036160048Z",
                    "created_by": "/bin/sh -c dnf install -y \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-clients \t\tsubversion \t\tautoconf \t\tautomake \t\tbzip2-devel \t\tglib2-devel \t\tgcc \t\tgcc-c++ \t\tImageMagick \t\tImageMagick-devel \t\tkernel-devel \t\tlibcurl-devel \t\tlibevent-devel \t\tlibffi-devel \t\tlibjpeg-devel \t\tlibsqlite3x-devel \t\tlibxml2-devel \t\tlibxslt-devel \t\tlibyaml-devel \t\tmysql-devel \t\tmake \t\tncurses-devel \t\topenssl-devel \t\tpostgresql-devel \t\treadline-devel \t\tsqlite-devel \t\tzlib-devel \t&& dnf clean all"
                },
                {
                    "created": "2023-04-02T01:08:09.841785321Z",
                    "created_by": "/bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end"
                },
                {
                    "created": "2023-04-02T01:08:09.983966766Z",
                    "created_by": "/bin/sh -c #(nop)  ENV UDEV=off",
                    "empty_layer": true
                },
                {
                    "created": "2023-04-02T01:08:10.081807313Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:0e8e5e7fcb5ff4b4caac2552d3c5cbf829703430466832566297680a5b09c62b in /usr/bin/entry.sh "
                },
                {
                    "created": "2023-04-02T01:08:10.176885214Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:207cdc191bada5970fb21d3481971b4a391e6e52061bd584dc75404c36d01fcf in /usr/bin/balena-info "
                },
                {
                    "created": "2023-04-02T01:08:10.273795214Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:def7f364bfe93992865dfba2017def9a3c407b6cf8ac0233dcd0aabaa9e4b75b in /usr/bin/balena-idle "
                },
                {
                    "created": "2023-04-02T01:08:10.401435688Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-04-02T01:08:14.892977057Z",
                    "created_by": "/bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh",
                    "empty_layer": true
                },
                {
                    "created": "2023-04-02T01:08:15.40879778Z",
                    "created_by": "/bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info"
                },
                {
                    "created": "2023-05-08T15:35:27.507084484Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL io.balena.device-type=jetson-tx2",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-08T15:50:59.459507433Z",
                    "created_by": "/bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all"
                },
                {
                    "created": "2023-05-08T15:51:00.41171855Z",
                    "created_by": "/bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:6fa23825e7d36de818dd635e6ddcfb1a63b42c8d2a2ebe9dc929a2d8e763fe3f",
                    "sha256:07b0d4da5e04230bb8db9790c1ff3923ecfeaf3f1e9a415e2aab47b5a9a3c0f1",
                    "sha256:48150357fa88a44cf5998c4a5b7e13f8107d4a0b881d13e4aca84aebe66babea",
                    "sha256:b28e107bb5b4423beb3e021a3ae8de02ae8a75b11e7962eac2da09ba21abcd3a",
                    "sha256:9b5d17a3d0fd1ca6d1caf3d580dbd9603df35d8e2f1c7278ee7b81f65cce5c1c",
                    "sha256:9e1d1e33076c40c4ec0061c1d3b125f325de44c8cc53c00d77576c780cbd036f",
                    "sha256:544352c4f6d11ee37fb7da9c382d01ed1abd016fbb6384c22680db5394854077",
                    "sha256:26dd29c6aeafa7f795decab7fb29f5c7a71e189af30eeb2d1821285b35f72e7b",
                    "sha256:143772aaa266cd365f4c2df12f34fdff9c8f9f314a57b150304e93f85165db5b",
                    "sha256:4e04a01a884b71a770542e60d0484d1e65e30dedef8f4fd905119a029eee38cf",
                    "sha256:5fd9297a2a9956843ca24ebf34c035b9588ad63706d317a1899b0208dfe66868"
                ]
            }
        },
        "37-build-20230530": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Cmd": null,
                "Image": "sha256:686d9b56ae56c466d4b50b94f4194bda18f747f1b44590db86101ebf66e6e66f",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "OnBuild": null,
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-tx2",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                }
            },
            "container": "421a8d20f48a90594a00d553e4c4ce1a1e5774bb17965f3831dbf8ef33818345",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "[ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info"
                ],
                "Image": "sha256:686d9b56ae56c466d4b50b94f4194bda18f747f1b44590db86101ebf66e6e66f",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-tx2",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                }
            },
            "created": "2023-06-07T01:04:10.557378821Z",
            "docker_version": "20.10.21",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:31.895761202Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-31T18:09:14.311114615Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:ba657df1d10e8dc0a769b25e4ab09a73bca3a89df41b3a1b4e10f5fef058d1de in / "
                },
                {
                    "created": "2023-05-31T18:09:15.547149675Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-05T02:03:26.945834815Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL io.balena.architecture=aarch64",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-05T02:03:27.13778573Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-05T02:03:27.332819661Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:24916d641d0ee761d2bebd935412ac2263719e3f48829dd83555470573235ed9 in /usr/bin "
                },
                {
                    "created": "2023-06-05T02:24:26.189516816Z",
                    "created_by": "/bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\""
                },
                {
                    "created": "2023-06-05T03:01:45.293037492Z",
                    "created_by": "/bin/sh -c dnf install -y \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-clients \t\tsubversion \t\tautoconf \t\tautomake \t\tbzip2-devel \t\tglib2-devel \t\tgcc \t\tgcc-c++ \t\tImageMagick \t\tImageMagick-devel \t\tkernel-devel \t\tlibcurl-devel \t\tlibevent-devel \t\tlibffi-devel \t\tlibjpeg-devel \t\tlibsqlite3x-devel \t\tlibxml2-devel \t\tlibxslt-devel \t\tlibyaml-devel \t\tmysql-devel \t\tmake \t\tncurses-devel \t\topenssl-devel \t\tpostgresql-devel \t\treadline-devel \t\tsqlite-devel \t\tzlib-devel \t&& dnf clean all"
                },
                {
                    "created": "2023-06-05T03:01:49.62963139Z",
                    "created_by": "/bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end"
                },
                {
                    "created": "2023-06-05T03:01:49.818413016Z",
                    "created_by": "/bin/sh -c #(nop)  ENV UDEV=off",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-05T03:01:49.975317929Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:0e8e5e7fcb5ff4b4caac2552d3c5cbf829703430466832566297680a5b09c62b in /usr/bin/entry.sh "
                },
                {
                    "created": "2023-06-05T03:01:50.116216694Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:207cdc191bada5970fb21d3481971b4a391e6e52061bd584dc75404c36d01fcf in /usr/bin/balena-info "
                },
                {
                    "created": "2023-06-05T03:01:50.250492914Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:def7f364bfe93992865dfba2017def9a3c407b6cf8ac0233dcd0aabaa9e4b75b in /usr/bin/balena-idle "
                },
                {
                    "created": "2023-06-05T03:01:50.416993251Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-05T03:01:55.327132834Z",
                    "created_by": "/bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-05T03:01:56.084477397Z",
                    "created_by": "/bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info"
                },
                {
                    "created": "2023-06-07T00:46:07.025876352Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL io.balena.device-type=jetson-tx2",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-07T01:04:09.397873291Z",
                    "created_by": "/bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all"
                },
                {
                    "created": "2023-06-07T01:04:10.557378821Z",
                    "created_by": "/bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:249911891a8331ea3bbb5bf844c0feaad6066fdc936878a8c464416b1d78b22e",
                    "sha256:bc78f7b899700e4367bb848ecbc496f06865e82c6015e2a802406742f1cbefcf",
                    "sha256:284c09b1cb3f1977b7c56605e5ae1944d5ce3a83c3d77c0a22357607feb3701c",
                    "sha256:01afbd6b83ae4fc87863dfbad42a1c3e0c8806bafbe276dfa5315915fcc881ee",
                    "sha256:76f5f3f9ce8cf3005d94fbc917b8789e2d8f382bc97ddb4b1cc9e7db29156f51",
                    "sha256:27b52a798d0269cfb7e550d73aeccfc63ff23091a9c83a053e66e55c9ce4df69",
                    "sha256:d5aaba1e9572853e63c03a0b5cd6e47eb7aa1fdec55f5e70c94df0348a86796c",
                    "sha256:260c00f37243705b4e595f97e13fabdc5be2e3004512988b2b6180eb394f0b14",
                    "sha256:eea5c2401bfd5b9bad6853bd81414852413716837a63fbe494057cee78568c16",
                    "sha256:b298979a74b29b88bb589442ee59d54d706e0cb3b69c743312787234451cfee5",
                    "sha256:24bd21b3897c3e9de03ce724f0ea0300955d57abb938ec61d4e66e6e1586d031"
                ]
            }
        },
        "37-build-20230803": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "generic-aarch64",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2023-08-04T22:44:56.277015004Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:31.895761202Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-04T18:40:58.001277299Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:614dff70ca4206841645edfd3dab48901efeefccc8ef99772f475ee9bac861ff in / "
                },
                {
                    "created": "2023-08-04T18:40:59.951513662Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-04T18:54:04.279599867Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-04T18:54:04.279599867Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-04T18:54:04.279599867Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-04T19:20:03.223955138Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-04T20:06:40.98054953Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-clients \t\tsubversion \t\tautoconf \t\tautomake \t\tbzip2-devel \t\tglib2-devel \t\tgcc \t\tgcc-c++ \t\tImageMagick \t\tImageMagick-devel \t\tkernel-devel \t\tlibcurl-devel \t\tlibevent-devel \t\tlibffi-devel \t\tlibjpeg-devel \t\tlibsqlite3x-devel \t\tlibxml2-devel \t\tlibxslt-devel \t\tlibyaml-devel \t\tmysql-devel \t\tmake \t\tncurses-devel \t\topenssl-devel \t\tpostgresql-devel \t\treadline-devel \t\tsqlite-devel \t\tzlib-devel \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-04T20:06:42.236381253Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-04T20:06:42.236381253Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-04T20:06:42.272446231Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-04T20:06:42.282693953Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-04T20:06:42.291191972Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-04T20:06:42.291191972Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-04T20:06:47.729599987Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-04T20:06:48.236078525Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-04T22:44:55.937469412Z",
                    "created_by": "LABEL io.balena.device-type=generic-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-04T22:44:55.937469412Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-04T22:44:56.277015004Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "moby.buildkit.buildinfo.v1": "eyJmcm9udGVuZCI6ImRvY2tlcmZpbGUudjAiLCJhdHRycyI6eyJmaWxlbmFtZSI6IkRvY2tlcmZpbGUifSwic291cmNlcyI6W3sidHlwZSI6ImRvY2tlci1pbWFnZSIsInJlZiI6ImRvY2tlci5pby9iYWxlbmFsaWIvYWFyY2g2NC1mZWRvcmE6MzctYnVpbGQiLCJwaW4iOiJzaGEyNTY6NWU5NDIwYTY2ZWMyMDgzY2JmZGFlODg2YTY2ZjU5MzlhMDE0N2ZjM2M4ZjdkM2Q4ZmFiNzdmN2Q3NGI3ZTRkZSJ9XX0=",
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:cf819d1f191d71ce750fc0b9ca71726d50fc052d7c695682165a84c2bd1eb716",
                    "sha256:03789feb1993fcca25eacd7c042a5e0da237c9f2fa4a6f2ba8ad8ddcbcc047df",
                    "sha256:df63306f05b409fc7c242f10144cdea2d6eb06bd1c0d437922509682bf196d4f",
                    "sha256:9fe94c7ca324a58111227943d2000d24e1ce8bf513f893a4cadda54c6636f678",
                    "sha256:8ab92a8d50bc492a9de12c120c00ec741241d5266d7456bbdbc08c9e80cdbfb0",
                    "sha256:71c7356ae70cfd65639daf61750af2a0dcc61f319ce61904d17eb6a8f02bb9e6",
                    "sha256:e88bcc88b053f78650c3a40dc402d64d8172dafaf3cad6f367d7d4be4b626c49",
                    "sha256:a34849352632eadb7ec25a5871a6715fb515a2b525c5c326a3f116784a7bd705",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:d63ca7d31e71a3333cbb911a4ca10d90d0be725845687f9c21ad95f2ba2a29ff",
                    "sha256:b3a0f99cf2c083b6513313df72ffae556e28cf1c6077cf60f297765f3c91fd03",
                    "sha256:2205b26d69e848938f5a4633d373ceeb806ad668ce02afb5646ae36154cf9df2"
                ]
            }
        },
        "37-build-20230829": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "generic-aarch64",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2023-09-02T09:24:28.949968702Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:31.895761202Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-04T18:40:58.001277299Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:614dff70ca4206841645edfd3dab48901efeefccc8ef99772f475ee9bac861ff in / "
                },
                {
                    "created": "2023-08-04T18:40:59.951513662Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-02T05:03:54.900306555Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-02T05:03:54.900306555Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-02T05:03:54.900306555Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T05:29:59.032216117Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T06:16:46.631575413Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-clients \t\tsubversion \t\tautoconf \t\tautomake \t\tbzip2-devel \t\tglib2-devel \t\tgcc \t\tgcc-c++ \t\tImageMagick \t\tImageMagick-devel \t\tkernel-devel \t\tlibcurl-devel \t\tlibevent-devel \t\tlibffi-devel \t\tlibjpeg-devel \t\tlibsqlite3x-devel \t\tlibxml2-devel \t\tlibxslt-devel \t\tlibyaml-devel \t\tmysql-devel \t\tmake \t\tncurses-devel \t\topenssl-devel \t\tpostgresql-devel \t\treadline-devel \t\tsqlite-devel \t\tzlib-devel \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T06:16:48.035123609Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T06:16:48.035123609Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-02T06:16:48.067258907Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T06:16:48.07462983Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T06:16:48.080880149Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T06:16:48.080880149Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-02T06:16:53.409164676Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T06:16:53.848156022Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T09:24:28.515363017Z",
                    "created_by": "LABEL io.balena.device-type=generic-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-02T09:24:28.515363017Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T09:24:28.949968702Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:cf819d1f191d71ce750fc0b9ca71726d50fc052d7c695682165a84c2bd1eb716",
                    "sha256:3c382cf512bf47b7376b28df697eafe60fb026ff08ad6264f571b1804576a531",
                    "sha256:242c49d1b03e40d91c941d76ea65e48dbfb13a6b7f6a8c0f17fa2b79bb3bf341",
                    "sha256:c6c2635cdf508755fa8455319712244a29ced4a0d792586aeaf1912b0d335377",
                    "sha256:5ed81a62153eb2f5ceb8f787d2550f58610247dd9b0d3223bb381815f912eaaf",
                    "sha256:ab8c7b9a29c91a360b8df247865bddc76a084600df596a14ec105559e3138cca",
                    "sha256:cb950ae7ff296628577873bfb3acef29547aeaa03711389c599d18e958a166ea",
                    "sha256:62678cf4e815ad96ca4f95cbd3605e77983ad6684c6f258a7378f1dcf1157fe4",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:ce495f5870fa561aea5a593d5bdea30b350f4dab2b5f5dc48dc324777335d604",
                    "sha256:096a6c71280edd96338674261f2d58ef7e8d872a9f29e4963b3b1eb323e827af",
                    "sha256:202d7135bf96f0744ead45939c6b02ab9f43d3286aa70007e0b87e09140db7ed"
                ]
            }
        },
        "37-build-20230904": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "generic-aarch64",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2023-09-09T08:47:31.514218919Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:31.895761202Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-04T18:40:58.001277299Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:614dff70ca4206841645edfd3dab48901efeefccc8ef99772f475ee9bac861ff in / "
                },
                {
                    "created": "2023-08-04T18:40:59.951513662Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T05:16:42.403188583Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T05:16:42.403188583Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T05:16:42.403188583Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T05:41:14.882541843Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T06:27:10.219323725Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-clients \t\tsubversion \t\tautoconf \t\tautomake \t\tbzip2-devel \t\tglib2-devel \t\tgcc \t\tgcc-c++ \t\tImageMagick \t\tImageMagick-devel \t\tkernel-devel \t\tlibcurl-devel \t\tlibevent-devel \t\tlibffi-devel \t\tlibjpeg-devel \t\tlibsqlite3x-devel \t\tlibxml2-devel \t\tlibxslt-devel \t\tlibyaml-devel \t\tmysql-devel \t\tmake \t\tncurses-devel \t\topenssl-devel \t\tpostgresql-devel \t\treadline-devel \t\tsqlite-devel \t\tzlib-devel \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T06:27:11.639619237Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T06:27:11.639619237Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T06:27:11.672307839Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T06:27:11.703609828Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T06:27:11.752254777Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T06:27:11.752254777Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T06:27:16.692189405Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T06:27:17.113557601Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T08:47:31.226768824Z",
                    "created_by": "LABEL io.balena.device-type=generic-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T08:47:31.226768824Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T08:47:31.514218919Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:cf819d1f191d71ce750fc0b9ca71726d50fc052d7c695682165a84c2bd1eb716",
                    "sha256:2c61372b1614282bfdb58c104252b37a61be492de5c3298dffc56376adfe0a8f",
                    "sha256:3892fad87609c0724cb700c7b327865d8b642316f214825299540678c84e007b",
                    "sha256:0f4a521d2c6cf8cad7b2eb4df330989890e4ec58bcdb8c8d3f1e7b953bbbd9cf",
                    "sha256:8d6c3fbf20d052b4dfc381066e982bdd6112441240ae7ffbc2e5e89595e79a0c",
                    "sha256:561d71383dd66b871476f9e5ff3274483fb9574952685d747d4e55904f1ee3fb",
                    "sha256:b19528952c8ac1375dbbc0465be58dc121fb846ce4e1e89645c716509faaf601",
                    "sha256:c8b95dba26be42e442fdec1f2fd5073216020274f421a0e7cf5b4abe1599f822",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:bf40c484f55f8935bf800843234fd2cadb1c9404047d95d9143e806f44edeae5",
                    "sha256:ad660e340b7acf11d3760c535b47f304b0b32abe72fba87f4917c5f91a2c9da6",
                    "sha256:45b43ed3d7b4991c51d00b09bfdf2a8f6bd5459e64832b5b90bb39fdb61d7b0d"
                ]
            }
        },
        "37-build-20230911": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "iot-gate-imx8plus",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2023-09-12T03:03:42.159197629Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:31.895761202Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-04T18:40:58.001277299Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:614dff70ca4206841645edfd3dab48901efeefccc8ef99772f475ee9bac861ff in / "
                },
                {
                    "created": "2023-08-04T18:40:59.951513662Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T05:16:42.403188583Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T05:16:42.403188583Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T05:16:42.403188583Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T05:41:14.882541843Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T06:27:10.219323725Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-clients \t\tsubversion \t\tautoconf \t\tautomake \t\tbzip2-devel \t\tglib2-devel \t\tgcc \t\tgcc-c++ \t\tImageMagick \t\tImageMagick-devel \t\tkernel-devel \t\tlibcurl-devel \t\tlibevent-devel \t\tlibffi-devel \t\tlibjpeg-devel \t\tlibsqlite3x-devel \t\tlibxml2-devel \t\tlibxslt-devel \t\tlibyaml-devel \t\tmysql-devel \t\tmake \t\tncurses-devel \t\topenssl-devel \t\tpostgresql-devel \t\treadline-devel \t\tsqlite-devel \t\tzlib-devel \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T06:27:11.639619237Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T06:27:11.639619237Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T06:27:11.672307839Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T06:27:11.703609828Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T06:27:11.752254777Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T06:27:11.752254777Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T06:27:16.692189405Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T06:27:17.113557601Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-12T03:03:42.022816114Z",
                    "created_by": "LABEL io.balena.device-type=iot-gate-imx8plus",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-12T03:03:42.022816114Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-12T03:03:42.159197629Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:cf819d1f191d71ce750fc0b9ca71726d50fc052d7c695682165a84c2bd1eb716",
                    "sha256:2c61372b1614282bfdb58c104252b37a61be492de5c3298dffc56376adfe0a8f",
                    "sha256:3892fad87609c0724cb700c7b327865d8b642316f214825299540678c84e007b",
                    "sha256:0f4a521d2c6cf8cad7b2eb4df330989890e4ec58bcdb8c8d3f1e7b953bbbd9cf",
                    "sha256:8d6c3fbf20d052b4dfc381066e982bdd6112441240ae7ffbc2e5e89595e79a0c",
                    "sha256:561d71383dd66b871476f9e5ff3274483fb9574952685d747d4e55904f1ee3fb",
                    "sha256:b19528952c8ac1375dbbc0465be58dc121fb846ce4e1e89645c716509faaf601",
                    "sha256:c8b95dba26be42e442fdec1f2fd5073216020274f421a0e7cf5b4abe1599f822",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:bf40c484f55f8935bf800843234fd2cadb1c9404047d95d9143e806f44edeae5",
                    "sha256:1d75f539ff1a4bb8e48f9036de90ae1624b335f2cfcb39e8111ab61a327f843b",
                    "sha256:a69856bfe2e9f97ef96db5cbc7c1eb053ba8225863abbb346fd1e9bc5bba22dc"
                ]
            }
        },
        "37-build-20231103": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "iot-gate-imx8plus",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2023-11-04T16:58:30.559134403Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:31.895761202Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-06T18:42:53.905315575Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:a506790441a5cd056fb456111da480939a46667d520b519dcb9b2e2aa16aae70 in / "
                },
                {
                    "created": "2023-10-06T18:42:54.852939758Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-04T14:05:46.127555575Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-04T14:05:46.127555575Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-04T14:05:46.127555575Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T14:32:34.985281581Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T15:17:05.03121789Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-clients \t\tsubversion \t\tautoconf \t\tautomake \t\tbzip2-devel \t\tglib2-devel \t\tgcc \t\tgcc-c++ \t\tImageMagick \t\tImageMagick-devel \t\tkernel-devel \t\tlibcurl-devel \t\tlibevent-devel \t\tlibffi-devel \t\tlibjpeg-devel \t\tlibsqlite3x-devel \t\tlibxml2-devel \t\tlibxslt-devel \t\tlibyaml-devel \t\tmysql-devel \t\tmake \t\tncurses-devel \t\topenssl-devel \t\tpostgresql-devel \t\treadline-devel \t\tsqlite-devel \t\tzlib-devel \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T15:17:06.534956571Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T15:17:06.534956571Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-04T15:17:06.547775032Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T15:17:06.562169912Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T15:17:06.584452792Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T15:17:06.584452792Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-04T15:17:11.437649746Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T15:17:11.624485751Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T16:58:30.421906927Z",
                    "created_by": "LABEL io.balena.device-type=iot-gate-imx8plus",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-04T16:58:30.421906927Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T16:58:30.559134403Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:a37bac7c99baeb556998a67a51775b34aa6df7829fa1ff19323033c5e19837b3",
                    "sha256:b803e34ece3fff5f3d20cfa0d3e1cf3d2f8eeb660544fa7d9d823be8aaca720f",
                    "sha256:6cd425edf3bbba0627f88702e763514480d7cc186cdcf9fba97078a67b67ff15",
                    "sha256:3b47068608b1d7e0db2398b9a01f8b7334b03f0b6e860606846319db5bca3e6d",
                    "sha256:cd9302fb8f7c40436d216b427838f33470983f6d503ff317690d5147f2ac7af4",
                    "sha256:3ee1780fbb8bd15cb0d9c1f09542dd9bfd3ad0b2b19f329060fb3864d9f08437",
                    "sha256:818589d5e5232c469d55d13e3c611a19ae9fbd09e1eab7d8d5a5cbc2d7a5364a",
                    "sha256:12e7cf1e010caa525ada8d183482cca1144de22e3bdeb8c3f63e13d7f4d27c83",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:24e8fe7f4ce600f415f5a229e1303c9bab9afc61a2cb00bfe838cf9af0b10c57",
                    "sha256:0f98a79bf5f3d0f83978a96f92525d6c4563361948edfcb2279459e099307b38",
                    "sha256:c5cf54dbd4349f8fd312f982135012db1f92c230e1392a1c853b909ef7cac443"
                ]
            }
        },
        "37-build-20231106": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "iot-gate-imx8plus",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2023-11-06T12:30:02.43881775Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:31.895761202Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-06T18:42:53.905315575Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:a506790441a5cd056fb456111da480939a46667d520b519dcb9b2e2aa16aae70 in / "
                },
                {
                    "created": "2023-10-06T18:42:54.852939758Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T09:12:33.793766866Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T09:12:33.793766866Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T09:12:33.793766866Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T09:41:28.803094869Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T10:28:03.430768422Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-clients \t\tsubversion \t\tautoconf \t\tautomake \t\tbzip2-devel \t\tglib2-devel \t\tgcc \t\tgcc-c++ \t\tImageMagick \t\tImageMagick-devel \t\tkernel-devel \t\tlibcurl-devel \t\tlibevent-devel \t\tlibffi-devel \t\tlibjpeg-devel \t\tlibsqlite3x-devel \t\tlibxml2-devel \t\tlibxslt-devel \t\tlibyaml-devel \t\tmysql-devel \t\tmake \t\tncurses-devel \t\topenssl-devel \t\tpostgresql-devel \t\treadline-devel \t\tsqlite-devel \t\tzlib-devel \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T10:28:04.971243325Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T10:28:04.971243325Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T10:28:04.981842152Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T10:28:04.990882375Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T10:28:04.999524597Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T10:28:04.999524597Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T10:28:10.325096726Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T10:28:10.509330565Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T12:30:02.289734Z",
                    "created_by": "LABEL io.balena.device-type=iot-gate-imx8plus",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T12:30:02.289734Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T12:30:02.43881775Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:a37bac7c99baeb556998a67a51775b34aa6df7829fa1ff19323033c5e19837b3",
                    "sha256:079d7cf39afa9d578a9d23346f411400794c3af330d6d28f819e9df742fd510f",
                    "sha256:953f9299839dea166062dc15ad557aaded1976123a8e68748f4c2b9bda013445",
                    "sha256:91484c3183f81de3b5df4fd7282fa21e976e1bfebc491b6bbfbf04e93c1894a0",
                    "sha256:8a86f91b095531cde383c2059c806a3e41d2784a850acb0074b3c05e00a92b22",
                    "sha256:72afd198025d5dd3f0441d9c45c59c4856bb515bdfd96241abc1821082e51634",
                    "sha256:dbd652ad088f975924c2188af549f2f10b92c01b6fe522387771c28ab9f9a3d1",
                    "sha256:b34bfc4dadfdc58a35b02f2a10f1cceab912215f6d83c03887fd10915a43740f",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:60d7cb78f7dbd6e4fd7284fde027f33371b8a35defbb6d0b64e611e5b79e547c",
                    "sha256:7b50b40720c8be33d0674d434f934fadc4d26c3f001d716dfafe5dde9a03f1c4",
                    "sha256:8ef949e1787f2d8b6062650c27e1ead5b25c8e1d8f83f84269091cf5ed6e0bab"
                ]
            }
        },
        "37-build-20231127": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "iot-gate-imx8plus",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2023-12-01T13:08:26.624251431Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:31.895761202Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-29T00:47:03.16713451Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:270e11b4c18af1c1efb8b8579be7fbda5255d56dd69f83ef7d933cfd2c685e5c in / "
                },
                {
                    "created": "2023-11-29T00:47:04.125919026Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T10:52:02.657157896Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T10:52:02.657157896Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T10:52:02.657157896Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T11:10:52.835476629Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T11:44:38.992624697Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-clients \t\tsubversion \t\tautoconf \t\tautomake \t\tbzip2-devel \t\tglib2-devel \t\tgcc \t\tgcc-c++ \t\tImageMagick \t\tImageMagick-devel \t\tkernel-devel \t\tlibcurl-devel \t\tlibevent-devel \t\tlibffi-devel \t\tlibjpeg-devel \t\tlibsqlite3x-devel \t\tlibxml2-devel \t\tlibxslt-devel \t\tlibyaml-devel \t\tmysql-devel \t\tmake \t\tncurses-devel \t\topenssl-devel \t\tpostgresql-devel \t\treadline-devel \t\tsqlite-devel \t\tzlib-devel \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T11:44:39.990821654Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T11:44:39.990821654Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T11:44:40.000073844Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T11:44:40.01005454Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T11:44:40.019402748Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T11:44:40.019402748Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T11:44:43.689339656Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T11:44:43.868535084Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T13:08:26.47192444Z",
                    "created_by": "LABEL io.balena.device-type=iot-gate-imx8plus",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T13:08:26.47192444Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T13:08:26.624251431Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:22de68abb450063be7e40efd22fd3b41bec469efafdd95e25c65998648e52b28",
                    "sha256:1a3ad77cbdd5f3702cdc33e853ab9cc8a4bce3da55a32efb4239959bb0066d2c",
                    "sha256:ea8f95f5ee1d9a415da767f8f70e84219a783234faedbe934f7073d313c2a329",
                    "sha256:9859ba47080992b582231890261ade8c1615c538267fb38ef5346a7dc2b9b28c",
                    "sha256:4d00d92f327d89e6a8e173c3756ae21408423470ec789b7f26433277cb4a4765",
                    "sha256:b15db2ec924b64fd8d760db1a34d1a7bf1ee73795d67229df34a932fa2462fce",
                    "sha256:f426d5ef2263d711158432d852d2fd7bbac8b2a130d414a43053e03ea7af15cc",
                    "sha256:7e257b2f172d14765138a78493e82b46dc74628b411d96599cf2d23254ad0931",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:7465c77da1867ca9eddcdddd673828c00680f5a8f2980663f3dc74004cfee96e",
                    "sha256:22ca79a7ecbfc542ba8549e3761eee16e1eedce49af9323ee2792385bb3ea001",
                    "sha256:61a56b1bb36a8993559af8054d38d0edd937d96415298cccc25aedfa9a2755c8"
                ]
            }
        },
        "37-build-20231204": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "iot-gate-imx8plus",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2023-12-06T22:56:22.466838485Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:31.895761202Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-29T00:47:03.16713451Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:270e11b4c18af1c1efb8b8579be7fbda5255d56dd69f83ef7d933cfd2c685e5c in / "
                },
                {
                    "created": "2023-11-29T00:47:04.125919026Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T20:40:26.374589955Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T20:40:26.374589955Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T20:40:26.374589955Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T20:59:24.426343965Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T21:33:22.338987204Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-clients \t\tsubversion \t\tautoconf \t\tautomake \t\tbzip2-devel \t\tglib2-devel \t\tgcc \t\tgcc-c++ \t\tImageMagick \t\tImageMagick-devel \t\tkernel-devel \t\tlibcurl-devel \t\tlibevent-devel \t\tlibffi-devel \t\tlibjpeg-devel \t\tlibsqlite3x-devel \t\tlibxml2-devel \t\tlibxslt-devel \t\tlibyaml-devel \t\tmysql-devel \t\tmake \t\tncurses-devel \t\topenssl-devel \t\tpostgresql-devel \t\treadline-devel \t\tsqlite-devel \t\tzlib-devel \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T21:33:24.154561262Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T21:33:24.154561262Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T21:33:24.162768682Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T21:33:24.171000628Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T21:33:24.179542448Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T21:33:24.179542448Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T21:33:28.121782119Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T21:33:28.270944579Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T22:56:22.315581937Z",
                    "created_by": "LABEL io.balena.device-type=iot-gate-imx8plus",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T22:56:22.315581937Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T22:56:22.466838485Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:22de68abb450063be7e40efd22fd3b41bec469efafdd95e25c65998648e52b28",
                    "sha256:25274df56d5e2d3d66833b3c1612e29d23730e6cc6ec37a78ee71d4e85b76404",
                    "sha256:d04cc6ad4633afbe1d3e0b00b156a425046a32b30dac7662e12874b696c4cfef",
                    "sha256:43377beeefc0287b77d294288faa7109bb3ce0bc36e475dfbd1d0e36067efadb",
                    "sha256:fec686f840ea96c83b8309deabe344d2dad4f89944098fafba92079f3168bea0",
                    "sha256:8a1c26a8af1d218a1a631e9eed97294a2a87ace87904af0512704b5ba5f905a0",
                    "sha256:f0e217e2e36898bc78b63b7998c0d53052ce478f4a9e28eb3acaa57455c20e2f",
                    "sha256:168aa23d85e63ec5786a95750332d5f9e1806211b6e527d7644ac532221069f1",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:536faba4d9280af162caf34aaa2fbf324ea707d1b058d74696885ed191a6eafd",
                    "sha256:019eff7d9c98124a0076ea5ab4fbe260574e1040776d0354eda04b2bf0d9844b",
                    "sha256:625e985005e1b8d438cf34f684dbc35619aa2b56cc1c4be692af863cfab21a63"
                ]
            }
        },
        "37-build-20240205": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "iot-gate-imx8plus",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2024-02-05T02:46:16.965872789Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:31.895761202Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-29T00:47:03.16713451Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:270e11b4c18af1c1efb8b8579be7fbda5255d56dd69f83ef7d933cfd2c685e5c in / "
                },
                {
                    "created": "2023-11-29T00:47:04.125919026Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-05T00:26:13.859309536Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-05T00:26:13.859309536Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-05T00:26:13.859309536Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T00:45:10.8092517Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T01:18:49.392328016Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-clients \t\tsubversion \t\tautoconf \t\tautomake \t\tbzip2-devel \t\tglib2-devel \t\tgcc \t\tgcc-c++ \t\tImageMagick \t\tImageMagick-devel \t\tkernel-devel \t\tlibcurl-devel \t\tlibevent-devel \t\tlibffi-devel \t\tlibjpeg-devel \t\tlibsqlite3x-devel \t\tlibxml2-devel \t\tlibxslt-devel \t\tlibyaml-devel \t\tmysql-devel \t\tmake \t\tncurses-devel \t\topenssl-devel \t\tpostgresql-devel \t\treadline-devel \t\tsqlite-devel \t\tzlib-devel \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T01:18:50.514115933Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T01:18:50.514115933Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-05T01:18:50.523617988Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T01:18:50.557647649Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T01:18:50.568553425Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T01:18:50.568553425Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-05T01:18:54.352613602Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T01:18:54.484309683Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T02:46:16.846029828Z",
                    "created_by": "LABEL io.balena.device-type=iot-gate-imx8plus",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-05T02:46:16.846029828Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T02:46:16.965872789Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:22de68abb450063be7e40efd22fd3b41bec469efafdd95e25c65998648e52b28",
                    "sha256:9391b38776fe1a447956db381646ee109343bd22183a6c607d66c26dac722850",
                    "sha256:2ff3e8a40fae975f72250e96f2c01345768ef0a3dbcfbf6084bc542211223c04",
                    "sha256:38432aa17028b7bdb0c9d5c2b22fb4207811641298965ba6771cd989d6a19daa",
                    "sha256:3efdb146c34f8f1ff3c22b490e72b097196f8cf3a214dfc51628ba81f402eeb1",
                    "sha256:bf38ccf74068b318ec44fb671d7f71d3454fb8ab9304451042334e972b5fa0ec",
                    "sha256:50fbc93a18898e758d8a4426c13b8cdb844e98e4fe11dbc5e9409eb7f1466e43",
                    "sha256:21e4e77425952b2bdbb4f06e327bd295156461fc4fe3e31ed324ba59b04a3712",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:5f653a5aac8e7aec60e0930415cf5cfc3ee9a054c6b5996f3e8bcd9c24b11e54",
                    "sha256:ec75080b101dd9efaa0f0a28d0cf2825f6ab93f65d96d9b3cd91d5e538fa9fbe",
                    "sha256:849cb9d10232bf70b87b611e035f762d7625306a3c15a236f2dd0bd56e7e8646"
                ]
            }
        },
        "37-build-20240227": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "iot-gate-imx8plus",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2024-03-01T23:16:47.777532704Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:31.895761202Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-29T00:47:03.16713451Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:270e11b4c18af1c1efb8b8579be7fbda5255d56dd69f83ef7d933cfd2c685e5c in / "
                },
                {
                    "created": "2023-11-29T00:47:04.125919026Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T20:49:59.807334412Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T20:49:59.807334412Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T20:49:59.807334412Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:10:56.098365397Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:45:26.894768836Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-clients \t\tsubversion \t\tautoconf \t\tautomake \t\tbzip2-devel \t\tglib2-devel \t\tgcc \t\tgcc-c++ \t\tImageMagick \t\tImageMagick-devel \t\tkernel-devel \t\tlibcurl-devel \t\tlibevent-devel \t\tlibffi-devel \t\tlibjpeg-devel \t\tlibsqlite3x-devel \t\tlibxml2-devel \t\tlibxslt-devel \t\tlibyaml-devel \t\tmysql-devel \t\tmake \t\tncurses-devel \t\topenssl-devel \t\tpostgresql-devel \t\treadline-devel \t\tsqlite-devel \t\tzlib-devel \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:45:27.831671197Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:45:27.831671197Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T21:45:27.841017293Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:45:27.850413212Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:45:27.858829391Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:45:27.858829391Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T21:45:31.607983559Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:45:31.757692693Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T23:16:47.658708573Z",
                    "created_by": "LABEL io.balena.device-type=iot-gate-imx8plus",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T23:16:47.658708573Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T23:16:47.777532704Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:22de68abb450063be7e40efd22fd3b41bec469efafdd95e25c65998648e52b28",
                    "sha256:153f603c3b6b2529b45b12c9cb3de69de633d99488c4aac6cb5e04c6784e284c",
                    "sha256:fcda31efe0f90abdb3be0e2cc3050fddb745d7db41b962e3a08d908b3fe90c76",
                    "sha256:168e7cb2c07cd77fe30fd104d59f5ac49b7a43775f04c196367fa588f2159f11",
                    "sha256:3e98c7cf4c63c439e9045cd721cc19c243588d17804a57358309accf40b5249c",
                    "sha256:8aeb044849aef9a674a8ebde259f830df38faaa43b11f80b3bec5085ace3c264",
                    "sha256:691ea9dfdaf44533ac36d1341c6822b6735744922c3d5c304e657357f4babe33",
                    "sha256:072ee65b31efbe2110bc15922159f609d9d9c933715bc4429aeb7f4c5da9d425",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:bd215b090f3f370a73aa2871e3e123516169ed4db9f68a876a6be0d4a288d6d4",
                    "sha256:9c90bb3abfc94096e6345825ee53ca74c45113312142186b07cc5c2176aa7ef5",
                    "sha256:e28bd6d0f75f21f68b0e456c74cd2acf88b251e8860020c8e6764ae3f07f45b4"
                ]
            }
        },
        "37-build-20240304": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "iot-gate-imx8plus",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2024-03-05T10:49:26.346985534Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:31.895761202Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-29T00:47:03.16713451Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:270e11b4c18af1c1efb8b8579be7fbda5255d56dd69f83ef7d933cfd2c685e5c in / "
                },
                {
                    "created": "2023-11-29T00:47:04.125919026Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T08:24:07.032483717Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T08:24:07.032483717Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T08:24:07.032483717Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T08:43:07.560394223Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T09:18:33.168342892Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-clients \t\tsubversion \t\tautoconf \t\tautomake \t\tbzip2-devel \t\tglib2-devel \t\tgcc \t\tgcc-c++ \t\tImageMagick \t\tImageMagick-devel \t\tkernel-devel \t\tlibcurl-devel \t\tlibevent-devel \t\tlibffi-devel \t\tlibjpeg-devel \t\tlibsqlite3x-devel \t\tlibxml2-devel \t\tlibxslt-devel \t\tlibyaml-devel \t\tmysql-devel \t\tmake \t\tncurses-devel \t\topenssl-devel \t\tpostgresql-devel \t\treadline-devel \t\tsqlite-devel \t\tzlib-devel \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T09:18:34.140220764Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T09:18:34.140220764Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T09:18:34.153622864Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T09:18:34.190278048Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T09:18:34.204411016Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T09:18:34.204411016Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T09:18:37.906466695Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T09:18:38.054385621Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T10:49:26.231326759Z",
                    "created_by": "LABEL io.balena.device-type=iot-gate-imx8plus",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T10:49:26.231326759Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T10:49:26.346985534Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:22de68abb450063be7e40efd22fd3b41bec469efafdd95e25c65998648e52b28",
                    "sha256:5b32c6607b8e7ea89ed5bb72a3578bb0d4723f5496d0a8e7dc688bf6a3a167d6",
                    "sha256:90da55fed465de8a873bf3e2bcdea7dca9a0be400a66dfa4c0efde5fa5ad1712",
                    "sha256:d5b90a049cc6b8b6a297f2e6f8a012847c545187714f13feb3004077215fe790",
                    "sha256:ac341c2760f8397f739500c811ea7bfc967bee43cae3b5bccbc3bc6263562d17",
                    "sha256:383c3fcfa865391817fdec807ce0f15866c08261ec20642c87fdde447997f846",
                    "sha256:d8c138867fdbf59da6040e42db8f659089ae32f509c4809cd61e7b817c68284d",
                    "sha256:59113e489ab1305fec7cc3fd646933122fb6f8dfeb9f3e8146b36687dd3f8ce0",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:3e090112138683d3816cd9299b41c91f8e2961f75a329ef3583c678904c6aa0c",
                    "sha256:f5e0de247054c6f8f055371596d0e260c682de2f9066d2c5a30eda85d4d0f6c4",
                    "sha256:0c963d343ce7fb5f03c807c1959a371eb4ea311d860d949dae0573d99544878b"
                ]
            }
        },
        "37-build-20240401": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "iot-gate-imx8plus",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                }
            },
            "created": "2024-04-01T23:47:53.1181221Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:31.895761202Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-29T00:47:03.16713451Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:270e11b4c18af1c1efb8b8579be7fbda5255d56dd69f83ef7d933cfd2c685e5c in / "
                },
                {
                    "created": "2023-11-29T00:47:04.125919026Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T21:26:32.436538725Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T21:26:32.436538725Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T21:26:32.436538725Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T21:44:46.483219966Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T22:18:11.966182353Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-clients \t\tsubversion \t\tautoconf \t\tautomake \t\tbzip2-devel \t\tglib2-devel \t\tgcc \t\tgcc-c++ \t\tImageMagick \t\tImageMagick-devel \t\tkernel-devel \t\tlibcurl-devel \t\tlibevent-devel \t\tlibffi-devel \t\tlibjpeg-devel \t\tlibsqlite3x-devel \t\tlibxml2-devel \t\tlibxslt-devel \t\tlibyaml-devel \t\tmysql-devel \t\tmake \t\tncurses-devel \t\topenssl-devel \t\tpostgresql-devel \t\treadline-devel \t\tsqlite-devel \t\tzlib-devel \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T22:18:13.396726412Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T22:18:13.396726412Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T22:18:13.40948656Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T22:18:13.42436327Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T22:18:13.435538637Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T22:18:13.435538637Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T22:18:17.292242645Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T22:18:17.441252547Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T23:47:53.000902427Z",
                    "created_by": "LABEL io.balena.device-type=iot-gate-imx8plus",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T23:47:53.000902427Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T23:47:53.1181221Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:22de68abb450063be7e40efd22fd3b41bec469efafdd95e25c65998648e52b28",
                    "sha256:2bc63a4a3e163679c8a2399342b1daf3e005320d94db933ce217a0f80d1b4537",
                    "sha256:d75154443a45cab05ca4a85ddd827b962fedcff91b702d791e6ef9404f6c85d3",
                    "sha256:ed61218e50e513b23bae8d31f72e7c8e7a3d0090e48e2ff087a536ac362cfb81",
                    "sha256:23faadc341a4670f586fccbfa7d9b0c5a5e56be8ab46b55a4067df82e5569a5c",
                    "sha256:26696ab075f5bb87eee8a46b41f2091a3f9d7edb2116147001a7677757eaaca5",
                    "sha256:61d65d5da4322b148f9078fa00914c14291b0bdf48b073091e08240ed72a9f7c",
                    "sha256:879d60f10dea3318ceaedb2814160c1ae4cc919d4f04d2e62152d05c1ea7011a",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:0428822e1d59c6db13038f6502cd2c9a69bd7e2d2a033cb20fc19071849b112e",
                    "sha256:c4e3fb88a09fcd635cc5ecc2e4c5328b3d8932c55055f2e4ec03017cb540521f",
                    "sha256:3fabed44006fcfd14825b6c3c305dcf7b0dc134c5583aafb432f9fe037614dbe"
                ]
            }
        },
        "37-build-20240408": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "iot-gate-imx8plus",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                }
            },
            "created": "2024-04-09T20:02:56.094617974Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:31.895761202Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-29T00:47:03.16713451Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:270e11b4c18af1c1efb8b8579be7fbda5255d56dd69f83ef7d933cfd2c685e5c in / "
                },
                {
                    "created": "2023-11-29T00:47:04.125919026Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:50.964198867Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:50.964198867Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:50.964198867Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:54:06.695861539Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:30:31.267198079Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-clients \t\tsubversion \t\tautoconf \t\tautomake \t\tbzip2-devel \t\tglib2-devel \t\tgcc \t\tgcc-c++ \t\tImageMagick \t\tImageMagick-devel \t\tkernel-devel \t\tlibcurl-devel \t\tlibevent-devel \t\tlibffi-devel \t\tlibjpeg-devel \t\tlibsqlite3x-devel \t\tlibxml2-devel \t\tlibxslt-devel \t\tlibyaml-devel \t\tmysql-devel \t\tmake \t\tncurses-devel \t\topenssl-devel \t\tpostgresql-devel \t\treadline-devel \t\tsqlite-devel \t\tzlib-devel \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:30:32.683562935Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:30:32.683562935Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T14:30:32.694247574Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:30:32.719346978Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:30:32.730408486Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:30:32.730408486Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T14:30:36.547683782Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:30:36.691463904Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T20:02:55.977043055Z",
                    "created_by": "LABEL io.balena.device-type=iot-gate-imx8plus",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T20:02:55.977043055Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T20:02:56.094617974Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:22de68abb450063be7e40efd22fd3b41bec469efafdd95e25c65998648e52b28",
                    "sha256:3f054b5308bf8dbf3abb2dac1bc72fac6b6e9569c5d0c4d1733c57b40f98d68c",
                    "sha256:9a408e5130d5761269a2f78fe14c41bfad96906f19a9b6f231ba27a0e270536b",
                    "sha256:ce27ddfda0b79dba438fc400e0d24f635fec12b6b0b2e61ff692ddfb273b5fe9",
                    "sha256:251af411a33440438f0b2f94cdfb89f2f9ffdbc97319bda046932d48df33eb89",
                    "sha256:5482afbecbaab7a5c1e492cf2a2f03aafdc9012c4dc853b5b5c1ed9fde902db7",
                    "sha256:5d6da048fbb12c4062ff5b76617e555654e7b2043bfca3f0791046007fc79bb6",
                    "sha256:c6c5906dcd307ca53496f54734925e883c2e43f758510871473e5490706bf6a8",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:42adbbc0741061b3fa0e1fde61c20ae07301f416423df023d7264ef090febb62",
                    "sha256:dbbbe17a48649b115e35f670c0cc802489e40bb7cda170c216ad6c215e47a8e8",
                    "sha256:982fd24cbfe5783c218cb3fb307f97f28f07a390b305db2a3d6088ce02266a2d"
                ]
            }
        },
        "37-build-20240429": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "iot-gate-imx8plus",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                }
            },
            "created": "2024-05-06T10:39:41.599323029Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:31.895761202Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-29T00:47:03.16713451Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:270e11b4c18af1c1efb8b8579be7fbda5255d56dd69f83ef7d933cfd2c685e5c in / "
                },
                {
                    "created": "2023-11-29T00:47:04.125919026Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T09:28:43.57977131Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T09:28:43.57977131Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T09:28:43.57977131Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T09:47:19.941756159Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T10:20:57.000511545Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-clients \t\tsubversion \t\tautoconf \t\tautomake \t\tbzip2-devel \t\tglib2-devel \t\tgcc \t\tgcc-c++ \t\tImageMagick \t\tImageMagick-devel \t\tkernel-devel \t\tlibcurl-devel \t\tlibevent-devel \t\tlibffi-devel \t\tlibjpeg-devel \t\tlibsqlite3x-devel \t\tlibxml2-devel \t\tlibxslt-devel \t\tlibyaml-devel \t\tmysql-devel \t\tmake \t\tncurses-devel \t\topenssl-devel \t\tpostgresql-devel \t\treadline-devel \t\tsqlite-devel \t\tzlib-devel \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T10:20:58.118390256Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T10:20:58.118390256Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T10:20:58.12798187Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T10:20:58.136722317Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T10:20:58.164403522Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T10:20:58.164403522Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T10:21:01.984279759Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T10:21:02.133999332Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T10:39:41.484219958Z",
                    "created_by": "LABEL io.balena.device-type=iot-gate-imx8plus",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T10:39:41.484219958Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T10:39:41.599323029Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:22de68abb450063be7e40efd22fd3b41bec469efafdd95e25c65998648e52b28",
                    "sha256:40252cde73a60fe319f0dc295c7b1e421631974cfbe16656b81f7c86e773254e",
                    "sha256:4a4de46c8a70d5743384977bb42ebacdec5e3cb5490677a398f1d36366084aab",
                    "sha256:1523c4d5a73b8f8409b03635be1be78f6592c3915fd459908ffe5c04fb7ca684",
                    "sha256:3165ae98a25560d143d61c6f8a3cc9b4f73d0c009bfd9de33cefc4747c481229",
                    "sha256:802383c11ce70505808614d078d961ddc3cfaf46a58ac795624520a44e2a7860",
                    "sha256:0590d31cf7630143e0d0e5677bb4407b0d1c0b49a56ef3a87a860603dcea1282",
                    "sha256:6f5ffd7cbb1f8862606014326bb38c35022c8eb43d2a0aff0af32878db49dbdc",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:8c0b4113e6a87b2271a715a924b205a5c9534f5b51c4f3d05b39a48bb6ad75be",
                    "sha256:8758cb7509bfd7224c0a5331ba8bc629479d9e98ab727b0f5fb7261197212daa",
                    "sha256:c39cd3a2ce47e0850a8f29b00283fbc12ffda9edc18a0a64ab0368a4352c82a0"
                ]
            }
        },
        "37-run": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "iot-gate-imx8plus",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                }
            },
            "created": "2024-05-06T10:39:20.130192892Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:31.895761202Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-29T00:47:03.16713451Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:270e11b4c18af1c1efb8b8579be7fbda5255d56dd69f83ef7d933cfd2c685e5c in / "
                },
                {
                    "created": "2023-11-29T00:47:04.125919026Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T09:28:47.993183335Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T09:28:47.993183335Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T09:28:47.993183335Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T09:47:56.501476974Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T09:47:57.631980985Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T09:47:57.631980985Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T09:47:57.644124262Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T09:47:57.678847981Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T09:47:57.688494096Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T09:47:57.688494096Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T09:48:01.526529414Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T09:48:01.665893428Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T10:39:20.006293092Z",
                    "created_by": "LABEL io.balena.device-type=iot-gate-imx8plus",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T10:39:20.006293092Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T10:39:20.130192892Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:22de68abb450063be7e40efd22fd3b41bec469efafdd95e25c65998648e52b28",
                    "sha256:ef64ad49ccf58709af070779ae49d014558d78a8b6a21fcc279c09ddac79e6c9",
                    "sha256:486e799e950e2b998ed0a1a7221aed44130002259c2b437524c7a8a72b725a56",
                    "sha256:5ad52f9d14deab1b2c3a79dfb68bf730440e209f5926a2cd2ebd561c519a08de",
                    "sha256:73001e4334a2e5a98b50faf87e712eaf851af09ac903e83a569150844ce9eda1",
                    "sha256:696c197b14bb7731bf0a36bbdc5e5272937b693f192b143e02dac747a1305ba1",
                    "sha256:f27b4f97c199fdc59cc49eb91fc7a348daf160285ca6bfce88ede5b64e4bb0a9",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:22341517b8222bb5810db07c816fbd0de10749523856c0263caf14789e77d27d",
                    "sha256:108db07c780851f92a4d8ef0c1926797631a48d81f409bc8850b3a37f31fe4bb",
                    "sha256:5019b6b6e2ea25b8b42acd497a8ea0bb3aa9edf8a150d35e826ed803ec8d3f57"
                ]
            }
        },
        "37-run-20230502": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Cmd": null,
                "Image": "sha256:a68b119daf3e28debdf078c13084aef27795d0c41eca3070757270c37007dcff",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "OnBuild": null,
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-tx2",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                }
            },
            "container": "7423fe45f993649cd50a86110c3aade31acd4783b1f8f74b94b9a14cd0d3e651",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "[ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info"
                ],
                "Image": "sha256:a68b119daf3e28debdf078c13084aef27795d0c41eca3070757270c37007dcff",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-tx2",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                }
            },
            "created": "2023-05-08T16:20:14.664626498Z",
            "docker_version": "20.10.21",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:31.895761202Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-13T20:39:36.516425489Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:8f1c4c2e60330243e66c553f2377951b11c09601b874f6c778e90ff74c6dc376 in / "
                },
                {
                    "created": "2023-03-13T20:39:37.717809378Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-04-02T00:15:42.184062394Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL io.balena.architecture=aarch64",
                    "empty_layer": true
                },
                {
                    "created": "2023-04-02T00:15:42.325999277Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "empty_layer": true
                },
                {
                    "created": "2023-04-02T00:15:42.488342363Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:24916d641d0ee761d2bebd935412ac2263719e3f48829dd83555470573235ed9 in /usr/bin "
                },
                {
                    "created": "2023-04-02T00:34:27.312050054Z",
                    "created_by": "/bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\""
                },
                {
                    "created": "2023-04-02T01:08:25.388465514Z",
                    "created_by": "/bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end"
                },
                {
                    "created": "2023-04-02T01:08:25.551533349Z",
                    "created_by": "/bin/sh -c #(nop)  ENV UDEV=off",
                    "empty_layer": true
                },
                {
                    "created": "2023-04-02T01:08:25.703401831Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:0e8e5e7fcb5ff4b4caac2552d3c5cbf829703430466832566297680a5b09c62b in /usr/bin/entry.sh "
                },
                {
                    "created": "2023-04-02T01:08:25.832144045Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:207cdc191bada5970fb21d3481971b4a391e6e52061bd584dc75404c36d01fcf in /usr/bin/balena-info "
                },
                {
                    "created": "2023-04-02T01:08:25.936921778Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:def7f364bfe93992865dfba2017def9a3c407b6cf8ac0233dcd0aabaa9e4b75b in /usr/bin/balena-idle "
                },
                {
                    "created": "2023-04-02T01:08:26.059241016Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-04-02T01:08:30.523539615Z",
                    "created_by": "/bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh",
                    "empty_layer": true
                },
                {
                    "created": "2023-04-02T01:08:31.078585399Z",
                    "created_by": "/bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info"
                },
                {
                    "created": "2023-05-08T16:04:48.123965098Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL io.balena.device-type=jetson-tx2",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-08T16:20:13.834488214Z",
                    "created_by": "/bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all"
                },
                {
                    "created": "2023-05-08T16:20:14.664626498Z",
                    "created_by": "/bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:6fa23825e7d36de818dd635e6ddcfb1a63b42c8d2a2ebe9dc929a2d8e763fe3f",
                    "sha256:07b0d4da5e04230bb8db9790c1ff3923ecfeaf3f1e9a415e2aab47b5a9a3c0f1",
                    "sha256:48150357fa88a44cf5998c4a5b7e13f8107d4a0b881d13e4aca84aebe66babea",
                    "sha256:efe5d73677d2d6bf2c9aff6540e5fd3471e4445a5ebd050fcf61edacabd24493",
                    "sha256:a4786e5f9479fd133d3e0656a2d110fa7171de1d557215c0963994517a246db0",
                    "sha256:ac16514f34947310a8a17a27f099a5c82bb2f563a28a4e1431998927adaa1e53",
                    "sha256:eda8f31ef2f8144169de7e12869fc1e897e7427c6cab3e81041c33c07d11ff5b",
                    "sha256:6f7ea015bad319a12178cc9deed86ad6432b252ebd6dc7141a974eee74653f64",
                    "sha256:cfd8b93ad27a03808da6e42d10bfd05a9317239d5bfaf63b1e62b4f172372cbc",
                    "sha256:59c871739bd4ff474a5cef9442579177864a340096aa438609cddb64c1b102f0"
                ]
            }
        },
        "37-run-20230530": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Cmd": null,
                "Image": "sha256:20f9e37cab056b4dae525c039f7037ba42e096a6f55717137afee04271e77e96",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "OnBuild": null,
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-tx2",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                }
            },
            "container": "02586b804b62abfb75793d789ea4c7363176723ca5b24c0b44b7cf4458c84c71",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "[ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info"
                ],
                "Image": "sha256:20f9e37cab056b4dae525c039f7037ba42e096a6f55717137afee04271e77e96",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-tx2",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                }
            },
            "created": "2023-06-07T02:52:23.839260472Z",
            "docker_version": "20.10.21",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:31.895761202Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-31T18:09:14.311114615Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:ba657df1d10e8dc0a769b25e4ab09a73bca3a89df41b3a1b4e10f5fef058d1de in / "
                },
                {
                    "created": "2023-05-31T18:09:15.547149675Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-05T02:03:26.945834815Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL io.balena.architecture=aarch64",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-05T02:03:27.13778573Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-05T02:03:27.332819661Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:24916d641d0ee761d2bebd935412ac2263719e3f48829dd83555470573235ed9 in /usr/bin "
                },
                {
                    "created": "2023-06-05T02:24:26.189516816Z",
                    "created_by": "/bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\""
                },
                {
                    "created": "2023-06-05T03:02:04.392445503Z",
                    "created_by": "/bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end"
                },
                {
                    "created": "2023-06-05T03:02:04.646844986Z",
                    "created_by": "/bin/sh -c #(nop)  ENV UDEV=off",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-05T03:02:04.825711363Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:0e8e5e7fcb5ff4b4caac2552d3c5cbf829703430466832566297680a5b09c62b in /usr/bin/entry.sh "
                },
                {
                    "created": "2023-06-05T03:02:04.983337019Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:207cdc191bada5970fb21d3481971b4a391e6e52061bd584dc75404c36d01fcf in /usr/bin/balena-info "
                },
                {
                    "created": "2023-06-05T03:02:05.123767699Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:def7f364bfe93992865dfba2017def9a3c407b6cf8ac0233dcd0aabaa9e4b75b in /usr/bin/balena-idle "
                },
                {
                    "created": "2023-06-05T03:02:05.338685177Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-05T03:02:12.042609634Z",
                    "created_by": "/bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-05T03:02:13.377800909Z",
                    "created_by": "/bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info"
                },
                {
                    "created": "2023-06-07T02:34:44.82287582Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL io.balena.device-type=jetson-tx2",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-07T02:52:22.830368797Z",
                    "created_by": "/bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all"
                },
                {
                    "created": "2023-06-07T02:52:23.839260472Z",
                    "created_by": "/bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:249911891a8331ea3bbb5bf844c0feaad6066fdc936878a8c464416b1d78b22e",
                    "sha256:bc78f7b899700e4367bb848ecbc496f06865e82c6015e2a802406742f1cbefcf",
                    "sha256:284c09b1cb3f1977b7c56605e5ae1944d5ce3a83c3d77c0a22357607feb3701c",
                    "sha256:003aced5afcb43cee3c9363048741d8467dca9a7dfc7978926eeba94c0c793f5",
                    "sha256:83dfca5fa07e53ca9393a9653242046ccad66ffed2c2b472e349ccc34984f78f",
                    "sha256:546722af04ce5a848511c0f9b3850aefac740a4d7aff4fbbe9cf3e1caacbdaf8",
                    "sha256:fd8a15cd2653a1a0a698c31f8c62ce5e4920a30df101f4d3b8c125c83cdb0d3e",
                    "sha256:c497def0fd9a40925b091eb2a284460584d191e6f8bc647f5f3aa8c26565ff0b",
                    "sha256:1075349ad85152e3b31e6065a7f2f80d43d7f13314a1ef8a342ec2ebb114cc6f",
                    "sha256:adec9d84947aa22da33ef3f88120acb40c3a38fdcb36d111ea65e0514b23f071"
                ]
            }
        },
        "37-run-20230803": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "generic-aarch64",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2023-08-04T23:07:43.375331667Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:31.895761202Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-04T18:40:58.001277299Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:614dff70ca4206841645edfd3dab48901efeefccc8ef99772f475ee9bac861ff in / "
                },
                {
                    "created": "2023-08-04T18:40:59.951513662Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-04T18:54:04.279599867Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-04T18:54:04.279599867Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-04T18:54:04.279599867Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-04T19:20:03.223955138Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-04T20:07:46.587328502Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-04T20:07:46.587328502Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-04T20:07:46.609548438Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-04T20:07:46.619000353Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-04T20:07:46.643784193Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-04T20:07:46.643784193Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-04T20:07:51.914868814Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-04T20:07:52.316641812Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-04T23:07:42.902689671Z",
                    "created_by": "LABEL io.balena.device-type=generic-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-04T23:07:42.902689671Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-04T23:07:43.375331667Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "moby.buildkit.buildinfo.v1": "eyJmcm9udGVuZCI6ImRvY2tlcmZpbGUudjAiLCJhdHRycyI6eyJmaWxlbmFtZSI6IkRvY2tlcmZpbGUifSwic291cmNlcyI6W3sidHlwZSI6ImRvY2tlci1pbWFnZSIsInJlZiI6ImRvY2tlci5pby9iYWxlbmFsaWIvYWFyY2g2NC1mZWRvcmE6MzctcnVuIiwicGluIjoic2hhMjU2OjYyZDgyMzU1YTk1ZGFkNjNkZmFiYjAwYWRmMDg0ZDM1YjFlODUxYTQyZWU1OTQzYjE3OGQ5ODE5NjljMmFkZjIifV19",
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:cf819d1f191d71ce750fc0b9ca71726d50fc052d7c695682165a84c2bd1eb716",
                    "sha256:03789feb1993fcca25eacd7c042a5e0da237c9f2fa4a6f2ba8ad8ddcbcc047df",
                    "sha256:df63306f05b409fc7c242f10144cdea2d6eb06bd1c0d437922509682bf196d4f",
                    "sha256:bbdfed2dd994f5e7e9323593f9ca29bfb8b828a195790f981d11f82dc13c624f",
                    "sha256:2776818030d35900166dbf5a502fabc1ff88dd330f244d1162ca86ce8a18233b",
                    "sha256:26be61103dde02ae7eeb259ca681c784e0d557bf6b12df2a1a6552473280bedd",
                    "sha256:bb747782f19553a77f709283cb961b77fe72e296acc3ead020eca924dc5fce01",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:e8b5341d265b6c5db48a0f11ed785549f85f32a54ea1909674b6c08a33a2d0f7",
                    "sha256:a623c30286ac9d16628692759bdc53e28ae39e8e61efd5ee7364a36d900d6042",
                    "sha256:24834edc35e897ebb0f69be2daa23f220350916750c2c3d6586074bbd8ec730d"
                ]
            }
        },
        "37-run-20230829": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "generic-aarch64",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2023-09-02T08:58:38.635902453Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:31.895761202Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-04T18:40:58.001277299Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:614dff70ca4206841645edfd3dab48901efeefccc8ef99772f475ee9bac861ff in / "
                },
                {
                    "created": "2023-08-04T18:40:59.951513662Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-02T05:03:54.900306555Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-02T05:03:54.900306555Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-02T05:03:54.900306555Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T05:29:59.032216117Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T07:49:31.667835224Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T07:49:31.667835224Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-02T07:49:31.703166771Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T07:49:31.71048196Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T07:49:31.717951149Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T07:49:31.717951149Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-02T07:49:36.906076254Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T07:49:37.296912313Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T08:58:38.205221045Z",
                    "created_by": "LABEL io.balena.device-type=generic-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-02T08:58:38.205221045Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T08:58:38.635902453Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:cf819d1f191d71ce750fc0b9ca71726d50fc052d7c695682165a84c2bd1eb716",
                    "sha256:3c382cf512bf47b7376b28df697eafe60fb026ff08ad6264f571b1804576a531",
                    "sha256:242c49d1b03e40d91c941d76ea65e48dbfb13a6b7f6a8c0f17fa2b79bb3bf341",
                    "sha256:bba0a7dd26656a143d366c9386e193e577dde85487fea059991acb5311c337f8",
                    "sha256:0229146c9a8ae2f2d63e6a19a19370e3c3106fb917ff4041c69c337bafe20825",
                    "sha256:1b2572994e04be16791b3c500716eb39f1b1319dafd2c50ada219e826ddb81dc",
                    "sha256:4e58dca27db4d5d9ee1fdb2b00ba98010756175be3e905351b42f93464022edc",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:c6be8ccf7f63475573716aad14ea1215d6bee6236ef265531b27279cfde66460",
                    "sha256:430d5314f168d952339399356004a06369867fbb81a12c88de124e83359ed690",
                    "sha256:1eb82bdf03c1148a5816e4a3e00c8910fc70d37dee35dc007afe8037e2376b8e"
                ]
            }
        },
        "37-run-20230904": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "generic-aarch64",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2023-09-09T09:10:48.662664437Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:31.895761202Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-04T18:40:58.001277299Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:614dff70ca4206841645edfd3dab48901efeefccc8ef99772f475ee9bac861ff in / "
                },
                {
                    "created": "2023-08-04T18:40:59.951513662Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T05:16:42.403188583Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T05:16:42.403188583Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T05:16:42.403188583Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T05:41:14.882541843Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T05:41:16.309377049Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T05:41:16.309377049Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T05:41:16.340188202Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T05:41:16.351150734Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T05:41:16.360211026Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T05:41:16.360211026Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T05:41:21.389664273Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T05:41:21.747711571Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T09:10:48.373996507Z",
                    "created_by": "LABEL io.balena.device-type=generic-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T09:10:48.373996507Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T09:10:48.662664437Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:cf819d1f191d71ce750fc0b9ca71726d50fc052d7c695682165a84c2bd1eb716",
                    "sha256:2c61372b1614282bfdb58c104252b37a61be492de5c3298dffc56376adfe0a8f",
                    "sha256:3892fad87609c0724cb700c7b327865d8b642316f214825299540678c84e007b",
                    "sha256:47b1691c56a15153e34460e97d0615abbde7eb4128cffd187b3c4507be55c4a0",
                    "sha256:526255e20ebb75f4e4a9cd0b179342ccc59ea09dfb95f916aad1dfd38903c411",
                    "sha256:10a91abc01c07dd01c837dc1a35597c3030ffee89a81f6dcc760a204a2da9e5a",
                    "sha256:fb61a502b5a7e114c0e1b65ffbf1f5d42041b65c52f9ecb41e2fb9a1cdcdbd97",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:cc06c053add61653ccca8a1d621c01df905dfb240d202ad2f7452d1777852952",
                    "sha256:153e452baec08f41027fff3674c18b22fab8e703bf9fe321cbd5b2239a8b437a",
                    "sha256:4b49328db1c28b0599a6dba7094df0748381930f9162e62cd99f60c6d32cb0de"
                ]
            }
        },
        "37-run-20230911": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "iot-gate-imx8plus",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2023-09-12T03:05:53.243163887Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:31.895761202Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-04T18:40:58.001277299Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:614dff70ca4206841645edfd3dab48901efeefccc8ef99772f475ee9bac861ff in / "
                },
                {
                    "created": "2023-08-04T18:40:59.951513662Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T05:16:42.403188583Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T05:16:42.403188583Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T05:16:42.403188583Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T05:41:14.882541843Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T05:41:16.309377049Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T05:41:16.309377049Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T05:41:16.340188202Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T05:41:16.351150734Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T05:41:16.360211026Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T05:41:16.360211026Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T05:41:21.389664273Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T05:41:21.747711571Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-12T03:05:53.110371243Z",
                    "created_by": "LABEL io.balena.device-type=iot-gate-imx8plus",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-12T03:05:53.110371243Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-12T03:05:53.243163887Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:cf819d1f191d71ce750fc0b9ca71726d50fc052d7c695682165a84c2bd1eb716",
                    "sha256:2c61372b1614282bfdb58c104252b37a61be492de5c3298dffc56376adfe0a8f",
                    "sha256:3892fad87609c0724cb700c7b327865d8b642316f214825299540678c84e007b",
                    "sha256:47b1691c56a15153e34460e97d0615abbde7eb4128cffd187b3c4507be55c4a0",
                    "sha256:526255e20ebb75f4e4a9cd0b179342ccc59ea09dfb95f916aad1dfd38903c411",
                    "sha256:10a91abc01c07dd01c837dc1a35597c3030ffee89a81f6dcc760a204a2da9e5a",
                    "sha256:fb61a502b5a7e114c0e1b65ffbf1f5d42041b65c52f9ecb41e2fb9a1cdcdbd97",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:cc06c053add61653ccca8a1d621c01df905dfb240d202ad2f7452d1777852952",
                    "sha256:b8ed483edfdee7085e4a858d5943ce5fae61b59ccf5d6a7752f71ae9e0877449",
                    "sha256:7dcfcdfbc1c37f420235199d40c101579b8e90adcdc44c1990bf1d8334f375b0"
                ]
            }
        },
        "37-run-20231103": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "iot-gate-imx8plus",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2023-11-04T16:58:36.691823802Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:31.895761202Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-06T18:42:53.905315575Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:a506790441a5cd056fb456111da480939a46667d520b519dcb9b2e2aa16aae70 in / "
                },
                {
                    "created": "2023-10-06T18:42:54.852939758Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-04T14:05:43.22598589Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-04T14:05:43.22598589Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-04T14:05:43.22598589Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T14:34:18.977818495Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T14:34:20.236374739Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T14:34:20.236374739Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-04T14:34:20.246502673Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T14:34:20.255833503Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T14:34:20.26399513Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T14:34:20.26399513Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-04T14:34:25.601224907Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T14:34:25.783838009Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T16:58:36.562666967Z",
                    "created_by": "LABEL io.balena.device-type=iot-gate-imx8plus",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-04T16:58:36.562666967Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T16:58:36.691823802Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:a37bac7c99baeb556998a67a51775b34aa6df7829fa1ff19323033c5e19837b3",
                    "sha256:768fbcc1112a55954ab49021af3e5b3e77d06892f0018801cb6a68567a441e44",
                    "sha256:b339e6005ff8696452b8a5daf08c04afc137c0da129e399cf294d19b6213af01",
                    "sha256:80e7fcb77b05762cb4af7a336c31edd97b255eb9c5e68b5e2d99fcd0c0941c00",
                    "sha256:faa025149da6c8af6245b9feb2dfa133869871b24b83291212a581a8ac861951",
                    "sha256:85fb00c475997eaa7bf88fdc4a78bd8ad8ecfcafaa4870eb4c2e610747381ba2",
                    "sha256:707dbcf7ea87fd75e1d03a7f275e36d8fcfc1b4ea1f3c867ab6830318bf147e9",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:2509d1d7a240f88f51a41393363e38c35b81e3edf67fa356b59390c21617a3ab",
                    "sha256:a4c40202ed504a23f0061115359756ce4296061beebaccdceecebd8da4e63af9",
                    "sha256:ecdaaf53e54bd152818947b8d0306f4958ea11182202936dd9defa9f17ffdaa6"
                ]
            }
        },
        "37-run-20231106": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "iot-gate-imx8plus",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2023-11-06T12:31:35.98179637Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:31.895761202Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-06T18:42:53.905315575Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:a506790441a5cd056fb456111da480939a46667d520b519dcb9b2e2aa16aae70 in / "
                },
                {
                    "created": "2023-10-06T18:42:54.852939758Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T09:12:27.261337628Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T09:12:27.261337628Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T09:12:27.261337628Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T09:44:07.194449485Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T09:44:08.356242913Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T09:44:08.356242913Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T09:44:08.370923209Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T09:44:08.383861082Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T09:44:08.401598819Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T09:44:08.401598819Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T09:44:14.097449997Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T09:44:14.33458648Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T12:31:35.819901526Z",
                    "created_by": "LABEL io.balena.device-type=iot-gate-imx8plus",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T12:31:35.819901526Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T12:31:35.98179637Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:a37bac7c99baeb556998a67a51775b34aa6df7829fa1ff19323033c5e19837b3",
                    "sha256:bb42b2b57488a97c34e8f0aa9c9a04b6b5ddc51428a7f869c902e262985533fa",
                    "sha256:f41e2d07027059a658a46da06111805a1c38c357d7a263b65a57906a413afcb8",
                    "sha256:6dfd1348c7cf846716582db5414652bd266c84c3ceb084217d2c1faaa43610bd",
                    "sha256:1ef3bd9e556e1fe5e94ee5fc778405d0e160b3b2f911f7b73b841e3f2947d4ec",
                    "sha256:b00ab734246e3ab0a163af225efd04d30fbb893167c4883967444d8739b0a28b",
                    "sha256:505040d84b751f1b80aad25e47e2b5770da95393e303943d0e90452bb789625d",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:3de7d77508b1af83bfd44b6a7776ab5e9c687ecfe948f5f9d8f15802beed22b0",
                    "sha256:79f3108df0f2d1f13340291298342905907c027b115b3d6798004268b3aee89c",
                    "sha256:688938a5f4feaf8e78c732bb0f26f5b4b9bc6e12f1d5280518263bd268f74441"
                ]
            }
        },
        "37-run-20231127": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "iot-gate-imx8plus",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2023-12-01T13:07:24.709335954Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:31.895761202Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-29T00:47:03.16713451Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:270e11b4c18af1c1efb8b8579be7fbda5255d56dd69f83ef7d933cfd2c685e5c in / "
                },
                {
                    "created": "2023-11-29T00:47:04.125919026Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T10:52:09.172740458Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T10:52:09.172740458Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T10:52:09.172740458Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T11:10:46.008255947Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T11:10:47.111959762Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T11:10:47.111959762Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T11:10:47.123059062Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T11:10:47.148503741Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T11:10:47.157133896Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T11:10:47.157133896Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T11:10:50.883923644Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T11:10:51.046020579Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T13:07:24.562017117Z",
                    "created_by": "LABEL io.balena.device-type=iot-gate-imx8plus",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T13:07:24.562017117Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T13:07:24.709335954Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:22de68abb450063be7e40efd22fd3b41bec469efafdd95e25c65998648e52b28",
                    "sha256:60f2f571d3fb1d1d2155d703033185efdcb8fd06f11360aff3752c6009ddbba5",
                    "sha256:8bb3ecdba476409248d260241fff01266e4176e947fe811a5efe5456870e671e",
                    "sha256:6852dc1f1a771f4a7632382350c1dbaa2ae3e16802b4884d04618e03763e8376",
                    "sha256:9db2458df0d1ffca59509d5dbd49436ef952483f1042d53531ca90ba7d6de9e9",
                    "sha256:8d401a597be69855ebfaf84921f07b57da8bb7a5c49c370999b998f6062358a2",
                    "sha256:05f9f870334e6de793d303f103d1f1b35f7df1ff21724f7ebaeb6fc561bccc2c",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:24546f46791bf568236132bceae1cdf41c9ca9f6d3e09077cab2bc32ee6bb76c",
                    "sha256:0ee6e1af05fed5090277a4b66a20553164e97d4f26af60bcbbf5e8e130a0424b",
                    "sha256:ec20f57723356e56d8c7929c3a784ed0aae50b2d6f8cde6bb310e89190f528ca"
                ]
            }
        },
        "37-run-20231204": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "iot-gate-imx8plus",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2023-12-06T22:55:31.420425013Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:31.895761202Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-29T00:47:03.16713451Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:270e11b4c18af1c1efb8b8579be7fbda5255d56dd69f83ef7d933cfd2c685e5c in / "
                },
                {
                    "created": "2023-11-29T00:47:04.125919026Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T20:40:21.575448793Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T20:40:21.575448793Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T20:40:21.575448793Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T20:59:06.4416038Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T20:59:07.14149679Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T20:59:07.14149679Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T20:59:07.150718208Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T20:59:07.159290685Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T20:59:07.187587582Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T20:59:07.187587582Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T20:59:10.850419463Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T20:59:11.010511508Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T22:55:31.287807643Z",
                    "created_by": "LABEL io.balena.device-type=iot-gate-imx8plus",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T22:55:31.287807643Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T22:55:31.420425013Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:22de68abb450063be7e40efd22fd3b41bec469efafdd95e25c65998648e52b28",
                    "sha256:2c6b0df21f9efd51a24a59463b9265452ccc9cf8a26908c50d2742c0e67683bd",
                    "sha256:906012c4f278d0d6c4a614afd4c812fc55bc367d28aac2c10cbdd33ac6ec80b8",
                    "sha256:34fc306b51c5f84676518d54cf67a097f48bfc8e79fb8c0ffc71ed9b2d1b5def",
                    "sha256:aa005d370b40094b326443ce4f1b6d04a780598588bd8f8fa1dc601171d59314",
                    "sha256:e580b4505982459166845d47c3159777541e000c8826a05635c6f84f62f03011",
                    "sha256:79990d4ff119d7188fd5fdcaaa04c391747be11fefbbe682a6a2c495c8ca3a6b",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:0aff9ccfdfd88ab9194d2d15e49264900a8942406276260bf5fb479d637d2075",
                    "sha256:316c5f8b0fbeb6ffb3a0ce73220b175e794d17f6e310a3e0bc7a2ef50c645342",
                    "sha256:8ce4d7578ff5a2e8887d47cae9a1c35fc64d1636cfc68bbe8c15b48010e4dd60"
                ]
            }
        },
        "37-run-20240205": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "iot-gate-imx8plus",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2024-02-05T02:46:30.94219159Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:31.895761202Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-29T00:47:03.16713451Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:270e11b4c18af1c1efb8b8579be7fbda5255d56dd69f83ef7d933cfd2c685e5c in / "
                },
                {
                    "created": "2023-11-29T00:47:04.125919026Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-05T00:26:08.862006831Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-05T00:26:08.862006831Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-05T00:26:08.862006831Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T00:44:51.352289509Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T00:44:52.031271896Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T00:44:52.031271896Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-05T00:44:52.040913956Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T00:44:52.086913794Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T00:44:52.096058179Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T00:44:52.096058179Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-05T00:44:55.875508418Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T00:44:56.018376913Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T02:46:30.829833069Z",
                    "created_by": "LABEL io.balena.device-type=iot-gate-imx8plus",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-05T02:46:30.829833069Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T02:46:30.94219159Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:22de68abb450063be7e40efd22fd3b41bec469efafdd95e25c65998648e52b28",
                    "sha256:7d94e909dc19f31d9248e1ca5731a04da35c29e754dd69d2fb5a44a2502cc818",
                    "sha256:ed6509b907c0701f8a2a621cb39dbd26d066f869bf0b780990c71b717675bb3d",
                    "sha256:e03ba5a1224f9b985f2d94275263fa36221b3ab01f59437a07d3c1a623b76d77",
                    "sha256:9be68f287ebf7d1727a82714c098ca3ac0e021a4f0bd91d94de4992f010d993f",
                    "sha256:a5b159b9ba50945bb72f35a268a6bd8fca087febe08b2ec49f6982b5d39309e7",
                    "sha256:5efcacbddce62383428c47d9f0b7b716feaa80d8781fe6dd2b1dc81f391509df",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:4491643620a3eb30fa973704b1de6c31cc71b0330dda8cb2847cc88b0981d732",
                    "sha256:b2d88aa29c18001e4fcb693150a36e72f0dbafe39051ee215465168339f864fd",
                    "sha256:86521cd5b53fa059ea52a2ddcdd18f2a7c7e0e90e30865b1d1f18970eac65b84"
                ]
            }
        },
        "37-run-20240227": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "iot-gate-imx8plus",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2024-03-01T23:22:38.162250541Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:31.895761202Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-29T00:47:03.16713451Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:270e11b4c18af1c1efb8b8579be7fbda5255d56dd69f83ef7d933cfd2c685e5c in / "
                },
                {
                    "created": "2023-11-29T00:47:04.125919026Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T20:49:58.705358685Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T20:49:58.705358685Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T20:49:58.705358685Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:08:24.834287933Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:08:25.565567755Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:08:25.565567755Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T21:08:25.579271093Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:08:25.617204263Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:08:25.629384601Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:08:25.629384601Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T21:08:29.321790107Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:08:29.46619614Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T23:22:38.053697448Z",
                    "created_by": "LABEL io.balena.device-type=iot-gate-imx8plus",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T23:22:38.053697448Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T23:22:38.162250541Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:22de68abb450063be7e40efd22fd3b41bec469efafdd95e25c65998648e52b28",
                    "sha256:bfe341409759f9ccd364ecb2d335246560d19282f3ecf321c53836e101a82d2a",
                    "sha256:22279a1bcbb3b6a49c8d9ada414e0b58c5c83f35e20c9a33acc65e0aedb733a1",
                    "sha256:59b3dbe842a8cbc03ed09e65a15a87e8c46f6653b87eb93c5b37d8ab77060acf",
                    "sha256:2ad87538d509ffa4457cec4d29a36d570c8392257dab445452209d4097b7bf52",
                    "sha256:4b3f303bc53eefd36ad3db9ee937836bf0e5855a96ec2546c67cb8238fa8c5bc",
                    "sha256:27f44cee2cfb128916d178e2e1dd253065b766fcffe0f37cdb2588702c65bd5f",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:7f5845d6da8e4b02efd4b375c5222854a386a7b02c491fe3b96307345b96014d",
                    "sha256:a3ac2e153463933f1666d85b7eb6378535612a047bdd475eda21d486a894b92f",
                    "sha256:6f8dd89a74009292ee644b2c2ea6dde8488e5dae9ebf8cbd127f77b88f8bf4fc"
                ]
            }
        },
        "37-run-20240304": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "iot-gate-imx8plus",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2024-03-05T10:49:02.924094Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:31.895761202Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-29T00:47:03.16713451Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:270e11b4c18af1c1efb8b8579be7fbda5255d56dd69f83ef7d933cfd2c685e5c in / "
                },
                {
                    "created": "2023-11-29T00:47:04.125919026Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T08:24:13.360409226Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T08:24:13.360409226Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T08:24:13.360409226Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T08:43:22.770169859Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T08:43:23.650621519Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T08:43:23.650621519Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T08:43:23.66033272Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T08:43:23.670216283Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T08:43:23.695421657Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T08:43:23.695421657Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T08:43:27.455502812Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T08:43:27.593974423Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T10:49:02.81018686Z",
                    "created_by": "LABEL io.balena.device-type=iot-gate-imx8plus",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T10:49:02.81018686Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T10:49:02.924094Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:22de68abb450063be7e40efd22fd3b41bec469efafdd95e25c65998648e52b28",
                    "sha256:28463901e499aa0a1515b57d0fbafa9cb9a2cc02cc10ed1687c180941c557184",
                    "sha256:0ca6f2444de4ad55ab4af4fd74364d376cec4fab74ebda60cba78c9fa2d7e649",
                    "sha256:cfc10fd96b96916769b790f45b5a4f0a1a17202f2532d659330de963d4494ebf",
                    "sha256:d2c34fbda1de7685d96923948d480fbe0ebab10b9087bfebda73744dbe2a6f9a",
                    "sha256:0d88f38f1e25f8d79cc6f17c26de206e21378fdd492c88062ab3e718003d32df",
                    "sha256:01e1144fabf916d9df9dbc69c087247ccbb1e57b391ed28f7dac24153a50d7b2",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:7ad9ead66349340e94a99303f594e85c786a6fabee7368153801d079722794bc",
                    "sha256:6d9bc439379dc6b8df2f5253f7c1eb3eab4b7df41d36779811aef70800e08407",
                    "sha256:26ba84d0e46a6d26e818ccc2fbc28157723ab106845216c395ca1e47649fa446"
                ]
            }
        },
        "37-run-20240401": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "iot-gate-imx8plus",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                }
            },
            "created": "2024-04-01T23:47:50.81840626Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:31.895761202Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-29T00:47:03.16713451Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:270e11b4c18af1c1efb8b8579be7fbda5255d56dd69f83ef7d933cfd2c685e5c in / "
                },
                {
                    "created": "2023-11-29T00:47:04.125919026Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T21:26:29.343455526Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T21:26:29.343455526Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T21:26:29.343455526Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T21:45:10.957762154Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T21:45:11.852141047Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T21:45:11.852141047Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T21:45:11.862471903Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T21:45:11.872331413Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T21:45:11.898584749Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T21:45:11.898584749Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T21:45:15.686171825Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T21:45:15.820771715Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T23:47:50.707520722Z",
                    "created_by": "LABEL io.balena.device-type=iot-gate-imx8plus",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T23:47:50.707520722Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T23:47:50.81840626Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:22de68abb450063be7e40efd22fd3b41bec469efafdd95e25c65998648e52b28",
                    "sha256:3a6d39f67382783e2c69d9a448aa59d1d7654260210364d05c2cae2ef469e3c8",
                    "sha256:8b316e0949cd1905304ca774963ddae530565f690a65de9db1a2dafa9aed0363",
                    "sha256:7fa4949a4c79caf7d749cc4abcbc241a5dd3a5c8d0155458cf6d4d83ac483646",
                    "sha256:0a0eea417236fa5be4e06c1d20766fd9f3b0e064419a66f356dea0f1f6d794df",
                    "sha256:ad31ce618fd1f26b74bc2900fbd27319ed86917e85375f90b57d28b291156d51",
                    "sha256:7b8582873ef4cde2aca83ece090a3993ca7c4f8fe0b13c3b0b064f08c7b21c21",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:8050b5f7d3d161f91b3bad0576691d8640130b32c0b8f23db87cdd4fee47c82e",
                    "sha256:c51d3491b64019f87ef0efcdbc52139676fb9f32add80fde849c9fa5d585dc91",
                    "sha256:66dab9d052d7becc66f0b8b7ae75872806657705cd92ef92ca7ff6d4e51a4240"
                ]
            }
        },
        "37-run-20240408": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "iot-gate-imx8plus",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                }
            },
            "created": "2024-04-09T20:02:56.694145507Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:31.895761202Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-29T00:47:03.16713451Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:270e11b4c18af1c1efb8b8579be7fbda5255d56dd69f83ef7d933cfd2c685e5c in / "
                },
                {
                    "created": "2023-11-29T00:47:04.125919026Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:52.915602222Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:52.915602222Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:52.915602222Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:54:04.100191166Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:54:04.963844501Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:54:04.963844501Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:54:04.973366628Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:54:05.001513857Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:54:05.024710968Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:54:05.024710968Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:54:08.797015979Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:54:08.943058393Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T20:02:56.566729467Z",
                    "created_by": "LABEL io.balena.device-type=iot-gate-imx8plus",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T20:02:56.566729467Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T20:02:56.694145507Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:22de68abb450063be7e40efd22fd3b41bec469efafdd95e25c65998648e52b28",
                    "sha256:03dd9a4ed991dc43e9a504ad71941782bb6fd4cd57f8ade649bbe25b622e3902",
                    "sha256:d24e8e6aec171dc7068d2c19b85d8c6341381b2f0cf4e1d1a20d5419f2d1ec53",
                    "sha256:e743a07ebcce27b755341d992eb4148fe86bd04481c6d8f2b6fe7364a942af19",
                    "sha256:1c988fbb0bdd3374b1f72bebc1953bd62853c7e33608dbc885ff64eba44dc1eb",
                    "sha256:7fad6968fdbdd1afee5f76e3b2f3df1829677bc85be4fa920cb57db14562699c",
                    "sha256:2999088cf700c485af0973e03dd5e2ff9d96b3f604f5908307f3edb5377c6d58",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:a75c43802eb36b20a7183fe5c30e33ef495a904237a7483d5c73c1df1691887b",
                    "sha256:ba82a540cbc6793313055baaceac216ac219896739f6c0d5c70520d7498ba8f0",
                    "sha256:e6c9a7824e2c775d74446a1eca6572ba467b4af264e68ed89d05bc8535d080e4"
                ]
            }
        },
        "37-run-20240429": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "iot-gate-imx8plus",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                }
            },
            "created": "2024-05-06T10:39:20.130192892Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:31.895761202Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-29T00:47:03.16713451Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:270e11b4c18af1c1efb8b8579be7fbda5255d56dd69f83ef7d933cfd2c685e5c in / "
                },
                {
                    "created": "2023-11-29T00:47:04.125919026Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T09:28:47.993183335Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T09:28:47.993183335Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T09:28:47.993183335Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T09:47:56.501476974Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T09:47:57.631980985Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T09:47:57.631980985Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T09:47:57.644124262Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T09:47:57.678847981Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T09:47:57.688494096Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T09:47:57.688494096Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T09:48:01.526529414Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T09:48:01.665893428Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T10:39:20.006293092Z",
                    "created_by": "LABEL io.balena.device-type=iot-gate-imx8plus",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T10:39:20.006293092Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T10:39:20.130192892Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:22de68abb450063be7e40efd22fd3b41bec469efafdd95e25c65998648e52b28",
                    "sha256:ef64ad49ccf58709af070779ae49d014558d78a8b6a21fcc279c09ddac79e6c9",
                    "sha256:486e799e950e2b998ed0a1a7221aed44130002259c2b437524c7a8a72b725a56",
                    "sha256:5ad52f9d14deab1b2c3a79dfb68bf730440e209f5926a2cd2ebd561c519a08de",
                    "sha256:73001e4334a2e5a98b50faf87e712eaf851af09ac903e83a569150844ce9eda1",
                    "sha256:696c197b14bb7731bf0a36bbdc5e5272937b693f192b143e02dac747a1305ba1",
                    "sha256:f27b4f97c199fdc59cc49eb91fc7a348daf160285ca6bfce88ede5b64e4bb0a9",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:22341517b8222bb5810db07c816fbd0de10749523856c0263caf14789e77d27d",
                    "sha256:108db07c780851f92a4d8ef0c1926797631a48d81f409bc8850b3a37f31fe4bb",
                    "sha256:5019b6b6e2ea25b8b42acd497a8ea0bb3aa9edf8a150d35e826ed803ec8d3f57"
                ]
            }
        },
        "38": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f38container",
                    "FGC=f38",
                    "FBR=f38",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "iot-gate-imx8plus",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                }
            },
            "created": "2024-05-06T10:46:35.305820329Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:41.041894598Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f38container FGC=f38 FBR=f38",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-20T23:39:45.493041732Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:50f76cb2e29e780d80bbc023f0bbb552e413a0191d6fab7fedce9f032d7c55ec in / "
                },
                {
                    "created": "2024-02-20T23:39:46.885294079Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:45.909708183Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:45.909708183Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:45.909708183Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:02:01.590555751Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:02:02.351225239Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:02:02.351225239Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T14:02:02.360749405Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:02:02.369270986Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:02:02.405864798Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:02:02.405864798Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T14:02:07.899966098Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 38   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:02:08.045611622Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 38 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T10:46:35.185525692Z",
                    "created_by": "LABEL io.balena.device-type=iot-gate-imx8plus",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T10:46:35.185525692Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T10:46:35.305820329Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 38 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:d9224901c4254002370ad869c45d487779ce52e983554fc3c651d1283143025c",
                    "sha256:ebcf910b3bd968c69298ac824583cd1528883f4a382541565a04a486c658c20b",
                    "sha256:c24ea502f2f1577b4278e978c5db52a3b01de7a26e6f4724887ceeba23daeba2",
                    "sha256:793d820a1dccf3d247ece3546ff7db37debcbeed40e828cb75bb4cb13b7aebab",
                    "sha256:553772b6df64fc5ba696a001383c6ffd5b481fb5f850cde63456cadf5cca043f",
                    "sha256:f4ac866915cc972c7c4d1726ddc5effabb4cc90debfacebc71ef6f4541bf63ef",
                    "sha256:8e85cb2120afad8b568aebbb01c8c1d2a29b17f9b8f160299e7d4c9843c607d2",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:2579e5f7d4e51b9a0d613c0c3be4660311f4b1324ea68a59aa3c2a222a1785eb",
                    "sha256:92043577b9017c077fccc7660275ff511e480e0e7638f589157bf993a0deb8bd",
                    "sha256:4edd723bc543ed24c1e4ac83592cf45b742e0cce40ef7145a9701e42d01a4ad3"
                ]
            }
        },
        "38-20230502": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f38container",
                    "FGC=f38",
                    "FBR=f38",
                    "UDEV=off"
                ],
                "Cmd": null,
                "Image": "sha256:79aa25478631bcf650a26136a34330126d3a7f89a8a5d02c1e44b5f299e85380",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "OnBuild": null,
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-tx2",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                }
            },
            "container": "02c40259df11dd371252af691bdbcaed20b2f97d1d903ba5652394136ffd161e",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f38container",
                    "FGC=f38",
                    "FBR=f38",
                    "UDEV=off"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "[ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 38 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info"
                ],
                "Image": "sha256:79aa25478631bcf650a26136a34330126d3a7f89a8a5d02c1e44b5f299e85380",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-tx2",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                }
            },
            "created": "2023-05-08T17:16:51.953879956Z",
            "docker_version": "20.10.21",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:41.041894598Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f38container FGC=f38 FBR=f38",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-13T20:39:44.489634345Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:96676ec5bbfd4d36d5a997a41d25c86f6bf97dcf23c81dd81d1f76b5d2bda13b in / "
                },
                {
                    "created": "2023-03-13T20:39:46.261120513Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-04-02T01:12:02.835444454Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL io.balena.architecture=aarch64",
                    "empty_layer": true
                },
                {
                    "created": "2023-04-02T01:12:02.952877638Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "empty_layer": true
                },
                {
                    "created": "2023-04-02T01:12:03.101562049Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:24916d641d0ee761d2bebd935412ac2263719e3f48829dd83555470573235ed9 in /usr/bin "
                },
                {
                    "created": "2023-04-02T01:37:11.814833032Z",
                    "created_by": "/bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\""
                },
                {
                    "created": "2023-04-02T02:18:27.367306969Z",
                    "created_by": "/bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end"
                },
                {
                    "created": "2023-04-02T02:18:27.527583216Z",
                    "created_by": "/bin/sh -c #(nop)  ENV UDEV=off",
                    "empty_layer": true
                },
                {
                    "created": "2023-04-02T02:18:27.642120199Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:0e8e5e7fcb5ff4b4caac2552d3c5cbf829703430466832566297680a5b09c62b in /usr/bin/entry.sh "
                },
                {
                    "created": "2023-04-02T02:18:27.741368648Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:207cdc191bada5970fb21d3481971b4a391e6e52061bd584dc75404c36d01fcf in /usr/bin/balena-info "
                },
                {
                    "created": "2023-04-02T02:18:27.838228958Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:def7f364bfe93992865dfba2017def9a3c407b6cf8ac0233dcd0aabaa9e4b75b in /usr/bin/balena-idle "
                },
                {
                    "created": "2023-04-02T02:18:27.950884221Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-04-02T02:18:34.374999444Z",
                    "created_by": "/bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 38   && rm -rf test-os.sh",
                    "empty_layer": true
                },
                {
                    "created": "2023-04-02T02:18:34.944298604Z",
                    "created_by": "/bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 38 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info"
                },
                {
                    "created": "2023-05-08T16:52:36.911133465Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL io.balena.device-type=jetson-tx2",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-08T17:16:50.859471721Z",
                    "created_by": "/bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all"
                },
                {
                    "created": "2023-05-08T17:16:51.953879956Z",
                    "created_by": "/bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 38 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:38d07a70cba3a76ac94f88b59aa4dd55141e65478b300c7249d2686985c61626",
                    "sha256:1d59e4e611086dc811fe4a3c86b9ad72a41f53890b3e0e0ab7681337e53c7730",
                    "sha256:5aa1a95c32c0c895074366ece9ad2f9058758e785ee114c8c38a7c2b30f4be37",
                    "sha256:e6decbb9b9209f4adbda743690cd3f49b7c53420af6f6362605bea28b061bab2",
                    "sha256:67c5a7b96e67f5b14239685f35f0ea11d0ca38389053ec28ddd808156d5e50a9",
                    "sha256:62146fabd40ed3337a33b8ad2f6029886d342f9758ee74e1789bad62df88a10f",
                    "sha256:ae7bb7cc0f530a38d47ee24f8bf081ad8b2e94c7ee248b57dfd715a0a6e5f1a7",
                    "sha256:e8dfaccebf0f11eeaa116b1a118543b118434e0f7756127615c10b407b13921b",
                    "sha256:bb33baf23e780f2c95388d714633f8308118f9cdcf48fe5430b14119334fa011",
                    "sha256:010ca8de66f62e71edd316d661d73533f229bc6156406b35117dfa022d0b2934"
                ]
            }
        },
        "38-20230530": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f38container",
                    "FGC=f38",
                    "FBR=f38",
                    "UDEV=off"
                ],
                "Cmd": null,
                "Image": "sha256:163972f58c07e7a0e1895a8caf70a0769ca01c68c3774383f5d704686bdd083f",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "OnBuild": null,
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-tx2",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                }
            },
            "container": "83381000b5b8aedfd78017fcd619e87313d3fd52354393cbfa9fcf313e5c200a",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f38container",
                    "FGC=f38",
                    "FBR=f38",
                    "UDEV=off"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "[ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 38 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info"
                ],
                "Image": "sha256:163972f58c07e7a0e1895a8caf70a0769ca01c68c3774383f5d704686bdd083f",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-tx2",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                }
            },
            "created": "2023-06-07T07:05:36.020626306Z",
            "docker_version": "20.10.21",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:41.041894598Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f38container FGC=f38 FBR=f38",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-31T18:09:25.030031251Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:f63fd8cf8c85027eab56f35df952c656ccec605f66c2269dbcd6f4af631a647a in / "
                },
                {
                    "created": "2023-05-31T18:09:26.818746317Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-05T03:06:46.738227015Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL io.balena.architecture=aarch64",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-05T03:06:46.998201042Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-05T03:06:47.203727542Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:24916d641d0ee761d2bebd935412ac2263719e3f48829dd83555470573235ed9 in /usr/bin "
                },
                {
                    "created": "2023-06-05T03:32:10.792635056Z",
                    "created_by": "/bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\""
                },
                {
                    "created": "2023-06-05T03:32:14.850927812Z",
                    "created_by": "/bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end"
                },
                {
                    "created": "2023-06-05T03:32:15.060912508Z",
                    "created_by": "/bin/sh -c #(nop)  ENV UDEV=off",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-05T03:32:15.238785047Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:0e8e5e7fcb5ff4b4caac2552d3c5cbf829703430466832566297680a5b09c62b in /usr/bin/entry.sh "
                },
                {
                    "created": "2023-06-05T03:32:15.397105105Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:207cdc191bada5970fb21d3481971b4a391e6e52061bd584dc75404c36d01fcf in /usr/bin/balena-info "
                },
                {
                    "created": "2023-06-05T03:32:15.539724342Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:def7f364bfe93992865dfba2017def9a3c407b6cf8ac0233dcd0aabaa9e4b75b in /usr/bin/balena-idle "
                },
                {
                    "created": "2023-06-05T03:32:15.897346878Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-05T03:32:22.678609628Z",
                    "created_by": "/bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 38   && rm -rf test-os.sh",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-05T03:32:23.398275174Z",
                    "created_by": "/bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 38 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info"
                },
                {
                    "created": "2023-06-07T06:43:30.334565621Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL io.balena.device-type=jetson-tx2",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-07T07:05:35.042887518Z",
                    "created_by": "/bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all"
                },
                {
                    "created": "2023-06-07T07:05:36.020626306Z",
                    "created_by": "/bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 38 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:0fb83c39d9bfdce28d850a565400df5ea5460c94c56e14916c217c8ab5b76b13",
                    "sha256:7d462ee81163c53071c50f1f5f982c0ab6625ba7a1fcc270ce8317e35d5d6547",
                    "sha256:07acba7ab80e7b13458bd4acecd7e9e75b0fc869e4a22afd34262a9732871f4f",
                    "sha256:c2a63b925a0f36d8be87dbcf30c26b14760477605cbe1c8c87e4bd0d29442c92",
                    "sha256:9d41206a9f847551a93993d88155d2af9ce529fbad76821810ebb52e32b064ff",
                    "sha256:c18e0a1c3b593d3a3e75ed7d9fec60090170b86f539543f2c11a7eaeaf92a0a7",
                    "sha256:f4296a9158df6b29e09e1ad7ebcb134444a39dbc05b9e59afad078955cdd2efe",
                    "sha256:87ca5725d6b1299a552079b06546c0bdd4bc308a8949d6183ca457ae39059b80",
                    "sha256:cf3a70ff8a5e5dc7f6f32806bccfeb9a658849241669d20b293bd8393851a5ab",
                    "sha256:60ec001a0998826e4a6f6510aae291e5fd89fe459b183cbf0ddffd3ce0d4fa4f"
                ]
            }
        },
        "38-20230803": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f38container",
                    "FGC=f38",
                    "FBR=f38",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "generic-aarch64",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2023-08-05T00:05:07.638044271Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:41.041894598Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f38container FGC=f38 FBR=f38",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-04T18:41:08.203631801Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:50785841137152691ca6dd92200a0457ea325f9f4aa41c79dec9b254878dd456 in / "
                },
                {
                    "created": "2023-08-04T18:41:09.71120441Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-04T20:08:12.446295687Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-04T20:08:12.446295687Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-04T20:08:12.446295687Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-04T20:40:54.176544568Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-04T21:37:13.646947514Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-04T21:37:13.646947514Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-04T21:37:13.680397755Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-04T21:37:13.689851967Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-04T21:37:13.699491479Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-04T21:37:13.699491479Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-04T21:37:21.485455382Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 38   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-04T21:37:21.921751799Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 38 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-05T00:05:07.221200024Z",
                    "created_by": "LABEL io.balena.device-type=generic-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-05T00:05:07.221200024Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-05T00:05:07.638044271Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 38 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "moby.buildkit.buildinfo.v1": "eyJmcm9udGVuZCI6ImRvY2tlcmZpbGUudjAiLCJhdHRycyI6eyJmaWxlbmFtZSI6IkRvY2tlcmZpbGUifSwic291cmNlcyI6W3sidHlwZSI6ImRvY2tlci1pbWFnZSIsInJlZiI6ImRvY2tlci5pby9iYWxlbmFsaWIvYWFyY2g2NC1mZWRvcmE6MzgtcnVuIiwicGluIjoic2hhMjU2OjYxOGI2MzZmMzdmZGQ3ZGJlNjkwNjUwMTY1ZTMzZjAwMjdkYTFmNGY0MTgxZGM4ZWY1NTVjYTY5ODc4ZGIzNzUifV19",
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:babdc27db7e2fbe287cb3f027c67c3a67bd9a8b9d89b01cce2dc884785c9e431",
                    "sha256:816e2129ce92ccbc0211d10981b4baff0818853b67df05113dd544f2e65f14a2",
                    "sha256:15b28228915bed8c4a5288ac658c7c78cd1b2ca43a784ad65cb5b482047693b7",
                    "sha256:f34d1b151a04b12e15b034ba7dc8fc3794e62edee3c0913fcd4fcd29663d9165",
                    "sha256:3f77e6f2e918de72aa575938a4474bceb687fc0c09a9a8ed0861f72dedc8dd89",
                    "sha256:bac7b82a867d3b49cf8767282c82bd2bdd89df0517e28f2feddbc1e5077701f0",
                    "sha256:2b103807308b0d2d93bc64dc3bb6f5a010e7fc748142503e6101953dea48a373",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:d6f0c2e6fb62859eebb232c84491b9c1e61b91ce1de0acfae76db6a6caec0b47",
                    "sha256:7258785f0ca88988c3e0a868f6ffaecfb4ab3c2bab5d081f3cc26c18fc002bde",
                    "sha256:d1e03d54fca4f710b3729f033e0465d04c70f196a0a5b1e8d752d9ad081f585b"
                ]
            }
        },
        "38-20230829": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f38container",
                    "FGC=f38",
                    "FBR=f38",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "generic-aarch64",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2023-09-02T10:21:34.356778932Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:41.041894598Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f38container FGC=f38 FBR=f38",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-04T18:41:08.203631801Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:50785841137152691ca6dd92200a0457ea325f9f4aa41c79dec9b254878dd456 in / "
                },
                {
                    "created": "2023-08-04T18:41:09.71120441Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-02T06:18:07.258601269Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-02T06:18:07.258601269Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-02T06:18:07.258601269Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T06:52:04.127921308Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T06:52:05.563184518Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T06:52:05.563184518Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-02T06:52:05.582298375Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T06:52:05.588641894Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T06:52:05.623022197Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T06:52:05.623022197Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-02T06:52:13.448270089Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 38   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T06:52:13.768542081Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 38 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T10:21:34.074575281Z",
                    "created_by": "LABEL io.balena.device-type=generic-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-02T10:21:34.074575281Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T10:21:34.356778932Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 38 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:babdc27db7e2fbe287cb3f027c67c3a67bd9a8b9d89b01cce2dc884785c9e431",
                    "sha256:bff341f45a43ec79ef29154d378d964bba8f03d0c501f7c88be9e530010bebcd",
                    "sha256:1d7db161bd37873105f3d898f7b6b15a2a1a4dd3b0ae64740572b04f30096fd6",
                    "sha256:9dad4a69b8bc36340898ef0fad88d021e2fad83131960271e00c1fee8683bc02",
                    "sha256:92949006605b266e437d2de3cb10fd174267231753b998f0979646c933e3da74",
                    "sha256:83bc56456d35017c5a481b9248bade0ea23318c6ed97c30fd35f4d715cefd89f",
                    "sha256:22066a20505ceab3ccd8a8d8f84d3f946b852b273fa89a1a4efcc17c394cdae6",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:99dd61fbdb8e8da8ff4a00cff3ac3147bd81c23a8a7b339f6f232493e7155de9",
                    "sha256:87aba87958e24e9c5a11f58aa441253942788dbfc47e9bbc9f0f2410ed810773",
                    "sha256:f70cff280cfa61c1b2dc09a1ab99a038cfa83699f4b6acbbde535e34aeb92c76"
                ]
            }
        },
        "38-20230904": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f38container",
                    "FGC=f38",
                    "FBR=f38",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "generic-aarch64",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2023-09-09T10:09:41.983880406Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:41.041894598Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f38container FGC=f38 FBR=f38",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-04T18:41:08.203631801Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:50785841137152691ca6dd92200a0457ea325f9f4aa41c79dec9b254878dd456 in / "
                },
                {
                    "created": "2023-08-04T18:41:09.71120441Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T03:50:47.966318693Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T03:50:47.966318693Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T03:50:47.966318693Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:22:05.312577476Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T07:38:47.339540805Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T07:38:47.339540805Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T07:38:47.36437758Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T07:38:47.378289214Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T07:38:47.400334302Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T07:38:47.400334302Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T07:38:54.288974783Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 38   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T07:38:54.706047119Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 38 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T10:09:41.564616624Z",
                    "created_by": "LABEL io.balena.device-type=generic-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T10:09:41.564616624Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T10:09:41.983880406Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 38 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:babdc27db7e2fbe287cb3f027c67c3a67bd9a8b9d89b01cce2dc884785c9e431",
                    "sha256:a0731afcd2c8d5368a134e5790c454b64b22976c083086a24640d9ef6aa0075e",
                    "sha256:420cc142d6ee365450904d65a94be7051adeebac2a3b9a384ca145c9a8a28029",
                    "sha256:e1319cc780fd12b1b3d63d3f7a138b3edf39a1ae6a7c1670656acf9b60c1d0b9",
                    "sha256:1522c5e1b65e43da1802a19f2a02344ee236f3e391dce20632f8c5c30d00929c",
                    "sha256:d745b7003041d17e1c4fababe413658716518d7d23a4cadf0daa8208ca8115c5",
                    "sha256:b8bfddca6ff0c7ee1788d5dcc5a32bb7820376376177ee9cba1b2a2c313e7507",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:d4fe2ae2c5a66072049f2207f21240b0a0c1328f04423f8886e86335ddd47abc",
                    "sha256:ce0e290c70b3abf1e052ae00d45924e3573ffbad1f178508d6827fd000da11cc",
                    "sha256:48a207d9ff1ff5f525c13f9f56fc599136851a7e32cd67bfb50a650bc9a8ab52"
                ]
            }
        },
        "38-20230911": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f38container",
                    "FGC=f38",
                    "FBR=f38",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "iot-gate-imx8plus",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2023-09-12T03:09:37.257265688Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:41.041894598Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f38container FGC=f38 FBR=f38",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-04T18:41:08.203631801Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:50785841137152691ca6dd92200a0457ea325f9f4aa41c79dec9b254878dd456 in / "
                },
                {
                    "created": "2023-08-04T18:41:09.71120441Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T03:50:47.966318693Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T03:50:47.966318693Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T03:50:47.966318693Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:22:05.312577476Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T07:38:47.339540805Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T07:38:47.339540805Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T07:38:47.36437758Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T07:38:47.378289214Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T07:38:47.400334302Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T07:38:47.400334302Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T07:38:54.288974783Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 38   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T07:38:54.706047119Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 38 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-12T03:09:37.120170073Z",
                    "created_by": "LABEL io.balena.device-type=iot-gate-imx8plus",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-12T03:09:37.120170073Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-12T03:09:37.257265688Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 38 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:babdc27db7e2fbe287cb3f027c67c3a67bd9a8b9d89b01cce2dc884785c9e431",
                    "sha256:a0731afcd2c8d5368a134e5790c454b64b22976c083086a24640d9ef6aa0075e",
                    "sha256:420cc142d6ee365450904d65a94be7051adeebac2a3b9a384ca145c9a8a28029",
                    "sha256:e1319cc780fd12b1b3d63d3f7a138b3edf39a1ae6a7c1670656acf9b60c1d0b9",
                    "sha256:1522c5e1b65e43da1802a19f2a02344ee236f3e391dce20632f8c5c30d00929c",
                    "sha256:d745b7003041d17e1c4fababe413658716518d7d23a4cadf0daa8208ca8115c5",
                    "sha256:b8bfddca6ff0c7ee1788d5dcc5a32bb7820376376177ee9cba1b2a2c313e7507",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:d4fe2ae2c5a66072049f2207f21240b0a0c1328f04423f8886e86335ddd47abc",
                    "sha256:7037f418447efe35251b36baf4c3f69eecedffe359ed492bf70c11a633954ab7",
                    "sha256:22ce69b9fb2926e78c175e40756928386857a10db410cb1b0f7bad1f07e2ab67"
                ]
            }
        },
        "38-20231103": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f38container",
                    "FGC=f38",
                    "FBR=f38",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "iot-gate-imx8plus",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2023-11-04T17:14:52.977389535Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:41.041894598Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f38container FGC=f38 FBR=f38",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-06T18:43:02.449416883Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:b0b9f1fa4d90583e2728f8359f6d2f98198fa564a48a493ac3938082a4180724 in / "
                },
                {
                    "created": "2023-10-06T18:43:04.271082122Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-04T14:05:44.131779502Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-04T14:05:44.131779502Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-04T14:05:44.131779502Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T14:43:55.158323453Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T14:43:57.315900893Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T14:43:57.315900893Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-04T14:43:57.325120653Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T14:43:57.333974114Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T14:43:57.352409034Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T14:43:57.352409034Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-04T14:44:05.155422355Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 38   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T14:44:05.359127743Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 38 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T17:14:52.794031427Z",
                    "created_by": "LABEL io.balena.device-type=iot-gate-imx8plus",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-04T17:14:52.794031427Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T17:14:52.977389535Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 38 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:f1d4814332771f9e7ca854a6a297b5c75ceff99a0ae64bd8822337e826d49073",
                    "sha256:0bccca922a892d5aa4c088c02038026d68fafb3a7f614fc1c0db995cf1890779",
                    "sha256:2b7cd3c685926706b0199140fea791ac7753518db92138766ccc4bc9827f3d68",
                    "sha256:5e2ed28829eda26e065b3f9a78ad0f47edcf6d743edd5bbc5c2fc730546a9e47",
                    "sha256:c15dcfd3685089cc9c439fb2115f9255c4e4d3ad885e9cad9901066740f79ca9",
                    "sha256:8d6a9b04859afa4fc18d56950955c986eab6de919bfa6312935dd81af5301335",
                    "sha256:448330a20f6a3fba2984503bed4c07d0e41bafad7ab960f0a9386721fd3b3a1d",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:717bf92c44b0be0acbb18b42508625580b2ad0f540b00e8e19e11f9f5bec025d",
                    "sha256:4b4343f1713e56df5ff7f72c52b0a365593c36f6eb58177a4be949a2b3fcc819",
                    "sha256:bf37d889f9e3f74e4ba3a22d3a74397a2657b086b530c8b1a8762a36bea8671b"
                ]
            }
        },
        "38-20231106": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f38container",
                    "FGC=f38",
                    "FBR=f38",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "iot-gate-imx8plus",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2023-11-06T12:30:18.36527627Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:41.041894598Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f38container FGC=f38 FBR=f38",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-06T18:43:02.449416883Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:b0b9f1fa4d90583e2728f8359f6d2f98198fa564a48a493ac3938082a4180724 in / "
                },
                {
                    "created": "2023-10-06T18:43:04.271082122Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T09:12:24.373696779Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T09:12:24.373696779Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T09:12:24.373696779Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T09:40:03.866592528Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T09:40:05.05480729Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T09:40:05.05480729Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T09:40:05.067525056Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T09:40:05.080368698Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T09:40:05.09192886Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T09:40:05.09192886Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T09:40:10.682476779Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 38   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T09:40:10.854158569Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 38 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T12:30:18.250664283Z",
                    "created_by": "LABEL io.balena.device-type=iot-gate-imx8plus",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T12:30:18.250664283Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T12:30:18.36527627Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 38 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:f1d4814332771f9e7ca854a6a297b5c75ceff99a0ae64bd8822337e826d49073",
                    "sha256:5a48b2864c1414aa1920c0b0810a38ec32acb5ca14e2de09d3dfe54f1994b7ab",
                    "sha256:7d025699647d357035320f6733ddce0b0fb0c3833cadebad2b3682451308e93b",
                    "sha256:27ca0065e4f4805a604acc7bc4ad9df0047808f3306f957b1a1fcc66aa4f9b1d",
                    "sha256:128e2a62004cfc82684ba2679f14a1e0b3bc7738f8a994c36eae30e0d28a7893",
                    "sha256:45ec6c560d5a90df5eba1bff84a4a8ca5e63aaba7e85e2ba1369e862abcc64d6",
                    "sha256:efc86bb1982e1b3392b56a19451122d7402088ffbbbd4e02f65020a56fa4c32f",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:973bbd2506ec0a26704cbf8153609044757818fdde2b452543ec1793c432bd62",
                    "sha256:473b26b92f2df842fea6fa56ae66c416fc36fa18c1d7f8310fd7754c0d7abbd6",
                    "sha256:f27100f1ac29a57ecf73715806b4520cab457f31fe29d4331f98c2d1eb8b68fd"
                ]
            }
        },
        "38-20231127": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f38container",
                    "FGC=f38",
                    "FBR=f38",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "iot-gate-imx8plus",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2023-12-01T13:12:59.598149413Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:41.041894598Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f38container FGC=f38 FBR=f38",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-29T00:47:11.412948906Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:bf926d1cd75117e6300e5b83c1a9f3dc935a0a4a1afd183c94c5ab427119d058 in / "
                },
                {
                    "created": "2023-11-29T00:47:13.088493574Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T10:52:03.115117234Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T10:52:03.115117234Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T10:52:03.115117234Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T11:16:47.728963247Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T11:16:48.486024995Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T11:16:48.486024995Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T11:16:48.498276188Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T11:16:48.512658091Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T11:16:48.524349935Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T11:16:48.524349935Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T11:16:54.156435504Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 38   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T11:16:54.314713811Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 38 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T13:12:59.465736347Z",
                    "created_by": "LABEL io.balena.device-type=iot-gate-imx8plus",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T13:12:59.465736347Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T13:12:59.598149413Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 38 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:35f4bab08b96e91cc0f7f401be5805fb037bd6e3d4eb1af238340706b9cd0a3e",
                    "sha256:9051a15d589df97279221a4efec80a8450c6bc2058ae17721276d555326b33fe",
                    "sha256:f26c2122cb7d826231a78504bf73a326017233b52ecb911e6624628eaddfb0be",
                    "sha256:ef43e4d211352a22a0c10cc03ef2d365126609597085c57b213d34c0c04179df",
                    "sha256:2d3f59edb238952cc50ac74c46d5e6485d475fb47829eed97ab1448816b959ba",
                    "sha256:a31db5a21c41fbc40c8fa7ba30c8bbb8e906931e477d2d358f6dca40b8f358b3",
                    "sha256:aa10d6eeaa52364861226a12826a3a2ea676c211206d4f3a2680e0ba05d9f33f",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:7d348d824235181cb9293dbb5802653c13f056cfd31f764283e02da722b92a9e",
                    "sha256:d9cefbccfe12614f1eba66ab3a317fae3dd8792956c9a2c20714dc9ebfd0bb2b",
                    "sha256:5c2e97297d2cee46db1889a279ae4f4957eda4b8ed665598af65cafd606df55c"
                ]
            }
        },
        "38-20231204": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f38container",
                    "FGC=f38",
                    "FBR=f38",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "iot-gate-imx8plus",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2023-12-06T23:01:04.015373489Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:41.041894598Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f38container FGC=f38 FBR=f38",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-29T00:47:11.412948906Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:bf926d1cd75117e6300e5b83c1a9f3dc935a0a4a1afd183c94c5ab427119d058 in / "
                },
                {
                    "created": "2023-11-29T00:47:13.088493574Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T20:40:27.571890331Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T20:40:27.571890331Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T20:40:27.571890331Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T21:05:52.460646066Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T21:05:53.697602634Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T21:05:53.697602634Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T21:05:53.72907232Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T21:05:53.73766608Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T21:05:53.784935919Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T21:05:53.784935919Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T21:05:59.464238317Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 38   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T21:05:59.633985585Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 38 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T23:01:03.877492792Z",
                    "created_by": "LABEL io.balena.device-type=iot-gate-imx8plus",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T23:01:03.877492792Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T23:01:04.015373489Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 38 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:35f4bab08b96e91cc0f7f401be5805fb037bd6e3d4eb1af238340706b9cd0a3e",
                    "sha256:7af9d3e66dc47c88df168c57e6bbf3bf441b84f864d9fd704e0889ac77dd645b",
                    "sha256:b52587f45451994117f2d4e9754f102fef88b048deea62290f382798927cfbc1",
                    "sha256:7bf81e0ac98a4ea7f63a0fce6df544ff53238af29c3a6212866bcbaa5d7f9649",
                    "sha256:2f6ef3c9e2791170ecac3c21ceaf5dbcd0aaa56ca679f701efde7ccd5ede33d6",
                    "sha256:4a5ec467e104c8b720b6bb9d044b578693e795c08eb1119417b0e73ea4712df5",
                    "sha256:36f1d93758ea9464369624e538df0c4941f14a8c6a009b3556534d8981696ae0",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:1a75df63308478d0e6a9a2dad62406133ce2fdb0cda42ceae25fc18101f203f0",
                    "sha256:c4959aa3765c3895ce5f45b1cfb5b685da8c6a88cf69ca14d16d7e9ac288c211",
                    "sha256:f009d871c6fb1bca710b7c861a1c98a15fc92c05b48ef03e530003f6005dcb4d"
                ]
            }
        },
        "38-20240205": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f38container",
                    "FGC=f38",
                    "FBR=f38",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "iot-gate-imx8plus",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2024-02-05T02:52:38.712935938Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:41.041894598Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f38container FGC=f38 FBR=f38",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-29T00:47:11.412948906Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:bf926d1cd75117e6300e5b83c1a9f3dc935a0a4a1afd183c94c5ab427119d058 in / "
                },
                {
                    "created": "2023-11-29T00:47:13.088493574Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-05T00:26:05.223615023Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-05T00:26:05.223615023Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-05T00:26:05.223615023Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T00:52:22.02695632Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T00:52:22.769786602Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T00:52:22.769786602Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-05T00:52:22.781178587Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T00:52:22.808356935Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T00:52:22.817879552Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T00:52:22.817879552Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-05T00:52:28.311630714Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 38   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T00:52:28.461665008Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 38 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T02:52:38.592053543Z",
                    "created_by": "LABEL io.balena.device-type=iot-gate-imx8plus",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-05T02:52:38.592053543Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T02:52:38.712935938Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 38 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:35f4bab08b96e91cc0f7f401be5805fb037bd6e3d4eb1af238340706b9cd0a3e",
                    "sha256:9a0bea4247baec631951f1c12c7fc5e31aef00f9f94fa6500789dd41065dab08",
                    "sha256:8ea115299209cadf8dc81735c2e245e6e1c628e3e6486326a42d431e000ad1d9",
                    "sha256:81ffb1609a528e20e002ea96acab5a3f2db491584d03f99adb651ba5d38707b3",
                    "sha256:dd667c60ecc52fbdc7e0e476262643b15f185497cb053f94c29b2ea0f20d4532",
                    "sha256:9e0a1177327862e9e8614499429cf719307afc6deb4d6bd9d73f1339d5113ab0",
                    "sha256:6cbd6b5c83f0e41ed8ecedf532eae321661bb02d09a80d622a2de713dc3f1998",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:492bf5ced8bd1f23c728665cd29dba12cd7877883ff04c3620df7b90d4f32e63",
                    "sha256:5632c865f51714f90952236d9c6e4aaba1535db56ad47592fc774b8c10a5a30c",
                    "sha256:5dfdd05b8c4a42840a52bc8b2964ae9109281f524b37d0d0cab6f60b5ccc3fc0"
                ]
            }
        },
        "38-20240227": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f38container",
                    "FGC=f38",
                    "FBR=f38",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "iot-gate-imx8plus",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2024-03-01T23:23:33.035820069Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:41.041894598Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f38container FGC=f38 FBR=f38",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-20T23:39:45.493041732Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:50f76cb2e29e780d80bbc023f0bbb552e413a0191d6fab7fedce9f032d7c55ec in / "
                },
                {
                    "created": "2024-02-20T23:39:46.885294079Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T20:50:11.174745295Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T20:50:11.174745295Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T20:50:11.174745295Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:17:06.032783443Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:17:06.794960795Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:17:06.794960795Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T21:17:06.805447066Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:17:06.814310203Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:17:06.84911684Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:17:06.84911684Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T21:17:12.388615628Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 38   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:17:12.526606922Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 38 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T23:23:32.918257051Z",
                    "created_by": "LABEL io.balena.device-type=iot-gate-imx8plus",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T23:23:32.918257051Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T23:23:33.035820069Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 38 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:d9224901c4254002370ad869c45d487779ce52e983554fc3c651d1283143025c",
                    "sha256:80960cca51c97684b3a9cec28adb8fae3034898f76cc4de09b5756e99bab5f4d",
                    "sha256:ebcf328ef783f06a08c6855ef399097abd7849454cb754d92656f855c8e72f7b",
                    "sha256:ed8c17efb3a45a5c116d8b29102ee94853c6c7d78b68917765166a90efdbe456",
                    "sha256:4c2fcb2aa7c87c35350e78cfb39cc8d48e14a39322897c5816cbba6875385aeb",
                    "sha256:9fb9429b38105cbccdabce561ae817ae56aa3fbe6943dabf073a3e077a0a4726",
                    "sha256:5e5d3ed39b0bae147112243675b89add16961c507d1a96d8c12543619f3631ab",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:9659c666f25fc0ca79916fc32cd405a174b567f47816d637061022910382150c",
                    "sha256:e9ac160b25605726b93187e7c9abef534e8f132fb39d8de8e5f0ac481925b0c9",
                    "sha256:af86a6b716114770667b447a1bf31a0eb8151187e0c1d0860c57b0746f2f4e78"
                ]
            }
        },
        "38-20240304": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f38container",
                    "FGC=f38",
                    "FBR=f38",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "iot-gate-imx8plus",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2024-03-05T10:55:56.33116885Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:41.041894598Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f38container FGC=f38 FBR=f38",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-20T23:39:45.493041732Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:50f76cb2e29e780d80bbc023f0bbb552e413a0191d6fab7fedce9f032d7c55ec in / "
                },
                {
                    "created": "2024-02-20T23:39:46.885294079Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T08:24:19.415187376Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T08:24:19.415187376Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T08:24:19.415187376Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T08:56:00.912192201Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T08:56:02.006895963Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T08:56:02.006895963Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T08:56:02.016355085Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T08:56:02.026794369Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T08:56:02.060541718Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T08:56:02.060541718Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T08:56:07.655736223Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 38   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T08:56:07.807291644Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 38 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T10:55:56.207501728Z",
                    "created_by": "LABEL io.balena.device-type=iot-gate-imx8plus",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T10:55:56.207501728Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T10:55:56.33116885Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 38 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:d9224901c4254002370ad869c45d487779ce52e983554fc3c651d1283143025c",
                    "sha256:ea79a218147f67e84cc5ebc832b9460a07c042175b9c6c064e2b46cc1dc1a3a4",
                    "sha256:30e3fbd8e717f3b8a564afd4ee36b43ec6b6d86b01c9f556f1c1569211d3f246",
                    "sha256:4f6c240ccf870cc5e7845a32d4625252e557b98a1ca959ee903a50fae49f5292",
                    "sha256:52333195f351cb7f05d374c425fd2d08bfc9a7b292673ba1bc72b65cfc337fda",
                    "sha256:8fa793cc56273ff76f01fe7a2fa04001b8a835021eb98a84aac458c70142805b",
                    "sha256:2d3cbcbb63899f70da15473b7e05cdcb41b7bb7057040d80f9a5a063821b0133",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:5bb1ea72b4125dbbfb8204982aadcd3846bffd331433fe0e24dc13c017b2badd",
                    "sha256:6d009b482cd69479a45fca8d194270090450935f216e1bc1d0a0c91fe359458f",
                    "sha256:81f25d0b1cf9d02ae3897b2067c5206ba8f125ce9398608d0b64cd47615b49d6"
                ]
            }
        },
        "38-20240401": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f38container",
                    "FGC=f38",
                    "FBR=f38",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "iot-gate-imx8plus",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                }
            },
            "created": "2024-04-01T23:54:43.734542568Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:41.041894598Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f38container FGC=f38 FBR=f38",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-20T23:39:45.493041732Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:50f76cb2e29e780d80bbc023f0bbb552e413a0191d6fab7fedce9f032d7c55ec in / "
                },
                {
                    "created": "2024-02-20T23:39:46.885294079Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T21:26:30.063655578Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T21:26:30.063655578Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T21:26:30.063655578Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T21:53:18.953503933Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T21:53:19.727911729Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T21:53:19.727911729Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T21:53:19.739193593Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T21:53:19.779094073Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T21:53:19.789079698Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T21:53:19.789079698Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T21:53:25.296074915Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 38   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T21:53:25.441838461Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 38 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T23:54:43.619184771Z",
                    "created_by": "LABEL io.balena.device-type=iot-gate-imx8plus",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T23:54:43.619184771Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T23:54:43.734542568Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 38 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:d9224901c4254002370ad869c45d487779ce52e983554fc3c651d1283143025c",
                    "sha256:b20e668d1a141e0d94ea1512d98fa306aef98b2f4894ff4310a4b368ecae46f1",
                    "sha256:8d53a1ae6a6876501ddfee3882f044e95cf4bbb5c5ee113c33b6a630df50f37d",
                    "sha256:9b2f37627416daf809729f9b7b129b588d6d27b685e6a6f70b7efd53604d8c77",
                    "sha256:58e2ad029c294aaf061847a738e97e4ee92cfcc02568fde36d2c42014b29bc2a",
                    "sha256:0370b041d7751b62b4759a10fd68fe5d529500000af334c432dda8ff0e6bdc19",
                    "sha256:4fda59f91c1283cdc0171b9d775c4c59aed809bf6eb8969c1dab000deccefbfb",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:0fbb16bb412f29fbd6bf22b0270c66acce1dfff1273a68ab07e7a24a347da177",
                    "sha256:ae1605776532877cb02117bb3fd034814b20d1290260cf955e77164f1e3e7ca9",
                    "sha256:a97ddc5f4deacb6b8313ff850a33794954f29e1cd92d603a47ff8e7d1c045802"
                ]
            }
        },
        "38-20240408": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f38container",
                    "FGC=f38",
                    "FBR=f38",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "iot-gate-imx8plus",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                }
            },
            "created": "2024-04-09T20:09:48.29400058Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:41.041894598Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f38container FGC=f38 FBR=f38",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-20T23:39:45.493041732Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:50f76cb2e29e780d80bbc023f0bbb552e413a0191d6fab7fedce9f032d7c55ec in / "
                },
                {
                    "created": "2024-02-20T23:39:46.885294079Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:45.909708183Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:45.909708183Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:45.909708183Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:02:01.590555751Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:02:02.351225239Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:02:02.351225239Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T14:02:02.360749405Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:02:02.369270986Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:02:02.405864798Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:02:02.405864798Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T14:02:07.899966098Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 38   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:02:08.045611622Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 38 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T20:09:48.179306708Z",
                    "created_by": "LABEL io.balena.device-type=iot-gate-imx8plus",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T20:09:48.179306708Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T20:09:48.29400058Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 38 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:d9224901c4254002370ad869c45d487779ce52e983554fc3c651d1283143025c",
                    "sha256:ebcf910b3bd968c69298ac824583cd1528883f4a382541565a04a486c658c20b",
                    "sha256:c24ea502f2f1577b4278e978c5db52a3b01de7a26e6f4724887ceeba23daeba2",
                    "sha256:793d820a1dccf3d247ece3546ff7db37debcbeed40e828cb75bb4cb13b7aebab",
                    "sha256:553772b6df64fc5ba696a001383c6ffd5b481fb5f850cde63456cadf5cca043f",
                    "sha256:f4ac866915cc972c7c4d1726ddc5effabb4cc90debfacebc71ef6f4541bf63ef",
                    "sha256:8e85cb2120afad8b568aebbb01c8c1d2a29b17f9b8f160299e7d4c9843c607d2",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:2579e5f7d4e51b9a0d613c0c3be4660311f4b1324ea68a59aa3c2a222a1785eb",
                    "sha256:ee0087718918541859c6c86c33449cd37d574fb86f23c737cf3eed6820224594",
                    "sha256:8fdd1282d90bc8fa9fa23debfcc12064506e060399415864d91b5cf2a28258e9"
                ]
            }
        },
        "38-20240429": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f38container",
                    "FGC=f38",
                    "FBR=f38",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "iot-gate-imx8plus",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                }
            },
            "created": "2024-05-06T10:46:35.305820329Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:41.041894598Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f38container FGC=f38 FBR=f38",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-20T23:39:45.493041732Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:50f76cb2e29e780d80bbc023f0bbb552e413a0191d6fab7fedce9f032d7c55ec in / "
                },
                {
                    "created": "2024-02-20T23:39:46.885294079Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:45.909708183Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:45.909708183Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:45.909708183Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:02:01.590555751Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:02:02.351225239Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:02:02.351225239Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T14:02:02.360749405Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:02:02.369270986Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:02:02.405864798Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:02:02.405864798Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T14:02:07.899966098Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 38   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:02:08.045611622Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 38 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T10:46:35.185525692Z",
                    "created_by": "LABEL io.balena.device-type=iot-gate-imx8plus",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T10:46:35.185525692Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T10:46:35.305820329Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 38 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:d9224901c4254002370ad869c45d487779ce52e983554fc3c651d1283143025c",
                    "sha256:ebcf910b3bd968c69298ac824583cd1528883f4a382541565a04a486c658c20b",
                    "sha256:c24ea502f2f1577b4278e978c5db52a3b01de7a26e6f4724887ceeba23daeba2",
                    "sha256:793d820a1dccf3d247ece3546ff7db37debcbeed40e828cb75bb4cb13b7aebab",
                    "sha256:553772b6df64fc5ba696a001383c6ffd5b481fb5f850cde63456cadf5cca043f",
                    "sha256:f4ac866915cc972c7c4d1726ddc5effabb4cc90debfacebc71ef6f4541bf63ef",
                    "sha256:8e85cb2120afad8b568aebbb01c8c1d2a29b17f9b8f160299e7d4c9843c607d2",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:2579e5f7d4e51b9a0d613c0c3be4660311f4b1324ea68a59aa3c2a222a1785eb",
                    "sha256:92043577b9017c077fccc7660275ff511e480e0e7638f589157bf993a0deb8bd",
                    "sha256:4edd723bc543ed24c1e4ac83592cf45b742e0cce40ef7145a9701e42d01a4ad3"
                ]
            }
        },
        "38-build": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f38container",
                    "FGC=f38",
                    "FBR=f38",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "iot-gate-imx8plus",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                }
            },
            "created": "2024-05-06T10:46:34.467248872Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:41.041894598Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f38container FGC=f38 FBR=f38",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-20T23:39:45.493041732Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:50f76cb2e29e780d80bbc023f0bbb552e413a0191d6fab7fedce9f032d7c55ec in / "
                },
                {
                    "created": "2024-02-20T23:39:46.885294079Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:53.014397748Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:53.014397748Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:53.014397748Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:02:01.028048975Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:45:21.757628005Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-clients \t\tsubversion \t\tautoconf \t\tautomake \t\tbzip2-devel \t\tglib2-devel \t\tgcc \t\tgcc-c++ \t\tImageMagick \t\tImageMagick-devel \t\tkernel-devel \t\tlibcurl-devel \t\tlibevent-devel \t\tlibffi-devel \t\tlibjpeg-devel \t\tlibsqlite3x-devel \t\tlibxml2-devel \t\tlibxslt-devel \t\tlibyaml-devel \t\tmysql-devel \t\tmake \t\tncurses-devel \t\topenssl-devel \t\tpostgresql-devel \t\treadline-devel \t\tsqlite-devel \t\tzlib-devel \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:45:23.21693759Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:45:23.21693759Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T14:45:23.226391702Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:45:23.30237909Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:45:23.312751251Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:45:23.312751251Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T14:45:29.124459273Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 38   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:45:29.273317952Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 38 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T10:46:34.340057912Z",
                    "created_by": "LABEL io.balena.device-type=iot-gate-imx8plus",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T10:46:34.340057912Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T10:46:34.467248872Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 38 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:d9224901c4254002370ad869c45d487779ce52e983554fc3c651d1283143025c",
                    "sha256:63a7727c4e76d8980cf4568202bf9297aab0020244e4d7a59ff628633c5c379a",
                    "sha256:8764364fcb36a10eca0e326c313d32654e5e4cc55abfe0014974d53c364de48b",
                    "sha256:281dd00215836c81475c699f61f89c9eb55c5d69014f819f8772cffe433ace26",
                    "sha256:abb63b2c733f69ae08cbb6bfe1f32da0004658166581cc3bdb67901ede1ad33a",
                    "sha256:763bebfde6ac1ad7e8b6195d9c95001b4b273ad9936cd9971295674105101ac6",
                    "sha256:f67b7e4a6f4e48584da11a524adbebbbeeac629a1cb524f5df51ee88bdd71055",
                    "sha256:74f1d6cf90e9f178497078c8e6f3941cbb3265478d0f1a806521824a183837a9",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:c7319dfdfe03afc9fe26d4be768e94cfc2d546d63404d22deff0f8426aec9488",
                    "sha256:7bc47675f5eb926e37cb9aa67dfeaa6886f5fa82c2f8e5908013d6d7f0b477a3",
                    "sha256:1f11cc865397aad80274070def4a4025fdea6b6484d5d123e5d2d485910f208b"
                ]
            }
        },
        "38-build-20230502": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f38container",
                    "FGC=f38",
                    "FBR=f38",
                    "UDEV=off"
                ],
                "Cmd": null,
                "Image": "sha256:63052a939270c1fdbbef988a8dfb7af9de559f1e6faa0669891e59a9ba6eddd5",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "OnBuild": null,
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-tx2",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                }
            },
            "container": "b1eaf75d81ad1d21edda08987250d94e0e2fb4c7777037261956a1a23b9a8445",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f38container",
                    "FGC=f38",
                    "FBR=f38",
                    "UDEV=off"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "[ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 38 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info"
                ],
                "Image": "sha256:63052a939270c1fdbbef988a8dfb7af9de559f1e6faa0669891e59a9ba6eddd5",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-tx2",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                }
            },
            "created": "2023-05-08T18:01:05.304117754Z",
            "docker_version": "20.10.21",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:41.041894598Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f38container FGC=f38 FBR=f38",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-13T20:39:44.489634345Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:96676ec5bbfd4d36d5a997a41d25c86f6bf97dcf23c81dd81d1f76b5d2bda13b in / "
                },
                {
                    "created": "2023-03-13T20:39:46.261120513Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-04-02T01:12:02.835444454Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL io.balena.architecture=aarch64",
                    "empty_layer": true
                },
                {
                    "created": "2023-04-02T01:12:02.952877638Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "empty_layer": true
                },
                {
                    "created": "2023-04-02T01:12:03.101562049Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:24916d641d0ee761d2bebd935412ac2263719e3f48829dd83555470573235ed9 in /usr/bin "
                },
                {
                    "created": "2023-04-02T01:37:11.814833032Z",
                    "created_by": "/bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\""
                },
                {
                    "created": "2023-04-02T02:18:11.338373566Z",
                    "created_by": "/bin/sh -c dnf install -y \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-clients \t\tsubversion \t\tautoconf \t\tautomake \t\tbzip2-devel \t\tglib2-devel \t\tgcc \t\tgcc-c++ \t\tImageMagick \t\tImageMagick-devel \t\tkernel-devel \t\tlibcurl-devel \t\tlibevent-devel \t\tlibffi-devel \t\tlibjpeg-devel \t\tlibsqlite3x-devel \t\tlibxml2-devel \t\tlibxslt-devel \t\tlibyaml-devel \t\tmysql-devel \t\tmake \t\tncurses-devel \t\topenssl-devel \t\tpostgresql-devel \t\treadline-devel \t\tsqlite-devel \t\tzlib-devel \t&& dnf clean all"
                },
                {
                    "created": "2023-04-02T02:18:14.025831911Z",
                    "created_by": "/bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end"
                },
                {
                    "created": "2023-04-02T02:18:14.139961363Z",
                    "created_by": "/bin/sh -c #(nop)  ENV UDEV=off",
                    "empty_layer": true
                },
                {
                    "created": "2023-04-02T02:18:14.247223392Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:0e8e5e7fcb5ff4b4caac2552d3c5cbf829703430466832566297680a5b09c62b in /usr/bin/entry.sh "
                },
                {
                    "created": "2023-04-02T02:18:14.349432132Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:207cdc191bada5970fb21d3481971b4a391e6e52061bd584dc75404c36d01fcf in /usr/bin/balena-info "
                },
                {
                    "created": "2023-04-02T02:18:14.453132583Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:def7f364bfe93992865dfba2017def9a3c407b6cf8ac0233dcd0aabaa9e4b75b in /usr/bin/balena-idle "
                },
                {
                    "created": "2023-04-02T02:18:14.570727671Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-04-02T02:18:21.168771451Z",
                    "created_by": "/bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 38   && rm -rf test-os.sh",
                    "empty_layer": true
                },
                {
                    "created": "2023-04-02T02:18:21.752084012Z",
                    "created_by": "/bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 38 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info"
                },
                {
                    "created": "2023-05-08T17:37:49.708785382Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL io.balena.device-type=jetson-tx2",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-08T18:01:04.699405176Z",
                    "created_by": "/bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all"
                },
                {
                    "created": "2023-05-08T18:01:05.304117754Z",
                    "created_by": "/bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 38 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:38d07a70cba3a76ac94f88b59aa4dd55141e65478b300c7249d2686985c61626",
                    "sha256:1d59e4e611086dc811fe4a3c86b9ad72a41f53890b3e0e0ab7681337e53c7730",
                    "sha256:5aa1a95c32c0c895074366ece9ad2f9058758e785ee114c8c38a7c2b30f4be37",
                    "sha256:18734d6f4585994208b1f4a272131ba72442256cd5d14c153c57a00d99519f78",
                    "sha256:e44ae7739877ea0bfa9f0babad2c58823ca33ffa752f7a657a09a26cfc15d57f",
                    "sha256:3eef4a4e5d708a4652a6c3a962a0e2bad5d012a065311a800c579cac1c6ee0f2",
                    "sha256:715da6688156119e40779ceadc02406e15c9ae5456ec15bc30064d943875bace",
                    "sha256:d2cfa124cbfcdc231e3185e5c2e085fdf497a238075f18278cc4e9ddd892106e",
                    "sha256:f260cfa2e15a63894e57b879b4addc36040e6192c7436fb477d25df1518f4d7f",
                    "sha256:1a46e71bfc5481c7f13febf0fcde3495d6cd0fdd6d3ef1bc432475fbd653e49e",
                    "sha256:33ceef19b6a02d579fe432aa3e2558fc9ffe20c146609d724f1993612db80442"
                ]
            }
        },
        "38-build-20230530": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f38container",
                    "FGC=f38",
                    "FBR=f38",
                    "UDEV=off"
                ],
                "Cmd": null,
                "Image": "sha256:d231ce93865ba3e92dcc9aa81297962531f1a7913e69310352098202528e86b8",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "OnBuild": null,
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-tx2",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                }
            },
            "container": "45c4ec098cec3e158a1db0b0069c811e4ab4eb1c01e400f8771d93b8fc526d36",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f38container",
                    "FGC=f38",
                    "FBR=f38",
                    "UDEV=off"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "[ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 38 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info"
                ],
                "Image": "sha256:d231ce93865ba3e92dcc9aa81297962531f1a7913e69310352098202528e86b8",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-tx2",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                }
            },
            "created": "2023-06-07T06:10:31.161626864Z",
            "docker_version": "20.10.21",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:41.041894598Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f38container FGC=f38 FBR=f38",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-31T18:09:25.030031251Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:f63fd8cf8c85027eab56f35df952c656ccec605f66c2269dbcd6f4af631a647a in / "
                },
                {
                    "created": "2023-05-31T18:09:26.818746317Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-05T03:06:46.738227015Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL io.balena.architecture=aarch64",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-05T03:06:46.998201042Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-05T03:06:47.203727542Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:24916d641d0ee761d2bebd935412ac2263719e3f48829dd83555470573235ed9 in /usr/bin "
                },
                {
                    "created": "2023-06-05T03:32:10.792635056Z",
                    "created_by": "/bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\""
                },
                {
                    "created": "2023-06-05T04:15:43.43307289Z",
                    "created_by": "/bin/sh -c dnf install -y \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-clients \t\tsubversion \t\tautoconf \t\tautomake \t\tbzip2-devel \t\tglib2-devel \t\tgcc \t\tgcc-c++ \t\tImageMagick \t\tImageMagick-devel \t\tkernel-devel \t\tlibcurl-devel \t\tlibevent-devel \t\tlibffi-devel \t\tlibjpeg-devel \t\tlibsqlite3x-devel \t\tlibxml2-devel \t\tlibxslt-devel \t\tlibyaml-devel \t\tmysql-devel \t\tmake \t\tncurses-devel \t\topenssl-devel \t\tpostgresql-devel \t\treadline-devel \t\tsqlite-devel \t\tzlib-devel \t&& dnf clean all"
                },
                {
                    "created": "2023-06-05T04:15:53.745243188Z",
                    "created_by": "/bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end"
                },
                {
                    "created": "2023-06-05T04:15:53.934522364Z",
                    "created_by": "/bin/sh -c #(nop)  ENV UDEV=off",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-05T04:15:54.081473837Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:0e8e5e7fcb5ff4b4caac2552d3c5cbf829703430466832566297680a5b09c62b in /usr/bin/entry.sh "
                },
                {
                    "created": "2023-06-05T04:15:54.226782245Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:207cdc191bada5970fb21d3481971b4a391e6e52061bd584dc75404c36d01fcf in /usr/bin/balena-info "
                },
                {
                    "created": "2023-06-05T04:15:54.359977412Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:def7f364bfe93992865dfba2017def9a3c407b6cf8ac0233dcd0aabaa9e4b75b in /usr/bin/balena-idle "
                },
                {
                    "created": "2023-06-05T04:15:54.534983193Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-05T04:16:01.530633459Z",
                    "created_by": "/bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 38   && rm -rf test-os.sh",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-05T04:16:02.314486869Z",
                    "created_by": "/bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 38 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info"
                },
                {
                    "created": "2023-06-07T05:48:13.784854144Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL io.balena.device-type=jetson-tx2",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-07T06:10:29.969051562Z",
                    "created_by": "/bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all"
                },
                {
                    "created": "2023-06-07T06:10:31.161626864Z",
                    "created_by": "/bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 38 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:0fb83c39d9bfdce28d850a565400df5ea5460c94c56e14916c217c8ab5b76b13",
                    "sha256:7d462ee81163c53071c50f1f5f982c0ab6625ba7a1fcc270ce8317e35d5d6547",
                    "sha256:07acba7ab80e7b13458bd4acecd7e9e75b0fc869e4a22afd34262a9732871f4f",
                    "sha256:9f334de835cb820eb7f44f9ec00de5b236735410a1c7e86c8f37c687c920fb5c",
                    "sha256:33a864847a5a201378e893bac15d67028003178856c649250e299fa73d4d9271",
                    "sha256:04b89104342a4acfcb1071b8b1c31f15a682f63cf28b2458d8fe42771d3455e6",
                    "sha256:a57476ca681200c1436e0aca89eb67909532873772ba9a5528bc8837a86ecd9e",
                    "sha256:ab72fb11f88b4b478b0247393c5ab91ca2564e80b7346ce0f524cb3d8e3a1c22",
                    "sha256:4d7dfed8b718a88347d56682904661bf6a43334a6e0e2e83acc64c4a686bad03",
                    "sha256:edec078562809c097aa9b8a9d5cac8bc6bb2b4c80848ef033b9a843ff061ed5c",
                    "sha256:9e31664a47bcc49ff2e276ea31b4d6630766be3f39967d6727c28081c1026ff4"
                ]
            }
        },
        "38-build-20230803": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f38container",
                    "FGC=f38",
                    "FBR=f38",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "generic-aarch64",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2023-08-04T23:38:22.460455433Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:41.041894598Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f38container FGC=f38 FBR=f38",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-04T18:41:08.203631801Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:50785841137152691ca6dd92200a0457ea325f9f4aa41c79dec9b254878dd456 in / "
                },
                {
                    "created": "2023-08-04T18:41:09.71120441Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-04T20:08:12.446295687Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-04T20:08:12.446295687Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-04T20:08:12.446295687Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-04T20:40:54.176544568Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-04T21:36:03.558234015Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-clients \t\tsubversion \t\tautoconf \t\tautomake \t\tbzip2-devel \t\tglib2-devel \t\tgcc \t\tgcc-c++ \t\tImageMagick \t\tImageMagick-devel \t\tkernel-devel \t\tlibcurl-devel \t\tlibevent-devel \t\tlibffi-devel \t\tlibjpeg-devel \t\tlibsqlite3x-devel \t\tlibxml2-devel \t\tlibxslt-devel \t\tlibyaml-devel \t\tmysql-devel \t\tmake \t\tncurses-devel \t\topenssl-devel \t\tpostgresql-devel \t\treadline-devel \t\tsqlite-devel \t\tzlib-devel \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-04T21:36:04.835990594Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-04T21:36:04.835990594Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-04T21:36:04.859638833Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-04T21:36:04.900521899Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-04T21:36:04.920668132Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-04T21:36:04.920668132Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-04T21:36:12.670232645Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 38   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-04T21:36:13.161712146Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 38 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-04T23:38:22.047110984Z",
                    "created_by": "LABEL io.balena.device-type=generic-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-04T23:38:22.047110984Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-04T23:38:22.460455433Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 38 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "moby.buildkit.buildinfo.v1": "eyJmcm9udGVuZCI6ImRvY2tlcmZpbGUudjAiLCJhdHRycyI6eyJmaWxlbmFtZSI6IkRvY2tlcmZpbGUifSwic291cmNlcyI6W3sidHlwZSI6ImRvY2tlci1pbWFnZSIsInJlZiI6ImRvY2tlci5pby9iYWxlbmFsaWIvYWFyY2g2NC1mZWRvcmE6MzgtYnVpbGQiLCJwaW4iOiJzaGEyNTY6N2E1MTVmMDFhZTA3YzdhZjllMTM2NWZkZTFjMTc1NWE5N2UwOWFhZDI0MWExMjUxOWQ0NDE3NmEyZmYyMjYzYSJ9XX0=",
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:babdc27db7e2fbe287cb3f027c67c3a67bd9a8b9d89b01cce2dc884785c9e431",
                    "sha256:816e2129ce92ccbc0211d10981b4baff0818853b67df05113dd544f2e65f14a2",
                    "sha256:15b28228915bed8c4a5288ac658c7c78cd1b2ca43a784ad65cb5b482047693b7",
                    "sha256:ebda2a6960da2eea9837aaceaf39591fd554d7e56e218c49daf3247ba0373493",
                    "sha256:481ee1fb849f956327e2c735f852a46d3078b95302bce46921f28239acfc3e53",
                    "sha256:bc57b6eabc63f982ce75fc5bb4eef69cef4becda85e62b9cd7635f26d4a7e9a2",
                    "sha256:7b7196787b10b9471bc4de1e5b9f446ca5344764e4acbbdf5ab93504e1b6204b",
                    "sha256:f4f69dd52777f03909554c7a7239396e66502aa4e242c6fdbd0ce61b64292d96",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:1103656251dd16f592bfe1c22b97b0a94c89e321344c28d1865aeee97572bba2",
                    "sha256:f88fe83413602dbd089aa2bf0e350b79a9968456b73cd9ab4a857aeea105ac56",
                    "sha256:8f9db2ffd6c7e2ec6d46c13226e30d72d637b174c55bbaa70b1cebc8434578fb"
                ]
            }
        },
        "38-build-20230829": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f38container",
                    "FGC=f38",
                    "FBR=f38",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "generic-aarch64",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2023-09-02T09:54:12.508586563Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:41.041894598Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f38container FGC=f38 FBR=f38",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-04T18:41:08.203631801Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:50785841137152691ca6dd92200a0457ea325f9f4aa41c79dec9b254878dd456 in / "
                },
                {
                    "created": "2023-08-04T18:41:09.71120441Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-02T06:18:07.258601269Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-02T06:18:07.258601269Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-02T06:18:07.258601269Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T06:52:04.127921308Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T07:48:20.859414251Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-clients \t\tsubversion \t\tautoconf \t\tautomake \t\tbzip2-devel \t\tglib2-devel \t\tgcc \t\tgcc-c++ \t\tImageMagick \t\tImageMagick-devel \t\tkernel-devel \t\tlibcurl-devel \t\tlibevent-devel \t\tlibffi-devel \t\tlibjpeg-devel \t\tlibsqlite3x-devel \t\tlibxml2-devel \t\tlibxslt-devel \t\tlibyaml-devel \t\tmysql-devel \t\tmake \t\tncurses-devel \t\topenssl-devel \t\tpostgresql-devel \t\treadline-devel \t\tsqlite-devel \t\tzlib-devel \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T07:48:22.324887413Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T07:48:22.324887413Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-02T07:48:22.34433736Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T07:48:22.379116145Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T07:48:22.393338379Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T07:48:22.393338379Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-02T07:48:30.143941521Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 38   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T07:48:30.470732015Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 38 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T09:54:12.139649509Z",
                    "created_by": "LABEL io.balena.device-type=generic-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-02T09:54:12.139649509Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T09:54:12.508586563Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 38 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:babdc27db7e2fbe287cb3f027c67c3a67bd9a8b9d89b01cce2dc884785c9e431",
                    "sha256:bff341f45a43ec79ef29154d378d964bba8f03d0c501f7c88be9e530010bebcd",
                    "sha256:1d7db161bd37873105f3d898f7b6b15a2a1a4dd3b0ae64740572b04f30096fd6",
                    "sha256:67d4bd3c0756ce97979601d163ef6ed451bd4ef5b1f9633fb58e6381b78e7cba",
                    "sha256:ace2dc13e056dad304b141078c63b7faaea95f6265c0e8e034a8f51a210a2efb",
                    "sha256:cb78509fcfd46a371a3791b29700500aae7d24e7dc8801a69db2b4734c6f4091",
                    "sha256:a5dfcf3c3deeb1a07dde60b48d72176170edf55a792e8e3537ed5bb466b9699f",
                    "sha256:1f76c40144ee4cfede1c85ca3638ca4b977e15f85ef1965026c84b8cca70751f",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:ddc765a16ad9e1de50b0e21a0495f59ceb2a932ce2a1d49daba3be9fa4c4e48c",
                    "sha256:acea26c34d02a559a62dd6982a08d310e5ef06ea99b70f4668ae8f3376966f41",
                    "sha256:26f5bf2f651fc3bbbb2143f955552222cb3fc408dbbdfb3fa5044bc64b9c4ce2"
                ]
            }
        },
        "38-build-20230904": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f38container",
                    "FGC=f38",
                    "FBR=f38",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "generic-aarch64",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2023-09-09T09:41:35.628399087Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:41.041894598Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f38container FGC=f38 FBR=f38",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-04T18:41:08.203631801Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:50785841137152691ca6dd92200a0457ea325f9f4aa41c79dec9b254878dd456 in / "
                },
                {
                    "created": "2023-08-04T18:41:09.71120441Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T03:50:47.966318693Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T03:50:47.966318693Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T03:50:47.966318693Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:22:05.312577476Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T05:15:28.451897601Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-clients \t\tsubversion \t\tautoconf \t\tautomake \t\tbzip2-devel \t\tglib2-devel \t\tgcc \t\tgcc-c++ \t\tImageMagick \t\tImageMagick-devel \t\tkernel-devel \t\tlibcurl-devel \t\tlibevent-devel \t\tlibffi-devel \t\tlibjpeg-devel \t\tlibsqlite3x-devel \t\tlibxml2-devel \t\tlibxslt-devel \t\tlibyaml-devel \t\tmysql-devel \t\tmake \t\tncurses-devel \t\topenssl-devel \t\tpostgresql-devel \t\treadline-devel \t\tsqlite-devel \t\tzlib-devel \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T05:15:29.967632863Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T05:15:29.967632863Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T05:15:29.988606782Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T05:15:30.006253165Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T05:15:30.029662008Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T05:15:30.029662008Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T05:15:37.144411755Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 38   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T05:15:37.568640346Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 38 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T09:41:35.251431816Z",
                    "created_by": "LABEL io.balena.device-type=generic-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T09:41:35.251431816Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T09:41:35.628399087Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 38 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:babdc27db7e2fbe287cb3f027c67c3a67bd9a8b9d89b01cce2dc884785c9e431",
                    "sha256:a0731afcd2c8d5368a134e5790c454b64b22976c083086a24640d9ef6aa0075e",
                    "sha256:420cc142d6ee365450904d65a94be7051adeebac2a3b9a384ca145c9a8a28029",
                    "sha256:e6af332eb3e1a9078b9cecd7a22bd639682393611fc23fa51c0481604199e55e",
                    "sha256:f30f0ce6ef4a889d901d6fb135906f85e4608b7cca8478752288bf0f795f5c20",
                    "sha256:c872c917a97a653938d5330aaecae1350d29556297a8930d1770d5ab205080c2",
                    "sha256:eed2feea09daac7279013006cc32d46e23f70620beeb2f9f6135be153b62f9f5",
                    "sha256:cb6b401af3e1fa56ed153b17370e5bde9c1fb52fa935eeca34e4d4209b1c5b95",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:b661245fb18d04968fd3dc597c8a59767653fc07b0d95a3b5314490ae36d87d7",
                    "sha256:065768be076bd7682c3cc046cd852a00c45fd042bf008c534d158f0706bad409",
                    "sha256:062461f99e86684d8a608c57802a76ad55f0e634a2ca73af407442847c768123"
                ]
            }
        },
        "38-build-20230911": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f38container",
                    "FGC=f38",
                    "FBR=f38",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "iot-gate-imx8plus",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2023-09-12T03:10:10.042515967Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:41.041894598Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f38container FGC=f38 FBR=f38",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-04T18:41:08.203631801Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:50785841137152691ca6dd92200a0457ea325f9f4aa41c79dec9b254878dd456 in / "
                },
                {
                    "created": "2023-08-04T18:41:09.71120441Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T03:50:47.966318693Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T03:50:47.966318693Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T03:50:47.966318693Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:22:05.312577476Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T05:15:28.451897601Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-clients \t\tsubversion \t\tautoconf \t\tautomake \t\tbzip2-devel \t\tglib2-devel \t\tgcc \t\tgcc-c++ \t\tImageMagick \t\tImageMagick-devel \t\tkernel-devel \t\tlibcurl-devel \t\tlibevent-devel \t\tlibffi-devel \t\tlibjpeg-devel \t\tlibsqlite3x-devel \t\tlibxml2-devel \t\tlibxslt-devel \t\tlibyaml-devel \t\tmysql-devel \t\tmake \t\tncurses-devel \t\topenssl-devel \t\tpostgresql-devel \t\treadline-devel \t\tsqlite-devel \t\tzlib-devel \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T05:15:29.967632863Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T05:15:29.967632863Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T05:15:29.988606782Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T05:15:30.006253165Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T05:15:30.029662008Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T05:15:30.029662008Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T05:15:37.144411755Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 38   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T05:15:37.568640346Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 38 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-12T03:10:09.901905621Z",
                    "created_by": "LABEL io.balena.device-type=iot-gate-imx8plus",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-12T03:10:09.901905621Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-12T03:10:10.042515967Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 38 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:babdc27db7e2fbe287cb3f027c67c3a67bd9a8b9d89b01cce2dc884785c9e431",
                    "sha256:a0731afcd2c8d5368a134e5790c454b64b22976c083086a24640d9ef6aa0075e",
                    "sha256:420cc142d6ee365450904d65a94be7051adeebac2a3b9a384ca145c9a8a28029",
                    "sha256:e6af332eb3e1a9078b9cecd7a22bd639682393611fc23fa51c0481604199e55e",
                    "sha256:f30f0ce6ef4a889d901d6fb135906f85e4608b7cca8478752288bf0f795f5c20",
                    "sha256:c872c917a97a653938d5330aaecae1350d29556297a8930d1770d5ab205080c2",
                    "sha256:eed2feea09daac7279013006cc32d46e23f70620beeb2f9f6135be153b62f9f5",
                    "sha256:cb6b401af3e1fa56ed153b17370e5bde9c1fb52fa935eeca34e4d4209b1c5b95",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:b661245fb18d04968fd3dc597c8a59767653fc07b0d95a3b5314490ae36d87d7",
                    "sha256:541141b1072a5cff1fa957acdc5737c433932f3fbee3b26c41890845779d5261",
                    "sha256:f8371880b27740772b5d9819f89526c2cd4557e6cc833c41ae38ddda1d2ca8ed"
                ]
            }
        },
        "38-build-20231103": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f38container",
                    "FGC=f38",
                    "FBR=f38",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "iot-gate-imx8plus",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2023-11-04T17:10:10.062516052Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:41.041894598Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f38container FGC=f38 FBR=f38",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-06T18:43:02.449416883Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:b0b9f1fa4d90583e2728f8359f6d2f98198fa564a48a493ac3938082a4180724 in / "
                },
                {
                    "created": "2023-10-06T18:43:04.271082122Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-04T14:05:37.918776318Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-04T14:05:37.918776318Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-04T14:05:37.918776318Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T14:33:19.189618093Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T15:14:18.016277278Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-clients \t\tsubversion \t\tautoconf \t\tautomake \t\tbzip2-devel \t\tglib2-devel \t\tgcc \t\tgcc-c++ \t\tImageMagick \t\tImageMagick-devel \t\tkernel-devel \t\tlibcurl-devel \t\tlibevent-devel \t\tlibffi-devel \t\tlibjpeg-devel \t\tlibsqlite3x-devel \t\tlibxml2-devel \t\tlibxslt-devel \t\tlibyaml-devel \t\tmysql-devel \t\tmake \t\tncurses-devel \t\topenssl-devel \t\tpostgresql-devel \t\treadline-devel \t\tsqlite-devel \t\tzlib-devel \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T15:14:19.195349579Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T15:14:19.195349579Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-04T15:14:19.20637024Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T15:14:19.216495327Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T15:14:19.242663104Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T15:14:19.242663104Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-04T15:14:24.898160647Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 38   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T15:14:25.064945348Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 38 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T17:10:09.919941032Z",
                    "created_by": "LABEL io.balena.device-type=iot-gate-imx8plus",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-04T17:10:09.919941032Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T17:10:10.062516052Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 38 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:f1d4814332771f9e7ca854a6a297b5c75ceff99a0ae64bd8822337e826d49073",
                    "sha256:5ca147608c23c8a579b45f84370de84ec90b93cc9776ccdd6f08315fdc276a3f",
                    "sha256:0416d527435405a6e0e8ccbf8a44e8202e94d6f74a66a0c08c0be13ebd5b9ad5",
                    "sha256:24220b836985bd625e916238c348fdac9e4996309f4f61cdfc5031a4ac412653",
                    "sha256:b44ee2634062cdf1ab458b427497676ded756f3fec66fa4e952a739c5c857f3a",
                    "sha256:998adde8ef7854c92626b008bf6f6211c2f8f3e65257a63c67c8b3fbe0a08cfc",
                    "sha256:4c8d15192ff2810d59bf9c2b19d6f8a7f95369ce23f59c4c148c12408ccd8963",
                    "sha256:461335ebf0546a2ce56bc930763d7ef1add62d71382b2907c552da932209b5b7",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:989785633fe3e42f8ee4cc22e2dc3333c8aae93500ddf398fd712b7b2f342608",
                    "sha256:146b67a5d0a64c843e73f7c49f6d9ef28ae2f2f735d63d12fd28d8dcd53326df",
                    "sha256:8e790458938f41e2af0278d45040d1cf052881396bf40af424b1ca37137d43cd"
                ]
            }
        },
        "38-build-20231106": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f38container",
                    "FGC=f38",
                    "FBR=f38",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "iot-gate-imx8plus",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2023-11-06T12:36:33.672611132Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:41.041894598Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f38container FGC=f38 FBR=f38",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-06T18:43:02.449416883Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:b0b9f1fa4d90583e2728f8359f6d2f98198fa564a48a493ac3938082a4180724 in / "
                },
                {
                    "created": "2023-10-06T18:43:04.271082122Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T09:12:23.450706038Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T09:12:23.450706038Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T09:12:23.450706038Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T09:50:16.7751833Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T10:47:00.988755557Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-clients \t\tsubversion \t\tautoconf \t\tautomake \t\tbzip2-devel \t\tglib2-devel \t\tgcc \t\tgcc-c++ \t\tImageMagick \t\tImageMagick-devel \t\tkernel-devel \t\tlibcurl-devel \t\tlibevent-devel \t\tlibffi-devel \t\tlibjpeg-devel \t\tlibsqlite3x-devel \t\tlibxml2-devel \t\tlibxslt-devel \t\tlibyaml-devel \t\tmysql-devel \t\tmake \t\tncurses-devel \t\topenssl-devel \t\tpostgresql-devel \t\treadline-devel \t\tsqlite-devel \t\tzlib-devel \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T10:47:02.222465463Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T10:47:02.222465463Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T10:47:02.231375683Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T10:47:02.240526604Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T10:47:02.274484381Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T10:47:02.274484381Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T10:47:10.01477719Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 38   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T10:47:10.190567794Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 38 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T12:36:33.514108866Z",
                    "created_by": "LABEL io.balena.device-type=iot-gate-imx8plus",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T12:36:33.514108866Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T12:36:33.672611132Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 38 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:f1d4814332771f9e7ca854a6a297b5c75ceff99a0ae64bd8822337e826d49073",
                    "sha256:39bbb341468da05ffbfaae2477db2bbb5f51a4a2fa37d6cd8a45e02465961d4e",
                    "sha256:efceb8e8746a29d66b0be57e588d9e1d0988697cb2ba207ee32f9563a2094144",
                    "sha256:bc53bfed3574a483f021369daae6b87d20a0294f197afcc46a00d79722d56472",
                    "sha256:424e27e29080a7a102f9d03e2817cd0aaaedfabbaddeffc8c5a60e59529f9784",
                    "sha256:a954f4019e1ee996f3c97b93a64666e29791d34675583286ffe196e45884759b",
                    "sha256:efb8808635155c55275ef8af4c6316d9abcbea0526dbce3a6249dce6ced03749",
                    "sha256:b3b4a262a2cfc0d5f92cfe300657d0c5d095998ba8e6faa5bfed57b6b4f85e3a",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:66244eba671ce04674fd8447ec746017c2be661488c5214da32771a03c669608",
                    "sha256:d0036b2690042092ef23286fa729bbf2edd1a6fe87ececda7784147116786dbc",
                    "sha256:a68e5a30eda7c69069eedc245aa76ab202f8628d068f2ac98bac2a94e7ebcb4d"
                ]
            }
        },
        "38-build-20231127": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f38container",
                    "FGC=f38",
                    "FBR=f38",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "iot-gate-imx8plus",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2023-12-01T13:13:36.900690637Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:41.041894598Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f38container FGC=f38 FBR=f38",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-29T00:47:11.412948906Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:bf926d1cd75117e6300e5b83c1a9f3dc935a0a4a1afd183c94c5ab427119d058 in / "
                },
                {
                    "created": "2023-11-29T00:47:13.088493574Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T10:52:08.848900647Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T10:52:08.848900647Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T10:52:08.848900647Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T11:16:49.627151128Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T11:58:22.063890258Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-clients \t\tsubversion \t\tautoconf \t\tautomake \t\tbzip2-devel \t\tglib2-devel \t\tgcc \t\tgcc-c++ \t\tImageMagick \t\tImageMagick-devel \t\tkernel-devel \t\tlibcurl-devel \t\tlibevent-devel \t\tlibffi-devel \t\tlibjpeg-devel \t\tlibsqlite3x-devel \t\tlibxml2-devel \t\tlibxslt-devel \t\tlibyaml-devel \t\tmysql-devel \t\tmake \t\tncurses-devel \t\topenssl-devel \t\tpostgresql-devel \t\treadline-devel \t\tsqlite-devel \t\tzlib-devel \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T11:58:23.529242312Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T11:58:23.529242312Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T11:58:23.553712145Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T11:58:23.587284609Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T11:58:23.600056059Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T11:58:23.600056059Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T11:58:29.259523498Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 38   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T11:58:29.421339771Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 38 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T13:13:36.764994358Z",
                    "created_by": "LABEL io.balena.device-type=iot-gate-imx8plus",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T13:13:36.764994358Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T13:13:36.900690637Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 38 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:35f4bab08b96e91cc0f7f401be5805fb037bd6e3d4eb1af238340706b9cd0a3e",
                    "sha256:f89dcf27c1312a0e888eb882435b02b92d7b0966d3543bcb40c7e911da238725",
                    "sha256:068cdbd9a400b12c2f5cebc80282d0d1b29c6339a80a3e587e0f896fcba1a8a5",
                    "sha256:b8e6e93110f76839aaa5a9a15e6f63d9b9395f98c141b49db73e8e4a5aa1422d",
                    "sha256:b3ed990b98bc1b9c3f69c913b400e68fbafdb692d258d0d5a7de75c720d962df",
                    "sha256:0a915892bdc1d58685b3c4100ab19ff03d5767a71339b1844a544052f9c4034c",
                    "sha256:6da8827f504229dc4f421d12fa4c4aa58166b8377db7d2c03d3b8946af26422a",
                    "sha256:5bedc2cef057b68d6bf31fdf534ebfb75b10323045043f20eb4e619a201b0c04",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:a25ae23bcf7e3b0ddf23b49da9f22f3fe464fe6e058a68914880919055009ada",
                    "sha256:4865686392aebf309e79f1cb58a16171c643b475a14171c548d43ba90ec1cebd",
                    "sha256:32ac6bd726101668c426311994109a878803743723acb76e23a9ecef9738cf0d"
                ]
            }
        },
        "38-build-20231204": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f38container",
                    "FGC=f38",
                    "FBR=f38",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "iot-gate-imx8plus",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2023-12-06T23:01:04.1919517Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:41.041894598Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f38container FGC=f38 FBR=f38",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-29T00:47:11.412948906Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:bf926d1cd75117e6300e5b83c1a9f3dc935a0a4a1afd183c94c5ab427119d058 in / "
                },
                {
                    "created": "2023-11-29T00:47:13.088493574Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T20:40:21.099049635Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T20:40:21.099049635Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T20:40:21.099049635Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T21:05:24.023517776Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T21:47:27.057302323Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-clients \t\tsubversion \t\tautoconf \t\tautomake \t\tbzip2-devel \t\tglib2-devel \t\tgcc \t\tgcc-c++ \t\tImageMagick \t\tImageMagick-devel \t\tkernel-devel \t\tlibcurl-devel \t\tlibevent-devel \t\tlibffi-devel \t\tlibjpeg-devel \t\tlibsqlite3x-devel \t\tlibxml2-devel \t\tlibxslt-devel \t\tlibyaml-devel \t\tmysql-devel \t\tmake \t\tncurses-devel \t\topenssl-devel \t\tpostgresql-devel \t\treadline-devel \t\tsqlite-devel \t\tzlib-devel \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T21:47:28.091863636Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T21:47:28.091863636Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T21:47:28.10218924Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T21:47:28.111511993Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T21:47:28.12152315Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T21:47:28.12152315Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T21:47:33.69355991Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 38   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T21:47:33.880160682Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 38 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T23:01:04.057748018Z",
                    "created_by": "LABEL io.balena.device-type=iot-gate-imx8plus",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T23:01:04.057748018Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T23:01:04.1919517Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 38 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:35f4bab08b96e91cc0f7f401be5805fb037bd6e3d4eb1af238340706b9cd0a3e",
                    "sha256:86598db2064696162f124b5a1c072b650bee12731f1bff33dcf7da989d1c4993",
                    "sha256:3db1690e74a01c4997efb46bb52278c8f3701d99f8dae92db3efe85e49aca754",
                    "sha256:6e238fdbf0f3db32039f484d577f323318fda897e8436045e2d628e5855af8ee",
                    "sha256:8739eaf76eff782ab247f13ae621367d2d5dcf0151937da80b4a44df76a964e5",
                    "sha256:2c1a32c56fe9d497ceb8d6e15324de12ec75d5c3ef2f0ea08a4844fc0cc7490a",
                    "sha256:c4d16c249e5240fdcb7a7f840b4eeb43b32d2ab03d7f81a339ab3ed38ff1b918",
                    "sha256:73db3a4534adfcd8df1d30200617dff79f905a84e1b2487e5e36151228dd5b54",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:a5c6851de90974e50273b162c26e1857a6a0da7f408acb92368ab1f7057bb377",
                    "sha256:453a1c3f7c1f49e4909b98e0ec47613f7eb505d65039af50d6b9969ea75081b8",
                    "sha256:f730fbb3536e990ced92fda7142cde2391ff0005673da9e95f3287d85c5cda8b"
                ]
            }
        },
        "38-build-20240205": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f38container",
                    "FGC=f38",
                    "FBR=f38",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "iot-gate-imx8plus",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2024-02-05T02:53:05.642172061Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:41.041894598Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f38container FGC=f38 FBR=f38",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-29T00:47:11.412948906Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:bf926d1cd75117e6300e5b83c1a9f3dc935a0a4a1afd183c94c5ab427119d058 in / "
                },
                {
                    "created": "2023-11-29T00:47:13.088493574Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-05T00:26:07.283522649Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-05T00:26:07.283522649Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-05T00:26:07.283522649Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T00:52:22.648480886Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T01:34:57.549929554Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-clients \t\tsubversion \t\tautoconf \t\tautomake \t\tbzip2-devel \t\tglib2-devel \t\tgcc \t\tgcc-c++ \t\tImageMagick \t\tImageMagick-devel \t\tkernel-devel \t\tlibcurl-devel \t\tlibevent-devel \t\tlibffi-devel \t\tlibjpeg-devel \t\tlibsqlite3x-devel \t\tlibxml2-devel \t\tlibxslt-devel \t\tlibyaml-devel \t\tmysql-devel \t\tmake \t\tncurses-devel \t\topenssl-devel \t\tpostgresql-devel \t\treadline-devel \t\tsqlite-devel \t\tzlib-devel \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T01:34:58.698426062Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T01:34:58.698426062Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-05T01:34:58.709288494Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T01:34:58.742302253Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T01:34:58.759202078Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T01:34:58.759202078Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-05T01:35:04.305086577Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 38   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T01:35:04.450493146Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 38 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T02:53:05.520027746Z",
                    "created_by": "LABEL io.balena.device-type=iot-gate-imx8plus",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-05T02:53:05.520027746Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T02:53:05.642172061Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 38 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:35f4bab08b96e91cc0f7f401be5805fb037bd6e3d4eb1af238340706b9cd0a3e",
                    "sha256:25c5d26dde6a709e8fe04204ce06152cc9ff7c61b9e653229623e53208e92d9d",
                    "sha256:3a9052b286e7d0c4dbc0ecc4d1d5c24fa97e984dea4ce1540cb2c7a43b234714",
                    "sha256:a209f70a3c48accae069781977d34d7ece605bdf9b01bf655de0a4b3a0d815ae",
                    "sha256:ea9f209506961ead49cec2c8a6e9c6cbdf3da2d8a254f4fab54979bfb372a936",
                    "sha256:8525ac0e0fa3498ca378500e2199c3dba3db2cf6dbdfdb332ab61c9a875ca323",
                    "sha256:6481f52cf34a73dda86006ba06420bdf2f4cc997c51e46579ca35f02ebda598a",
                    "sha256:2ac438114f9401b05874baa8c192b7fc6ce3c0da423292bc40309a87397bb0b5",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:cb80e1d55729478c8c073f8b8fa5bd0ab0d1d7d9352694530e9479a8f0a6133c",
                    "sha256:1c48055bdd6bbeffd82ef0f2f3c82c0c5570accf421d1dd5c49aafccbee8d120",
                    "sha256:45be382a47cc6a4df37a278a5d7010464c15697577eeb45baa68646fa71f4372"
                ]
            }
        },
        "38-build-20240227": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f38container",
                    "FGC=f38",
                    "FBR=f38",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "iot-gate-imx8plus",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2024-03-01T23:26:16.827837011Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:41.041894598Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f38container FGC=f38 FBR=f38",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-20T23:39:45.493041732Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:50f76cb2e29e780d80bbc023f0bbb552e413a0191d6fab7fedce9f032d7c55ec in / "
                },
                {
                    "created": "2024-02-20T23:39:46.885294079Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T20:50:09.897108948Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T20:50:09.897108948Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T20:50:09.897108948Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:17:41.622789278Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T22:00:05.447968861Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-clients \t\tsubversion \t\tautoconf \t\tautomake \t\tbzip2-devel \t\tglib2-devel \t\tgcc \t\tgcc-c++ \t\tImageMagick \t\tImageMagick-devel \t\tkernel-devel \t\tlibcurl-devel \t\tlibevent-devel \t\tlibffi-devel \t\tlibjpeg-devel \t\tlibsqlite3x-devel \t\tlibxml2-devel \t\tlibxslt-devel \t\tlibyaml-devel \t\tmysql-devel \t\tmake \t\tncurses-devel \t\topenssl-devel \t\tpostgresql-devel \t\treadline-devel \t\tsqlite-devel \t\tzlib-devel \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T22:00:06.868381508Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T22:00:06.868381508Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T22:00:06.876880217Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T22:00:06.884443525Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T22:00:06.89206315Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T22:00:06.89206315Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T22:00:12.313673259Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 38   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T22:00:12.450188912Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 38 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T23:26:16.709123501Z",
                    "created_by": "LABEL io.balena.device-type=iot-gate-imx8plus",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T23:26:16.709123501Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T23:26:16.827837011Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 38 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:d9224901c4254002370ad869c45d487779ce52e983554fc3c651d1283143025c",
                    "sha256:dcd8bb5e551d78e1a7df5e9cdd2248b7d42057d58efd29aa1ad3efe95e0913c5",
                    "sha256:2696167d857e43eb0db4659dede3b81939d5154ee8a5e6d12e113a040b6747d2",
                    "sha256:56cfe201bf279dd8fd7504ca76ce1b5094b6f3161e9777ba459f906286d57fdf",
                    "sha256:0b8997bfc9afb5b27ee51157a08242a25874b2dd0976ed9e47b36c4f7b14b297",
                    "sha256:86c439966c35d3ab8165dcf9633e6b36cfcf033ae4c29d365ebe695d8bc58942",
                    "sha256:10f572daecac3c558b319d28232e1173f0858776886df6b1cdc424c42f8e8e3f",
                    "sha256:aa5e3449d39b98667137cf1c65cae973283bd3121a9ca13218cb0d36b77e58dd",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:8c660f1c1924d53f2e4fc005f2651b9934e150d1d84904a166b2dcb9346f00b9",
                    "sha256:efdbdbc1440006885488429fdcf042164cf0f64a80b2a5eb095a56e7953becda",
                    "sha256:3275516a0d5c5bf0b14d35ce642e3706561983e419d8573d8e78c0ca9110be13"
                ]
            }
        },
        "38-build-20240304": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f38container",
                    "FGC=f38",
                    "FBR=f38",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "iot-gate-imx8plus",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2024-03-05T10:56:26.279960695Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:41.041894598Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f38container FGC=f38 FBR=f38",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-20T23:39:45.493041732Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:50f76cb2e29e780d80bbc023f0bbb552e413a0191d6fab7fedce9f032d7c55ec in / "
                },
                {
                    "created": "2024-02-20T23:39:46.885294079Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T08:24:16.349458836Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T08:24:16.349458836Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T08:24:16.349458836Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T08:55:05.687723743Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T09:37:49.378748765Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-clients \t\tsubversion \t\tautoconf \t\tautomake \t\tbzip2-devel \t\tglib2-devel \t\tgcc \t\tgcc-c++ \t\tImageMagick \t\tImageMagick-devel \t\tkernel-devel \t\tlibcurl-devel \t\tlibevent-devel \t\tlibffi-devel \t\tlibjpeg-devel \t\tlibsqlite3x-devel \t\tlibxml2-devel \t\tlibxslt-devel \t\tlibyaml-devel \t\tmysql-devel \t\tmake \t\tncurses-devel \t\topenssl-devel \t\tpostgresql-devel \t\treadline-devel \t\tsqlite-devel \t\tzlib-devel \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T09:37:50.702042504Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T09:37:50.702042504Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T09:37:50.714635736Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T09:37:50.725004801Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T09:37:50.754135385Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T09:37:50.754135385Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T09:37:56.380991734Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 38   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T09:37:56.522737005Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 38 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T10:56:26.157641003Z",
                    "created_by": "LABEL io.balena.device-type=iot-gate-imx8plus",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T10:56:26.157641003Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T10:56:26.279960695Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 38 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:d9224901c4254002370ad869c45d487779ce52e983554fc3c651d1283143025c",
                    "sha256:f48c9eddbc1f2401f9c01b5f49d65066cc6736cd10bf3d6367fa58871aa67da8",
                    "sha256:16ce41fd80fa45ee8fcdc2ca2d70fad8b5097608f6c8a9b4145ffae05c23c76f",
                    "sha256:e4dcc4fba13876e7b4a37d11f0c7383b33585abc7f3abdc003ba562492baed50",
                    "sha256:0cb56a3846c1330baad18db7d66a457ecdf321da02638674f8809d5f4aa9661b",
                    "sha256:d9a6ad25b762536264befadb27fc4671eb2a4a02541698ad56a0ae82e259f86f",
                    "sha256:4ee7f0074669d7ed543f5d236c4459720df4ba65c94ce074a89e3992a3d607ba",
                    "sha256:fd299532500fa1f9ce624643d5c5045d99e44584dba65bc545b8a0af95e50cb5",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:16908c6f2ecc55d57fc82a43723b3cda63502febd87f5703334949536ff29731",
                    "sha256:3bea80862722609c3b9208a55aef7cd2f0a0a24b2414265c7e012e0156e0f6c9",
                    "sha256:25e74f2121ffe8daf8c2e9dc6a3aca20edb3ffab2cf1be6c949827cdaf923d01"
                ]
            }
        },
        "38-build-20240401": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f38container",
                    "FGC=f38",
                    "FBR=f38",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "iot-gate-imx8plus",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                }
            },
            "created": "2024-04-01T23:54:49.810396528Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:41.041894598Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f38container FGC=f38 FBR=f38",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-20T23:39:45.493041732Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:50f76cb2e29e780d80bbc023f0bbb552e413a0191d6fab7fedce9f032d7c55ec in / "
                },
                {
                    "created": "2024-02-20T23:39:46.885294079Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T21:26:27.794199455Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T21:26:27.794199455Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T21:26:27.794199455Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T21:53:24.859684991Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T22:35:54.53195295Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-clients \t\tsubversion \t\tautoconf \t\tautomake \t\tbzip2-devel \t\tglib2-devel \t\tgcc \t\tgcc-c++ \t\tImageMagick \t\tImageMagick-devel \t\tkernel-devel \t\tlibcurl-devel \t\tlibevent-devel \t\tlibffi-devel \t\tlibjpeg-devel \t\tlibsqlite3x-devel \t\tlibxml2-devel \t\tlibxslt-devel \t\tlibyaml-devel \t\tmysql-devel \t\tmake \t\tncurses-devel \t\topenssl-devel \t\tpostgresql-devel \t\treadline-devel \t\tsqlite-devel \t\tzlib-devel \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T22:35:55.573159674Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T22:35:55.573159674Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T22:35:55.583778037Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T22:35:55.619703511Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T22:35:55.631911386Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T22:35:55.631911386Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T22:36:01.151366691Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 38   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T22:36:01.327877549Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 38 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T23:54:49.697678283Z",
                    "created_by": "LABEL io.balena.device-type=iot-gate-imx8plus",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T23:54:49.697678283Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T23:54:49.810396528Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 38 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:d9224901c4254002370ad869c45d487779ce52e983554fc3c651d1283143025c",
                    "sha256:94a2eb048e21c8e71a8f03f32b564849ffd038b53e0ec2f2f7a1b037864e56b7",
                    "sha256:59a91752dfc62cd44359a2f8bc83b2f25cbbfebc3353272c6e2ba1956b7424e6",
                    "sha256:0cc5d557067682c6f19a068bdb4478439103c75b9281bb3ab05b99facd1edade",
                    "sha256:b08f87d0f885239dd0932f0486855fd95c77870fef393f1df0c6bcc0f6f6896c",
                    "sha256:a757830347f79113e6a42976e11710e4ffcacb6ee62436dce15f86ebbdb45e8a",
                    "sha256:07c5e99401dfe47101d29db3d9a891b806e9a404bb3045c237045f7ea0f67196",
                    "sha256:a9360846f37548f0498d091863fef7f0c43471e0580eb2749779262e309b8136",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:fe231abe20b0907f6e177a0aef47202b43250922d34794deb46c1b9a765db26a",
                    "sha256:e6c7de97fb130301644c294472bb71edab647343405a7961a2465300cb5dfe33",
                    "sha256:3dc093238aa52221e6b8fadf26ed08be5164fad572fee58529df945b55b97282"
                ]
            }
        },
        "38-build-20240408": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f38container",
                    "FGC=f38",
                    "FBR=f38",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "iot-gate-imx8plus",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                }
            },
            "created": "2024-04-09T20:10:16.768617209Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:41.041894598Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f38container FGC=f38 FBR=f38",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-20T23:39:45.493041732Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:50f76cb2e29e780d80bbc023f0bbb552e413a0191d6fab7fedce9f032d7c55ec in / "
                },
                {
                    "created": "2024-02-20T23:39:46.885294079Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:53.014397748Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:53.014397748Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:53.014397748Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:02:01.028048975Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:45:21.757628005Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-clients \t\tsubversion \t\tautoconf \t\tautomake \t\tbzip2-devel \t\tglib2-devel \t\tgcc \t\tgcc-c++ \t\tImageMagick \t\tImageMagick-devel \t\tkernel-devel \t\tlibcurl-devel \t\tlibevent-devel \t\tlibffi-devel \t\tlibjpeg-devel \t\tlibsqlite3x-devel \t\tlibxml2-devel \t\tlibxslt-devel \t\tlibyaml-devel \t\tmysql-devel \t\tmake \t\tncurses-devel \t\topenssl-devel \t\tpostgresql-devel \t\treadline-devel \t\tsqlite-devel \t\tzlib-devel \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:45:23.21693759Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:45:23.21693759Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T14:45:23.226391702Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:45:23.30237909Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:45:23.312751251Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:45:23.312751251Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T14:45:29.124459273Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 38   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:45:29.273317952Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 38 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T20:10:16.616621117Z",
                    "created_by": "LABEL io.balena.device-type=iot-gate-imx8plus",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T20:10:16.616621117Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T20:10:16.768617209Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 38 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:d9224901c4254002370ad869c45d487779ce52e983554fc3c651d1283143025c",
                    "sha256:63a7727c4e76d8980cf4568202bf9297aab0020244e4d7a59ff628633c5c379a",
                    "sha256:8764364fcb36a10eca0e326c313d32654e5e4cc55abfe0014974d53c364de48b",
                    "sha256:281dd00215836c81475c699f61f89c9eb55c5d69014f819f8772cffe433ace26",
                    "sha256:abb63b2c733f69ae08cbb6bfe1f32da0004658166581cc3bdb67901ede1ad33a",
                    "sha256:763bebfde6ac1ad7e8b6195d9c95001b4b273ad9936cd9971295674105101ac6",
                    "sha256:f67b7e4a6f4e48584da11a524adbebbbeeac629a1cb524f5df51ee88bdd71055",
                    "sha256:74f1d6cf90e9f178497078c8e6f3941cbb3265478d0f1a806521824a183837a9",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:c7319dfdfe03afc9fe26d4be768e94cfc2d546d63404d22deff0f8426aec9488",
                    "sha256:feba6ef6ecc163c536ff66d9f4f310445fca31291a2b6370daadee06904e4b81",
                    "sha256:18727f049be34f432c4b36d0d12d0018427ef91713be5c9b2453482abc112ee4"
                ]
            }
        },
        "38-build-20240429": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f38container",
                    "FGC=f38",
                    "FBR=f38",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "iot-gate-imx8plus",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                }
            },
            "created": "2024-05-06T10:46:34.467248872Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:41.041894598Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f38container FGC=f38 FBR=f38",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-20T23:39:45.493041732Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:50f76cb2e29e780d80bbc023f0bbb552e413a0191d6fab7fedce9f032d7c55ec in / "
                },
                {
                    "created": "2024-02-20T23:39:46.885294079Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:53.014397748Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:53.014397748Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:53.014397748Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:02:01.028048975Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:45:21.757628005Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-clients \t\tsubversion \t\tautoconf \t\tautomake \t\tbzip2-devel \t\tglib2-devel \t\tgcc \t\tgcc-c++ \t\tImageMagick \t\tImageMagick-devel \t\tkernel-devel \t\tlibcurl-devel \t\tlibevent-devel \t\tlibffi-devel \t\tlibjpeg-devel \t\tlibsqlite3x-devel \t\tlibxml2-devel \t\tlibxslt-devel \t\tlibyaml-devel \t\tmysql-devel \t\tmake \t\tncurses-devel \t\topenssl-devel \t\tpostgresql-devel \t\treadline-devel \t\tsqlite-devel \t\tzlib-devel \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:45:23.21693759Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:45:23.21693759Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T14:45:23.226391702Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:45:23.30237909Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:45:23.312751251Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:45:23.312751251Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T14:45:29.124459273Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 38   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:45:29.273317952Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 38 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T10:46:34.340057912Z",
                    "created_by": "LABEL io.balena.device-type=iot-gate-imx8plus",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T10:46:34.340057912Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T10:46:34.467248872Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 38 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:d9224901c4254002370ad869c45d487779ce52e983554fc3c651d1283143025c",
                    "sha256:63a7727c4e76d8980cf4568202bf9297aab0020244e4d7a59ff628633c5c379a",
                    "sha256:8764364fcb36a10eca0e326c313d32654e5e4cc55abfe0014974d53c364de48b",
                    "sha256:281dd00215836c81475c699f61f89c9eb55c5d69014f819f8772cffe433ace26",
                    "sha256:abb63b2c733f69ae08cbb6bfe1f32da0004658166581cc3bdb67901ede1ad33a",
                    "sha256:763bebfde6ac1ad7e8b6195d9c95001b4b273ad9936cd9971295674105101ac6",
                    "sha256:f67b7e4a6f4e48584da11a524adbebbbeeac629a1cb524f5df51ee88bdd71055",
                    "sha256:74f1d6cf90e9f178497078c8e6f3941cbb3265478d0f1a806521824a183837a9",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:c7319dfdfe03afc9fe26d4be768e94cfc2d546d63404d22deff0f8426aec9488",
                    "sha256:7bc47675f5eb926e37cb9aa67dfeaa6886f5fa82c2f8e5908013d6d7f0b477a3",
                    "sha256:1f11cc865397aad80274070def4a4025fdea6b6484d5d123e5d2d485910f208b"
                ]
            }
        },
        "38-run": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f38container",
                    "FGC=f38",
                    "FBR=f38",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "iot-gate-imx8plus",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                }
            },
            "created": "2024-05-06T10:46:35.305820329Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:41.041894598Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f38container FGC=f38 FBR=f38",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-20T23:39:45.493041732Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:50f76cb2e29e780d80bbc023f0bbb552e413a0191d6fab7fedce9f032d7c55ec in / "
                },
                {
                    "created": "2024-02-20T23:39:46.885294079Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:45.909708183Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:45.909708183Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:45.909708183Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:02:01.590555751Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:02:02.351225239Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:02:02.351225239Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T14:02:02.360749405Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:02:02.369270986Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:02:02.405864798Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:02:02.405864798Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T14:02:07.899966098Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 38   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:02:08.045611622Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 38 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T10:46:35.185525692Z",
                    "created_by": "LABEL io.balena.device-type=iot-gate-imx8plus",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T10:46:35.185525692Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T10:46:35.305820329Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 38 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:d9224901c4254002370ad869c45d487779ce52e983554fc3c651d1283143025c",
                    "sha256:ebcf910b3bd968c69298ac824583cd1528883f4a382541565a04a486c658c20b",
                    "sha256:c24ea502f2f1577b4278e978c5db52a3b01de7a26e6f4724887ceeba23daeba2",
                    "sha256:793d820a1dccf3d247ece3546ff7db37debcbeed40e828cb75bb4cb13b7aebab",
                    "sha256:553772b6df64fc5ba696a001383c6ffd5b481fb5f850cde63456cadf5cca043f",
                    "sha256:f4ac866915cc972c7c4d1726ddc5effabb4cc90debfacebc71ef6f4541bf63ef",
                    "sha256:8e85cb2120afad8b568aebbb01c8c1d2a29b17f9b8f160299e7d4c9843c607d2",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:2579e5f7d4e51b9a0d613c0c3be4660311f4b1324ea68a59aa3c2a222a1785eb",
                    "sha256:92043577b9017c077fccc7660275ff511e480e0e7638f589157bf993a0deb8bd",
                    "sha256:4edd723bc543ed24c1e4ac83592cf45b742e0cce40ef7145a9701e42d01a4ad3"
                ]
            }
        },
        "38-run-20230502": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f38container",
                    "FGC=f38",
                    "FBR=f38",
                    "UDEV=off"
                ],
                "Cmd": null,
                "Image": "sha256:79aa25478631bcf650a26136a34330126d3a7f89a8a5d02c1e44b5f299e85380",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "OnBuild": null,
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-tx2",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                }
            },
            "container": "02c40259df11dd371252af691bdbcaed20b2f97d1d903ba5652394136ffd161e",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f38container",
                    "FGC=f38",
                    "FBR=f38",
                    "UDEV=off"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "[ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 38 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info"
                ],
                "Image": "sha256:79aa25478631bcf650a26136a34330126d3a7f89a8a5d02c1e44b5f299e85380",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-tx2",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                }
            },
            "created": "2023-05-08T17:16:51.953879956Z",
            "docker_version": "20.10.21",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:41.041894598Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f38container FGC=f38 FBR=f38",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-13T20:39:44.489634345Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:96676ec5bbfd4d36d5a997a41d25c86f6bf97dcf23c81dd81d1f76b5d2bda13b in / "
                },
                {
                    "created": "2023-03-13T20:39:46.261120513Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-04-02T01:12:02.835444454Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL io.balena.architecture=aarch64",
                    "empty_layer": true
                },
                {
                    "created": "2023-04-02T01:12:02.952877638Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "empty_layer": true
                },
                {
                    "created": "2023-04-02T01:12:03.101562049Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:24916d641d0ee761d2bebd935412ac2263719e3f48829dd83555470573235ed9 in /usr/bin "
                },
                {
                    "created": "2023-04-02T01:37:11.814833032Z",
                    "created_by": "/bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\""
                },
                {
                    "created": "2023-04-02T02:18:27.367306969Z",
                    "created_by": "/bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end"
                },
                {
                    "created": "2023-04-02T02:18:27.527583216Z",
                    "created_by": "/bin/sh -c #(nop)  ENV UDEV=off",
                    "empty_layer": true
                },
                {
                    "created": "2023-04-02T02:18:27.642120199Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:0e8e5e7fcb5ff4b4caac2552d3c5cbf829703430466832566297680a5b09c62b in /usr/bin/entry.sh "
                },
                {
                    "created": "2023-04-02T02:18:27.741368648Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:207cdc191bada5970fb21d3481971b4a391e6e52061bd584dc75404c36d01fcf in /usr/bin/balena-info "
                },
                {
                    "created": "2023-04-02T02:18:27.838228958Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:def7f364bfe93992865dfba2017def9a3c407b6cf8ac0233dcd0aabaa9e4b75b in /usr/bin/balena-idle "
                },
                {
                    "created": "2023-04-02T02:18:27.950884221Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-04-02T02:18:34.374999444Z",
                    "created_by": "/bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 38   && rm -rf test-os.sh",
                    "empty_layer": true
                },
                {
                    "created": "2023-04-02T02:18:34.944298604Z",
                    "created_by": "/bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 38 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info"
                },
                {
                    "created": "2023-05-08T16:52:36.911133465Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL io.balena.device-type=jetson-tx2",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-08T17:16:50.859471721Z",
                    "created_by": "/bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all"
                },
                {
                    "created": "2023-05-08T17:16:51.953879956Z",
                    "created_by": "/bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 38 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:38d07a70cba3a76ac94f88b59aa4dd55141e65478b300c7249d2686985c61626",
                    "sha256:1d59e4e611086dc811fe4a3c86b9ad72a41f53890b3e0e0ab7681337e53c7730",
                    "sha256:5aa1a95c32c0c895074366ece9ad2f9058758e785ee114c8c38a7c2b30f4be37",
                    "sha256:e6decbb9b9209f4adbda743690cd3f49b7c53420af6f6362605bea28b061bab2",
                    "sha256:67c5a7b96e67f5b14239685f35f0ea11d0ca38389053ec28ddd808156d5e50a9",
                    "sha256:62146fabd40ed3337a33b8ad2f6029886d342f9758ee74e1789bad62df88a10f",
                    "sha256:ae7bb7cc0f530a38d47ee24f8bf081ad8b2e94c7ee248b57dfd715a0a6e5f1a7",
                    "sha256:e8dfaccebf0f11eeaa116b1a118543b118434e0f7756127615c10b407b13921b",
                    "sha256:bb33baf23e780f2c95388d714633f8308118f9cdcf48fe5430b14119334fa011",
                    "sha256:010ca8de66f62e71edd316d661d73533f229bc6156406b35117dfa022d0b2934"
                ]
            }
        },
        "38-run-20230530": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f38container",
                    "FGC=f38",
                    "FBR=f38",
                    "UDEV=off"
                ],
                "Cmd": null,
                "Image": "sha256:163972f58c07e7a0e1895a8caf70a0769ca01c68c3774383f5d704686bdd083f",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "OnBuild": null,
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-tx2",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                }
            },
            "container": "83381000b5b8aedfd78017fcd619e87313d3fd52354393cbfa9fcf313e5c200a",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f38container",
                    "FGC=f38",
                    "FBR=f38",
                    "UDEV=off"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "[ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 38 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info"
                ],
                "Image": "sha256:163972f58c07e7a0e1895a8caf70a0769ca01c68c3774383f5d704686bdd083f",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-tx2",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                }
            },
            "created": "2023-06-07T07:05:36.020626306Z",
            "docker_version": "20.10.21",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:41.041894598Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f38container FGC=f38 FBR=f38",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-31T18:09:25.030031251Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:f63fd8cf8c85027eab56f35df952c656ccec605f66c2269dbcd6f4af631a647a in / "
                },
                {
                    "created": "2023-05-31T18:09:26.818746317Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-05T03:06:46.738227015Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL io.balena.architecture=aarch64",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-05T03:06:46.998201042Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-05T03:06:47.203727542Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:24916d641d0ee761d2bebd935412ac2263719e3f48829dd83555470573235ed9 in /usr/bin "
                },
                {
                    "created": "2023-06-05T03:32:10.792635056Z",
                    "created_by": "/bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\""
                },
                {
                    "created": "2023-06-05T03:32:14.850927812Z",
                    "created_by": "/bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end"
                },
                {
                    "created": "2023-06-05T03:32:15.060912508Z",
                    "created_by": "/bin/sh -c #(nop)  ENV UDEV=off",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-05T03:32:15.238785047Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:0e8e5e7fcb5ff4b4caac2552d3c5cbf829703430466832566297680a5b09c62b in /usr/bin/entry.sh "
                },
                {
                    "created": "2023-06-05T03:32:15.397105105Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:207cdc191bada5970fb21d3481971b4a391e6e52061bd584dc75404c36d01fcf in /usr/bin/balena-info "
                },
                {
                    "created": "2023-06-05T03:32:15.539724342Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:def7f364bfe93992865dfba2017def9a3c407b6cf8ac0233dcd0aabaa9e4b75b in /usr/bin/balena-idle "
                },
                {
                    "created": "2023-06-05T03:32:15.897346878Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-05T03:32:22.678609628Z",
                    "created_by": "/bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 38   && rm -rf test-os.sh",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-05T03:32:23.398275174Z",
                    "created_by": "/bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 38 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info"
                },
                {
                    "created": "2023-06-07T06:43:30.334565621Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL io.balena.device-type=jetson-tx2",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-07T07:05:35.042887518Z",
                    "created_by": "/bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all"
                },
                {
                    "created": "2023-06-07T07:05:36.020626306Z",
                    "created_by": "/bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 38 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:0fb83c39d9bfdce28d850a565400df5ea5460c94c56e14916c217c8ab5b76b13",
                    "sha256:7d462ee81163c53071c50f1f5f982c0ab6625ba7a1fcc270ce8317e35d5d6547",
                    "sha256:07acba7ab80e7b13458bd4acecd7e9e75b0fc869e4a22afd34262a9732871f4f",
                    "sha256:c2a63b925a0f36d8be87dbcf30c26b14760477605cbe1c8c87e4bd0d29442c92",
                    "sha256:9d41206a9f847551a93993d88155d2af9ce529fbad76821810ebb52e32b064ff",
                    "sha256:c18e0a1c3b593d3a3e75ed7d9fec60090170b86f539543f2c11a7eaeaf92a0a7",
                    "sha256:f4296a9158df6b29e09e1ad7ebcb134444a39dbc05b9e59afad078955cdd2efe",
                    "sha256:87ca5725d6b1299a552079b06546c0bdd4bc308a8949d6183ca457ae39059b80",
                    "sha256:cf3a70ff8a5e5dc7f6f32806bccfeb9a658849241669d20b293bd8393851a5ab",
                    "sha256:60ec001a0998826e4a6f6510aae291e5fd89fe459b183cbf0ddffd3ce0d4fa4f"
                ]
            }
        },
        "38-run-20230803": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f38container",
                    "FGC=f38",
                    "FBR=f38",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "generic-aarch64",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2023-08-05T00:05:07.638044271Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:41.041894598Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f38container FGC=f38 FBR=f38",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-04T18:41:08.203631801Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:50785841137152691ca6dd92200a0457ea325f9f4aa41c79dec9b254878dd456 in / "
                },
                {
                    "created": "2023-08-04T18:41:09.71120441Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-04T20:08:12.446295687Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-04T20:08:12.446295687Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-04T20:08:12.446295687Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-04T20:40:54.176544568Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-04T21:37:13.646947514Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-04T21:37:13.646947514Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-04T21:37:13.680397755Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-04T21:37:13.689851967Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-04T21:37:13.699491479Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-04T21:37:13.699491479Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-04T21:37:21.485455382Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 38   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-04T21:37:21.921751799Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 38 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-05T00:05:07.221200024Z",
                    "created_by": "LABEL io.balena.device-type=generic-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-05T00:05:07.221200024Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-05T00:05:07.638044271Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 38 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "moby.buildkit.buildinfo.v1": "eyJmcm9udGVuZCI6ImRvY2tlcmZpbGUudjAiLCJhdHRycyI6eyJmaWxlbmFtZSI6IkRvY2tlcmZpbGUifSwic291cmNlcyI6W3sidHlwZSI6ImRvY2tlci1pbWFnZSIsInJlZiI6ImRvY2tlci5pby9iYWxlbmFsaWIvYWFyY2g2NC1mZWRvcmE6MzgtcnVuIiwicGluIjoic2hhMjU2OjYxOGI2MzZmMzdmZGQ3ZGJlNjkwNjUwMTY1ZTMzZjAwMjdkYTFmNGY0MTgxZGM4ZWY1NTVjYTY5ODc4ZGIzNzUifV19",
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:babdc27db7e2fbe287cb3f027c67c3a67bd9a8b9d89b01cce2dc884785c9e431",
                    "sha256:816e2129ce92ccbc0211d10981b4baff0818853b67df05113dd544f2e65f14a2",
                    "sha256:15b28228915bed8c4a5288ac658c7c78cd1b2ca43a784ad65cb5b482047693b7",
                    "sha256:f34d1b151a04b12e15b034ba7dc8fc3794e62edee3c0913fcd4fcd29663d9165",
                    "sha256:3f77e6f2e918de72aa575938a4474bceb687fc0c09a9a8ed0861f72dedc8dd89",
                    "sha256:bac7b82a867d3b49cf8767282c82bd2bdd89df0517e28f2feddbc1e5077701f0",
                    "sha256:2b103807308b0d2d93bc64dc3bb6f5a010e7fc748142503e6101953dea48a373",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:d6f0c2e6fb62859eebb232c84491b9c1e61b91ce1de0acfae76db6a6caec0b47",
                    "sha256:7258785f0ca88988c3e0a868f6ffaecfb4ab3c2bab5d081f3cc26c18fc002bde",
                    "sha256:d1e03d54fca4f710b3729f033e0465d04c70f196a0a5b1e8d752d9ad081f585b"
                ]
            }
        },
        "38-run-20230829": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f38container",
                    "FGC=f38",
                    "FBR=f38",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "generic-aarch64",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2023-09-02T10:21:34.356778932Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:41.041894598Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f38container FGC=f38 FBR=f38",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-04T18:41:08.203631801Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:50785841137152691ca6dd92200a0457ea325f9f4aa41c79dec9b254878dd456 in / "
                },
                {
                    "created": "2023-08-04T18:41:09.71120441Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-02T06:18:07.258601269Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-02T06:18:07.258601269Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-02T06:18:07.258601269Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T06:52:04.127921308Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T06:52:05.563184518Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T06:52:05.563184518Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-02T06:52:05.582298375Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T06:52:05.588641894Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T06:52:05.623022197Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T06:52:05.623022197Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-02T06:52:13.448270089Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 38   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T06:52:13.768542081Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 38 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T10:21:34.074575281Z",
                    "created_by": "LABEL io.balena.device-type=generic-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-02T10:21:34.074575281Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T10:21:34.356778932Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 38 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:babdc27db7e2fbe287cb3f027c67c3a67bd9a8b9d89b01cce2dc884785c9e431",
                    "sha256:bff341f45a43ec79ef29154d378d964bba8f03d0c501f7c88be9e530010bebcd",
                    "sha256:1d7db161bd37873105f3d898f7b6b15a2a1a4dd3b0ae64740572b04f30096fd6",
                    "sha256:9dad4a69b8bc36340898ef0fad88d021e2fad83131960271e00c1fee8683bc02",
                    "sha256:92949006605b266e437d2de3cb10fd174267231753b998f0979646c933e3da74",
                    "sha256:83bc56456d35017c5a481b9248bade0ea23318c6ed97c30fd35f4d715cefd89f",
                    "sha256:22066a20505ceab3ccd8a8d8f84d3f946b852b273fa89a1a4efcc17c394cdae6",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:99dd61fbdb8e8da8ff4a00cff3ac3147bd81c23a8a7b339f6f232493e7155de9",
                    "sha256:87aba87958e24e9c5a11f58aa441253942788dbfc47e9bbc9f0f2410ed810773",
                    "sha256:f70cff280cfa61c1b2dc09a1ab99a038cfa83699f4b6acbbde535e34aeb92c76"
                ]
            }
        },
        "38-run-20230904": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f38container",
                    "FGC=f38",
                    "FBR=f38",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "generic-aarch64",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2023-09-09T10:09:41.983880406Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:41.041894598Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f38container FGC=f38 FBR=f38",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-04T18:41:08.203631801Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:50785841137152691ca6dd92200a0457ea325f9f4aa41c79dec9b254878dd456 in / "
                },
                {
                    "created": "2023-08-04T18:41:09.71120441Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T03:50:47.966318693Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T03:50:47.966318693Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T03:50:47.966318693Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:22:05.312577476Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T07:38:47.339540805Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T07:38:47.339540805Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T07:38:47.36437758Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T07:38:47.378289214Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T07:38:47.400334302Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T07:38:47.400334302Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T07:38:54.288974783Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 38   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T07:38:54.706047119Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 38 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T10:09:41.564616624Z",
                    "created_by": "LABEL io.balena.device-type=generic-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T10:09:41.564616624Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T10:09:41.983880406Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 38 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:babdc27db7e2fbe287cb3f027c67c3a67bd9a8b9d89b01cce2dc884785c9e431",
                    "sha256:a0731afcd2c8d5368a134e5790c454b64b22976c083086a24640d9ef6aa0075e",
                    "sha256:420cc142d6ee365450904d65a94be7051adeebac2a3b9a384ca145c9a8a28029",
                    "sha256:e1319cc780fd12b1b3d63d3f7a138b3edf39a1ae6a7c1670656acf9b60c1d0b9",
                    "sha256:1522c5e1b65e43da1802a19f2a02344ee236f3e391dce20632f8c5c30d00929c",
                    "sha256:d745b7003041d17e1c4fababe413658716518d7d23a4cadf0daa8208ca8115c5",
                    "sha256:b8bfddca6ff0c7ee1788d5dcc5a32bb7820376376177ee9cba1b2a2c313e7507",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:d4fe2ae2c5a66072049f2207f21240b0a0c1328f04423f8886e86335ddd47abc",
                    "sha256:ce0e290c70b3abf1e052ae00d45924e3573ffbad1f178508d6827fd000da11cc",
                    "sha256:48a207d9ff1ff5f525c13f9f56fc599136851a7e32cd67bfb50a650bc9a8ab52"
                ]
            }
        },
        "38-run-20230911": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f38container",
                    "FGC=f38",
                    "FBR=f38",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "iot-gate-imx8plus",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2023-09-12T03:09:37.257265688Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:41.041894598Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f38container FGC=f38 FBR=f38",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-04T18:41:08.203631801Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:50785841137152691ca6dd92200a0457ea325f9f4aa41c79dec9b254878dd456 in / "
                },
                {
                    "created": "2023-08-04T18:41:09.71120441Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T03:50:47.966318693Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T03:50:47.966318693Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T03:50:47.966318693Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:22:05.312577476Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T07:38:47.339540805Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T07:38:47.339540805Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T07:38:47.36437758Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T07:38:47.378289214Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T07:38:47.400334302Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T07:38:47.400334302Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T07:38:54.288974783Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 38   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T07:38:54.706047119Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 38 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-12T03:09:37.120170073Z",
                    "created_by": "LABEL io.balena.device-type=iot-gate-imx8plus",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-12T03:09:37.120170073Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-12T03:09:37.257265688Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 38 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:babdc27db7e2fbe287cb3f027c67c3a67bd9a8b9d89b01cce2dc884785c9e431",
                    "sha256:a0731afcd2c8d5368a134e5790c454b64b22976c083086a24640d9ef6aa0075e",
                    "sha256:420cc142d6ee365450904d65a94be7051adeebac2a3b9a384ca145c9a8a28029",
                    "sha256:e1319cc780fd12b1b3d63d3f7a138b3edf39a1ae6a7c1670656acf9b60c1d0b9",
                    "sha256:1522c5e1b65e43da1802a19f2a02344ee236f3e391dce20632f8c5c30d00929c",
                    "sha256:d745b7003041d17e1c4fababe413658716518d7d23a4cadf0daa8208ca8115c5",
                    "sha256:b8bfddca6ff0c7ee1788d5dcc5a32bb7820376376177ee9cba1b2a2c313e7507",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:d4fe2ae2c5a66072049f2207f21240b0a0c1328f04423f8886e86335ddd47abc",
                    "sha256:7037f418447efe35251b36baf4c3f69eecedffe359ed492bf70c11a633954ab7",
                    "sha256:22ce69b9fb2926e78c175e40756928386857a10db410cb1b0f7bad1f07e2ab67"
                ]
            }
        },
        "38-run-20231103": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f38container",
                    "FGC=f38",
                    "FBR=f38",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "iot-gate-imx8plus",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2023-11-04T17:14:52.977389535Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:41.041894598Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f38container FGC=f38 FBR=f38",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-06T18:43:02.449416883Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:b0b9f1fa4d90583e2728f8359f6d2f98198fa564a48a493ac3938082a4180724 in / "
                },
                {
                    "created": "2023-10-06T18:43:04.271082122Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-04T14:05:44.131779502Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-04T14:05:44.131779502Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-04T14:05:44.131779502Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T14:43:55.158323453Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T14:43:57.315900893Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T14:43:57.315900893Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-04T14:43:57.325120653Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T14:43:57.333974114Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T14:43:57.352409034Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T14:43:57.352409034Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-04T14:44:05.155422355Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 38   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T14:44:05.359127743Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 38 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T17:14:52.794031427Z",
                    "created_by": "LABEL io.balena.device-type=iot-gate-imx8plus",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-04T17:14:52.794031427Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T17:14:52.977389535Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 38 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:f1d4814332771f9e7ca854a6a297b5c75ceff99a0ae64bd8822337e826d49073",
                    "sha256:0bccca922a892d5aa4c088c02038026d68fafb3a7f614fc1c0db995cf1890779",
                    "sha256:2b7cd3c685926706b0199140fea791ac7753518db92138766ccc4bc9827f3d68",
                    "sha256:5e2ed28829eda26e065b3f9a78ad0f47edcf6d743edd5bbc5c2fc730546a9e47",
                    "sha256:c15dcfd3685089cc9c439fb2115f9255c4e4d3ad885e9cad9901066740f79ca9",
                    "sha256:8d6a9b04859afa4fc18d56950955c986eab6de919bfa6312935dd81af5301335",
                    "sha256:448330a20f6a3fba2984503bed4c07d0e41bafad7ab960f0a9386721fd3b3a1d",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:717bf92c44b0be0acbb18b42508625580b2ad0f540b00e8e19e11f9f5bec025d",
                    "sha256:4b4343f1713e56df5ff7f72c52b0a365593c36f6eb58177a4be949a2b3fcc819",
                    "sha256:bf37d889f9e3f74e4ba3a22d3a74397a2657b086b530c8b1a8762a36bea8671b"
                ]
            }
        },
        "38-run-20231106": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f38container",
                    "FGC=f38",
                    "FBR=f38",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "iot-gate-imx8plus",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2023-11-06T12:30:18.36527627Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:41.041894598Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f38container FGC=f38 FBR=f38",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-06T18:43:02.449416883Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:b0b9f1fa4d90583e2728f8359f6d2f98198fa564a48a493ac3938082a4180724 in / "
                },
                {
                    "created": "2023-10-06T18:43:04.271082122Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T09:12:24.373696779Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T09:12:24.373696779Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T09:12:24.373696779Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T09:40:03.866592528Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T09:40:05.05480729Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T09:40:05.05480729Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T09:40:05.067525056Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T09:40:05.080368698Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T09:40:05.09192886Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T09:40:05.09192886Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T09:40:10.682476779Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 38   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T09:40:10.854158569Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 38 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T12:30:18.250664283Z",
                    "created_by": "LABEL io.balena.device-type=iot-gate-imx8plus",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T12:30:18.250664283Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T12:30:18.36527627Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 38 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:f1d4814332771f9e7ca854a6a297b5c75ceff99a0ae64bd8822337e826d49073",
                    "sha256:5a48b2864c1414aa1920c0b0810a38ec32acb5ca14e2de09d3dfe54f1994b7ab",
                    "sha256:7d025699647d357035320f6733ddce0b0fb0c3833cadebad2b3682451308e93b",
                    "sha256:27ca0065e4f4805a604acc7bc4ad9df0047808f3306f957b1a1fcc66aa4f9b1d",
                    "sha256:128e2a62004cfc82684ba2679f14a1e0b3bc7738f8a994c36eae30e0d28a7893",
                    "sha256:45ec6c560d5a90df5eba1bff84a4a8ca5e63aaba7e85e2ba1369e862abcc64d6",
                    "sha256:efc86bb1982e1b3392b56a19451122d7402088ffbbbd4e02f65020a56fa4c32f",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:973bbd2506ec0a26704cbf8153609044757818fdde2b452543ec1793c432bd62",
                    "sha256:473b26b92f2df842fea6fa56ae66c416fc36fa18c1d7f8310fd7754c0d7abbd6",
                    "sha256:f27100f1ac29a57ecf73715806b4520cab457f31fe29d4331f98c2d1eb8b68fd"
                ]
            }
        },
        "38-run-20231127": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f38container",
                    "FGC=f38",
                    "FBR=f38",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "iot-gate-imx8plus",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2023-12-01T13:12:59.598149413Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:41.041894598Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f38container FGC=f38 FBR=f38",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-29T00:47:11.412948906Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:bf926d1cd75117e6300e5b83c1a9f3dc935a0a4a1afd183c94c5ab427119d058 in / "
                },
                {
                    "created": "2023-11-29T00:47:13.088493574Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T10:52:03.115117234Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T10:52:03.115117234Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T10:52:03.115117234Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T11:16:47.728963247Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T11:16:48.486024995Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T11:16:48.486024995Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T11:16:48.498276188Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T11:16:48.512658091Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T11:16:48.524349935Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T11:16:48.524349935Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T11:16:54.156435504Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 38   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T11:16:54.314713811Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 38 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T13:12:59.465736347Z",
                    "created_by": "LABEL io.balena.device-type=iot-gate-imx8plus",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T13:12:59.465736347Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T13:12:59.598149413Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 38 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:35f4bab08b96e91cc0f7f401be5805fb037bd6e3d4eb1af238340706b9cd0a3e",
                    "sha256:9051a15d589df97279221a4efec80a8450c6bc2058ae17721276d555326b33fe",
                    "sha256:f26c2122cb7d826231a78504bf73a326017233b52ecb911e6624628eaddfb0be",
                    "sha256:ef43e4d211352a22a0c10cc03ef2d365126609597085c57b213d34c0c04179df",
                    "sha256:2d3f59edb238952cc50ac74c46d5e6485d475fb47829eed97ab1448816b959ba",
                    "sha256:a31db5a21c41fbc40c8fa7ba30c8bbb8e906931e477d2d358f6dca40b8f358b3",
                    "sha256:aa10d6eeaa52364861226a12826a3a2ea676c211206d4f3a2680e0ba05d9f33f",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:7d348d824235181cb9293dbb5802653c13f056cfd31f764283e02da722b92a9e",
                    "sha256:d9cefbccfe12614f1eba66ab3a317fae3dd8792956c9a2c20714dc9ebfd0bb2b",
                    "sha256:5c2e97297d2cee46db1889a279ae4f4957eda4b8ed665598af65cafd606df55c"
                ]
            }
        },
        "38-run-20231204": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f38container",
                    "FGC=f38",
                    "FBR=f38",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "iot-gate-imx8plus",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2023-12-06T23:01:04.015373489Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:41.041894598Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f38container FGC=f38 FBR=f38",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-29T00:47:11.412948906Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:bf926d1cd75117e6300e5b83c1a9f3dc935a0a4a1afd183c94c5ab427119d058 in / "
                },
                {
                    "created": "2023-11-29T00:47:13.088493574Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T20:40:27.571890331Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T20:40:27.571890331Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T20:40:27.571890331Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T21:05:52.460646066Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T21:05:53.697602634Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T21:05:53.697602634Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T21:05:53.72907232Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T21:05:53.73766608Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T21:05:53.784935919Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T21:05:53.784935919Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T21:05:59.464238317Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 38   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T21:05:59.633985585Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 38 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T23:01:03.877492792Z",
                    "created_by": "LABEL io.balena.device-type=iot-gate-imx8plus",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T23:01:03.877492792Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T23:01:04.015373489Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 38 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:35f4bab08b96e91cc0f7f401be5805fb037bd6e3d4eb1af238340706b9cd0a3e",
                    "sha256:7af9d3e66dc47c88df168c57e6bbf3bf441b84f864d9fd704e0889ac77dd645b",
                    "sha256:b52587f45451994117f2d4e9754f102fef88b048deea62290f382798927cfbc1",
                    "sha256:7bf81e0ac98a4ea7f63a0fce6df544ff53238af29c3a6212866bcbaa5d7f9649",
                    "sha256:2f6ef3c9e2791170ecac3c21ceaf5dbcd0aaa56ca679f701efde7ccd5ede33d6",
                    "sha256:4a5ec467e104c8b720b6bb9d044b578693e795c08eb1119417b0e73ea4712df5",
                    "sha256:36f1d93758ea9464369624e538df0c4941f14a8c6a009b3556534d8981696ae0",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:1a75df63308478d0e6a9a2dad62406133ce2fdb0cda42ceae25fc18101f203f0",
                    "sha256:c4959aa3765c3895ce5f45b1cfb5b685da8c6a88cf69ca14d16d7e9ac288c211",
                    "sha256:f009d871c6fb1bca710b7c861a1c98a15fc92c05b48ef03e530003f6005dcb4d"
                ]
            }
        },
        "38-run-20240205": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f38container",
                    "FGC=f38",
                    "FBR=f38",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "iot-gate-imx8plus",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2024-02-05T02:52:38.712935938Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:41.041894598Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f38container FGC=f38 FBR=f38",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-29T00:47:11.412948906Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:bf926d1cd75117e6300e5b83c1a9f3dc935a0a4a1afd183c94c5ab427119d058 in / "
                },
                {
                    "created": "2023-11-29T00:47:13.088493574Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-05T00:26:05.223615023Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-05T00:26:05.223615023Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-05T00:26:05.223615023Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T00:52:22.02695632Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T00:52:22.769786602Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T00:52:22.769786602Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-05T00:52:22.781178587Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T00:52:22.808356935Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T00:52:22.817879552Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T00:52:22.817879552Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-05T00:52:28.311630714Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 38   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T00:52:28.461665008Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 38 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T02:52:38.592053543Z",
                    "created_by": "LABEL io.balena.device-type=iot-gate-imx8plus",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-05T02:52:38.592053543Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T02:52:38.712935938Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 38 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:35f4bab08b96e91cc0f7f401be5805fb037bd6e3d4eb1af238340706b9cd0a3e",
                    "sha256:9a0bea4247baec631951f1c12c7fc5e31aef00f9f94fa6500789dd41065dab08",
                    "sha256:8ea115299209cadf8dc81735c2e245e6e1c628e3e6486326a42d431e000ad1d9",
                    "sha256:81ffb1609a528e20e002ea96acab5a3f2db491584d03f99adb651ba5d38707b3",
                    "sha256:dd667c60ecc52fbdc7e0e476262643b15f185497cb053f94c29b2ea0f20d4532",
                    "sha256:9e0a1177327862e9e8614499429cf719307afc6deb4d6bd9d73f1339d5113ab0",
                    "sha256:6cbd6b5c83f0e41ed8ecedf532eae321661bb02d09a80d622a2de713dc3f1998",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:492bf5ced8bd1f23c728665cd29dba12cd7877883ff04c3620df7b90d4f32e63",
                    "sha256:5632c865f51714f90952236d9c6e4aaba1535db56ad47592fc774b8c10a5a30c",
                    "sha256:5dfdd05b8c4a42840a52bc8b2964ae9109281f524b37d0d0cab6f60b5ccc3fc0"
                ]
            }
        },
        "38-run-20240227": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f38container",
                    "FGC=f38",
                    "FBR=f38",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "iot-gate-imx8plus",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2024-03-01T23:23:33.035820069Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:41.041894598Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f38container FGC=f38 FBR=f38",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-20T23:39:45.493041732Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:50f76cb2e29e780d80bbc023f0bbb552e413a0191d6fab7fedce9f032d7c55ec in / "
                },
                {
                    "created": "2024-02-20T23:39:46.885294079Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T20:50:11.174745295Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T20:50:11.174745295Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T20:50:11.174745295Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:17:06.032783443Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:17:06.794960795Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:17:06.794960795Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T21:17:06.805447066Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:17:06.814310203Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:17:06.84911684Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:17:06.84911684Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T21:17:12.388615628Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 38   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:17:12.526606922Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 38 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T23:23:32.918257051Z",
                    "created_by": "LABEL io.balena.device-type=iot-gate-imx8plus",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T23:23:32.918257051Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T23:23:33.035820069Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 38 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:d9224901c4254002370ad869c45d487779ce52e983554fc3c651d1283143025c",
                    "sha256:80960cca51c97684b3a9cec28adb8fae3034898f76cc4de09b5756e99bab5f4d",
                    "sha256:ebcf328ef783f06a08c6855ef399097abd7849454cb754d92656f855c8e72f7b",
                    "sha256:ed8c17efb3a45a5c116d8b29102ee94853c6c7d78b68917765166a90efdbe456",
                    "sha256:4c2fcb2aa7c87c35350e78cfb39cc8d48e14a39322897c5816cbba6875385aeb",
                    "sha256:9fb9429b38105cbccdabce561ae817ae56aa3fbe6943dabf073a3e077a0a4726",
                    "sha256:5e5d3ed39b0bae147112243675b89add16961c507d1a96d8c12543619f3631ab",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:9659c666f25fc0ca79916fc32cd405a174b567f47816d637061022910382150c",
                    "sha256:e9ac160b25605726b93187e7c9abef534e8f132fb39d8de8e5f0ac481925b0c9",
                    "sha256:af86a6b716114770667b447a1bf31a0eb8151187e0c1d0860c57b0746f2f4e78"
                ]
            }
        },
        "38-run-20240304": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f38container",
                    "FGC=f38",
                    "FBR=f38",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "iot-gate-imx8plus",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2024-03-05T10:55:56.33116885Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:41.041894598Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f38container FGC=f38 FBR=f38",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-20T23:39:45.493041732Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:50f76cb2e29e780d80bbc023f0bbb552e413a0191d6fab7fedce9f032d7c55ec in / "
                },
                {
                    "created": "2024-02-20T23:39:46.885294079Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T08:24:19.415187376Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T08:24:19.415187376Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T08:24:19.415187376Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T08:56:00.912192201Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T08:56:02.006895963Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T08:56:02.006895963Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T08:56:02.016355085Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T08:56:02.026794369Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T08:56:02.060541718Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T08:56:02.060541718Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T08:56:07.655736223Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 38   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T08:56:07.807291644Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 38 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T10:55:56.207501728Z",
                    "created_by": "LABEL io.balena.device-type=iot-gate-imx8plus",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T10:55:56.207501728Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T10:55:56.33116885Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 38 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:d9224901c4254002370ad869c45d487779ce52e983554fc3c651d1283143025c",
                    "sha256:ea79a218147f67e84cc5ebc832b9460a07c042175b9c6c064e2b46cc1dc1a3a4",
                    "sha256:30e3fbd8e717f3b8a564afd4ee36b43ec6b6d86b01c9f556f1c1569211d3f246",
                    "sha256:4f6c240ccf870cc5e7845a32d4625252e557b98a1ca959ee903a50fae49f5292",
                    "sha256:52333195f351cb7f05d374c425fd2d08bfc9a7b292673ba1bc72b65cfc337fda",
                    "sha256:8fa793cc56273ff76f01fe7a2fa04001b8a835021eb98a84aac458c70142805b",
                    "sha256:2d3cbcbb63899f70da15473b7e05cdcb41b7bb7057040d80f9a5a063821b0133",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:5bb1ea72b4125dbbfb8204982aadcd3846bffd331433fe0e24dc13c017b2badd",
                    "sha256:6d009b482cd69479a45fca8d194270090450935f216e1bc1d0a0c91fe359458f",
                    "sha256:81f25d0b1cf9d02ae3897b2067c5206ba8f125ce9398608d0b64cd47615b49d6"
                ]
            }
        },
        "38-run-20240401": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f38container",
                    "FGC=f38",
                    "FBR=f38",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "iot-gate-imx8plus",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                }
            },
            "created": "2024-04-01T23:54:43.734542568Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:41.041894598Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f38container FGC=f38 FBR=f38",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-20T23:39:45.493041732Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:50f76cb2e29e780d80bbc023f0bbb552e413a0191d6fab7fedce9f032d7c55ec in / "
                },
                {
                    "created": "2024-02-20T23:39:46.885294079Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T21:26:30.063655578Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T21:26:30.063655578Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T21:26:30.063655578Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T21:53:18.953503933Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T21:53:19.727911729Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T21:53:19.727911729Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T21:53:19.739193593Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T21:53:19.779094073Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T21:53:19.789079698Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T21:53:19.789079698Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T21:53:25.296074915Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 38   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T21:53:25.441838461Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 38 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T23:54:43.619184771Z",
                    "created_by": "LABEL io.balena.device-type=iot-gate-imx8plus",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T23:54:43.619184771Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T23:54:43.734542568Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 38 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:d9224901c4254002370ad869c45d487779ce52e983554fc3c651d1283143025c",
                    "sha256:b20e668d1a141e0d94ea1512d98fa306aef98b2f4894ff4310a4b368ecae46f1",
                    "sha256:8d53a1ae6a6876501ddfee3882f044e95cf4bbb5c5ee113c33b6a630df50f37d",
                    "sha256:9b2f37627416daf809729f9b7b129b588d6d27b685e6a6f70b7efd53604d8c77",
                    "sha256:58e2ad029c294aaf061847a738e97e4ee92cfcc02568fde36d2c42014b29bc2a",
                    "sha256:0370b041d7751b62b4759a10fd68fe5d529500000af334c432dda8ff0e6bdc19",
                    "sha256:4fda59f91c1283cdc0171b9d775c4c59aed809bf6eb8969c1dab000deccefbfb",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:0fbb16bb412f29fbd6bf22b0270c66acce1dfff1273a68ab07e7a24a347da177",
                    "sha256:ae1605776532877cb02117bb3fd034814b20d1290260cf955e77164f1e3e7ca9",
                    "sha256:a97ddc5f4deacb6b8313ff850a33794954f29e1cd92d603a47ff8e7d1c045802"
                ]
            }
        },
        "38-run-20240408": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f38container",
                    "FGC=f38",
                    "FBR=f38",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "iot-gate-imx8plus",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                }
            },
            "created": "2024-04-09T20:09:48.29400058Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:41.041894598Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f38container FGC=f38 FBR=f38",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-20T23:39:45.493041732Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:50f76cb2e29e780d80bbc023f0bbb552e413a0191d6fab7fedce9f032d7c55ec in / "
                },
                {
                    "created": "2024-02-20T23:39:46.885294079Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:45.909708183Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:45.909708183Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:45.909708183Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:02:01.590555751Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:02:02.351225239Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:02:02.351225239Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T14:02:02.360749405Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:02:02.369270986Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:02:02.405864798Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:02:02.405864798Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T14:02:07.899966098Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 38   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:02:08.045611622Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 38 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T20:09:48.179306708Z",
                    "created_by": "LABEL io.balena.device-type=iot-gate-imx8plus",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T20:09:48.179306708Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T20:09:48.29400058Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 38 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:d9224901c4254002370ad869c45d487779ce52e983554fc3c651d1283143025c",
                    "sha256:ebcf910b3bd968c69298ac824583cd1528883f4a382541565a04a486c658c20b",
                    "sha256:c24ea502f2f1577b4278e978c5db52a3b01de7a26e6f4724887ceeba23daeba2",
                    "sha256:793d820a1dccf3d247ece3546ff7db37debcbeed40e828cb75bb4cb13b7aebab",
                    "sha256:553772b6df64fc5ba696a001383c6ffd5b481fb5f850cde63456cadf5cca043f",
                    "sha256:f4ac866915cc972c7c4d1726ddc5effabb4cc90debfacebc71ef6f4541bf63ef",
                    "sha256:8e85cb2120afad8b568aebbb01c8c1d2a29b17f9b8f160299e7d4c9843c607d2",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:2579e5f7d4e51b9a0d613c0c3be4660311f4b1324ea68a59aa3c2a222a1785eb",
                    "sha256:ee0087718918541859c6c86c33449cd37d574fb86f23c737cf3eed6820224594",
                    "sha256:8fdd1282d90bc8fa9fa23debfcc12064506e060399415864d91b5cf2a28258e9"
                ]
            }
        },
        "38-run-20240429": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f38container",
                    "FGC=f38",
                    "FBR=f38",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "iot-gate-imx8plus",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                }
            },
            "created": "2024-05-06T10:46:35.305820329Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:41.041894598Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f38container FGC=f38 FBR=f38",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-20T23:39:45.493041732Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:50f76cb2e29e780d80bbc023f0bbb552e413a0191d6fab7fedce9f032d7c55ec in / "
                },
                {
                    "created": "2024-02-20T23:39:46.885294079Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:45.909708183Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:45.909708183Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:45.909708183Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:02:01.590555751Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:02:02.351225239Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:02:02.351225239Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T14:02:02.360749405Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:02:02.369270986Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:02:02.405864798Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:02:02.405864798Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T14:02:07.899966098Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 38   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:02:08.045611622Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 38 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T10:46:35.185525692Z",
                    "created_by": "LABEL io.balena.device-type=iot-gate-imx8plus",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T10:46:35.185525692Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T10:46:35.305820329Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 38 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:d9224901c4254002370ad869c45d487779ce52e983554fc3c651d1283143025c",
                    "sha256:ebcf910b3bd968c69298ac824583cd1528883f4a382541565a04a486c658c20b",
                    "sha256:c24ea502f2f1577b4278e978c5db52a3b01de7a26e6f4724887ceeba23daeba2",
                    "sha256:793d820a1dccf3d247ece3546ff7db37debcbeed40e828cb75bb4cb13b7aebab",
                    "sha256:553772b6df64fc5ba696a001383c6ffd5b481fb5f850cde63456cadf5cca043f",
                    "sha256:f4ac866915cc972c7c4d1726ddc5effabb4cc90debfacebc71ef6f4541bf63ef",
                    "sha256:8e85cb2120afad8b568aebbb01c8c1d2a29b17f9b8f160299e7d4c9843c607d2",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:2579e5f7d4e51b9a0d613c0c3be4660311f4b1324ea68a59aa3c2a222a1785eb",
                    "sha256:92043577b9017c077fccc7660275ff511e480e0e7638f589157bf993a0deb8bd",
                    "sha256:4edd723bc543ed24c1e4ac83592cf45b742e0cce40ef7145a9701e42d01a4ad3"
                ]
            }
        },
        "build": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "iot-gate-imx8plus",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                }
            },
            "created": "2024-05-06T10:39:41.599323029Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:31.895761202Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-29T00:47:03.16713451Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:270e11b4c18af1c1efb8b8579be7fbda5255d56dd69f83ef7d933cfd2c685e5c in / "
                },
                {
                    "created": "2023-11-29T00:47:04.125919026Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T09:28:43.57977131Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T09:28:43.57977131Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T09:28:43.57977131Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T09:47:19.941756159Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T10:20:57.000511545Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-clients \t\tsubversion \t\tautoconf \t\tautomake \t\tbzip2-devel \t\tglib2-devel \t\tgcc \t\tgcc-c++ \t\tImageMagick \t\tImageMagick-devel \t\tkernel-devel \t\tlibcurl-devel \t\tlibevent-devel \t\tlibffi-devel \t\tlibjpeg-devel \t\tlibsqlite3x-devel \t\tlibxml2-devel \t\tlibxslt-devel \t\tlibyaml-devel \t\tmysql-devel \t\tmake \t\tncurses-devel \t\topenssl-devel \t\tpostgresql-devel \t\treadline-devel \t\tsqlite-devel \t\tzlib-devel \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T10:20:58.118390256Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T10:20:58.118390256Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T10:20:58.12798187Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T10:20:58.136722317Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T10:20:58.164403522Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T10:20:58.164403522Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T10:21:01.984279759Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T10:21:02.133999332Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T10:39:41.484219958Z",
                    "created_by": "LABEL io.balena.device-type=iot-gate-imx8plus",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T10:39:41.484219958Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T10:39:41.599323029Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:22de68abb450063be7e40efd22fd3b41bec469efafdd95e25c65998648e52b28",
                    "sha256:40252cde73a60fe319f0dc295c7b1e421631974cfbe16656b81f7c86e773254e",
                    "sha256:4a4de46c8a70d5743384977bb42ebacdec5e3cb5490677a398f1d36366084aab",
                    "sha256:1523c4d5a73b8f8409b03635be1be78f6592c3915fd459908ffe5c04fb7ca684",
                    "sha256:3165ae98a25560d143d61c6f8a3cc9b4f73d0c009bfd9de33cefc4747c481229",
                    "sha256:802383c11ce70505808614d078d961ddc3cfaf46a58ac795624520a44e2a7860",
                    "sha256:0590d31cf7630143e0d0e5677bb4407b0d1c0b49a56ef3a87a860603dcea1282",
                    "sha256:6f5ffd7cbb1f8862606014326bb38c35022c8eb43d2a0aff0af32878db49dbdc",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:8c0b4113e6a87b2271a715a924b205a5c9534f5b51c4f3d05b39a48bb6ad75be",
                    "sha256:8758cb7509bfd7224c0a5331ba8bc629479d9e98ab727b0f5fb7261197212daa",
                    "sha256:c39cd3a2ce47e0850a8f29b00283fbc12ffda9edc18a0a64ab0368a4352c82a0"
                ]
            }
        },
        "build-20230502": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Cmd": null,
                "Image": "sha256:4a37ca661516a04bd998efca4b98546e8251a303a8e28dc0e5a5d633427fce40",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "OnBuild": null,
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-tx2",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                }
            },
            "container": "53b7ed911177585f7fd0de6488f09d19424bbde11b744fc6308a6f0e4392c17f",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "[ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info"
                ],
                "Image": "sha256:4a37ca661516a04bd998efca4b98546e8251a303a8e28dc0e5a5d633427fce40",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-tx2",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                }
            },
            "created": "2023-05-08T15:51:00.41171855Z",
            "docker_version": "20.10.21",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:31.895761202Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-13T20:39:36.516425489Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:8f1c4c2e60330243e66c553f2377951b11c09601b874f6c778e90ff74c6dc376 in / "
                },
                {
                    "created": "2023-03-13T20:39:37.717809378Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-04-02T00:15:42.184062394Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL io.balena.architecture=aarch64",
                    "empty_layer": true
                },
                {
                    "created": "2023-04-02T00:15:42.325999277Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "empty_layer": true
                },
                {
                    "created": "2023-04-02T00:15:42.488342363Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:24916d641d0ee761d2bebd935412ac2263719e3f48829dd83555470573235ed9 in /usr/bin "
                },
                {
                    "created": "2023-04-02T00:34:27.312050054Z",
                    "created_by": "/bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\""
                },
                {
                    "created": "2023-04-02T01:07:59.036160048Z",
                    "created_by": "/bin/sh -c dnf install -y \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-clients \t\tsubversion \t\tautoconf \t\tautomake \t\tbzip2-devel \t\tglib2-devel \t\tgcc \t\tgcc-c++ \t\tImageMagick \t\tImageMagick-devel \t\tkernel-devel \t\tlibcurl-devel \t\tlibevent-devel \t\tlibffi-devel \t\tlibjpeg-devel \t\tlibsqlite3x-devel \t\tlibxml2-devel \t\tlibxslt-devel \t\tlibyaml-devel \t\tmysql-devel \t\tmake \t\tncurses-devel \t\topenssl-devel \t\tpostgresql-devel \t\treadline-devel \t\tsqlite-devel \t\tzlib-devel \t&& dnf clean all"
                },
                {
                    "created": "2023-04-02T01:08:09.841785321Z",
                    "created_by": "/bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end"
                },
                {
                    "created": "2023-04-02T01:08:09.983966766Z",
                    "created_by": "/bin/sh -c #(nop)  ENV UDEV=off",
                    "empty_layer": true
                },
                {
                    "created": "2023-04-02T01:08:10.081807313Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:0e8e5e7fcb5ff4b4caac2552d3c5cbf829703430466832566297680a5b09c62b in /usr/bin/entry.sh "
                },
                {
                    "created": "2023-04-02T01:08:10.176885214Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:207cdc191bada5970fb21d3481971b4a391e6e52061bd584dc75404c36d01fcf in /usr/bin/balena-info "
                },
                {
                    "created": "2023-04-02T01:08:10.273795214Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:def7f364bfe93992865dfba2017def9a3c407b6cf8ac0233dcd0aabaa9e4b75b in /usr/bin/balena-idle "
                },
                {
                    "created": "2023-04-02T01:08:10.401435688Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-04-02T01:08:14.892977057Z",
                    "created_by": "/bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh",
                    "empty_layer": true
                },
                {
                    "created": "2023-04-02T01:08:15.40879778Z",
                    "created_by": "/bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info"
                },
                {
                    "created": "2023-05-08T15:35:27.507084484Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL io.balena.device-type=jetson-tx2",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-08T15:50:59.459507433Z",
                    "created_by": "/bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all"
                },
                {
                    "created": "2023-05-08T15:51:00.41171855Z",
                    "created_by": "/bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:6fa23825e7d36de818dd635e6ddcfb1a63b42c8d2a2ebe9dc929a2d8e763fe3f",
                    "sha256:07b0d4da5e04230bb8db9790c1ff3923ecfeaf3f1e9a415e2aab47b5a9a3c0f1",
                    "sha256:48150357fa88a44cf5998c4a5b7e13f8107d4a0b881d13e4aca84aebe66babea",
                    "sha256:b28e107bb5b4423beb3e021a3ae8de02ae8a75b11e7962eac2da09ba21abcd3a",
                    "sha256:9b5d17a3d0fd1ca6d1caf3d580dbd9603df35d8e2f1c7278ee7b81f65cce5c1c",
                    "sha256:9e1d1e33076c40c4ec0061c1d3b125f325de44c8cc53c00d77576c780cbd036f",
                    "sha256:544352c4f6d11ee37fb7da9c382d01ed1abd016fbb6384c22680db5394854077",
                    "sha256:26dd29c6aeafa7f795decab7fb29f5c7a71e189af30eeb2d1821285b35f72e7b",
                    "sha256:143772aaa266cd365f4c2df12f34fdff9c8f9f314a57b150304e93f85165db5b",
                    "sha256:4e04a01a884b71a770542e60d0484d1e65e30dedef8f4fd905119a029eee38cf",
                    "sha256:5fd9297a2a9956843ca24ebf34c035b9588ad63706d317a1899b0208dfe66868"
                ]
            }
        },
        "build-20230530": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Cmd": null,
                "Image": "sha256:686d9b56ae56c466d4b50b94f4194bda18f747f1b44590db86101ebf66e6e66f",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "OnBuild": null,
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-tx2",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                }
            },
            "container": "421a8d20f48a90594a00d553e4c4ce1a1e5774bb17965f3831dbf8ef33818345",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "[ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info"
                ],
                "Image": "sha256:686d9b56ae56c466d4b50b94f4194bda18f747f1b44590db86101ebf66e6e66f",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-tx2",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                }
            },
            "created": "2023-06-07T01:04:10.557378821Z",
            "docker_version": "20.10.21",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:31.895761202Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-31T18:09:14.311114615Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:ba657df1d10e8dc0a769b25e4ab09a73bca3a89df41b3a1b4e10f5fef058d1de in / "
                },
                {
                    "created": "2023-05-31T18:09:15.547149675Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-05T02:03:26.945834815Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL io.balena.architecture=aarch64",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-05T02:03:27.13778573Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-05T02:03:27.332819661Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:24916d641d0ee761d2bebd935412ac2263719e3f48829dd83555470573235ed9 in /usr/bin "
                },
                {
                    "created": "2023-06-05T02:24:26.189516816Z",
                    "created_by": "/bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\""
                },
                {
                    "created": "2023-06-05T03:01:45.293037492Z",
                    "created_by": "/bin/sh -c dnf install -y \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-clients \t\tsubversion \t\tautoconf \t\tautomake \t\tbzip2-devel \t\tglib2-devel \t\tgcc \t\tgcc-c++ \t\tImageMagick \t\tImageMagick-devel \t\tkernel-devel \t\tlibcurl-devel \t\tlibevent-devel \t\tlibffi-devel \t\tlibjpeg-devel \t\tlibsqlite3x-devel \t\tlibxml2-devel \t\tlibxslt-devel \t\tlibyaml-devel \t\tmysql-devel \t\tmake \t\tncurses-devel \t\topenssl-devel \t\tpostgresql-devel \t\treadline-devel \t\tsqlite-devel \t\tzlib-devel \t&& dnf clean all"
                },
                {
                    "created": "2023-06-05T03:01:49.62963139Z",
                    "created_by": "/bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end"
                },
                {
                    "created": "2023-06-05T03:01:49.818413016Z",
                    "created_by": "/bin/sh -c #(nop)  ENV UDEV=off",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-05T03:01:49.975317929Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:0e8e5e7fcb5ff4b4caac2552d3c5cbf829703430466832566297680a5b09c62b in /usr/bin/entry.sh "
                },
                {
                    "created": "2023-06-05T03:01:50.116216694Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:207cdc191bada5970fb21d3481971b4a391e6e52061bd584dc75404c36d01fcf in /usr/bin/balena-info "
                },
                {
                    "created": "2023-06-05T03:01:50.250492914Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:def7f364bfe93992865dfba2017def9a3c407b6cf8ac0233dcd0aabaa9e4b75b in /usr/bin/balena-idle "
                },
                {
                    "created": "2023-06-05T03:01:50.416993251Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-05T03:01:55.327132834Z",
                    "created_by": "/bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-05T03:01:56.084477397Z",
                    "created_by": "/bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info"
                },
                {
                    "created": "2023-06-07T00:46:07.025876352Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL io.balena.device-type=jetson-tx2",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-07T01:04:09.397873291Z",
                    "created_by": "/bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all"
                },
                {
                    "created": "2023-06-07T01:04:10.557378821Z",
                    "created_by": "/bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:249911891a8331ea3bbb5bf844c0feaad6066fdc936878a8c464416b1d78b22e",
                    "sha256:bc78f7b899700e4367bb848ecbc496f06865e82c6015e2a802406742f1cbefcf",
                    "sha256:284c09b1cb3f1977b7c56605e5ae1944d5ce3a83c3d77c0a22357607feb3701c",
                    "sha256:01afbd6b83ae4fc87863dfbad42a1c3e0c8806bafbe276dfa5315915fcc881ee",
                    "sha256:76f5f3f9ce8cf3005d94fbc917b8789e2d8f382bc97ddb4b1cc9e7db29156f51",
                    "sha256:27b52a798d0269cfb7e550d73aeccfc63ff23091a9c83a053e66e55c9ce4df69",
                    "sha256:d5aaba1e9572853e63c03a0b5cd6e47eb7aa1fdec55f5e70c94df0348a86796c",
                    "sha256:260c00f37243705b4e595f97e13fabdc5be2e3004512988b2b6180eb394f0b14",
                    "sha256:eea5c2401bfd5b9bad6853bd81414852413716837a63fbe494057cee78568c16",
                    "sha256:b298979a74b29b88bb589442ee59d54d706e0cb3b69c743312787234451cfee5",
                    "sha256:24bd21b3897c3e9de03ce724f0ea0300955d57abb938ec61d4e66e6e1586d031"
                ]
            }
        },
        "build-20230803": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "generic-aarch64",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2023-08-04T22:44:56.277015004Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:31.895761202Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-04T18:40:58.001277299Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:614dff70ca4206841645edfd3dab48901efeefccc8ef99772f475ee9bac861ff in / "
                },
                {
                    "created": "2023-08-04T18:40:59.951513662Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-04T18:54:04.279599867Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-04T18:54:04.279599867Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-04T18:54:04.279599867Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-04T19:20:03.223955138Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-04T20:06:40.98054953Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-clients \t\tsubversion \t\tautoconf \t\tautomake \t\tbzip2-devel \t\tglib2-devel \t\tgcc \t\tgcc-c++ \t\tImageMagick \t\tImageMagick-devel \t\tkernel-devel \t\tlibcurl-devel \t\tlibevent-devel \t\tlibffi-devel \t\tlibjpeg-devel \t\tlibsqlite3x-devel \t\tlibxml2-devel \t\tlibxslt-devel \t\tlibyaml-devel \t\tmysql-devel \t\tmake \t\tncurses-devel \t\topenssl-devel \t\tpostgresql-devel \t\treadline-devel \t\tsqlite-devel \t\tzlib-devel \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-04T20:06:42.236381253Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-04T20:06:42.236381253Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-04T20:06:42.272446231Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-04T20:06:42.282693953Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-04T20:06:42.291191972Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-04T20:06:42.291191972Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-04T20:06:47.729599987Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-04T20:06:48.236078525Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-04T22:44:55.937469412Z",
                    "created_by": "LABEL io.balena.device-type=generic-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-04T22:44:55.937469412Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-04T22:44:56.277015004Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "moby.buildkit.buildinfo.v1": "eyJmcm9udGVuZCI6ImRvY2tlcmZpbGUudjAiLCJhdHRycyI6eyJmaWxlbmFtZSI6IkRvY2tlcmZpbGUifSwic291cmNlcyI6W3sidHlwZSI6ImRvY2tlci1pbWFnZSIsInJlZiI6ImRvY2tlci5pby9iYWxlbmFsaWIvYWFyY2g2NC1mZWRvcmE6MzctYnVpbGQiLCJwaW4iOiJzaGEyNTY6NWU5NDIwYTY2ZWMyMDgzY2JmZGFlODg2YTY2ZjU5MzlhMDE0N2ZjM2M4ZjdkM2Q4ZmFiNzdmN2Q3NGI3ZTRkZSJ9XX0=",
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:cf819d1f191d71ce750fc0b9ca71726d50fc052d7c695682165a84c2bd1eb716",
                    "sha256:03789feb1993fcca25eacd7c042a5e0da237c9f2fa4a6f2ba8ad8ddcbcc047df",
                    "sha256:df63306f05b409fc7c242f10144cdea2d6eb06bd1c0d437922509682bf196d4f",
                    "sha256:9fe94c7ca324a58111227943d2000d24e1ce8bf513f893a4cadda54c6636f678",
                    "sha256:8ab92a8d50bc492a9de12c120c00ec741241d5266d7456bbdbc08c9e80cdbfb0",
                    "sha256:71c7356ae70cfd65639daf61750af2a0dcc61f319ce61904d17eb6a8f02bb9e6",
                    "sha256:e88bcc88b053f78650c3a40dc402d64d8172dafaf3cad6f367d7d4be4b626c49",
                    "sha256:a34849352632eadb7ec25a5871a6715fb515a2b525c5c326a3f116784a7bd705",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:d63ca7d31e71a3333cbb911a4ca10d90d0be725845687f9c21ad95f2ba2a29ff",
                    "sha256:b3a0f99cf2c083b6513313df72ffae556e28cf1c6077cf60f297765f3c91fd03",
                    "sha256:2205b26d69e848938f5a4633d373ceeb806ad668ce02afb5646ae36154cf9df2"
                ]
            }
        },
        "build-20230829": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "generic-aarch64",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2023-09-02T09:24:28.949968702Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:31.895761202Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-04T18:40:58.001277299Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:614dff70ca4206841645edfd3dab48901efeefccc8ef99772f475ee9bac861ff in / "
                },
                {
                    "created": "2023-08-04T18:40:59.951513662Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-02T05:03:54.900306555Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-02T05:03:54.900306555Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-02T05:03:54.900306555Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T05:29:59.032216117Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T06:16:46.631575413Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-clients \t\tsubversion \t\tautoconf \t\tautomake \t\tbzip2-devel \t\tglib2-devel \t\tgcc \t\tgcc-c++ \t\tImageMagick \t\tImageMagick-devel \t\tkernel-devel \t\tlibcurl-devel \t\tlibevent-devel \t\tlibffi-devel \t\tlibjpeg-devel \t\tlibsqlite3x-devel \t\tlibxml2-devel \t\tlibxslt-devel \t\tlibyaml-devel \t\tmysql-devel \t\tmake \t\tncurses-devel \t\topenssl-devel \t\tpostgresql-devel \t\treadline-devel \t\tsqlite-devel \t\tzlib-devel \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T06:16:48.035123609Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T06:16:48.035123609Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-02T06:16:48.067258907Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T06:16:48.07462983Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T06:16:48.080880149Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T06:16:48.080880149Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-02T06:16:53.409164676Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T06:16:53.848156022Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T09:24:28.515363017Z",
                    "created_by": "LABEL io.balena.device-type=generic-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-02T09:24:28.515363017Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T09:24:28.949968702Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:cf819d1f191d71ce750fc0b9ca71726d50fc052d7c695682165a84c2bd1eb716",
                    "sha256:3c382cf512bf47b7376b28df697eafe60fb026ff08ad6264f571b1804576a531",
                    "sha256:242c49d1b03e40d91c941d76ea65e48dbfb13a6b7f6a8c0f17fa2b79bb3bf341",
                    "sha256:c6c2635cdf508755fa8455319712244a29ced4a0d792586aeaf1912b0d335377",
                    "sha256:5ed81a62153eb2f5ceb8f787d2550f58610247dd9b0d3223bb381815f912eaaf",
                    "sha256:ab8c7b9a29c91a360b8df247865bddc76a084600df596a14ec105559e3138cca",
                    "sha256:cb950ae7ff296628577873bfb3acef29547aeaa03711389c599d18e958a166ea",
                    "sha256:62678cf4e815ad96ca4f95cbd3605e77983ad6684c6f258a7378f1dcf1157fe4",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:ce495f5870fa561aea5a593d5bdea30b350f4dab2b5f5dc48dc324777335d604",
                    "sha256:096a6c71280edd96338674261f2d58ef7e8d872a9f29e4963b3b1eb323e827af",
                    "sha256:202d7135bf96f0744ead45939c6b02ab9f43d3286aa70007e0b87e09140db7ed"
                ]
            }
        },
        "build-20230904": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "generic-aarch64",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2023-09-09T08:47:31.514218919Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:31.895761202Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-04T18:40:58.001277299Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:614dff70ca4206841645edfd3dab48901efeefccc8ef99772f475ee9bac861ff in / "
                },
                {
                    "created": "2023-08-04T18:40:59.951513662Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T05:16:42.403188583Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T05:16:42.403188583Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T05:16:42.403188583Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T05:41:14.882541843Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T06:27:10.219323725Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-clients \t\tsubversion \t\tautoconf \t\tautomake \t\tbzip2-devel \t\tglib2-devel \t\tgcc \t\tgcc-c++ \t\tImageMagick \t\tImageMagick-devel \t\tkernel-devel \t\tlibcurl-devel \t\tlibevent-devel \t\tlibffi-devel \t\tlibjpeg-devel \t\tlibsqlite3x-devel \t\tlibxml2-devel \t\tlibxslt-devel \t\tlibyaml-devel \t\tmysql-devel \t\tmake \t\tncurses-devel \t\topenssl-devel \t\tpostgresql-devel \t\treadline-devel \t\tsqlite-devel \t\tzlib-devel \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T06:27:11.639619237Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T06:27:11.639619237Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T06:27:11.672307839Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T06:27:11.703609828Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T06:27:11.752254777Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T06:27:11.752254777Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T06:27:16.692189405Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T06:27:17.113557601Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T08:47:31.226768824Z",
                    "created_by": "LABEL io.balena.device-type=generic-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T08:47:31.226768824Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T08:47:31.514218919Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:cf819d1f191d71ce750fc0b9ca71726d50fc052d7c695682165a84c2bd1eb716",
                    "sha256:2c61372b1614282bfdb58c104252b37a61be492de5c3298dffc56376adfe0a8f",
                    "sha256:3892fad87609c0724cb700c7b327865d8b642316f214825299540678c84e007b",
                    "sha256:0f4a521d2c6cf8cad7b2eb4df330989890e4ec58bcdb8c8d3f1e7b953bbbd9cf",
                    "sha256:8d6c3fbf20d052b4dfc381066e982bdd6112441240ae7ffbc2e5e89595e79a0c",
                    "sha256:561d71383dd66b871476f9e5ff3274483fb9574952685d747d4e55904f1ee3fb",
                    "sha256:b19528952c8ac1375dbbc0465be58dc121fb846ce4e1e89645c716509faaf601",
                    "sha256:c8b95dba26be42e442fdec1f2fd5073216020274f421a0e7cf5b4abe1599f822",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:bf40c484f55f8935bf800843234fd2cadb1c9404047d95d9143e806f44edeae5",
                    "sha256:ad660e340b7acf11d3760c535b47f304b0b32abe72fba87f4917c5f91a2c9da6",
                    "sha256:45b43ed3d7b4991c51d00b09bfdf2a8f6bd5459e64832b5b90bb39fdb61d7b0d"
                ]
            }
        },
        "build-20230911": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "iot-gate-imx8plus",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2023-09-12T03:03:42.159197629Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:31.895761202Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-04T18:40:58.001277299Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:614dff70ca4206841645edfd3dab48901efeefccc8ef99772f475ee9bac861ff in / "
                },
                {
                    "created": "2023-08-04T18:40:59.951513662Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T05:16:42.403188583Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T05:16:42.403188583Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T05:16:42.403188583Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T05:41:14.882541843Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T06:27:10.219323725Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-clients \t\tsubversion \t\tautoconf \t\tautomake \t\tbzip2-devel \t\tglib2-devel \t\tgcc \t\tgcc-c++ \t\tImageMagick \t\tImageMagick-devel \t\tkernel-devel \t\tlibcurl-devel \t\tlibevent-devel \t\tlibffi-devel \t\tlibjpeg-devel \t\tlibsqlite3x-devel \t\tlibxml2-devel \t\tlibxslt-devel \t\tlibyaml-devel \t\tmysql-devel \t\tmake \t\tncurses-devel \t\topenssl-devel \t\tpostgresql-devel \t\treadline-devel \t\tsqlite-devel \t\tzlib-devel \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T06:27:11.639619237Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T06:27:11.639619237Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T06:27:11.672307839Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T06:27:11.703609828Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T06:27:11.752254777Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T06:27:11.752254777Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T06:27:16.692189405Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T06:27:17.113557601Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-12T03:03:42.022816114Z",
                    "created_by": "LABEL io.balena.device-type=iot-gate-imx8plus",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-12T03:03:42.022816114Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-12T03:03:42.159197629Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:cf819d1f191d71ce750fc0b9ca71726d50fc052d7c695682165a84c2bd1eb716",
                    "sha256:2c61372b1614282bfdb58c104252b37a61be492de5c3298dffc56376adfe0a8f",
                    "sha256:3892fad87609c0724cb700c7b327865d8b642316f214825299540678c84e007b",
                    "sha256:0f4a521d2c6cf8cad7b2eb4df330989890e4ec58bcdb8c8d3f1e7b953bbbd9cf",
                    "sha256:8d6c3fbf20d052b4dfc381066e982bdd6112441240ae7ffbc2e5e89595e79a0c",
                    "sha256:561d71383dd66b871476f9e5ff3274483fb9574952685d747d4e55904f1ee3fb",
                    "sha256:b19528952c8ac1375dbbc0465be58dc121fb846ce4e1e89645c716509faaf601",
                    "sha256:c8b95dba26be42e442fdec1f2fd5073216020274f421a0e7cf5b4abe1599f822",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:bf40c484f55f8935bf800843234fd2cadb1c9404047d95d9143e806f44edeae5",
                    "sha256:1d75f539ff1a4bb8e48f9036de90ae1624b335f2cfcb39e8111ab61a327f843b",
                    "sha256:a69856bfe2e9f97ef96db5cbc7c1eb053ba8225863abbb346fd1e9bc5bba22dc"
                ]
            }
        },
        "build-20231103": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "iot-gate-imx8plus",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2023-11-04T16:58:30.559134403Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:31.895761202Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-06T18:42:53.905315575Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:a506790441a5cd056fb456111da480939a46667d520b519dcb9b2e2aa16aae70 in / "
                },
                {
                    "created": "2023-10-06T18:42:54.852939758Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-04T14:05:46.127555575Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-04T14:05:46.127555575Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-04T14:05:46.127555575Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T14:32:34.985281581Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T15:17:05.03121789Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-clients \t\tsubversion \t\tautoconf \t\tautomake \t\tbzip2-devel \t\tglib2-devel \t\tgcc \t\tgcc-c++ \t\tImageMagick \t\tImageMagick-devel \t\tkernel-devel \t\tlibcurl-devel \t\tlibevent-devel \t\tlibffi-devel \t\tlibjpeg-devel \t\tlibsqlite3x-devel \t\tlibxml2-devel \t\tlibxslt-devel \t\tlibyaml-devel \t\tmysql-devel \t\tmake \t\tncurses-devel \t\topenssl-devel \t\tpostgresql-devel \t\treadline-devel \t\tsqlite-devel \t\tzlib-devel \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T15:17:06.534956571Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T15:17:06.534956571Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-04T15:17:06.547775032Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T15:17:06.562169912Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T15:17:06.584452792Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T15:17:06.584452792Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-04T15:17:11.437649746Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T15:17:11.624485751Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T16:58:30.421906927Z",
                    "created_by": "LABEL io.balena.device-type=iot-gate-imx8plus",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-04T16:58:30.421906927Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T16:58:30.559134403Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:a37bac7c99baeb556998a67a51775b34aa6df7829fa1ff19323033c5e19837b3",
                    "sha256:b803e34ece3fff5f3d20cfa0d3e1cf3d2f8eeb660544fa7d9d823be8aaca720f",
                    "sha256:6cd425edf3bbba0627f88702e763514480d7cc186cdcf9fba97078a67b67ff15",
                    "sha256:3b47068608b1d7e0db2398b9a01f8b7334b03f0b6e860606846319db5bca3e6d",
                    "sha256:cd9302fb8f7c40436d216b427838f33470983f6d503ff317690d5147f2ac7af4",
                    "sha256:3ee1780fbb8bd15cb0d9c1f09542dd9bfd3ad0b2b19f329060fb3864d9f08437",
                    "sha256:818589d5e5232c469d55d13e3c611a19ae9fbd09e1eab7d8d5a5cbc2d7a5364a",
                    "sha256:12e7cf1e010caa525ada8d183482cca1144de22e3bdeb8c3f63e13d7f4d27c83",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:24e8fe7f4ce600f415f5a229e1303c9bab9afc61a2cb00bfe838cf9af0b10c57",
                    "sha256:0f98a79bf5f3d0f83978a96f92525d6c4563361948edfcb2279459e099307b38",
                    "sha256:c5cf54dbd4349f8fd312f982135012db1f92c230e1392a1c853b909ef7cac443"
                ]
            }
        },
        "build-20231106": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "iot-gate-imx8plus",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2023-11-06T12:30:02.43881775Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:31.895761202Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-06T18:42:53.905315575Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:a506790441a5cd056fb456111da480939a46667d520b519dcb9b2e2aa16aae70 in / "
                },
                {
                    "created": "2023-10-06T18:42:54.852939758Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T09:12:33.793766866Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T09:12:33.793766866Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T09:12:33.793766866Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T09:41:28.803094869Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T10:28:03.430768422Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-clients \t\tsubversion \t\tautoconf \t\tautomake \t\tbzip2-devel \t\tglib2-devel \t\tgcc \t\tgcc-c++ \t\tImageMagick \t\tImageMagick-devel \t\tkernel-devel \t\tlibcurl-devel \t\tlibevent-devel \t\tlibffi-devel \t\tlibjpeg-devel \t\tlibsqlite3x-devel \t\tlibxml2-devel \t\tlibxslt-devel \t\tlibyaml-devel \t\tmysql-devel \t\tmake \t\tncurses-devel \t\topenssl-devel \t\tpostgresql-devel \t\treadline-devel \t\tsqlite-devel \t\tzlib-devel \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T10:28:04.971243325Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T10:28:04.971243325Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T10:28:04.981842152Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T10:28:04.990882375Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T10:28:04.999524597Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T10:28:04.999524597Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T10:28:10.325096726Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T10:28:10.509330565Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T12:30:02.289734Z",
                    "created_by": "LABEL io.balena.device-type=iot-gate-imx8plus",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T12:30:02.289734Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T12:30:02.43881775Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:a37bac7c99baeb556998a67a51775b34aa6df7829fa1ff19323033c5e19837b3",
                    "sha256:079d7cf39afa9d578a9d23346f411400794c3af330d6d28f819e9df742fd510f",
                    "sha256:953f9299839dea166062dc15ad557aaded1976123a8e68748f4c2b9bda013445",
                    "sha256:91484c3183f81de3b5df4fd7282fa21e976e1bfebc491b6bbfbf04e93c1894a0",
                    "sha256:8a86f91b095531cde383c2059c806a3e41d2784a850acb0074b3c05e00a92b22",
                    "sha256:72afd198025d5dd3f0441d9c45c59c4856bb515bdfd96241abc1821082e51634",
                    "sha256:dbd652ad088f975924c2188af549f2f10b92c01b6fe522387771c28ab9f9a3d1",
                    "sha256:b34bfc4dadfdc58a35b02f2a10f1cceab912215f6d83c03887fd10915a43740f",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:60d7cb78f7dbd6e4fd7284fde027f33371b8a35defbb6d0b64e611e5b79e547c",
                    "sha256:7b50b40720c8be33d0674d434f934fadc4d26c3f001d716dfafe5dde9a03f1c4",
                    "sha256:8ef949e1787f2d8b6062650c27e1ead5b25c8e1d8f83f84269091cf5ed6e0bab"
                ]
            }
        },
        "build-20231127": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "iot-gate-imx8plus",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2023-12-01T13:08:26.624251431Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:31.895761202Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-29T00:47:03.16713451Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:270e11b4c18af1c1efb8b8579be7fbda5255d56dd69f83ef7d933cfd2c685e5c in / "
                },
                {
                    "created": "2023-11-29T00:47:04.125919026Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T10:52:02.657157896Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T10:52:02.657157896Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T10:52:02.657157896Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T11:10:52.835476629Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T11:44:38.992624697Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-clients \t\tsubversion \t\tautoconf \t\tautomake \t\tbzip2-devel \t\tglib2-devel \t\tgcc \t\tgcc-c++ \t\tImageMagick \t\tImageMagick-devel \t\tkernel-devel \t\tlibcurl-devel \t\tlibevent-devel \t\tlibffi-devel \t\tlibjpeg-devel \t\tlibsqlite3x-devel \t\tlibxml2-devel \t\tlibxslt-devel \t\tlibyaml-devel \t\tmysql-devel \t\tmake \t\tncurses-devel \t\topenssl-devel \t\tpostgresql-devel \t\treadline-devel \t\tsqlite-devel \t\tzlib-devel \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T11:44:39.990821654Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T11:44:39.990821654Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T11:44:40.000073844Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T11:44:40.01005454Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T11:44:40.019402748Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T11:44:40.019402748Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T11:44:43.689339656Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T11:44:43.868535084Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T13:08:26.47192444Z",
                    "created_by": "LABEL io.balena.device-type=iot-gate-imx8plus",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T13:08:26.47192444Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T13:08:26.624251431Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:22de68abb450063be7e40efd22fd3b41bec469efafdd95e25c65998648e52b28",
                    "sha256:1a3ad77cbdd5f3702cdc33e853ab9cc8a4bce3da55a32efb4239959bb0066d2c",
                    "sha256:ea8f95f5ee1d9a415da767f8f70e84219a783234faedbe934f7073d313c2a329",
                    "sha256:9859ba47080992b582231890261ade8c1615c538267fb38ef5346a7dc2b9b28c",
                    "sha256:4d00d92f327d89e6a8e173c3756ae21408423470ec789b7f26433277cb4a4765",
                    "sha256:b15db2ec924b64fd8d760db1a34d1a7bf1ee73795d67229df34a932fa2462fce",
                    "sha256:f426d5ef2263d711158432d852d2fd7bbac8b2a130d414a43053e03ea7af15cc",
                    "sha256:7e257b2f172d14765138a78493e82b46dc74628b411d96599cf2d23254ad0931",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:7465c77da1867ca9eddcdddd673828c00680f5a8f2980663f3dc74004cfee96e",
                    "sha256:22ca79a7ecbfc542ba8549e3761eee16e1eedce49af9323ee2792385bb3ea001",
                    "sha256:61a56b1bb36a8993559af8054d38d0edd937d96415298cccc25aedfa9a2755c8"
                ]
            }
        },
        "build-20231204": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "iot-gate-imx8plus",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2023-12-06T22:56:22.466838485Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:31.895761202Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-29T00:47:03.16713451Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:270e11b4c18af1c1efb8b8579be7fbda5255d56dd69f83ef7d933cfd2c685e5c in / "
                },
                {
                    "created": "2023-11-29T00:47:04.125919026Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T20:40:26.374589955Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T20:40:26.374589955Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T20:40:26.374589955Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T20:59:24.426343965Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T21:33:22.338987204Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-clients \t\tsubversion \t\tautoconf \t\tautomake \t\tbzip2-devel \t\tglib2-devel \t\tgcc \t\tgcc-c++ \t\tImageMagick \t\tImageMagick-devel \t\tkernel-devel \t\tlibcurl-devel \t\tlibevent-devel \t\tlibffi-devel \t\tlibjpeg-devel \t\tlibsqlite3x-devel \t\tlibxml2-devel \t\tlibxslt-devel \t\tlibyaml-devel \t\tmysql-devel \t\tmake \t\tncurses-devel \t\topenssl-devel \t\tpostgresql-devel \t\treadline-devel \t\tsqlite-devel \t\tzlib-devel \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T21:33:24.154561262Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T21:33:24.154561262Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T21:33:24.162768682Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T21:33:24.171000628Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T21:33:24.179542448Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T21:33:24.179542448Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T21:33:28.121782119Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T21:33:28.270944579Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T22:56:22.315581937Z",
                    "created_by": "LABEL io.balena.device-type=iot-gate-imx8plus",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T22:56:22.315581937Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T22:56:22.466838485Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:22de68abb450063be7e40efd22fd3b41bec469efafdd95e25c65998648e52b28",
                    "sha256:25274df56d5e2d3d66833b3c1612e29d23730e6cc6ec37a78ee71d4e85b76404",
                    "sha256:d04cc6ad4633afbe1d3e0b00b156a425046a32b30dac7662e12874b696c4cfef",
                    "sha256:43377beeefc0287b77d294288faa7109bb3ce0bc36e475dfbd1d0e36067efadb",
                    "sha256:fec686f840ea96c83b8309deabe344d2dad4f89944098fafba92079f3168bea0",
                    "sha256:8a1c26a8af1d218a1a631e9eed97294a2a87ace87904af0512704b5ba5f905a0",
                    "sha256:f0e217e2e36898bc78b63b7998c0d53052ce478f4a9e28eb3acaa57455c20e2f",
                    "sha256:168aa23d85e63ec5786a95750332d5f9e1806211b6e527d7644ac532221069f1",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:536faba4d9280af162caf34aaa2fbf324ea707d1b058d74696885ed191a6eafd",
                    "sha256:019eff7d9c98124a0076ea5ab4fbe260574e1040776d0354eda04b2bf0d9844b",
                    "sha256:625e985005e1b8d438cf34f684dbc35619aa2b56cc1c4be692af863cfab21a63"
                ]
            }
        },
        "build-20240205": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "iot-gate-imx8plus",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2024-02-05T02:46:16.965872789Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:31.895761202Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-29T00:47:03.16713451Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:270e11b4c18af1c1efb8b8579be7fbda5255d56dd69f83ef7d933cfd2c685e5c in / "
                },
                {
                    "created": "2023-11-29T00:47:04.125919026Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-05T00:26:13.859309536Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-05T00:26:13.859309536Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-05T00:26:13.859309536Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T00:45:10.8092517Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T01:18:49.392328016Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-clients \t\tsubversion \t\tautoconf \t\tautomake \t\tbzip2-devel \t\tglib2-devel \t\tgcc \t\tgcc-c++ \t\tImageMagick \t\tImageMagick-devel \t\tkernel-devel \t\tlibcurl-devel \t\tlibevent-devel \t\tlibffi-devel \t\tlibjpeg-devel \t\tlibsqlite3x-devel \t\tlibxml2-devel \t\tlibxslt-devel \t\tlibyaml-devel \t\tmysql-devel \t\tmake \t\tncurses-devel \t\topenssl-devel \t\tpostgresql-devel \t\treadline-devel \t\tsqlite-devel \t\tzlib-devel \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T01:18:50.514115933Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T01:18:50.514115933Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-05T01:18:50.523617988Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T01:18:50.557647649Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T01:18:50.568553425Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T01:18:50.568553425Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-05T01:18:54.352613602Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T01:18:54.484309683Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T02:46:16.846029828Z",
                    "created_by": "LABEL io.balena.device-type=iot-gate-imx8plus",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-05T02:46:16.846029828Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T02:46:16.965872789Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:22de68abb450063be7e40efd22fd3b41bec469efafdd95e25c65998648e52b28",
                    "sha256:9391b38776fe1a447956db381646ee109343bd22183a6c607d66c26dac722850",
                    "sha256:2ff3e8a40fae975f72250e96f2c01345768ef0a3dbcfbf6084bc542211223c04",
                    "sha256:38432aa17028b7bdb0c9d5c2b22fb4207811641298965ba6771cd989d6a19daa",
                    "sha256:3efdb146c34f8f1ff3c22b490e72b097196f8cf3a214dfc51628ba81f402eeb1",
                    "sha256:bf38ccf74068b318ec44fb671d7f71d3454fb8ab9304451042334e972b5fa0ec",
                    "sha256:50fbc93a18898e758d8a4426c13b8cdb844e98e4fe11dbc5e9409eb7f1466e43",
                    "sha256:21e4e77425952b2bdbb4f06e327bd295156461fc4fe3e31ed324ba59b04a3712",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:5f653a5aac8e7aec60e0930415cf5cfc3ee9a054c6b5996f3e8bcd9c24b11e54",
                    "sha256:ec75080b101dd9efaa0f0a28d0cf2825f6ab93f65d96d9b3cd91d5e538fa9fbe",
                    "sha256:849cb9d10232bf70b87b611e035f762d7625306a3c15a236f2dd0bd56e7e8646"
                ]
            }
        },
        "build-20240227": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "iot-gate-imx8plus",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2024-03-01T23:16:47.777532704Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:31.895761202Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-29T00:47:03.16713451Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:270e11b4c18af1c1efb8b8579be7fbda5255d56dd69f83ef7d933cfd2c685e5c in / "
                },
                {
                    "created": "2023-11-29T00:47:04.125919026Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T20:49:59.807334412Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T20:49:59.807334412Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T20:49:59.807334412Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:10:56.098365397Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:45:26.894768836Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-clients \t\tsubversion \t\tautoconf \t\tautomake \t\tbzip2-devel \t\tglib2-devel \t\tgcc \t\tgcc-c++ \t\tImageMagick \t\tImageMagick-devel \t\tkernel-devel \t\tlibcurl-devel \t\tlibevent-devel \t\tlibffi-devel \t\tlibjpeg-devel \t\tlibsqlite3x-devel \t\tlibxml2-devel \t\tlibxslt-devel \t\tlibyaml-devel \t\tmysql-devel \t\tmake \t\tncurses-devel \t\topenssl-devel \t\tpostgresql-devel \t\treadline-devel \t\tsqlite-devel \t\tzlib-devel \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:45:27.831671197Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:45:27.831671197Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T21:45:27.841017293Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:45:27.850413212Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:45:27.858829391Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:45:27.858829391Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T21:45:31.607983559Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:45:31.757692693Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T23:16:47.658708573Z",
                    "created_by": "LABEL io.balena.device-type=iot-gate-imx8plus",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T23:16:47.658708573Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T23:16:47.777532704Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:22de68abb450063be7e40efd22fd3b41bec469efafdd95e25c65998648e52b28",
                    "sha256:153f603c3b6b2529b45b12c9cb3de69de633d99488c4aac6cb5e04c6784e284c",
                    "sha256:fcda31efe0f90abdb3be0e2cc3050fddb745d7db41b962e3a08d908b3fe90c76",
                    "sha256:168e7cb2c07cd77fe30fd104d59f5ac49b7a43775f04c196367fa588f2159f11",
                    "sha256:3e98c7cf4c63c439e9045cd721cc19c243588d17804a57358309accf40b5249c",
                    "sha256:8aeb044849aef9a674a8ebde259f830df38faaa43b11f80b3bec5085ace3c264",
                    "sha256:691ea9dfdaf44533ac36d1341c6822b6735744922c3d5c304e657357f4babe33",
                    "sha256:072ee65b31efbe2110bc15922159f609d9d9c933715bc4429aeb7f4c5da9d425",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:bd215b090f3f370a73aa2871e3e123516169ed4db9f68a876a6be0d4a288d6d4",
                    "sha256:9c90bb3abfc94096e6345825ee53ca74c45113312142186b07cc5c2176aa7ef5",
                    "sha256:e28bd6d0f75f21f68b0e456c74cd2acf88b251e8860020c8e6764ae3f07f45b4"
                ]
            }
        },
        "build-20240304": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "iot-gate-imx8plus",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2024-03-05T10:49:26.346985534Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:31.895761202Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-29T00:47:03.16713451Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:270e11b4c18af1c1efb8b8579be7fbda5255d56dd69f83ef7d933cfd2c685e5c in / "
                },
                {
                    "created": "2023-11-29T00:47:04.125919026Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T08:24:07.032483717Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T08:24:07.032483717Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T08:24:07.032483717Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T08:43:07.560394223Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T09:18:33.168342892Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-clients \t\tsubversion \t\tautoconf \t\tautomake \t\tbzip2-devel \t\tglib2-devel \t\tgcc \t\tgcc-c++ \t\tImageMagick \t\tImageMagick-devel \t\tkernel-devel \t\tlibcurl-devel \t\tlibevent-devel \t\tlibffi-devel \t\tlibjpeg-devel \t\tlibsqlite3x-devel \t\tlibxml2-devel \t\tlibxslt-devel \t\tlibyaml-devel \t\tmysql-devel \t\tmake \t\tncurses-devel \t\topenssl-devel \t\tpostgresql-devel \t\treadline-devel \t\tsqlite-devel \t\tzlib-devel \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T09:18:34.140220764Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T09:18:34.140220764Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T09:18:34.153622864Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T09:18:34.190278048Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T09:18:34.204411016Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T09:18:34.204411016Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T09:18:37.906466695Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T09:18:38.054385621Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T10:49:26.231326759Z",
                    "created_by": "LABEL io.balena.device-type=iot-gate-imx8plus",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T10:49:26.231326759Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T10:49:26.346985534Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:22de68abb450063be7e40efd22fd3b41bec469efafdd95e25c65998648e52b28",
                    "sha256:5b32c6607b8e7ea89ed5bb72a3578bb0d4723f5496d0a8e7dc688bf6a3a167d6",
                    "sha256:90da55fed465de8a873bf3e2bcdea7dca9a0be400a66dfa4c0efde5fa5ad1712",
                    "sha256:d5b90a049cc6b8b6a297f2e6f8a012847c545187714f13feb3004077215fe790",
                    "sha256:ac341c2760f8397f739500c811ea7bfc967bee43cae3b5bccbc3bc6263562d17",
                    "sha256:383c3fcfa865391817fdec807ce0f15866c08261ec20642c87fdde447997f846",
                    "sha256:d8c138867fdbf59da6040e42db8f659089ae32f509c4809cd61e7b817c68284d",
                    "sha256:59113e489ab1305fec7cc3fd646933122fb6f8dfeb9f3e8146b36687dd3f8ce0",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:3e090112138683d3816cd9299b41c91f8e2961f75a329ef3583c678904c6aa0c",
                    "sha256:f5e0de247054c6f8f055371596d0e260c682de2f9066d2c5a30eda85d4d0f6c4",
                    "sha256:0c963d343ce7fb5f03c807c1959a371eb4ea311d860d949dae0573d99544878b"
                ]
            }
        },
        "build-20240401": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "iot-gate-imx8plus",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                }
            },
            "created": "2024-04-01T23:47:53.1181221Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:31.895761202Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-29T00:47:03.16713451Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:270e11b4c18af1c1efb8b8579be7fbda5255d56dd69f83ef7d933cfd2c685e5c in / "
                },
                {
                    "created": "2023-11-29T00:47:04.125919026Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T21:26:32.436538725Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T21:26:32.436538725Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T21:26:32.436538725Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T21:44:46.483219966Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T22:18:11.966182353Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-clients \t\tsubversion \t\tautoconf \t\tautomake \t\tbzip2-devel \t\tglib2-devel \t\tgcc \t\tgcc-c++ \t\tImageMagick \t\tImageMagick-devel \t\tkernel-devel \t\tlibcurl-devel \t\tlibevent-devel \t\tlibffi-devel \t\tlibjpeg-devel \t\tlibsqlite3x-devel \t\tlibxml2-devel \t\tlibxslt-devel \t\tlibyaml-devel \t\tmysql-devel \t\tmake \t\tncurses-devel \t\topenssl-devel \t\tpostgresql-devel \t\treadline-devel \t\tsqlite-devel \t\tzlib-devel \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T22:18:13.396726412Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T22:18:13.396726412Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T22:18:13.40948656Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T22:18:13.42436327Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T22:18:13.435538637Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T22:18:13.435538637Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T22:18:17.292242645Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T22:18:17.441252547Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T23:47:53.000902427Z",
                    "created_by": "LABEL io.balena.device-type=iot-gate-imx8plus",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T23:47:53.000902427Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T23:47:53.1181221Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:22de68abb450063be7e40efd22fd3b41bec469efafdd95e25c65998648e52b28",
                    "sha256:2bc63a4a3e163679c8a2399342b1daf3e005320d94db933ce217a0f80d1b4537",
                    "sha256:d75154443a45cab05ca4a85ddd827b962fedcff91b702d791e6ef9404f6c85d3",
                    "sha256:ed61218e50e513b23bae8d31f72e7c8e7a3d0090e48e2ff087a536ac362cfb81",
                    "sha256:23faadc341a4670f586fccbfa7d9b0c5a5e56be8ab46b55a4067df82e5569a5c",
                    "sha256:26696ab075f5bb87eee8a46b41f2091a3f9d7edb2116147001a7677757eaaca5",
                    "sha256:61d65d5da4322b148f9078fa00914c14291b0bdf48b073091e08240ed72a9f7c",
                    "sha256:879d60f10dea3318ceaedb2814160c1ae4cc919d4f04d2e62152d05c1ea7011a",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:0428822e1d59c6db13038f6502cd2c9a69bd7e2d2a033cb20fc19071849b112e",
                    "sha256:c4e3fb88a09fcd635cc5ecc2e4c5328b3d8932c55055f2e4ec03017cb540521f",
                    "sha256:3fabed44006fcfd14825b6c3c305dcf7b0dc134c5583aafb432f9fe037614dbe"
                ]
            }
        },
        "build-20240408": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "iot-gate-imx8plus",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                }
            },
            "created": "2024-04-09T20:02:56.094617974Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:31.895761202Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-29T00:47:03.16713451Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:270e11b4c18af1c1efb8b8579be7fbda5255d56dd69f83ef7d933cfd2c685e5c in / "
                },
                {
                    "created": "2023-11-29T00:47:04.125919026Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:50.964198867Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:50.964198867Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:50.964198867Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:54:06.695861539Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:30:31.267198079Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-clients \t\tsubversion \t\tautoconf \t\tautomake \t\tbzip2-devel \t\tglib2-devel \t\tgcc \t\tgcc-c++ \t\tImageMagick \t\tImageMagick-devel \t\tkernel-devel \t\tlibcurl-devel \t\tlibevent-devel \t\tlibffi-devel \t\tlibjpeg-devel \t\tlibsqlite3x-devel \t\tlibxml2-devel \t\tlibxslt-devel \t\tlibyaml-devel \t\tmysql-devel \t\tmake \t\tncurses-devel \t\topenssl-devel \t\tpostgresql-devel \t\treadline-devel \t\tsqlite-devel \t\tzlib-devel \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:30:32.683562935Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:30:32.683562935Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T14:30:32.694247574Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:30:32.719346978Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:30:32.730408486Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:30:32.730408486Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T14:30:36.547683782Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:30:36.691463904Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T20:02:55.977043055Z",
                    "created_by": "LABEL io.balena.device-type=iot-gate-imx8plus",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T20:02:55.977043055Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T20:02:56.094617974Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:22de68abb450063be7e40efd22fd3b41bec469efafdd95e25c65998648e52b28",
                    "sha256:3f054b5308bf8dbf3abb2dac1bc72fac6b6e9569c5d0c4d1733c57b40f98d68c",
                    "sha256:9a408e5130d5761269a2f78fe14c41bfad96906f19a9b6f231ba27a0e270536b",
                    "sha256:ce27ddfda0b79dba438fc400e0d24f635fec12b6b0b2e61ff692ddfb273b5fe9",
                    "sha256:251af411a33440438f0b2f94cdfb89f2f9ffdbc97319bda046932d48df33eb89",
                    "sha256:5482afbecbaab7a5c1e492cf2a2f03aafdc9012c4dc853b5b5c1ed9fde902db7",
                    "sha256:5d6da048fbb12c4062ff5b76617e555654e7b2043bfca3f0791046007fc79bb6",
                    "sha256:c6c5906dcd307ca53496f54734925e883c2e43f758510871473e5490706bf6a8",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:42adbbc0741061b3fa0e1fde61c20ae07301f416423df023d7264ef090febb62",
                    "sha256:dbbbe17a48649b115e35f670c0cc802489e40bb7cda170c216ad6c215e47a8e8",
                    "sha256:982fd24cbfe5783c218cb3fb307f97f28f07a390b305db2a3d6088ce02266a2d"
                ]
            }
        },
        "build-20240429": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "iot-gate-imx8plus",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                }
            },
            "created": "2024-05-06T10:39:41.599323029Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:31.895761202Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-29T00:47:03.16713451Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:270e11b4c18af1c1efb8b8579be7fbda5255d56dd69f83ef7d933cfd2c685e5c in / "
                },
                {
                    "created": "2023-11-29T00:47:04.125919026Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T09:28:43.57977131Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T09:28:43.57977131Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T09:28:43.57977131Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T09:47:19.941756159Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T10:20:57.000511545Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-clients \t\tsubversion \t\tautoconf \t\tautomake \t\tbzip2-devel \t\tglib2-devel \t\tgcc \t\tgcc-c++ \t\tImageMagick \t\tImageMagick-devel \t\tkernel-devel \t\tlibcurl-devel \t\tlibevent-devel \t\tlibffi-devel \t\tlibjpeg-devel \t\tlibsqlite3x-devel \t\tlibxml2-devel \t\tlibxslt-devel \t\tlibyaml-devel \t\tmysql-devel \t\tmake \t\tncurses-devel \t\topenssl-devel \t\tpostgresql-devel \t\treadline-devel \t\tsqlite-devel \t\tzlib-devel \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T10:20:58.118390256Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T10:20:58.118390256Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T10:20:58.12798187Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T10:20:58.136722317Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T10:20:58.164403522Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T10:20:58.164403522Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T10:21:01.984279759Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T10:21:02.133999332Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T10:39:41.484219958Z",
                    "created_by": "LABEL io.balena.device-type=iot-gate-imx8plus",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T10:39:41.484219958Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T10:39:41.599323029Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:22de68abb450063be7e40efd22fd3b41bec469efafdd95e25c65998648e52b28",
                    "sha256:40252cde73a60fe319f0dc295c7b1e421631974cfbe16656b81f7c86e773254e",
                    "sha256:4a4de46c8a70d5743384977bb42ebacdec5e3cb5490677a398f1d36366084aab",
                    "sha256:1523c4d5a73b8f8409b03635be1be78f6592c3915fd459908ffe5c04fb7ca684",
                    "sha256:3165ae98a25560d143d61c6f8a3cc9b4f73d0c009bfd9de33cefc4747c481229",
                    "sha256:802383c11ce70505808614d078d961ddc3cfaf46a58ac795624520a44e2a7860",
                    "sha256:0590d31cf7630143e0d0e5677bb4407b0d1c0b49a56ef3a87a860603dcea1282",
                    "sha256:6f5ffd7cbb1f8862606014326bb38c35022c8eb43d2a0aff0af32878db49dbdc",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:8c0b4113e6a87b2271a715a924b205a5c9534f5b51c4f3d05b39a48bb6ad75be",
                    "sha256:8758cb7509bfd7224c0a5331ba8bc629479d9e98ab727b0f5fb7261197212daa",
                    "sha256:c39cd3a2ce47e0850a8f29b00283fbc12ffda9edc18a0a64ab0368a4352c82a0"
                ]
            }
        },
        "latest": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "iot-gate-imx8plus",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                }
            },
            "created": "2024-05-06T10:39:20.130192892Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:31.895761202Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-29T00:47:03.16713451Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:270e11b4c18af1c1efb8b8579be7fbda5255d56dd69f83ef7d933cfd2c685e5c in / "
                },
                {
                    "created": "2023-11-29T00:47:04.125919026Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T09:28:47.993183335Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T09:28:47.993183335Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T09:28:47.993183335Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T09:47:56.501476974Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T09:47:57.631980985Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T09:47:57.631980985Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T09:47:57.644124262Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T09:47:57.678847981Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T09:47:57.688494096Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T09:47:57.688494096Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T09:48:01.526529414Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T09:48:01.665893428Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T10:39:20.006293092Z",
                    "created_by": "LABEL io.balena.device-type=iot-gate-imx8plus",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T10:39:20.006293092Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T10:39:20.130192892Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:22de68abb450063be7e40efd22fd3b41bec469efafdd95e25c65998648e52b28",
                    "sha256:ef64ad49ccf58709af070779ae49d014558d78a8b6a21fcc279c09ddac79e6c9",
                    "sha256:486e799e950e2b998ed0a1a7221aed44130002259c2b437524c7a8a72b725a56",
                    "sha256:5ad52f9d14deab1b2c3a79dfb68bf730440e209f5926a2cd2ebd561c519a08de",
                    "sha256:73001e4334a2e5a98b50faf87e712eaf851af09ac903e83a569150844ce9eda1",
                    "sha256:696c197b14bb7731bf0a36bbdc5e5272937b693f192b143e02dac747a1305ba1",
                    "sha256:f27b4f97c199fdc59cc49eb91fc7a348daf160285ca6bfce88ede5b64e4bb0a9",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:22341517b8222bb5810db07c816fbd0de10749523856c0263caf14789e77d27d",
                    "sha256:108db07c780851f92a4d8ef0c1926797631a48d81f409bc8850b3a37f31fe4bb",
                    "sha256:5019b6b6e2ea25b8b42acd497a8ea0bb3aa9edf8a150d35e826ed803ec8d3f57"
                ]
            }
        },
        "latest-20230502": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Cmd": null,
                "Image": "sha256:a68b119daf3e28debdf078c13084aef27795d0c41eca3070757270c37007dcff",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "OnBuild": null,
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-tx2",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                }
            },
            "container": "7423fe45f993649cd50a86110c3aade31acd4783b1f8f74b94b9a14cd0d3e651",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "[ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info"
                ],
                "Image": "sha256:a68b119daf3e28debdf078c13084aef27795d0c41eca3070757270c37007dcff",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-tx2",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                }
            },
            "created": "2023-05-08T16:20:14.664626498Z",
            "docker_version": "20.10.21",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:31.895761202Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-13T20:39:36.516425489Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:8f1c4c2e60330243e66c553f2377951b11c09601b874f6c778e90ff74c6dc376 in / "
                },
                {
                    "created": "2023-03-13T20:39:37.717809378Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-04-02T00:15:42.184062394Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL io.balena.architecture=aarch64",
                    "empty_layer": true
                },
                {
                    "created": "2023-04-02T00:15:42.325999277Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "empty_layer": true
                },
                {
                    "created": "2023-04-02T00:15:42.488342363Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:24916d641d0ee761d2bebd935412ac2263719e3f48829dd83555470573235ed9 in /usr/bin "
                },
                {
                    "created": "2023-04-02T00:34:27.312050054Z",
                    "created_by": "/bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\""
                },
                {
                    "created": "2023-04-02T01:08:25.388465514Z",
                    "created_by": "/bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end"
                },
                {
                    "created": "2023-04-02T01:08:25.551533349Z",
                    "created_by": "/bin/sh -c #(nop)  ENV UDEV=off",
                    "empty_layer": true
                },
                {
                    "created": "2023-04-02T01:08:25.703401831Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:0e8e5e7fcb5ff4b4caac2552d3c5cbf829703430466832566297680a5b09c62b in /usr/bin/entry.sh "
                },
                {
                    "created": "2023-04-02T01:08:25.832144045Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:207cdc191bada5970fb21d3481971b4a391e6e52061bd584dc75404c36d01fcf in /usr/bin/balena-info "
                },
                {
                    "created": "2023-04-02T01:08:25.936921778Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:def7f364bfe93992865dfba2017def9a3c407b6cf8ac0233dcd0aabaa9e4b75b in /usr/bin/balena-idle "
                },
                {
                    "created": "2023-04-02T01:08:26.059241016Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-04-02T01:08:30.523539615Z",
                    "created_by": "/bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh",
                    "empty_layer": true
                },
                {
                    "created": "2023-04-02T01:08:31.078585399Z",
                    "created_by": "/bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info"
                },
                {
                    "created": "2023-05-08T16:04:48.123965098Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL io.balena.device-type=jetson-tx2",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-08T16:20:13.834488214Z",
                    "created_by": "/bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all"
                },
                {
                    "created": "2023-05-08T16:20:14.664626498Z",
                    "created_by": "/bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:6fa23825e7d36de818dd635e6ddcfb1a63b42c8d2a2ebe9dc929a2d8e763fe3f",
                    "sha256:07b0d4da5e04230bb8db9790c1ff3923ecfeaf3f1e9a415e2aab47b5a9a3c0f1",
                    "sha256:48150357fa88a44cf5998c4a5b7e13f8107d4a0b881d13e4aca84aebe66babea",
                    "sha256:efe5d73677d2d6bf2c9aff6540e5fd3471e4445a5ebd050fcf61edacabd24493",
                    "sha256:a4786e5f9479fd133d3e0656a2d110fa7171de1d557215c0963994517a246db0",
                    "sha256:ac16514f34947310a8a17a27f099a5c82bb2f563a28a4e1431998927adaa1e53",
                    "sha256:eda8f31ef2f8144169de7e12869fc1e897e7427c6cab3e81041c33c07d11ff5b",
                    "sha256:6f7ea015bad319a12178cc9deed86ad6432b252ebd6dc7141a974eee74653f64",
                    "sha256:cfd8b93ad27a03808da6e42d10bfd05a9317239d5bfaf63b1e62b4f172372cbc",
                    "sha256:59c871739bd4ff474a5cef9442579177864a340096aa438609cddb64c1b102f0"
                ]
            }
        },
        "latest-20230530": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Cmd": null,
                "Image": "sha256:20f9e37cab056b4dae525c039f7037ba42e096a6f55717137afee04271e77e96",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "OnBuild": null,
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-tx2",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                }
            },
            "container": "02586b804b62abfb75793d789ea4c7363176723ca5b24c0b44b7cf4458c84c71",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "[ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info"
                ],
                "Image": "sha256:20f9e37cab056b4dae525c039f7037ba42e096a6f55717137afee04271e77e96",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-tx2",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                }
            },
            "created": "2023-06-07T02:52:23.839260472Z",
            "docker_version": "20.10.21",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:31.895761202Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-31T18:09:14.311114615Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:ba657df1d10e8dc0a769b25e4ab09a73bca3a89df41b3a1b4e10f5fef058d1de in / "
                },
                {
                    "created": "2023-05-31T18:09:15.547149675Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-05T02:03:26.945834815Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL io.balena.architecture=aarch64",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-05T02:03:27.13778573Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-05T02:03:27.332819661Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:24916d641d0ee761d2bebd935412ac2263719e3f48829dd83555470573235ed9 in /usr/bin "
                },
                {
                    "created": "2023-06-05T02:24:26.189516816Z",
                    "created_by": "/bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\""
                },
                {
                    "created": "2023-06-05T03:02:04.392445503Z",
                    "created_by": "/bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end"
                },
                {
                    "created": "2023-06-05T03:02:04.646844986Z",
                    "created_by": "/bin/sh -c #(nop)  ENV UDEV=off",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-05T03:02:04.825711363Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:0e8e5e7fcb5ff4b4caac2552d3c5cbf829703430466832566297680a5b09c62b in /usr/bin/entry.sh "
                },
                {
                    "created": "2023-06-05T03:02:04.983337019Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:207cdc191bada5970fb21d3481971b4a391e6e52061bd584dc75404c36d01fcf in /usr/bin/balena-info "
                },
                {
                    "created": "2023-06-05T03:02:05.123767699Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:def7f364bfe93992865dfba2017def9a3c407b6cf8ac0233dcd0aabaa9e4b75b in /usr/bin/balena-idle "
                },
                {
                    "created": "2023-06-05T03:02:05.338685177Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-05T03:02:12.042609634Z",
                    "created_by": "/bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-05T03:02:13.377800909Z",
                    "created_by": "/bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info"
                },
                {
                    "created": "2023-06-07T02:34:44.82287582Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL io.balena.device-type=jetson-tx2",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-07T02:52:22.830368797Z",
                    "created_by": "/bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all"
                },
                {
                    "created": "2023-06-07T02:52:23.839260472Z",
                    "created_by": "/bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:249911891a8331ea3bbb5bf844c0feaad6066fdc936878a8c464416b1d78b22e",
                    "sha256:bc78f7b899700e4367bb848ecbc496f06865e82c6015e2a802406742f1cbefcf",
                    "sha256:284c09b1cb3f1977b7c56605e5ae1944d5ce3a83c3d77c0a22357607feb3701c",
                    "sha256:003aced5afcb43cee3c9363048741d8467dca9a7dfc7978926eeba94c0c793f5",
                    "sha256:83dfca5fa07e53ca9393a9653242046ccad66ffed2c2b472e349ccc34984f78f",
                    "sha256:546722af04ce5a848511c0f9b3850aefac740a4d7aff4fbbe9cf3e1caacbdaf8",
                    "sha256:fd8a15cd2653a1a0a698c31f8c62ce5e4920a30df101f4d3b8c125c83cdb0d3e",
                    "sha256:c497def0fd9a40925b091eb2a284460584d191e6f8bc647f5f3aa8c26565ff0b",
                    "sha256:1075349ad85152e3b31e6065a7f2f80d43d7f13314a1ef8a342ec2ebb114cc6f",
                    "sha256:adec9d84947aa22da33ef3f88120acb40c3a38fdcb36d111ea65e0514b23f071"
                ]
            }
        },
        "latest-20230803": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "generic-aarch64",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2023-08-04T23:07:43.375331667Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:31.895761202Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-04T18:40:58.001277299Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:614dff70ca4206841645edfd3dab48901efeefccc8ef99772f475ee9bac861ff in / "
                },
                {
                    "created": "2023-08-04T18:40:59.951513662Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-04T18:54:04.279599867Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-04T18:54:04.279599867Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-04T18:54:04.279599867Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-04T19:20:03.223955138Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-04T20:07:46.587328502Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-04T20:07:46.587328502Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-04T20:07:46.609548438Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-04T20:07:46.619000353Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-04T20:07:46.643784193Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-04T20:07:46.643784193Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-04T20:07:51.914868814Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-04T20:07:52.316641812Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-04T23:07:42.902689671Z",
                    "created_by": "LABEL io.balena.device-type=generic-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-04T23:07:42.902689671Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-04T23:07:43.375331667Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "moby.buildkit.buildinfo.v1": "eyJmcm9udGVuZCI6ImRvY2tlcmZpbGUudjAiLCJhdHRycyI6eyJmaWxlbmFtZSI6IkRvY2tlcmZpbGUifSwic291cmNlcyI6W3sidHlwZSI6ImRvY2tlci1pbWFnZSIsInJlZiI6ImRvY2tlci5pby9iYWxlbmFsaWIvYWFyY2g2NC1mZWRvcmE6MzctcnVuIiwicGluIjoic2hhMjU2OjYyZDgyMzU1YTk1ZGFkNjNkZmFiYjAwYWRmMDg0ZDM1YjFlODUxYTQyZWU1OTQzYjE3OGQ5ODE5NjljMmFkZjIifV19",
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:cf819d1f191d71ce750fc0b9ca71726d50fc052d7c695682165a84c2bd1eb716",
                    "sha256:03789feb1993fcca25eacd7c042a5e0da237c9f2fa4a6f2ba8ad8ddcbcc047df",
                    "sha256:df63306f05b409fc7c242f10144cdea2d6eb06bd1c0d437922509682bf196d4f",
                    "sha256:bbdfed2dd994f5e7e9323593f9ca29bfb8b828a195790f981d11f82dc13c624f",
                    "sha256:2776818030d35900166dbf5a502fabc1ff88dd330f244d1162ca86ce8a18233b",
                    "sha256:26be61103dde02ae7eeb259ca681c784e0d557bf6b12df2a1a6552473280bedd",
                    "sha256:bb747782f19553a77f709283cb961b77fe72e296acc3ead020eca924dc5fce01",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:e8b5341d265b6c5db48a0f11ed785549f85f32a54ea1909674b6c08a33a2d0f7",
                    "sha256:a623c30286ac9d16628692759bdc53e28ae39e8e61efd5ee7364a36d900d6042",
                    "sha256:24834edc35e897ebb0f69be2daa23f220350916750c2c3d6586074bbd8ec730d"
                ]
            }
        },
        "latest-20230829": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "generic-aarch64",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2023-09-02T08:58:38.635902453Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:31.895761202Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-04T18:40:58.001277299Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:614dff70ca4206841645edfd3dab48901efeefccc8ef99772f475ee9bac861ff in / "
                },
                {
                    "created": "2023-08-04T18:40:59.951513662Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-02T05:03:54.900306555Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-02T05:03:54.900306555Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-02T05:03:54.900306555Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T05:29:59.032216117Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T07:49:31.667835224Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T07:49:31.667835224Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-02T07:49:31.703166771Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T07:49:31.71048196Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T07:49:31.717951149Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T07:49:31.717951149Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-02T07:49:36.906076254Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T07:49:37.296912313Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T08:58:38.205221045Z",
                    "created_by": "LABEL io.balena.device-type=generic-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-02T08:58:38.205221045Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T08:58:38.635902453Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:cf819d1f191d71ce750fc0b9ca71726d50fc052d7c695682165a84c2bd1eb716",
                    "sha256:3c382cf512bf47b7376b28df697eafe60fb026ff08ad6264f571b1804576a531",
                    "sha256:242c49d1b03e40d91c941d76ea65e48dbfb13a6b7f6a8c0f17fa2b79bb3bf341",
                    "sha256:bba0a7dd26656a143d366c9386e193e577dde85487fea059991acb5311c337f8",
                    "sha256:0229146c9a8ae2f2d63e6a19a19370e3c3106fb917ff4041c69c337bafe20825",
                    "sha256:1b2572994e04be16791b3c500716eb39f1b1319dafd2c50ada219e826ddb81dc",
                    "sha256:4e58dca27db4d5d9ee1fdb2b00ba98010756175be3e905351b42f93464022edc",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:c6be8ccf7f63475573716aad14ea1215d6bee6236ef265531b27279cfde66460",
                    "sha256:430d5314f168d952339399356004a06369867fbb81a12c88de124e83359ed690",
                    "sha256:1eb82bdf03c1148a5816e4a3e00c8910fc70d37dee35dc007afe8037e2376b8e"
                ]
            }
        },
        "latest-20230904": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "generic-aarch64",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2023-09-09T09:10:48.662664437Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:31.895761202Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-04T18:40:58.001277299Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:614dff70ca4206841645edfd3dab48901efeefccc8ef99772f475ee9bac861ff in / "
                },
                {
                    "created": "2023-08-04T18:40:59.951513662Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T05:16:42.403188583Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T05:16:42.403188583Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T05:16:42.403188583Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T05:41:14.882541843Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T05:41:16.309377049Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T05:41:16.309377049Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T05:41:16.340188202Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T05:41:16.351150734Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T05:41:16.360211026Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T05:41:16.360211026Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T05:41:21.389664273Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T05:41:21.747711571Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T09:10:48.373996507Z",
                    "created_by": "LABEL io.balena.device-type=generic-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T09:10:48.373996507Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T09:10:48.662664437Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:cf819d1f191d71ce750fc0b9ca71726d50fc052d7c695682165a84c2bd1eb716",
                    "sha256:2c61372b1614282bfdb58c104252b37a61be492de5c3298dffc56376adfe0a8f",
                    "sha256:3892fad87609c0724cb700c7b327865d8b642316f214825299540678c84e007b",
                    "sha256:47b1691c56a15153e34460e97d0615abbde7eb4128cffd187b3c4507be55c4a0",
                    "sha256:526255e20ebb75f4e4a9cd0b179342ccc59ea09dfb95f916aad1dfd38903c411",
                    "sha256:10a91abc01c07dd01c837dc1a35597c3030ffee89a81f6dcc760a204a2da9e5a",
                    "sha256:fb61a502b5a7e114c0e1b65ffbf1f5d42041b65c52f9ecb41e2fb9a1cdcdbd97",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:cc06c053add61653ccca8a1d621c01df905dfb240d202ad2f7452d1777852952",
                    "sha256:153e452baec08f41027fff3674c18b22fab8e703bf9fe321cbd5b2239a8b437a",
                    "sha256:4b49328db1c28b0599a6dba7094df0748381930f9162e62cd99f60c6d32cb0de"
                ]
            }
        },
        "latest-20230911": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "iot-gate-imx8plus",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2023-09-12T03:05:53.243163887Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:31.895761202Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-04T18:40:58.001277299Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:614dff70ca4206841645edfd3dab48901efeefccc8ef99772f475ee9bac861ff in / "
                },
                {
                    "created": "2023-08-04T18:40:59.951513662Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T05:16:42.403188583Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T05:16:42.403188583Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T05:16:42.403188583Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T05:41:14.882541843Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T05:41:16.309377049Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T05:41:16.309377049Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T05:41:16.340188202Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T05:41:16.351150734Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T05:41:16.360211026Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T05:41:16.360211026Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T05:41:21.389664273Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T05:41:21.747711571Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-12T03:05:53.110371243Z",
                    "created_by": "LABEL io.balena.device-type=iot-gate-imx8plus",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-12T03:05:53.110371243Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-12T03:05:53.243163887Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:cf819d1f191d71ce750fc0b9ca71726d50fc052d7c695682165a84c2bd1eb716",
                    "sha256:2c61372b1614282bfdb58c104252b37a61be492de5c3298dffc56376adfe0a8f",
                    "sha256:3892fad87609c0724cb700c7b327865d8b642316f214825299540678c84e007b",
                    "sha256:47b1691c56a15153e34460e97d0615abbde7eb4128cffd187b3c4507be55c4a0",
                    "sha256:526255e20ebb75f4e4a9cd0b179342ccc59ea09dfb95f916aad1dfd38903c411",
                    "sha256:10a91abc01c07dd01c837dc1a35597c3030ffee89a81f6dcc760a204a2da9e5a",
                    "sha256:fb61a502b5a7e114c0e1b65ffbf1f5d42041b65c52f9ecb41e2fb9a1cdcdbd97",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:cc06c053add61653ccca8a1d621c01df905dfb240d202ad2f7452d1777852952",
                    "sha256:b8ed483edfdee7085e4a858d5943ce5fae61b59ccf5d6a7752f71ae9e0877449",
                    "sha256:7dcfcdfbc1c37f420235199d40c101579b8e90adcdc44c1990bf1d8334f375b0"
                ]
            }
        },
        "latest-20231103": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "iot-gate-imx8plus",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2023-11-04T16:58:36.691823802Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:31.895761202Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-06T18:42:53.905315575Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:a506790441a5cd056fb456111da480939a46667d520b519dcb9b2e2aa16aae70 in / "
                },
                {
                    "created": "2023-10-06T18:42:54.852939758Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-04T14:05:43.22598589Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-04T14:05:43.22598589Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-04T14:05:43.22598589Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T14:34:18.977818495Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T14:34:20.236374739Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T14:34:20.236374739Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-04T14:34:20.246502673Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T14:34:20.255833503Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T14:34:20.26399513Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T14:34:20.26399513Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-04T14:34:25.601224907Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T14:34:25.783838009Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T16:58:36.562666967Z",
                    "created_by": "LABEL io.balena.device-type=iot-gate-imx8plus",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-04T16:58:36.562666967Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T16:58:36.691823802Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:a37bac7c99baeb556998a67a51775b34aa6df7829fa1ff19323033c5e19837b3",
                    "sha256:768fbcc1112a55954ab49021af3e5b3e77d06892f0018801cb6a68567a441e44",
                    "sha256:b339e6005ff8696452b8a5daf08c04afc137c0da129e399cf294d19b6213af01",
                    "sha256:80e7fcb77b05762cb4af7a336c31edd97b255eb9c5e68b5e2d99fcd0c0941c00",
                    "sha256:faa025149da6c8af6245b9feb2dfa133869871b24b83291212a581a8ac861951",
                    "sha256:85fb00c475997eaa7bf88fdc4a78bd8ad8ecfcafaa4870eb4c2e610747381ba2",
                    "sha256:707dbcf7ea87fd75e1d03a7f275e36d8fcfc1b4ea1f3c867ab6830318bf147e9",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:2509d1d7a240f88f51a41393363e38c35b81e3edf67fa356b59390c21617a3ab",
                    "sha256:a4c40202ed504a23f0061115359756ce4296061beebaccdceecebd8da4e63af9",
                    "sha256:ecdaaf53e54bd152818947b8d0306f4958ea11182202936dd9defa9f17ffdaa6"
                ]
            }
        },
        "latest-20231106": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "iot-gate-imx8plus",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2023-11-06T12:31:35.98179637Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:31.895761202Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-06T18:42:53.905315575Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:a506790441a5cd056fb456111da480939a46667d520b519dcb9b2e2aa16aae70 in / "
                },
                {
                    "created": "2023-10-06T18:42:54.852939758Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T09:12:27.261337628Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T09:12:27.261337628Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T09:12:27.261337628Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T09:44:07.194449485Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T09:44:08.356242913Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T09:44:08.356242913Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T09:44:08.370923209Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T09:44:08.383861082Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T09:44:08.401598819Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T09:44:08.401598819Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T09:44:14.097449997Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T09:44:14.33458648Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T12:31:35.819901526Z",
                    "created_by": "LABEL io.balena.device-type=iot-gate-imx8plus",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T12:31:35.819901526Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T12:31:35.98179637Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:a37bac7c99baeb556998a67a51775b34aa6df7829fa1ff19323033c5e19837b3",
                    "sha256:bb42b2b57488a97c34e8f0aa9c9a04b6b5ddc51428a7f869c902e262985533fa",
                    "sha256:f41e2d07027059a658a46da06111805a1c38c357d7a263b65a57906a413afcb8",
                    "sha256:6dfd1348c7cf846716582db5414652bd266c84c3ceb084217d2c1faaa43610bd",
                    "sha256:1ef3bd9e556e1fe5e94ee5fc778405d0e160b3b2f911f7b73b841e3f2947d4ec",
                    "sha256:b00ab734246e3ab0a163af225efd04d30fbb893167c4883967444d8739b0a28b",
                    "sha256:505040d84b751f1b80aad25e47e2b5770da95393e303943d0e90452bb789625d",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:3de7d77508b1af83bfd44b6a7776ab5e9c687ecfe948f5f9d8f15802beed22b0",
                    "sha256:79f3108df0f2d1f13340291298342905907c027b115b3d6798004268b3aee89c",
                    "sha256:688938a5f4feaf8e78c732bb0f26f5b4b9bc6e12f1d5280518263bd268f74441"
                ]
            }
        },
        "latest-20231127": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "iot-gate-imx8plus",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2023-12-01T13:07:24.709335954Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:31.895761202Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-29T00:47:03.16713451Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:270e11b4c18af1c1efb8b8579be7fbda5255d56dd69f83ef7d933cfd2c685e5c in / "
                },
                {
                    "created": "2023-11-29T00:47:04.125919026Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T10:52:09.172740458Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T10:52:09.172740458Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T10:52:09.172740458Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T11:10:46.008255947Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T11:10:47.111959762Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T11:10:47.111959762Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T11:10:47.123059062Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T11:10:47.148503741Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T11:10:47.157133896Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T11:10:47.157133896Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T11:10:50.883923644Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T11:10:51.046020579Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T13:07:24.562017117Z",
                    "created_by": "LABEL io.balena.device-type=iot-gate-imx8plus",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T13:07:24.562017117Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T13:07:24.709335954Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:22de68abb450063be7e40efd22fd3b41bec469efafdd95e25c65998648e52b28",
                    "sha256:60f2f571d3fb1d1d2155d703033185efdcb8fd06f11360aff3752c6009ddbba5",
                    "sha256:8bb3ecdba476409248d260241fff01266e4176e947fe811a5efe5456870e671e",
                    "sha256:6852dc1f1a771f4a7632382350c1dbaa2ae3e16802b4884d04618e03763e8376",
                    "sha256:9db2458df0d1ffca59509d5dbd49436ef952483f1042d53531ca90ba7d6de9e9",
                    "sha256:8d401a597be69855ebfaf84921f07b57da8bb7a5c49c370999b998f6062358a2",
                    "sha256:05f9f870334e6de793d303f103d1f1b35f7df1ff21724f7ebaeb6fc561bccc2c",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:24546f46791bf568236132bceae1cdf41c9ca9f6d3e09077cab2bc32ee6bb76c",
                    "sha256:0ee6e1af05fed5090277a4b66a20553164e97d4f26af60bcbbf5e8e130a0424b",
                    "sha256:ec20f57723356e56d8c7929c3a784ed0aae50b2d6f8cde6bb310e89190f528ca"
                ]
            }
        },
        "latest-20231204": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "iot-gate-imx8plus",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2023-12-06T22:55:31.420425013Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:31.895761202Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-29T00:47:03.16713451Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:270e11b4c18af1c1efb8b8579be7fbda5255d56dd69f83ef7d933cfd2c685e5c in / "
                },
                {
                    "created": "2023-11-29T00:47:04.125919026Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T20:40:21.575448793Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T20:40:21.575448793Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T20:40:21.575448793Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T20:59:06.4416038Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T20:59:07.14149679Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T20:59:07.14149679Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T20:59:07.150718208Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T20:59:07.159290685Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T20:59:07.187587582Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T20:59:07.187587582Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T20:59:10.850419463Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T20:59:11.010511508Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T22:55:31.287807643Z",
                    "created_by": "LABEL io.balena.device-type=iot-gate-imx8plus",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T22:55:31.287807643Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T22:55:31.420425013Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:22de68abb450063be7e40efd22fd3b41bec469efafdd95e25c65998648e52b28",
                    "sha256:2c6b0df21f9efd51a24a59463b9265452ccc9cf8a26908c50d2742c0e67683bd",
                    "sha256:906012c4f278d0d6c4a614afd4c812fc55bc367d28aac2c10cbdd33ac6ec80b8",
                    "sha256:34fc306b51c5f84676518d54cf67a097f48bfc8e79fb8c0ffc71ed9b2d1b5def",
                    "sha256:aa005d370b40094b326443ce4f1b6d04a780598588bd8f8fa1dc601171d59314",
                    "sha256:e580b4505982459166845d47c3159777541e000c8826a05635c6f84f62f03011",
                    "sha256:79990d4ff119d7188fd5fdcaaa04c391747be11fefbbe682a6a2c495c8ca3a6b",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:0aff9ccfdfd88ab9194d2d15e49264900a8942406276260bf5fb479d637d2075",
                    "sha256:316c5f8b0fbeb6ffb3a0ce73220b175e794d17f6e310a3e0bc7a2ef50c645342",
                    "sha256:8ce4d7578ff5a2e8887d47cae9a1c35fc64d1636cfc68bbe8c15b48010e4dd60"
                ]
            }
        },
        "latest-20240205": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "iot-gate-imx8plus",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2024-02-05T02:46:30.94219159Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:31.895761202Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-29T00:47:03.16713451Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:270e11b4c18af1c1efb8b8579be7fbda5255d56dd69f83ef7d933cfd2c685e5c in / "
                },
                {
                    "created": "2023-11-29T00:47:04.125919026Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-05T00:26:08.862006831Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-05T00:26:08.862006831Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-05T00:26:08.862006831Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T00:44:51.352289509Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T00:44:52.031271896Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T00:44:52.031271896Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-05T00:44:52.040913956Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T00:44:52.086913794Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T00:44:52.096058179Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T00:44:52.096058179Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-05T00:44:55.875508418Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T00:44:56.018376913Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T02:46:30.829833069Z",
                    "created_by": "LABEL io.balena.device-type=iot-gate-imx8plus",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-05T02:46:30.829833069Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T02:46:30.94219159Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:22de68abb450063be7e40efd22fd3b41bec469efafdd95e25c65998648e52b28",
                    "sha256:7d94e909dc19f31d9248e1ca5731a04da35c29e754dd69d2fb5a44a2502cc818",
                    "sha256:ed6509b907c0701f8a2a621cb39dbd26d066f869bf0b780990c71b717675bb3d",
                    "sha256:e03ba5a1224f9b985f2d94275263fa36221b3ab01f59437a07d3c1a623b76d77",
                    "sha256:9be68f287ebf7d1727a82714c098ca3ac0e021a4f0bd91d94de4992f010d993f",
                    "sha256:a5b159b9ba50945bb72f35a268a6bd8fca087febe08b2ec49f6982b5d39309e7",
                    "sha256:5efcacbddce62383428c47d9f0b7b716feaa80d8781fe6dd2b1dc81f391509df",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:4491643620a3eb30fa973704b1de6c31cc71b0330dda8cb2847cc88b0981d732",
                    "sha256:b2d88aa29c18001e4fcb693150a36e72f0dbafe39051ee215465168339f864fd",
                    "sha256:86521cd5b53fa059ea52a2ddcdd18f2a7c7e0e90e30865b1d1f18970eac65b84"
                ]
            }
        },
        "latest-20240227": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "iot-gate-imx8plus",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2024-03-01T23:22:38.162250541Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:31.895761202Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-29T00:47:03.16713451Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:270e11b4c18af1c1efb8b8579be7fbda5255d56dd69f83ef7d933cfd2c685e5c in / "
                },
                {
                    "created": "2023-11-29T00:47:04.125919026Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T20:49:58.705358685Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T20:49:58.705358685Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T20:49:58.705358685Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:08:24.834287933Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:08:25.565567755Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:08:25.565567755Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T21:08:25.579271093Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:08:25.617204263Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:08:25.629384601Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:08:25.629384601Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T21:08:29.321790107Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:08:29.46619614Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T23:22:38.053697448Z",
                    "created_by": "LABEL io.balena.device-type=iot-gate-imx8plus",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T23:22:38.053697448Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T23:22:38.162250541Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:22de68abb450063be7e40efd22fd3b41bec469efafdd95e25c65998648e52b28",
                    "sha256:bfe341409759f9ccd364ecb2d335246560d19282f3ecf321c53836e101a82d2a",
                    "sha256:22279a1bcbb3b6a49c8d9ada414e0b58c5c83f35e20c9a33acc65e0aedb733a1",
                    "sha256:59b3dbe842a8cbc03ed09e65a15a87e8c46f6653b87eb93c5b37d8ab77060acf",
                    "sha256:2ad87538d509ffa4457cec4d29a36d570c8392257dab445452209d4097b7bf52",
                    "sha256:4b3f303bc53eefd36ad3db9ee937836bf0e5855a96ec2546c67cb8238fa8c5bc",
                    "sha256:27f44cee2cfb128916d178e2e1dd253065b766fcffe0f37cdb2588702c65bd5f",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:7f5845d6da8e4b02efd4b375c5222854a386a7b02c491fe3b96307345b96014d",
                    "sha256:a3ac2e153463933f1666d85b7eb6378535612a047bdd475eda21d486a894b92f",
                    "sha256:6f8dd89a74009292ee644b2c2ea6dde8488e5dae9ebf8cbd127f77b88f8bf4fc"
                ]
            }
        },
        "latest-20240304": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "iot-gate-imx8plus",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2024-03-05T10:49:02.924094Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:31.895761202Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-29T00:47:03.16713451Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:270e11b4c18af1c1efb8b8579be7fbda5255d56dd69f83ef7d933cfd2c685e5c in / "
                },
                {
                    "created": "2023-11-29T00:47:04.125919026Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T08:24:13.360409226Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T08:24:13.360409226Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T08:24:13.360409226Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T08:43:22.770169859Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T08:43:23.650621519Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T08:43:23.650621519Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T08:43:23.66033272Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T08:43:23.670216283Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T08:43:23.695421657Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T08:43:23.695421657Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T08:43:27.455502812Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T08:43:27.593974423Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T10:49:02.81018686Z",
                    "created_by": "LABEL io.balena.device-type=iot-gate-imx8plus",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T10:49:02.81018686Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T10:49:02.924094Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:22de68abb450063be7e40efd22fd3b41bec469efafdd95e25c65998648e52b28",
                    "sha256:28463901e499aa0a1515b57d0fbafa9cb9a2cc02cc10ed1687c180941c557184",
                    "sha256:0ca6f2444de4ad55ab4af4fd74364d376cec4fab74ebda60cba78c9fa2d7e649",
                    "sha256:cfc10fd96b96916769b790f45b5a4f0a1a17202f2532d659330de963d4494ebf",
                    "sha256:d2c34fbda1de7685d96923948d480fbe0ebab10b9087bfebda73744dbe2a6f9a",
                    "sha256:0d88f38f1e25f8d79cc6f17c26de206e21378fdd492c88062ab3e718003d32df",
                    "sha256:01e1144fabf916d9df9dbc69c087247ccbb1e57b391ed28f7dac24153a50d7b2",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:7ad9ead66349340e94a99303f594e85c786a6fabee7368153801d079722794bc",
                    "sha256:6d9bc439379dc6b8df2f5253f7c1eb3eab4b7df41d36779811aef70800e08407",
                    "sha256:26ba84d0e46a6d26e818ccc2fbc28157723ab106845216c395ca1e47649fa446"
                ]
            }
        },
        "latest-20240401": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "iot-gate-imx8plus",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                }
            },
            "created": "2024-04-01T23:47:50.81840626Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:31.895761202Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-29T00:47:03.16713451Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:270e11b4c18af1c1efb8b8579be7fbda5255d56dd69f83ef7d933cfd2c685e5c in / "
                },
                {
                    "created": "2023-11-29T00:47:04.125919026Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T21:26:29.343455526Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T21:26:29.343455526Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T21:26:29.343455526Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T21:45:10.957762154Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T21:45:11.852141047Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T21:45:11.852141047Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T21:45:11.862471903Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T21:45:11.872331413Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T21:45:11.898584749Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T21:45:11.898584749Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T21:45:15.686171825Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T21:45:15.820771715Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T23:47:50.707520722Z",
                    "created_by": "LABEL io.balena.device-type=iot-gate-imx8plus",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T23:47:50.707520722Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T23:47:50.81840626Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:22de68abb450063be7e40efd22fd3b41bec469efafdd95e25c65998648e52b28",
                    "sha256:3a6d39f67382783e2c69d9a448aa59d1d7654260210364d05c2cae2ef469e3c8",
                    "sha256:8b316e0949cd1905304ca774963ddae530565f690a65de9db1a2dafa9aed0363",
                    "sha256:7fa4949a4c79caf7d749cc4abcbc241a5dd3a5c8d0155458cf6d4d83ac483646",
                    "sha256:0a0eea417236fa5be4e06c1d20766fd9f3b0e064419a66f356dea0f1f6d794df",
                    "sha256:ad31ce618fd1f26b74bc2900fbd27319ed86917e85375f90b57d28b291156d51",
                    "sha256:7b8582873ef4cde2aca83ece090a3993ca7c4f8fe0b13c3b0b064f08c7b21c21",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:8050b5f7d3d161f91b3bad0576691d8640130b32c0b8f23db87cdd4fee47c82e",
                    "sha256:c51d3491b64019f87ef0efcdbc52139676fb9f32add80fde849c9fa5d585dc91",
                    "sha256:66dab9d052d7becc66f0b8b7ae75872806657705cd92ef92ca7ff6d4e51a4240"
                ]
            }
        },
        "latest-20240408": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "iot-gate-imx8plus",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                }
            },
            "created": "2024-04-09T20:02:56.694145507Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:31.895761202Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-29T00:47:03.16713451Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:270e11b4c18af1c1efb8b8579be7fbda5255d56dd69f83ef7d933cfd2c685e5c in / "
                },
                {
                    "created": "2023-11-29T00:47:04.125919026Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:52.915602222Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:52.915602222Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:52.915602222Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:54:04.100191166Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:54:04.963844501Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:54:04.963844501Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:54:04.973366628Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:54:05.001513857Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:54:05.024710968Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:54:05.024710968Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:54:08.797015979Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:54:08.943058393Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T20:02:56.566729467Z",
                    "created_by": "LABEL io.balena.device-type=iot-gate-imx8plus",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T20:02:56.566729467Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T20:02:56.694145507Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:22de68abb450063be7e40efd22fd3b41bec469efafdd95e25c65998648e52b28",
                    "sha256:03dd9a4ed991dc43e9a504ad71941782bb6fd4cd57f8ade649bbe25b622e3902",
                    "sha256:d24e8e6aec171dc7068d2c19b85d8c6341381b2f0cf4e1d1a20d5419f2d1ec53",
                    "sha256:e743a07ebcce27b755341d992eb4148fe86bd04481c6d8f2b6fe7364a942af19",
                    "sha256:1c988fbb0bdd3374b1f72bebc1953bd62853c7e33608dbc885ff64eba44dc1eb",
                    "sha256:7fad6968fdbdd1afee5f76e3b2f3df1829677bc85be4fa920cb57db14562699c",
                    "sha256:2999088cf700c485af0973e03dd5e2ff9d96b3f604f5908307f3edb5377c6d58",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:a75c43802eb36b20a7183fe5c30e33ef495a904237a7483d5c73c1df1691887b",
                    "sha256:ba82a540cbc6793313055baaceac216ac219896739f6c0d5c70520d7498ba8f0",
                    "sha256:e6c9a7824e2c775d74446a1eca6572ba467b4af264e68ed89d05bc8535d080e4"
                ]
            }
        },
        "latest-20240429": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "iot-gate-imx8plus",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                }
            },
            "created": "2024-05-06T10:39:20.130192892Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:31.895761202Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-29T00:47:03.16713451Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:270e11b4c18af1c1efb8b8579be7fbda5255d56dd69f83ef7d933cfd2c685e5c in / "
                },
                {
                    "created": "2023-11-29T00:47:04.125919026Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T09:28:47.993183335Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T09:28:47.993183335Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T09:28:47.993183335Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T09:47:56.501476974Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T09:47:57.631980985Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T09:47:57.631980985Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T09:47:57.644124262Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T09:47:57.678847981Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T09:47:57.688494096Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T09:47:57.688494096Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T09:48:01.526529414Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T09:48:01.665893428Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T10:39:20.006293092Z",
                    "created_by": "LABEL io.balena.device-type=iot-gate-imx8plus",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T10:39:20.006293092Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T10:39:20.130192892Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:22de68abb450063be7e40efd22fd3b41bec469efafdd95e25c65998648e52b28",
                    "sha256:ef64ad49ccf58709af070779ae49d014558d78a8b6a21fcc279c09ddac79e6c9",
                    "sha256:486e799e950e2b998ed0a1a7221aed44130002259c2b437524c7a8a72b725a56",
                    "sha256:5ad52f9d14deab1b2c3a79dfb68bf730440e209f5926a2cd2ebd561c519a08de",
                    "sha256:73001e4334a2e5a98b50faf87e712eaf851af09ac903e83a569150844ce9eda1",
                    "sha256:696c197b14bb7731bf0a36bbdc5e5272937b693f192b143e02dac747a1305ba1",
                    "sha256:f27b4f97c199fdc59cc49eb91fc7a348daf160285ca6bfce88ede5b64e4bb0a9",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:22341517b8222bb5810db07c816fbd0de10749523856c0263caf14789e77d27d",
                    "sha256:108db07c780851f92a4d8ef0c1926797631a48d81f409bc8850b3a37f31fe4bb",
                    "sha256:5019b6b6e2ea25b8b42acd497a8ea0bb3aa9edf8a150d35e826ed803ec8d3f57"
                ]
            }
        },
        "latest-build": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "iot-gate-imx8plus",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                }
            },
            "created": "2024-05-06T10:39:41.599323029Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:31.895761202Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-29T00:47:03.16713451Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:270e11b4c18af1c1efb8b8579be7fbda5255d56dd69f83ef7d933cfd2c685e5c in / "
                },
                {
                    "created": "2023-11-29T00:47:04.125919026Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T09:28:43.57977131Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T09:28:43.57977131Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T09:28:43.57977131Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T09:47:19.941756159Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T10:20:57.000511545Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-clients \t\tsubversion \t\tautoconf \t\tautomake \t\tbzip2-devel \t\tglib2-devel \t\tgcc \t\tgcc-c++ \t\tImageMagick \t\tImageMagick-devel \t\tkernel-devel \t\tlibcurl-devel \t\tlibevent-devel \t\tlibffi-devel \t\tlibjpeg-devel \t\tlibsqlite3x-devel \t\tlibxml2-devel \t\tlibxslt-devel \t\tlibyaml-devel \t\tmysql-devel \t\tmake \t\tncurses-devel \t\topenssl-devel \t\tpostgresql-devel \t\treadline-devel \t\tsqlite-devel \t\tzlib-devel \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T10:20:58.118390256Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T10:20:58.118390256Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T10:20:58.12798187Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T10:20:58.136722317Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T10:20:58.164403522Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T10:20:58.164403522Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T10:21:01.984279759Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T10:21:02.133999332Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T10:39:41.484219958Z",
                    "created_by": "LABEL io.balena.device-type=iot-gate-imx8plus",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T10:39:41.484219958Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T10:39:41.599323029Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:22de68abb450063be7e40efd22fd3b41bec469efafdd95e25c65998648e52b28",
                    "sha256:40252cde73a60fe319f0dc295c7b1e421631974cfbe16656b81f7c86e773254e",
                    "sha256:4a4de46c8a70d5743384977bb42ebacdec5e3cb5490677a398f1d36366084aab",
                    "sha256:1523c4d5a73b8f8409b03635be1be78f6592c3915fd459908ffe5c04fb7ca684",
                    "sha256:3165ae98a25560d143d61c6f8a3cc9b4f73d0c009bfd9de33cefc4747c481229",
                    "sha256:802383c11ce70505808614d078d961ddc3cfaf46a58ac795624520a44e2a7860",
                    "sha256:0590d31cf7630143e0d0e5677bb4407b0d1c0b49a56ef3a87a860603dcea1282",
                    "sha256:6f5ffd7cbb1f8862606014326bb38c35022c8eb43d2a0aff0af32878db49dbdc",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:8c0b4113e6a87b2271a715a924b205a5c9534f5b51c4f3d05b39a48bb6ad75be",
                    "sha256:8758cb7509bfd7224c0a5331ba8bc629479d9e98ab727b0f5fb7261197212daa",
                    "sha256:c39cd3a2ce47e0850a8f29b00283fbc12ffda9edc18a0a64ab0368a4352c82a0"
                ]
            }
        },
        "latest-build-20230502": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Cmd": null,
                "Image": "sha256:4a37ca661516a04bd998efca4b98546e8251a303a8e28dc0e5a5d633427fce40",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "OnBuild": null,
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-tx2",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                }
            },
            "container": "53b7ed911177585f7fd0de6488f09d19424bbde11b744fc6308a6f0e4392c17f",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "[ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info"
                ],
                "Image": "sha256:4a37ca661516a04bd998efca4b98546e8251a303a8e28dc0e5a5d633427fce40",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-tx2",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                }
            },
            "created": "2023-05-08T15:51:00.41171855Z",
            "docker_version": "20.10.21",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:31.895761202Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-13T20:39:36.516425489Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:8f1c4c2e60330243e66c553f2377951b11c09601b874f6c778e90ff74c6dc376 in / "
                },
                {
                    "created": "2023-03-13T20:39:37.717809378Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-04-02T00:15:42.184062394Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL io.balena.architecture=aarch64",
                    "empty_layer": true
                },
                {
                    "created": "2023-04-02T00:15:42.325999277Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "empty_layer": true
                },
                {
                    "created": "2023-04-02T00:15:42.488342363Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:24916d641d0ee761d2bebd935412ac2263719e3f48829dd83555470573235ed9 in /usr/bin "
                },
                {
                    "created": "2023-04-02T00:34:27.312050054Z",
                    "created_by": "/bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\""
                },
                {
                    "created": "2023-04-02T01:07:59.036160048Z",
                    "created_by": "/bin/sh -c dnf install -y \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-clients \t\tsubversion \t\tautoconf \t\tautomake \t\tbzip2-devel \t\tglib2-devel \t\tgcc \t\tgcc-c++ \t\tImageMagick \t\tImageMagick-devel \t\tkernel-devel \t\tlibcurl-devel \t\tlibevent-devel \t\tlibffi-devel \t\tlibjpeg-devel \t\tlibsqlite3x-devel \t\tlibxml2-devel \t\tlibxslt-devel \t\tlibyaml-devel \t\tmysql-devel \t\tmake \t\tncurses-devel \t\topenssl-devel \t\tpostgresql-devel \t\treadline-devel \t\tsqlite-devel \t\tzlib-devel \t&& dnf clean all"
                },
                {
                    "created": "2023-04-02T01:08:09.841785321Z",
                    "created_by": "/bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end"
                },
                {
                    "created": "2023-04-02T01:08:09.983966766Z",
                    "created_by": "/bin/sh -c #(nop)  ENV UDEV=off",
                    "empty_layer": true
                },
                {
                    "created": "2023-04-02T01:08:10.081807313Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:0e8e5e7fcb5ff4b4caac2552d3c5cbf829703430466832566297680a5b09c62b in /usr/bin/entry.sh "
                },
                {
                    "created": "2023-04-02T01:08:10.176885214Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:207cdc191bada5970fb21d3481971b4a391e6e52061bd584dc75404c36d01fcf in /usr/bin/balena-info "
                },
                {
                    "created": "2023-04-02T01:08:10.273795214Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:def7f364bfe93992865dfba2017def9a3c407b6cf8ac0233dcd0aabaa9e4b75b in /usr/bin/balena-idle "
                },
                {
                    "created": "2023-04-02T01:08:10.401435688Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-04-02T01:08:14.892977057Z",
                    "created_by": "/bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh",
                    "empty_layer": true
                },
                {
                    "created": "2023-04-02T01:08:15.40879778Z",
                    "created_by": "/bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info"
                },
                {
                    "created": "2023-05-08T15:35:27.507084484Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL io.balena.device-type=jetson-tx2",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-08T15:50:59.459507433Z",
                    "created_by": "/bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all"
                },
                {
                    "created": "2023-05-08T15:51:00.41171855Z",
                    "created_by": "/bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:6fa23825e7d36de818dd635e6ddcfb1a63b42c8d2a2ebe9dc929a2d8e763fe3f",
                    "sha256:07b0d4da5e04230bb8db9790c1ff3923ecfeaf3f1e9a415e2aab47b5a9a3c0f1",
                    "sha256:48150357fa88a44cf5998c4a5b7e13f8107d4a0b881d13e4aca84aebe66babea",
                    "sha256:b28e107bb5b4423beb3e021a3ae8de02ae8a75b11e7962eac2da09ba21abcd3a",
                    "sha256:9b5d17a3d0fd1ca6d1caf3d580dbd9603df35d8e2f1c7278ee7b81f65cce5c1c",
                    "sha256:9e1d1e33076c40c4ec0061c1d3b125f325de44c8cc53c00d77576c780cbd036f",
                    "sha256:544352c4f6d11ee37fb7da9c382d01ed1abd016fbb6384c22680db5394854077",
                    "sha256:26dd29c6aeafa7f795decab7fb29f5c7a71e189af30eeb2d1821285b35f72e7b",
                    "sha256:143772aaa266cd365f4c2df12f34fdff9c8f9f314a57b150304e93f85165db5b",
                    "sha256:4e04a01a884b71a770542e60d0484d1e65e30dedef8f4fd905119a029eee38cf",
                    "sha256:5fd9297a2a9956843ca24ebf34c035b9588ad63706d317a1899b0208dfe66868"
                ]
            }
        },
        "latest-build-20230530": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Cmd": null,
                "Image": "sha256:686d9b56ae56c466d4b50b94f4194bda18f747f1b44590db86101ebf66e6e66f",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "OnBuild": null,
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-tx2",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                }
            },
            "container": "421a8d20f48a90594a00d553e4c4ce1a1e5774bb17965f3831dbf8ef33818345",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "[ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info"
                ],
                "Image": "sha256:686d9b56ae56c466d4b50b94f4194bda18f747f1b44590db86101ebf66e6e66f",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-tx2",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                }
            },
            "created": "2023-06-07T01:04:10.557378821Z",
            "docker_version": "20.10.21",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:31.895761202Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-31T18:09:14.311114615Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:ba657df1d10e8dc0a769b25e4ab09a73bca3a89df41b3a1b4e10f5fef058d1de in / "
                },
                {
                    "created": "2023-05-31T18:09:15.547149675Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-05T02:03:26.945834815Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL io.balena.architecture=aarch64",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-05T02:03:27.13778573Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-05T02:03:27.332819661Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:24916d641d0ee761d2bebd935412ac2263719e3f48829dd83555470573235ed9 in /usr/bin "
                },
                {
                    "created": "2023-06-05T02:24:26.189516816Z",
                    "created_by": "/bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\""
                },
                {
                    "created": "2023-06-05T03:01:45.293037492Z",
                    "created_by": "/bin/sh -c dnf install -y \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-clients \t\tsubversion \t\tautoconf \t\tautomake \t\tbzip2-devel \t\tglib2-devel \t\tgcc \t\tgcc-c++ \t\tImageMagick \t\tImageMagick-devel \t\tkernel-devel \t\tlibcurl-devel \t\tlibevent-devel \t\tlibffi-devel \t\tlibjpeg-devel \t\tlibsqlite3x-devel \t\tlibxml2-devel \t\tlibxslt-devel \t\tlibyaml-devel \t\tmysql-devel \t\tmake \t\tncurses-devel \t\topenssl-devel \t\tpostgresql-devel \t\treadline-devel \t\tsqlite-devel \t\tzlib-devel \t&& dnf clean all"
                },
                {
                    "created": "2023-06-05T03:01:49.62963139Z",
                    "created_by": "/bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end"
                },
                {
                    "created": "2023-06-05T03:01:49.818413016Z",
                    "created_by": "/bin/sh -c #(nop)  ENV UDEV=off",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-05T03:01:49.975317929Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:0e8e5e7fcb5ff4b4caac2552d3c5cbf829703430466832566297680a5b09c62b in /usr/bin/entry.sh "
                },
                {
                    "created": "2023-06-05T03:01:50.116216694Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:207cdc191bada5970fb21d3481971b4a391e6e52061bd584dc75404c36d01fcf in /usr/bin/balena-info "
                },
                {
                    "created": "2023-06-05T03:01:50.250492914Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:def7f364bfe93992865dfba2017def9a3c407b6cf8ac0233dcd0aabaa9e4b75b in /usr/bin/balena-idle "
                },
                {
                    "created": "2023-06-05T03:01:50.416993251Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-05T03:01:55.327132834Z",
                    "created_by": "/bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-05T03:01:56.084477397Z",
                    "created_by": "/bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info"
                },
                {
                    "created": "2023-06-07T00:46:07.025876352Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL io.balena.device-type=jetson-tx2",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-07T01:04:09.397873291Z",
                    "created_by": "/bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all"
                },
                {
                    "created": "2023-06-07T01:04:10.557378821Z",
                    "created_by": "/bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:249911891a8331ea3bbb5bf844c0feaad6066fdc936878a8c464416b1d78b22e",
                    "sha256:bc78f7b899700e4367bb848ecbc496f06865e82c6015e2a802406742f1cbefcf",
                    "sha256:284c09b1cb3f1977b7c56605e5ae1944d5ce3a83c3d77c0a22357607feb3701c",
                    "sha256:01afbd6b83ae4fc87863dfbad42a1c3e0c8806bafbe276dfa5315915fcc881ee",
                    "sha256:76f5f3f9ce8cf3005d94fbc917b8789e2d8f382bc97ddb4b1cc9e7db29156f51",
                    "sha256:27b52a798d0269cfb7e550d73aeccfc63ff23091a9c83a053e66e55c9ce4df69",
                    "sha256:d5aaba1e9572853e63c03a0b5cd6e47eb7aa1fdec55f5e70c94df0348a86796c",
                    "sha256:260c00f37243705b4e595f97e13fabdc5be2e3004512988b2b6180eb394f0b14",
                    "sha256:eea5c2401bfd5b9bad6853bd81414852413716837a63fbe494057cee78568c16",
                    "sha256:b298979a74b29b88bb589442ee59d54d706e0cb3b69c743312787234451cfee5",
                    "sha256:24bd21b3897c3e9de03ce724f0ea0300955d57abb938ec61d4e66e6e1586d031"
                ]
            }
        },
        "latest-build-20230803": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "generic-aarch64",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2023-08-04T22:44:56.277015004Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:31.895761202Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-04T18:40:58.001277299Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:614dff70ca4206841645edfd3dab48901efeefccc8ef99772f475ee9bac861ff in / "
                },
                {
                    "created": "2023-08-04T18:40:59.951513662Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-04T18:54:04.279599867Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-04T18:54:04.279599867Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-04T18:54:04.279599867Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-04T19:20:03.223955138Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-04T20:06:40.98054953Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-clients \t\tsubversion \t\tautoconf \t\tautomake \t\tbzip2-devel \t\tglib2-devel \t\tgcc \t\tgcc-c++ \t\tImageMagick \t\tImageMagick-devel \t\tkernel-devel \t\tlibcurl-devel \t\tlibevent-devel \t\tlibffi-devel \t\tlibjpeg-devel \t\tlibsqlite3x-devel \t\tlibxml2-devel \t\tlibxslt-devel \t\tlibyaml-devel \t\tmysql-devel \t\tmake \t\tncurses-devel \t\topenssl-devel \t\tpostgresql-devel \t\treadline-devel \t\tsqlite-devel \t\tzlib-devel \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-04T20:06:42.236381253Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-04T20:06:42.236381253Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-04T20:06:42.272446231Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-04T20:06:42.282693953Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-04T20:06:42.291191972Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-04T20:06:42.291191972Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-04T20:06:47.729599987Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-04T20:06:48.236078525Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-04T22:44:55.937469412Z",
                    "created_by": "LABEL io.balena.device-type=generic-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-04T22:44:55.937469412Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-04T22:44:56.277015004Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "moby.buildkit.buildinfo.v1": "eyJmcm9udGVuZCI6ImRvY2tlcmZpbGUudjAiLCJhdHRycyI6eyJmaWxlbmFtZSI6IkRvY2tlcmZpbGUifSwic291cmNlcyI6W3sidHlwZSI6ImRvY2tlci1pbWFnZSIsInJlZiI6ImRvY2tlci5pby9iYWxlbmFsaWIvYWFyY2g2NC1mZWRvcmE6MzctYnVpbGQiLCJwaW4iOiJzaGEyNTY6NWU5NDIwYTY2ZWMyMDgzY2JmZGFlODg2YTY2ZjU5MzlhMDE0N2ZjM2M4ZjdkM2Q4ZmFiNzdmN2Q3NGI3ZTRkZSJ9XX0=",
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:cf819d1f191d71ce750fc0b9ca71726d50fc052d7c695682165a84c2bd1eb716",
                    "sha256:03789feb1993fcca25eacd7c042a5e0da237c9f2fa4a6f2ba8ad8ddcbcc047df",
                    "sha256:df63306f05b409fc7c242f10144cdea2d6eb06bd1c0d437922509682bf196d4f",
                    "sha256:9fe94c7ca324a58111227943d2000d24e1ce8bf513f893a4cadda54c6636f678",
                    "sha256:8ab92a8d50bc492a9de12c120c00ec741241d5266d7456bbdbc08c9e80cdbfb0",
                    "sha256:71c7356ae70cfd65639daf61750af2a0dcc61f319ce61904d17eb6a8f02bb9e6",
                    "sha256:e88bcc88b053f78650c3a40dc402d64d8172dafaf3cad6f367d7d4be4b626c49",
                    "sha256:a34849352632eadb7ec25a5871a6715fb515a2b525c5c326a3f116784a7bd705",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:d63ca7d31e71a3333cbb911a4ca10d90d0be725845687f9c21ad95f2ba2a29ff",
                    "sha256:b3a0f99cf2c083b6513313df72ffae556e28cf1c6077cf60f297765f3c91fd03",
                    "sha256:2205b26d69e848938f5a4633d373ceeb806ad668ce02afb5646ae36154cf9df2"
                ]
            }
        },
        "latest-build-20230829": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "generic-aarch64",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2023-09-02T09:24:28.949968702Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:31.895761202Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-04T18:40:58.001277299Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:614dff70ca4206841645edfd3dab48901efeefccc8ef99772f475ee9bac861ff in / "
                },
                {
                    "created": "2023-08-04T18:40:59.951513662Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-02T05:03:54.900306555Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-02T05:03:54.900306555Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-02T05:03:54.900306555Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T05:29:59.032216117Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T06:16:46.631575413Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-clients \t\tsubversion \t\tautoconf \t\tautomake \t\tbzip2-devel \t\tglib2-devel \t\tgcc \t\tgcc-c++ \t\tImageMagick \t\tImageMagick-devel \t\tkernel-devel \t\tlibcurl-devel \t\tlibevent-devel \t\tlibffi-devel \t\tlibjpeg-devel \t\tlibsqlite3x-devel \t\tlibxml2-devel \t\tlibxslt-devel \t\tlibyaml-devel \t\tmysql-devel \t\tmake \t\tncurses-devel \t\topenssl-devel \t\tpostgresql-devel \t\treadline-devel \t\tsqlite-devel \t\tzlib-devel \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T06:16:48.035123609Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T06:16:48.035123609Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-02T06:16:48.067258907Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T06:16:48.07462983Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T06:16:48.080880149Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T06:16:48.080880149Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-02T06:16:53.409164676Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T06:16:53.848156022Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T09:24:28.515363017Z",
                    "created_by": "LABEL io.balena.device-type=generic-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-02T09:24:28.515363017Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T09:24:28.949968702Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:cf819d1f191d71ce750fc0b9ca71726d50fc052d7c695682165a84c2bd1eb716",
                    "sha256:3c382cf512bf47b7376b28df697eafe60fb026ff08ad6264f571b1804576a531",
                    "sha256:242c49d1b03e40d91c941d76ea65e48dbfb13a6b7f6a8c0f17fa2b79bb3bf341",
                    "sha256:c6c2635cdf508755fa8455319712244a29ced4a0d792586aeaf1912b0d335377",
                    "sha256:5ed81a62153eb2f5ceb8f787d2550f58610247dd9b0d3223bb381815f912eaaf",
                    "sha256:ab8c7b9a29c91a360b8df247865bddc76a084600df596a14ec105559e3138cca",
                    "sha256:cb950ae7ff296628577873bfb3acef29547aeaa03711389c599d18e958a166ea",
                    "sha256:62678cf4e815ad96ca4f95cbd3605e77983ad6684c6f258a7378f1dcf1157fe4",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:ce495f5870fa561aea5a593d5bdea30b350f4dab2b5f5dc48dc324777335d604",
                    "sha256:096a6c71280edd96338674261f2d58ef7e8d872a9f29e4963b3b1eb323e827af",
                    "sha256:202d7135bf96f0744ead45939c6b02ab9f43d3286aa70007e0b87e09140db7ed"
                ]
            }
        },
        "latest-build-20230904": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "generic-aarch64",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2023-09-09T08:47:31.514218919Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:31.895761202Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-04T18:40:58.001277299Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:614dff70ca4206841645edfd3dab48901efeefccc8ef99772f475ee9bac861ff in / "
                },
                {
                    "created": "2023-08-04T18:40:59.951513662Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T05:16:42.403188583Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T05:16:42.403188583Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T05:16:42.403188583Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T05:41:14.882541843Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T06:27:10.219323725Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-clients \t\tsubversion \t\tautoconf \t\tautomake \t\tbzip2-devel \t\tglib2-devel \t\tgcc \t\tgcc-c++ \t\tImageMagick \t\tImageMagick-devel \t\tkernel-devel \t\tlibcurl-devel \t\tlibevent-devel \t\tlibffi-devel \t\tlibjpeg-devel \t\tlibsqlite3x-devel \t\tlibxml2-devel \t\tlibxslt-devel \t\tlibyaml-devel \t\tmysql-devel \t\tmake \t\tncurses-devel \t\topenssl-devel \t\tpostgresql-devel \t\treadline-devel \t\tsqlite-devel \t\tzlib-devel \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T06:27:11.639619237Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T06:27:11.639619237Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T06:27:11.672307839Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T06:27:11.703609828Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T06:27:11.752254777Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T06:27:11.752254777Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T06:27:16.692189405Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T06:27:17.113557601Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T08:47:31.226768824Z",
                    "created_by": "LABEL io.balena.device-type=generic-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T08:47:31.226768824Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T08:47:31.514218919Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:cf819d1f191d71ce750fc0b9ca71726d50fc052d7c695682165a84c2bd1eb716",
                    "sha256:2c61372b1614282bfdb58c104252b37a61be492de5c3298dffc56376adfe0a8f",
                    "sha256:3892fad87609c0724cb700c7b327865d8b642316f214825299540678c84e007b",
                    "sha256:0f4a521d2c6cf8cad7b2eb4df330989890e4ec58bcdb8c8d3f1e7b953bbbd9cf",
                    "sha256:8d6c3fbf20d052b4dfc381066e982bdd6112441240ae7ffbc2e5e89595e79a0c",
                    "sha256:561d71383dd66b871476f9e5ff3274483fb9574952685d747d4e55904f1ee3fb",
                    "sha256:b19528952c8ac1375dbbc0465be58dc121fb846ce4e1e89645c716509faaf601",
                    "sha256:c8b95dba26be42e442fdec1f2fd5073216020274f421a0e7cf5b4abe1599f822",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:bf40c484f55f8935bf800843234fd2cadb1c9404047d95d9143e806f44edeae5",
                    "sha256:ad660e340b7acf11d3760c535b47f304b0b32abe72fba87f4917c5f91a2c9da6",
                    "sha256:45b43ed3d7b4991c51d00b09bfdf2a8f6bd5459e64832b5b90bb39fdb61d7b0d"
                ]
            }
        },
        "latest-build-20230911": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "iot-gate-imx8plus",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2023-09-12T03:03:42.159197629Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:31.895761202Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-04T18:40:58.001277299Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:614dff70ca4206841645edfd3dab48901efeefccc8ef99772f475ee9bac861ff in / "
                },
                {
                    "created": "2023-08-04T18:40:59.951513662Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T05:16:42.403188583Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T05:16:42.403188583Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T05:16:42.403188583Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T05:41:14.882541843Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T06:27:10.219323725Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-clients \t\tsubversion \t\tautoconf \t\tautomake \t\tbzip2-devel \t\tglib2-devel \t\tgcc \t\tgcc-c++ \t\tImageMagick \t\tImageMagick-devel \t\tkernel-devel \t\tlibcurl-devel \t\tlibevent-devel \t\tlibffi-devel \t\tlibjpeg-devel \t\tlibsqlite3x-devel \t\tlibxml2-devel \t\tlibxslt-devel \t\tlibyaml-devel \t\tmysql-devel \t\tmake \t\tncurses-devel \t\topenssl-devel \t\tpostgresql-devel \t\treadline-devel \t\tsqlite-devel \t\tzlib-devel \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T06:27:11.639619237Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T06:27:11.639619237Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T06:27:11.672307839Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T06:27:11.703609828Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T06:27:11.752254777Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T06:27:11.752254777Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T06:27:16.692189405Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T06:27:17.113557601Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-12T03:03:42.022816114Z",
                    "created_by": "LABEL io.balena.device-type=iot-gate-imx8plus",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-12T03:03:42.022816114Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-12T03:03:42.159197629Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:cf819d1f191d71ce750fc0b9ca71726d50fc052d7c695682165a84c2bd1eb716",
                    "sha256:2c61372b1614282bfdb58c104252b37a61be492de5c3298dffc56376adfe0a8f",
                    "sha256:3892fad87609c0724cb700c7b327865d8b642316f214825299540678c84e007b",
                    "sha256:0f4a521d2c6cf8cad7b2eb4df330989890e4ec58bcdb8c8d3f1e7b953bbbd9cf",
                    "sha256:8d6c3fbf20d052b4dfc381066e982bdd6112441240ae7ffbc2e5e89595e79a0c",
                    "sha256:561d71383dd66b871476f9e5ff3274483fb9574952685d747d4e55904f1ee3fb",
                    "sha256:b19528952c8ac1375dbbc0465be58dc121fb846ce4e1e89645c716509faaf601",
                    "sha256:c8b95dba26be42e442fdec1f2fd5073216020274f421a0e7cf5b4abe1599f822",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:bf40c484f55f8935bf800843234fd2cadb1c9404047d95d9143e806f44edeae5",
                    "sha256:1d75f539ff1a4bb8e48f9036de90ae1624b335f2cfcb39e8111ab61a327f843b",
                    "sha256:a69856bfe2e9f97ef96db5cbc7c1eb053ba8225863abbb346fd1e9bc5bba22dc"
                ]
            }
        },
        "latest-build-20231103": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "iot-gate-imx8plus",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2023-11-04T16:58:30.559134403Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:31.895761202Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-06T18:42:53.905315575Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:a506790441a5cd056fb456111da480939a46667d520b519dcb9b2e2aa16aae70 in / "
                },
                {
                    "created": "2023-10-06T18:42:54.852939758Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-04T14:05:46.127555575Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-04T14:05:46.127555575Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-04T14:05:46.127555575Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T14:32:34.985281581Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T15:17:05.03121789Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-clients \t\tsubversion \t\tautoconf \t\tautomake \t\tbzip2-devel \t\tglib2-devel \t\tgcc \t\tgcc-c++ \t\tImageMagick \t\tImageMagick-devel \t\tkernel-devel \t\tlibcurl-devel \t\tlibevent-devel \t\tlibffi-devel \t\tlibjpeg-devel \t\tlibsqlite3x-devel \t\tlibxml2-devel \t\tlibxslt-devel \t\tlibyaml-devel \t\tmysql-devel \t\tmake \t\tncurses-devel \t\topenssl-devel \t\tpostgresql-devel \t\treadline-devel \t\tsqlite-devel \t\tzlib-devel \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T15:17:06.534956571Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T15:17:06.534956571Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-04T15:17:06.547775032Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T15:17:06.562169912Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T15:17:06.584452792Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T15:17:06.584452792Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-04T15:17:11.437649746Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T15:17:11.624485751Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T16:58:30.421906927Z",
                    "created_by": "LABEL io.balena.device-type=iot-gate-imx8plus",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-04T16:58:30.421906927Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T16:58:30.559134403Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:a37bac7c99baeb556998a67a51775b34aa6df7829fa1ff19323033c5e19837b3",
                    "sha256:b803e34ece3fff5f3d20cfa0d3e1cf3d2f8eeb660544fa7d9d823be8aaca720f",
                    "sha256:6cd425edf3bbba0627f88702e763514480d7cc186cdcf9fba97078a67b67ff15",
                    "sha256:3b47068608b1d7e0db2398b9a01f8b7334b03f0b6e860606846319db5bca3e6d",
                    "sha256:cd9302fb8f7c40436d216b427838f33470983f6d503ff317690d5147f2ac7af4",
                    "sha256:3ee1780fbb8bd15cb0d9c1f09542dd9bfd3ad0b2b19f329060fb3864d9f08437",
                    "sha256:818589d5e5232c469d55d13e3c611a19ae9fbd09e1eab7d8d5a5cbc2d7a5364a",
                    "sha256:12e7cf1e010caa525ada8d183482cca1144de22e3bdeb8c3f63e13d7f4d27c83",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:24e8fe7f4ce600f415f5a229e1303c9bab9afc61a2cb00bfe838cf9af0b10c57",
                    "sha256:0f98a79bf5f3d0f83978a96f92525d6c4563361948edfcb2279459e099307b38",
                    "sha256:c5cf54dbd4349f8fd312f982135012db1f92c230e1392a1c853b909ef7cac443"
                ]
            }
        },
        "latest-build-20231106": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "iot-gate-imx8plus",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2023-11-06T12:30:02.43881775Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:31.895761202Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-06T18:42:53.905315575Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:a506790441a5cd056fb456111da480939a46667d520b519dcb9b2e2aa16aae70 in / "
                },
                {
                    "created": "2023-10-06T18:42:54.852939758Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T09:12:33.793766866Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T09:12:33.793766866Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T09:12:33.793766866Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T09:41:28.803094869Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T10:28:03.430768422Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-clients \t\tsubversion \t\tautoconf \t\tautomake \t\tbzip2-devel \t\tglib2-devel \t\tgcc \t\tgcc-c++ \t\tImageMagick \t\tImageMagick-devel \t\tkernel-devel \t\tlibcurl-devel \t\tlibevent-devel \t\tlibffi-devel \t\tlibjpeg-devel \t\tlibsqlite3x-devel \t\tlibxml2-devel \t\tlibxslt-devel \t\tlibyaml-devel \t\tmysql-devel \t\tmake \t\tncurses-devel \t\topenssl-devel \t\tpostgresql-devel \t\treadline-devel \t\tsqlite-devel \t\tzlib-devel \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T10:28:04.971243325Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T10:28:04.971243325Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T10:28:04.981842152Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T10:28:04.990882375Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T10:28:04.999524597Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T10:28:04.999524597Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T10:28:10.325096726Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T10:28:10.509330565Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T12:30:02.289734Z",
                    "created_by": "LABEL io.balena.device-type=iot-gate-imx8plus",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T12:30:02.289734Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T12:30:02.43881775Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:a37bac7c99baeb556998a67a51775b34aa6df7829fa1ff19323033c5e19837b3",
                    "sha256:079d7cf39afa9d578a9d23346f411400794c3af330d6d28f819e9df742fd510f",
                    "sha256:953f9299839dea166062dc15ad557aaded1976123a8e68748f4c2b9bda013445",
                    "sha256:91484c3183f81de3b5df4fd7282fa21e976e1bfebc491b6bbfbf04e93c1894a0",
                    "sha256:8a86f91b095531cde383c2059c806a3e41d2784a850acb0074b3c05e00a92b22",
                    "sha256:72afd198025d5dd3f0441d9c45c59c4856bb515bdfd96241abc1821082e51634",
                    "sha256:dbd652ad088f975924c2188af549f2f10b92c01b6fe522387771c28ab9f9a3d1",
                    "sha256:b34bfc4dadfdc58a35b02f2a10f1cceab912215f6d83c03887fd10915a43740f",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:60d7cb78f7dbd6e4fd7284fde027f33371b8a35defbb6d0b64e611e5b79e547c",
                    "sha256:7b50b40720c8be33d0674d434f934fadc4d26c3f001d716dfafe5dde9a03f1c4",
                    "sha256:8ef949e1787f2d8b6062650c27e1ead5b25c8e1d8f83f84269091cf5ed6e0bab"
                ]
            }
        },
        "latest-build-20231127": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "iot-gate-imx8plus",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2023-12-01T13:08:26.624251431Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:31.895761202Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-29T00:47:03.16713451Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:270e11b4c18af1c1efb8b8579be7fbda5255d56dd69f83ef7d933cfd2c685e5c in / "
                },
                {
                    "created": "2023-11-29T00:47:04.125919026Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T10:52:02.657157896Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T10:52:02.657157896Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T10:52:02.657157896Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T11:10:52.835476629Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T11:44:38.992624697Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-clients \t\tsubversion \t\tautoconf \t\tautomake \t\tbzip2-devel \t\tglib2-devel \t\tgcc \t\tgcc-c++ \t\tImageMagick \t\tImageMagick-devel \t\tkernel-devel \t\tlibcurl-devel \t\tlibevent-devel \t\tlibffi-devel \t\tlibjpeg-devel \t\tlibsqlite3x-devel \t\tlibxml2-devel \t\tlibxslt-devel \t\tlibyaml-devel \t\tmysql-devel \t\tmake \t\tncurses-devel \t\topenssl-devel \t\tpostgresql-devel \t\treadline-devel \t\tsqlite-devel \t\tzlib-devel \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T11:44:39.990821654Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T11:44:39.990821654Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T11:44:40.000073844Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T11:44:40.01005454Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T11:44:40.019402748Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T11:44:40.019402748Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T11:44:43.689339656Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T11:44:43.868535084Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T13:08:26.47192444Z",
                    "created_by": "LABEL io.balena.device-type=iot-gate-imx8plus",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T13:08:26.47192444Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T13:08:26.624251431Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:22de68abb450063be7e40efd22fd3b41bec469efafdd95e25c65998648e52b28",
                    "sha256:1a3ad77cbdd5f3702cdc33e853ab9cc8a4bce3da55a32efb4239959bb0066d2c",
                    "sha256:ea8f95f5ee1d9a415da767f8f70e84219a783234faedbe934f7073d313c2a329",
                    "sha256:9859ba47080992b582231890261ade8c1615c538267fb38ef5346a7dc2b9b28c",
                    "sha256:4d00d92f327d89e6a8e173c3756ae21408423470ec789b7f26433277cb4a4765",
                    "sha256:b15db2ec924b64fd8d760db1a34d1a7bf1ee73795d67229df34a932fa2462fce",
                    "sha256:f426d5ef2263d711158432d852d2fd7bbac8b2a130d414a43053e03ea7af15cc",
                    "sha256:7e257b2f172d14765138a78493e82b46dc74628b411d96599cf2d23254ad0931",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:7465c77da1867ca9eddcdddd673828c00680f5a8f2980663f3dc74004cfee96e",
                    "sha256:22ca79a7ecbfc542ba8549e3761eee16e1eedce49af9323ee2792385bb3ea001",
                    "sha256:61a56b1bb36a8993559af8054d38d0edd937d96415298cccc25aedfa9a2755c8"
                ]
            }
        },
        "latest-build-20231204": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "iot-gate-imx8plus",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2023-12-06T22:56:22.466838485Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:31.895761202Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-29T00:47:03.16713451Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:270e11b4c18af1c1efb8b8579be7fbda5255d56dd69f83ef7d933cfd2c685e5c in / "
                },
                {
                    "created": "2023-11-29T00:47:04.125919026Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T20:40:26.374589955Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T20:40:26.374589955Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T20:40:26.374589955Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T20:59:24.426343965Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T21:33:22.338987204Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-clients \t\tsubversion \t\tautoconf \t\tautomake \t\tbzip2-devel \t\tglib2-devel \t\tgcc \t\tgcc-c++ \t\tImageMagick \t\tImageMagick-devel \t\tkernel-devel \t\tlibcurl-devel \t\tlibevent-devel \t\tlibffi-devel \t\tlibjpeg-devel \t\tlibsqlite3x-devel \t\tlibxml2-devel \t\tlibxslt-devel \t\tlibyaml-devel \t\tmysql-devel \t\tmake \t\tncurses-devel \t\topenssl-devel \t\tpostgresql-devel \t\treadline-devel \t\tsqlite-devel \t\tzlib-devel \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T21:33:24.154561262Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T21:33:24.154561262Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T21:33:24.162768682Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T21:33:24.171000628Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T21:33:24.179542448Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T21:33:24.179542448Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T21:33:28.121782119Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T21:33:28.270944579Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T22:56:22.315581937Z",
                    "created_by": "LABEL io.balena.device-type=iot-gate-imx8plus",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T22:56:22.315581937Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T22:56:22.466838485Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:22de68abb450063be7e40efd22fd3b41bec469efafdd95e25c65998648e52b28",
                    "sha256:25274df56d5e2d3d66833b3c1612e29d23730e6cc6ec37a78ee71d4e85b76404",
                    "sha256:d04cc6ad4633afbe1d3e0b00b156a425046a32b30dac7662e12874b696c4cfef",
                    "sha256:43377beeefc0287b77d294288faa7109bb3ce0bc36e475dfbd1d0e36067efadb",
                    "sha256:fec686f840ea96c83b8309deabe344d2dad4f89944098fafba92079f3168bea0",
                    "sha256:8a1c26a8af1d218a1a631e9eed97294a2a87ace87904af0512704b5ba5f905a0",
                    "sha256:f0e217e2e36898bc78b63b7998c0d53052ce478f4a9e28eb3acaa57455c20e2f",
                    "sha256:168aa23d85e63ec5786a95750332d5f9e1806211b6e527d7644ac532221069f1",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:536faba4d9280af162caf34aaa2fbf324ea707d1b058d74696885ed191a6eafd",
                    "sha256:019eff7d9c98124a0076ea5ab4fbe260574e1040776d0354eda04b2bf0d9844b",
                    "sha256:625e985005e1b8d438cf34f684dbc35619aa2b56cc1c4be692af863cfab21a63"
                ]
            }
        },
        "latest-build-20240205": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "iot-gate-imx8plus",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2024-02-05T02:46:16.965872789Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:31.895761202Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-29T00:47:03.16713451Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:270e11b4c18af1c1efb8b8579be7fbda5255d56dd69f83ef7d933cfd2c685e5c in / "
                },
                {
                    "created": "2023-11-29T00:47:04.125919026Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-05T00:26:13.859309536Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-05T00:26:13.859309536Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-05T00:26:13.859309536Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T00:45:10.8092517Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T01:18:49.392328016Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-clients \t\tsubversion \t\tautoconf \t\tautomake \t\tbzip2-devel \t\tglib2-devel \t\tgcc \t\tgcc-c++ \t\tImageMagick \t\tImageMagick-devel \t\tkernel-devel \t\tlibcurl-devel \t\tlibevent-devel \t\tlibffi-devel \t\tlibjpeg-devel \t\tlibsqlite3x-devel \t\tlibxml2-devel \t\tlibxslt-devel \t\tlibyaml-devel \t\tmysql-devel \t\tmake \t\tncurses-devel \t\topenssl-devel \t\tpostgresql-devel \t\treadline-devel \t\tsqlite-devel \t\tzlib-devel \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T01:18:50.514115933Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T01:18:50.514115933Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-05T01:18:50.523617988Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T01:18:50.557647649Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T01:18:50.568553425Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T01:18:50.568553425Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-05T01:18:54.352613602Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T01:18:54.484309683Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T02:46:16.846029828Z",
                    "created_by": "LABEL io.balena.device-type=iot-gate-imx8plus",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-05T02:46:16.846029828Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T02:46:16.965872789Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:22de68abb450063be7e40efd22fd3b41bec469efafdd95e25c65998648e52b28",
                    "sha256:9391b38776fe1a447956db381646ee109343bd22183a6c607d66c26dac722850",
                    "sha256:2ff3e8a40fae975f72250e96f2c01345768ef0a3dbcfbf6084bc542211223c04",
                    "sha256:38432aa17028b7bdb0c9d5c2b22fb4207811641298965ba6771cd989d6a19daa",
                    "sha256:3efdb146c34f8f1ff3c22b490e72b097196f8cf3a214dfc51628ba81f402eeb1",
                    "sha256:bf38ccf74068b318ec44fb671d7f71d3454fb8ab9304451042334e972b5fa0ec",
                    "sha256:50fbc93a18898e758d8a4426c13b8cdb844e98e4fe11dbc5e9409eb7f1466e43",
                    "sha256:21e4e77425952b2bdbb4f06e327bd295156461fc4fe3e31ed324ba59b04a3712",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:5f653a5aac8e7aec60e0930415cf5cfc3ee9a054c6b5996f3e8bcd9c24b11e54",
                    "sha256:ec75080b101dd9efaa0f0a28d0cf2825f6ab93f65d96d9b3cd91d5e538fa9fbe",
                    "sha256:849cb9d10232bf70b87b611e035f762d7625306a3c15a236f2dd0bd56e7e8646"
                ]
            }
        },
        "latest-build-20240227": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "iot-gate-imx8plus",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2024-03-01T23:16:47.777532704Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:31.895761202Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-29T00:47:03.16713451Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:270e11b4c18af1c1efb8b8579be7fbda5255d56dd69f83ef7d933cfd2c685e5c in / "
                },
                {
                    "created": "2023-11-29T00:47:04.125919026Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T20:49:59.807334412Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T20:49:59.807334412Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T20:49:59.807334412Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:10:56.098365397Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:45:26.894768836Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-clients \t\tsubversion \t\tautoconf \t\tautomake \t\tbzip2-devel \t\tglib2-devel \t\tgcc \t\tgcc-c++ \t\tImageMagick \t\tImageMagick-devel \t\tkernel-devel \t\tlibcurl-devel \t\tlibevent-devel \t\tlibffi-devel \t\tlibjpeg-devel \t\tlibsqlite3x-devel \t\tlibxml2-devel \t\tlibxslt-devel \t\tlibyaml-devel \t\tmysql-devel \t\tmake \t\tncurses-devel \t\topenssl-devel \t\tpostgresql-devel \t\treadline-devel \t\tsqlite-devel \t\tzlib-devel \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:45:27.831671197Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:45:27.831671197Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T21:45:27.841017293Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:45:27.850413212Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:45:27.858829391Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:45:27.858829391Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T21:45:31.607983559Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:45:31.757692693Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T23:16:47.658708573Z",
                    "created_by": "LABEL io.balena.device-type=iot-gate-imx8plus",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T23:16:47.658708573Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T23:16:47.777532704Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:22de68abb450063be7e40efd22fd3b41bec469efafdd95e25c65998648e52b28",
                    "sha256:153f603c3b6b2529b45b12c9cb3de69de633d99488c4aac6cb5e04c6784e284c",
                    "sha256:fcda31efe0f90abdb3be0e2cc3050fddb745d7db41b962e3a08d908b3fe90c76",
                    "sha256:168e7cb2c07cd77fe30fd104d59f5ac49b7a43775f04c196367fa588f2159f11",
                    "sha256:3e98c7cf4c63c439e9045cd721cc19c243588d17804a57358309accf40b5249c",
                    "sha256:8aeb044849aef9a674a8ebde259f830df38faaa43b11f80b3bec5085ace3c264",
                    "sha256:691ea9dfdaf44533ac36d1341c6822b6735744922c3d5c304e657357f4babe33",
                    "sha256:072ee65b31efbe2110bc15922159f609d9d9c933715bc4429aeb7f4c5da9d425",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:bd215b090f3f370a73aa2871e3e123516169ed4db9f68a876a6be0d4a288d6d4",
                    "sha256:9c90bb3abfc94096e6345825ee53ca74c45113312142186b07cc5c2176aa7ef5",
                    "sha256:e28bd6d0f75f21f68b0e456c74cd2acf88b251e8860020c8e6764ae3f07f45b4"
                ]
            }
        },
        "latest-build-20240304": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "iot-gate-imx8plus",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2024-03-05T10:49:26.346985534Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:31.895761202Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-29T00:47:03.16713451Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:270e11b4c18af1c1efb8b8579be7fbda5255d56dd69f83ef7d933cfd2c685e5c in / "
                },
                {
                    "created": "2023-11-29T00:47:04.125919026Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T08:24:07.032483717Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T08:24:07.032483717Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T08:24:07.032483717Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T08:43:07.560394223Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T09:18:33.168342892Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-clients \t\tsubversion \t\tautoconf \t\tautomake \t\tbzip2-devel \t\tglib2-devel \t\tgcc \t\tgcc-c++ \t\tImageMagick \t\tImageMagick-devel \t\tkernel-devel \t\tlibcurl-devel \t\tlibevent-devel \t\tlibffi-devel \t\tlibjpeg-devel \t\tlibsqlite3x-devel \t\tlibxml2-devel \t\tlibxslt-devel \t\tlibyaml-devel \t\tmysql-devel \t\tmake \t\tncurses-devel \t\topenssl-devel \t\tpostgresql-devel \t\treadline-devel \t\tsqlite-devel \t\tzlib-devel \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T09:18:34.140220764Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T09:18:34.140220764Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T09:18:34.153622864Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T09:18:34.190278048Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T09:18:34.204411016Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T09:18:34.204411016Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T09:18:37.906466695Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T09:18:38.054385621Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T10:49:26.231326759Z",
                    "created_by": "LABEL io.balena.device-type=iot-gate-imx8plus",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T10:49:26.231326759Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T10:49:26.346985534Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:22de68abb450063be7e40efd22fd3b41bec469efafdd95e25c65998648e52b28",
                    "sha256:5b32c6607b8e7ea89ed5bb72a3578bb0d4723f5496d0a8e7dc688bf6a3a167d6",
                    "sha256:90da55fed465de8a873bf3e2bcdea7dca9a0be400a66dfa4c0efde5fa5ad1712",
                    "sha256:d5b90a049cc6b8b6a297f2e6f8a012847c545187714f13feb3004077215fe790",
                    "sha256:ac341c2760f8397f739500c811ea7bfc967bee43cae3b5bccbc3bc6263562d17",
                    "sha256:383c3fcfa865391817fdec807ce0f15866c08261ec20642c87fdde447997f846",
                    "sha256:d8c138867fdbf59da6040e42db8f659089ae32f509c4809cd61e7b817c68284d",
                    "sha256:59113e489ab1305fec7cc3fd646933122fb6f8dfeb9f3e8146b36687dd3f8ce0",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:3e090112138683d3816cd9299b41c91f8e2961f75a329ef3583c678904c6aa0c",
                    "sha256:f5e0de247054c6f8f055371596d0e260c682de2f9066d2c5a30eda85d4d0f6c4",
                    "sha256:0c963d343ce7fb5f03c807c1959a371eb4ea311d860d949dae0573d99544878b"
                ]
            }
        },
        "latest-build-20240401": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "iot-gate-imx8plus",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                }
            },
            "created": "2024-04-01T23:47:53.1181221Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:31.895761202Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-29T00:47:03.16713451Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:270e11b4c18af1c1efb8b8579be7fbda5255d56dd69f83ef7d933cfd2c685e5c in / "
                },
                {
                    "created": "2023-11-29T00:47:04.125919026Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T21:26:32.436538725Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T21:26:32.436538725Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T21:26:32.436538725Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T21:44:46.483219966Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T22:18:11.966182353Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-clients \t\tsubversion \t\tautoconf \t\tautomake \t\tbzip2-devel \t\tglib2-devel \t\tgcc \t\tgcc-c++ \t\tImageMagick \t\tImageMagick-devel \t\tkernel-devel \t\tlibcurl-devel \t\tlibevent-devel \t\tlibffi-devel \t\tlibjpeg-devel \t\tlibsqlite3x-devel \t\tlibxml2-devel \t\tlibxslt-devel \t\tlibyaml-devel \t\tmysql-devel \t\tmake \t\tncurses-devel \t\topenssl-devel \t\tpostgresql-devel \t\treadline-devel \t\tsqlite-devel \t\tzlib-devel \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T22:18:13.396726412Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T22:18:13.396726412Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T22:18:13.40948656Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T22:18:13.42436327Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T22:18:13.435538637Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T22:18:13.435538637Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T22:18:17.292242645Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T22:18:17.441252547Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T23:47:53.000902427Z",
                    "created_by": "LABEL io.balena.device-type=iot-gate-imx8plus",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T23:47:53.000902427Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T23:47:53.1181221Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:22de68abb450063be7e40efd22fd3b41bec469efafdd95e25c65998648e52b28",
                    "sha256:2bc63a4a3e163679c8a2399342b1daf3e005320d94db933ce217a0f80d1b4537",
                    "sha256:d75154443a45cab05ca4a85ddd827b962fedcff91b702d791e6ef9404f6c85d3",
                    "sha256:ed61218e50e513b23bae8d31f72e7c8e7a3d0090e48e2ff087a536ac362cfb81",
                    "sha256:23faadc341a4670f586fccbfa7d9b0c5a5e56be8ab46b55a4067df82e5569a5c",
                    "sha256:26696ab075f5bb87eee8a46b41f2091a3f9d7edb2116147001a7677757eaaca5",
                    "sha256:61d65d5da4322b148f9078fa00914c14291b0bdf48b073091e08240ed72a9f7c",
                    "sha256:879d60f10dea3318ceaedb2814160c1ae4cc919d4f04d2e62152d05c1ea7011a",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:0428822e1d59c6db13038f6502cd2c9a69bd7e2d2a033cb20fc19071849b112e",
                    "sha256:c4e3fb88a09fcd635cc5ecc2e4c5328b3d8932c55055f2e4ec03017cb540521f",
                    "sha256:3fabed44006fcfd14825b6c3c305dcf7b0dc134c5583aafb432f9fe037614dbe"
                ]
            }
        },
        "latest-build-20240408": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "iot-gate-imx8plus",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                }
            },
            "created": "2024-04-09T20:02:56.094617974Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:31.895761202Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-29T00:47:03.16713451Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:270e11b4c18af1c1efb8b8579be7fbda5255d56dd69f83ef7d933cfd2c685e5c in / "
                },
                {
                    "created": "2023-11-29T00:47:04.125919026Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:50.964198867Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:50.964198867Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:50.964198867Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:54:06.695861539Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:30:31.267198079Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-clients \t\tsubversion \t\tautoconf \t\tautomake \t\tbzip2-devel \t\tglib2-devel \t\tgcc \t\tgcc-c++ \t\tImageMagick \t\tImageMagick-devel \t\tkernel-devel \t\tlibcurl-devel \t\tlibevent-devel \t\tlibffi-devel \t\tlibjpeg-devel \t\tlibsqlite3x-devel \t\tlibxml2-devel \t\tlibxslt-devel \t\tlibyaml-devel \t\tmysql-devel \t\tmake \t\tncurses-devel \t\topenssl-devel \t\tpostgresql-devel \t\treadline-devel \t\tsqlite-devel \t\tzlib-devel \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:30:32.683562935Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:30:32.683562935Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T14:30:32.694247574Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:30:32.719346978Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:30:32.730408486Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:30:32.730408486Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T14:30:36.547683782Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:30:36.691463904Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T20:02:55.977043055Z",
                    "created_by": "LABEL io.balena.device-type=iot-gate-imx8plus",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T20:02:55.977043055Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T20:02:56.094617974Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:22de68abb450063be7e40efd22fd3b41bec469efafdd95e25c65998648e52b28",
                    "sha256:3f054b5308bf8dbf3abb2dac1bc72fac6b6e9569c5d0c4d1733c57b40f98d68c",
                    "sha256:9a408e5130d5761269a2f78fe14c41bfad96906f19a9b6f231ba27a0e270536b",
                    "sha256:ce27ddfda0b79dba438fc400e0d24f635fec12b6b0b2e61ff692ddfb273b5fe9",
                    "sha256:251af411a33440438f0b2f94cdfb89f2f9ffdbc97319bda046932d48df33eb89",
                    "sha256:5482afbecbaab7a5c1e492cf2a2f03aafdc9012c4dc853b5b5c1ed9fde902db7",
                    "sha256:5d6da048fbb12c4062ff5b76617e555654e7b2043bfca3f0791046007fc79bb6",
                    "sha256:c6c5906dcd307ca53496f54734925e883c2e43f758510871473e5490706bf6a8",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:42adbbc0741061b3fa0e1fde61c20ae07301f416423df023d7264ef090febb62",
                    "sha256:dbbbe17a48649b115e35f670c0cc802489e40bb7cda170c216ad6c215e47a8e8",
                    "sha256:982fd24cbfe5783c218cb3fb307f97f28f07a390b305db2a3d6088ce02266a2d"
                ]
            }
        },
        "latest-build-20240429": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "iot-gate-imx8plus",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                }
            },
            "created": "2024-05-06T10:39:41.599323029Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:31.895761202Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-29T00:47:03.16713451Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:270e11b4c18af1c1efb8b8579be7fbda5255d56dd69f83ef7d933cfd2c685e5c in / "
                },
                {
                    "created": "2023-11-29T00:47:04.125919026Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T09:28:43.57977131Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T09:28:43.57977131Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T09:28:43.57977131Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T09:47:19.941756159Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T10:20:57.000511545Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-clients \t\tsubversion \t\tautoconf \t\tautomake \t\tbzip2-devel \t\tglib2-devel \t\tgcc \t\tgcc-c++ \t\tImageMagick \t\tImageMagick-devel \t\tkernel-devel \t\tlibcurl-devel \t\tlibevent-devel \t\tlibffi-devel \t\tlibjpeg-devel \t\tlibsqlite3x-devel \t\tlibxml2-devel \t\tlibxslt-devel \t\tlibyaml-devel \t\tmysql-devel \t\tmake \t\tncurses-devel \t\topenssl-devel \t\tpostgresql-devel \t\treadline-devel \t\tsqlite-devel \t\tzlib-devel \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T10:20:58.118390256Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T10:20:58.118390256Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T10:20:58.12798187Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T10:20:58.136722317Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T10:20:58.164403522Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T10:20:58.164403522Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T10:21:01.984279759Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T10:21:02.133999332Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T10:39:41.484219958Z",
                    "created_by": "LABEL io.balena.device-type=iot-gate-imx8plus",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T10:39:41.484219958Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T10:39:41.599323029Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:22de68abb450063be7e40efd22fd3b41bec469efafdd95e25c65998648e52b28",
                    "sha256:40252cde73a60fe319f0dc295c7b1e421631974cfbe16656b81f7c86e773254e",
                    "sha256:4a4de46c8a70d5743384977bb42ebacdec5e3cb5490677a398f1d36366084aab",
                    "sha256:1523c4d5a73b8f8409b03635be1be78f6592c3915fd459908ffe5c04fb7ca684",
                    "sha256:3165ae98a25560d143d61c6f8a3cc9b4f73d0c009bfd9de33cefc4747c481229",
                    "sha256:802383c11ce70505808614d078d961ddc3cfaf46a58ac795624520a44e2a7860",
                    "sha256:0590d31cf7630143e0d0e5677bb4407b0d1c0b49a56ef3a87a860603dcea1282",
                    "sha256:6f5ffd7cbb1f8862606014326bb38c35022c8eb43d2a0aff0af32878db49dbdc",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:8c0b4113e6a87b2271a715a924b205a5c9534f5b51c4f3d05b39a48bb6ad75be",
                    "sha256:8758cb7509bfd7224c0a5331ba8bc629479d9e98ab727b0f5fb7261197212daa",
                    "sha256:c39cd3a2ce47e0850a8f29b00283fbc12ffda9edc18a0a64ab0368a4352c82a0"
                ]
            }
        },
        "latest-run": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "iot-gate-imx8plus",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                }
            },
            "created": "2024-05-06T10:39:20.130192892Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:31.895761202Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-29T00:47:03.16713451Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:270e11b4c18af1c1efb8b8579be7fbda5255d56dd69f83ef7d933cfd2c685e5c in / "
                },
                {
                    "created": "2023-11-29T00:47:04.125919026Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T09:28:47.993183335Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T09:28:47.993183335Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T09:28:47.993183335Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T09:47:56.501476974Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T09:47:57.631980985Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T09:47:57.631980985Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T09:47:57.644124262Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T09:47:57.678847981Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T09:47:57.688494096Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T09:47:57.688494096Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T09:48:01.526529414Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T09:48:01.665893428Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T10:39:20.006293092Z",
                    "created_by": "LABEL io.balena.device-type=iot-gate-imx8plus",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T10:39:20.006293092Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T10:39:20.130192892Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:22de68abb450063be7e40efd22fd3b41bec469efafdd95e25c65998648e52b28",
                    "sha256:ef64ad49ccf58709af070779ae49d014558d78a8b6a21fcc279c09ddac79e6c9",
                    "sha256:486e799e950e2b998ed0a1a7221aed44130002259c2b437524c7a8a72b725a56",
                    "sha256:5ad52f9d14deab1b2c3a79dfb68bf730440e209f5926a2cd2ebd561c519a08de",
                    "sha256:73001e4334a2e5a98b50faf87e712eaf851af09ac903e83a569150844ce9eda1",
                    "sha256:696c197b14bb7731bf0a36bbdc5e5272937b693f192b143e02dac747a1305ba1",
                    "sha256:f27b4f97c199fdc59cc49eb91fc7a348daf160285ca6bfce88ede5b64e4bb0a9",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:22341517b8222bb5810db07c816fbd0de10749523856c0263caf14789e77d27d",
                    "sha256:108db07c780851f92a4d8ef0c1926797631a48d81f409bc8850b3a37f31fe4bb",
                    "sha256:5019b6b6e2ea25b8b42acd497a8ea0bb3aa9edf8a150d35e826ed803ec8d3f57"
                ]
            }
        },
        "latest-run-20230502": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Cmd": null,
                "Image": "sha256:a68b119daf3e28debdf078c13084aef27795d0c41eca3070757270c37007dcff",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "OnBuild": null,
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-tx2",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                }
            },
            "container": "7423fe45f993649cd50a86110c3aade31acd4783b1f8f74b94b9a14cd0d3e651",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "[ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info"
                ],
                "Image": "sha256:a68b119daf3e28debdf078c13084aef27795d0c41eca3070757270c37007dcff",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-tx2",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                }
            },
            "created": "2023-05-08T16:20:14.664626498Z",
            "docker_version": "20.10.21",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:31.895761202Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-13T20:39:36.516425489Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:8f1c4c2e60330243e66c553f2377951b11c09601b874f6c778e90ff74c6dc376 in / "
                },
                {
                    "created": "2023-03-13T20:39:37.717809378Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-04-02T00:15:42.184062394Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL io.balena.architecture=aarch64",
                    "empty_layer": true
                },
                {
                    "created": "2023-04-02T00:15:42.325999277Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "empty_layer": true
                },
                {
                    "created": "2023-04-02T00:15:42.488342363Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:24916d641d0ee761d2bebd935412ac2263719e3f48829dd83555470573235ed9 in /usr/bin "
                },
                {
                    "created": "2023-04-02T00:34:27.312050054Z",
                    "created_by": "/bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\""
                },
                {
                    "created": "2023-04-02T01:08:25.388465514Z",
                    "created_by": "/bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end"
                },
                {
                    "created": "2023-04-02T01:08:25.551533349Z",
                    "created_by": "/bin/sh -c #(nop)  ENV UDEV=off",
                    "empty_layer": true
                },
                {
                    "created": "2023-04-02T01:08:25.703401831Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:0e8e5e7fcb5ff4b4caac2552d3c5cbf829703430466832566297680a5b09c62b in /usr/bin/entry.sh "
                },
                {
                    "created": "2023-04-02T01:08:25.832144045Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:207cdc191bada5970fb21d3481971b4a391e6e52061bd584dc75404c36d01fcf in /usr/bin/balena-info "
                },
                {
                    "created": "2023-04-02T01:08:25.936921778Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:def7f364bfe93992865dfba2017def9a3c407b6cf8ac0233dcd0aabaa9e4b75b in /usr/bin/balena-idle "
                },
                {
                    "created": "2023-04-02T01:08:26.059241016Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-04-02T01:08:30.523539615Z",
                    "created_by": "/bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh",
                    "empty_layer": true
                },
                {
                    "created": "2023-04-02T01:08:31.078585399Z",
                    "created_by": "/bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info"
                },
                {
                    "created": "2023-05-08T16:04:48.123965098Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL io.balena.device-type=jetson-tx2",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-08T16:20:13.834488214Z",
                    "created_by": "/bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all"
                },
                {
                    "created": "2023-05-08T16:20:14.664626498Z",
                    "created_by": "/bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:6fa23825e7d36de818dd635e6ddcfb1a63b42c8d2a2ebe9dc929a2d8e763fe3f",
                    "sha256:07b0d4da5e04230bb8db9790c1ff3923ecfeaf3f1e9a415e2aab47b5a9a3c0f1",
                    "sha256:48150357fa88a44cf5998c4a5b7e13f8107d4a0b881d13e4aca84aebe66babea",
                    "sha256:efe5d73677d2d6bf2c9aff6540e5fd3471e4445a5ebd050fcf61edacabd24493",
                    "sha256:a4786e5f9479fd133d3e0656a2d110fa7171de1d557215c0963994517a246db0",
                    "sha256:ac16514f34947310a8a17a27f099a5c82bb2f563a28a4e1431998927adaa1e53",
                    "sha256:eda8f31ef2f8144169de7e12869fc1e897e7427c6cab3e81041c33c07d11ff5b",
                    "sha256:6f7ea015bad319a12178cc9deed86ad6432b252ebd6dc7141a974eee74653f64",
                    "sha256:cfd8b93ad27a03808da6e42d10bfd05a9317239d5bfaf63b1e62b4f172372cbc",
                    "sha256:59c871739bd4ff474a5cef9442579177864a340096aa438609cddb64c1b102f0"
                ]
            }
        },
        "latest-run-20230530": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Cmd": null,
                "Image": "sha256:20f9e37cab056b4dae525c039f7037ba42e096a6f55717137afee04271e77e96",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "OnBuild": null,
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-tx2",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                }
            },
            "container": "02586b804b62abfb75793d789ea4c7363176723ca5b24c0b44b7cf4458c84c71",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "[ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info"
                ],
                "Image": "sha256:20f9e37cab056b4dae525c039f7037ba42e096a6f55717137afee04271e77e96",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-tx2",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                }
            },
            "created": "2023-06-07T02:52:23.839260472Z",
            "docker_version": "20.10.21",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:31.895761202Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-31T18:09:14.311114615Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:ba657df1d10e8dc0a769b25e4ab09a73bca3a89df41b3a1b4e10f5fef058d1de in / "
                },
                {
                    "created": "2023-05-31T18:09:15.547149675Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-05T02:03:26.945834815Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL io.balena.architecture=aarch64",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-05T02:03:27.13778573Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-05T02:03:27.332819661Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:24916d641d0ee761d2bebd935412ac2263719e3f48829dd83555470573235ed9 in /usr/bin "
                },
                {
                    "created": "2023-06-05T02:24:26.189516816Z",
                    "created_by": "/bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\""
                },
                {
                    "created": "2023-06-05T03:02:04.392445503Z",
                    "created_by": "/bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end"
                },
                {
                    "created": "2023-06-05T03:02:04.646844986Z",
                    "created_by": "/bin/sh -c #(nop)  ENV UDEV=off",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-05T03:02:04.825711363Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:0e8e5e7fcb5ff4b4caac2552d3c5cbf829703430466832566297680a5b09c62b in /usr/bin/entry.sh "
                },
                {
                    "created": "2023-06-05T03:02:04.983337019Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:207cdc191bada5970fb21d3481971b4a391e6e52061bd584dc75404c36d01fcf in /usr/bin/balena-info "
                },
                {
                    "created": "2023-06-05T03:02:05.123767699Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:def7f364bfe93992865dfba2017def9a3c407b6cf8ac0233dcd0aabaa9e4b75b in /usr/bin/balena-idle "
                },
                {
                    "created": "2023-06-05T03:02:05.338685177Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-05T03:02:12.042609634Z",
                    "created_by": "/bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-05T03:02:13.377800909Z",
                    "created_by": "/bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info"
                },
                {
                    "created": "2023-06-07T02:34:44.82287582Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL io.balena.device-type=jetson-tx2",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-07T02:52:22.830368797Z",
                    "created_by": "/bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all"
                },
                {
                    "created": "2023-06-07T02:52:23.839260472Z",
                    "created_by": "/bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:249911891a8331ea3bbb5bf844c0feaad6066fdc936878a8c464416b1d78b22e",
                    "sha256:bc78f7b899700e4367bb848ecbc496f06865e82c6015e2a802406742f1cbefcf",
                    "sha256:284c09b1cb3f1977b7c56605e5ae1944d5ce3a83c3d77c0a22357607feb3701c",
                    "sha256:003aced5afcb43cee3c9363048741d8467dca9a7dfc7978926eeba94c0c793f5",
                    "sha256:83dfca5fa07e53ca9393a9653242046ccad66ffed2c2b472e349ccc34984f78f",
                    "sha256:546722af04ce5a848511c0f9b3850aefac740a4d7aff4fbbe9cf3e1caacbdaf8",
                    "sha256:fd8a15cd2653a1a0a698c31f8c62ce5e4920a30df101f4d3b8c125c83cdb0d3e",
                    "sha256:c497def0fd9a40925b091eb2a284460584d191e6f8bc647f5f3aa8c26565ff0b",
                    "sha256:1075349ad85152e3b31e6065a7f2f80d43d7f13314a1ef8a342ec2ebb114cc6f",
                    "sha256:adec9d84947aa22da33ef3f88120acb40c3a38fdcb36d111ea65e0514b23f071"
                ]
            }
        },
        "latest-run-20230803": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "generic-aarch64",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2023-08-04T23:07:43.375331667Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:31.895761202Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-04T18:40:58.001277299Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:614dff70ca4206841645edfd3dab48901efeefccc8ef99772f475ee9bac861ff in / "
                },
                {
                    "created": "2023-08-04T18:40:59.951513662Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-04T18:54:04.279599867Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-04T18:54:04.279599867Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-04T18:54:04.279599867Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-04T19:20:03.223955138Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-04T20:07:46.587328502Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-04T20:07:46.587328502Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-04T20:07:46.609548438Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-04T20:07:46.619000353Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-04T20:07:46.643784193Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-04T20:07:46.643784193Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-04T20:07:51.914868814Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-04T20:07:52.316641812Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-04T23:07:42.902689671Z",
                    "created_by": "LABEL io.balena.device-type=generic-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-04T23:07:42.902689671Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-04T23:07:43.375331667Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "moby.buildkit.buildinfo.v1": "eyJmcm9udGVuZCI6ImRvY2tlcmZpbGUudjAiLCJhdHRycyI6eyJmaWxlbmFtZSI6IkRvY2tlcmZpbGUifSwic291cmNlcyI6W3sidHlwZSI6ImRvY2tlci1pbWFnZSIsInJlZiI6ImRvY2tlci5pby9iYWxlbmFsaWIvYWFyY2g2NC1mZWRvcmE6MzctcnVuIiwicGluIjoic2hhMjU2OjYyZDgyMzU1YTk1ZGFkNjNkZmFiYjAwYWRmMDg0ZDM1YjFlODUxYTQyZWU1OTQzYjE3OGQ5ODE5NjljMmFkZjIifV19",
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:cf819d1f191d71ce750fc0b9ca71726d50fc052d7c695682165a84c2bd1eb716",
                    "sha256:03789feb1993fcca25eacd7c042a5e0da237c9f2fa4a6f2ba8ad8ddcbcc047df",
                    "sha256:df63306f05b409fc7c242f10144cdea2d6eb06bd1c0d437922509682bf196d4f",
                    "sha256:bbdfed2dd994f5e7e9323593f9ca29bfb8b828a195790f981d11f82dc13c624f",
                    "sha256:2776818030d35900166dbf5a502fabc1ff88dd330f244d1162ca86ce8a18233b",
                    "sha256:26be61103dde02ae7eeb259ca681c784e0d557bf6b12df2a1a6552473280bedd",
                    "sha256:bb747782f19553a77f709283cb961b77fe72e296acc3ead020eca924dc5fce01",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:e8b5341d265b6c5db48a0f11ed785549f85f32a54ea1909674b6c08a33a2d0f7",
                    "sha256:a623c30286ac9d16628692759bdc53e28ae39e8e61efd5ee7364a36d900d6042",
                    "sha256:24834edc35e897ebb0f69be2daa23f220350916750c2c3d6586074bbd8ec730d"
                ]
            }
        },
        "latest-run-20230829": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "generic-aarch64",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2023-09-02T08:58:38.635902453Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:31.895761202Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-04T18:40:58.001277299Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:614dff70ca4206841645edfd3dab48901efeefccc8ef99772f475ee9bac861ff in / "
                },
                {
                    "created": "2023-08-04T18:40:59.951513662Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-02T05:03:54.900306555Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-02T05:03:54.900306555Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-02T05:03:54.900306555Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T05:29:59.032216117Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T07:49:31.667835224Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T07:49:31.667835224Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-02T07:49:31.703166771Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T07:49:31.71048196Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T07:49:31.717951149Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T07:49:31.717951149Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-02T07:49:36.906076254Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T07:49:37.296912313Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T08:58:38.205221045Z",
                    "created_by": "LABEL io.balena.device-type=generic-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-02T08:58:38.205221045Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T08:58:38.635902453Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:cf819d1f191d71ce750fc0b9ca71726d50fc052d7c695682165a84c2bd1eb716",
                    "sha256:3c382cf512bf47b7376b28df697eafe60fb026ff08ad6264f571b1804576a531",
                    "sha256:242c49d1b03e40d91c941d76ea65e48dbfb13a6b7f6a8c0f17fa2b79bb3bf341",
                    "sha256:bba0a7dd26656a143d366c9386e193e577dde85487fea059991acb5311c337f8",
                    "sha256:0229146c9a8ae2f2d63e6a19a19370e3c3106fb917ff4041c69c337bafe20825",
                    "sha256:1b2572994e04be16791b3c500716eb39f1b1319dafd2c50ada219e826ddb81dc",
                    "sha256:4e58dca27db4d5d9ee1fdb2b00ba98010756175be3e905351b42f93464022edc",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:c6be8ccf7f63475573716aad14ea1215d6bee6236ef265531b27279cfde66460",
                    "sha256:430d5314f168d952339399356004a06369867fbb81a12c88de124e83359ed690",
                    "sha256:1eb82bdf03c1148a5816e4a3e00c8910fc70d37dee35dc007afe8037e2376b8e"
                ]
            }
        },
        "latest-run-20230904": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "generic-aarch64",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2023-09-09T09:10:48.662664437Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:31.895761202Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-04T18:40:58.001277299Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:614dff70ca4206841645edfd3dab48901efeefccc8ef99772f475ee9bac861ff in / "
                },
                {
                    "created": "2023-08-04T18:40:59.951513662Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T05:16:42.403188583Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T05:16:42.403188583Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T05:16:42.403188583Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T05:41:14.882541843Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T05:41:16.309377049Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T05:41:16.309377049Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T05:41:16.340188202Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T05:41:16.351150734Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T05:41:16.360211026Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T05:41:16.360211026Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T05:41:21.389664273Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T05:41:21.747711571Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T09:10:48.373996507Z",
                    "created_by": "LABEL io.balena.device-type=generic-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T09:10:48.373996507Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T09:10:48.662664437Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:cf819d1f191d71ce750fc0b9ca71726d50fc052d7c695682165a84c2bd1eb716",
                    "sha256:2c61372b1614282bfdb58c104252b37a61be492de5c3298dffc56376adfe0a8f",
                    "sha256:3892fad87609c0724cb700c7b327865d8b642316f214825299540678c84e007b",
                    "sha256:47b1691c56a15153e34460e97d0615abbde7eb4128cffd187b3c4507be55c4a0",
                    "sha256:526255e20ebb75f4e4a9cd0b179342ccc59ea09dfb95f916aad1dfd38903c411",
                    "sha256:10a91abc01c07dd01c837dc1a35597c3030ffee89a81f6dcc760a204a2da9e5a",
                    "sha256:fb61a502b5a7e114c0e1b65ffbf1f5d42041b65c52f9ecb41e2fb9a1cdcdbd97",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:cc06c053add61653ccca8a1d621c01df905dfb240d202ad2f7452d1777852952",
                    "sha256:153e452baec08f41027fff3674c18b22fab8e703bf9fe321cbd5b2239a8b437a",
                    "sha256:4b49328db1c28b0599a6dba7094df0748381930f9162e62cd99f60c6d32cb0de"
                ]
            }
        },
        "latest-run-20230911": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "iot-gate-imx8plus",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2023-09-12T03:05:53.243163887Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:31.895761202Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-04T18:40:58.001277299Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:614dff70ca4206841645edfd3dab48901efeefccc8ef99772f475ee9bac861ff in / "
                },
                {
                    "created": "2023-08-04T18:40:59.951513662Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T05:16:42.403188583Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T05:16:42.403188583Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T05:16:42.403188583Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T05:41:14.882541843Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T05:41:16.309377049Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T05:41:16.309377049Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T05:41:16.340188202Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T05:41:16.351150734Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T05:41:16.360211026Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T05:41:16.360211026Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T05:41:21.389664273Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T05:41:21.747711571Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-12T03:05:53.110371243Z",
                    "created_by": "LABEL io.balena.device-type=iot-gate-imx8plus",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-12T03:05:53.110371243Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-12T03:05:53.243163887Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:cf819d1f191d71ce750fc0b9ca71726d50fc052d7c695682165a84c2bd1eb716",
                    "sha256:2c61372b1614282bfdb58c104252b37a61be492de5c3298dffc56376adfe0a8f",
                    "sha256:3892fad87609c0724cb700c7b327865d8b642316f214825299540678c84e007b",
                    "sha256:47b1691c56a15153e34460e97d0615abbde7eb4128cffd187b3c4507be55c4a0",
                    "sha256:526255e20ebb75f4e4a9cd0b179342ccc59ea09dfb95f916aad1dfd38903c411",
                    "sha256:10a91abc01c07dd01c837dc1a35597c3030ffee89a81f6dcc760a204a2da9e5a",
                    "sha256:fb61a502b5a7e114c0e1b65ffbf1f5d42041b65c52f9ecb41e2fb9a1cdcdbd97",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:cc06c053add61653ccca8a1d621c01df905dfb240d202ad2f7452d1777852952",
                    "sha256:b8ed483edfdee7085e4a858d5943ce5fae61b59ccf5d6a7752f71ae9e0877449",
                    "sha256:7dcfcdfbc1c37f420235199d40c101579b8e90adcdc44c1990bf1d8334f375b0"
                ]
            }
        },
        "latest-run-20231103": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "iot-gate-imx8plus",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2023-11-04T16:58:36.691823802Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:31.895761202Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-06T18:42:53.905315575Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:a506790441a5cd056fb456111da480939a46667d520b519dcb9b2e2aa16aae70 in / "
                },
                {
                    "created": "2023-10-06T18:42:54.852939758Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-04T14:05:43.22598589Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-04T14:05:43.22598589Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-04T14:05:43.22598589Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T14:34:18.977818495Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T14:34:20.236374739Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T14:34:20.236374739Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-04T14:34:20.246502673Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T14:34:20.255833503Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T14:34:20.26399513Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T14:34:20.26399513Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-04T14:34:25.601224907Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T14:34:25.783838009Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T16:58:36.562666967Z",
                    "created_by": "LABEL io.balena.device-type=iot-gate-imx8plus",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-04T16:58:36.562666967Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T16:58:36.691823802Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:a37bac7c99baeb556998a67a51775b34aa6df7829fa1ff19323033c5e19837b3",
                    "sha256:768fbcc1112a55954ab49021af3e5b3e77d06892f0018801cb6a68567a441e44",
                    "sha256:b339e6005ff8696452b8a5daf08c04afc137c0da129e399cf294d19b6213af01",
                    "sha256:80e7fcb77b05762cb4af7a336c31edd97b255eb9c5e68b5e2d99fcd0c0941c00",
                    "sha256:faa025149da6c8af6245b9feb2dfa133869871b24b83291212a581a8ac861951",
                    "sha256:85fb00c475997eaa7bf88fdc4a78bd8ad8ecfcafaa4870eb4c2e610747381ba2",
                    "sha256:707dbcf7ea87fd75e1d03a7f275e36d8fcfc1b4ea1f3c867ab6830318bf147e9",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:2509d1d7a240f88f51a41393363e38c35b81e3edf67fa356b59390c21617a3ab",
                    "sha256:a4c40202ed504a23f0061115359756ce4296061beebaccdceecebd8da4e63af9",
                    "sha256:ecdaaf53e54bd152818947b8d0306f4958ea11182202936dd9defa9f17ffdaa6"
                ]
            }
        },
        "latest-run-20231106": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "iot-gate-imx8plus",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2023-11-06T12:31:35.98179637Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:31.895761202Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-06T18:42:53.905315575Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:a506790441a5cd056fb456111da480939a46667d520b519dcb9b2e2aa16aae70 in / "
                },
                {
                    "created": "2023-10-06T18:42:54.852939758Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T09:12:27.261337628Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T09:12:27.261337628Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T09:12:27.261337628Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T09:44:07.194449485Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T09:44:08.356242913Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T09:44:08.356242913Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T09:44:08.370923209Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T09:44:08.383861082Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T09:44:08.401598819Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T09:44:08.401598819Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T09:44:14.097449997Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T09:44:14.33458648Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T12:31:35.819901526Z",
                    "created_by": "LABEL io.balena.device-type=iot-gate-imx8plus",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T12:31:35.819901526Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T12:31:35.98179637Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:a37bac7c99baeb556998a67a51775b34aa6df7829fa1ff19323033c5e19837b3",
                    "sha256:bb42b2b57488a97c34e8f0aa9c9a04b6b5ddc51428a7f869c902e262985533fa",
                    "sha256:f41e2d07027059a658a46da06111805a1c38c357d7a263b65a57906a413afcb8",
                    "sha256:6dfd1348c7cf846716582db5414652bd266c84c3ceb084217d2c1faaa43610bd",
                    "sha256:1ef3bd9e556e1fe5e94ee5fc778405d0e160b3b2f911f7b73b841e3f2947d4ec",
                    "sha256:b00ab734246e3ab0a163af225efd04d30fbb893167c4883967444d8739b0a28b",
                    "sha256:505040d84b751f1b80aad25e47e2b5770da95393e303943d0e90452bb789625d",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:3de7d77508b1af83bfd44b6a7776ab5e9c687ecfe948f5f9d8f15802beed22b0",
                    "sha256:79f3108df0f2d1f13340291298342905907c027b115b3d6798004268b3aee89c",
                    "sha256:688938a5f4feaf8e78c732bb0f26f5b4b9bc6e12f1d5280518263bd268f74441"
                ]
            }
        },
        "latest-run-20231127": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "iot-gate-imx8plus",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2023-12-01T13:07:24.709335954Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:31.895761202Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-29T00:47:03.16713451Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:270e11b4c18af1c1efb8b8579be7fbda5255d56dd69f83ef7d933cfd2c685e5c in / "
                },
                {
                    "created": "2023-11-29T00:47:04.125919026Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T10:52:09.172740458Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T10:52:09.172740458Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T10:52:09.172740458Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T11:10:46.008255947Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T11:10:47.111959762Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T11:10:47.111959762Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T11:10:47.123059062Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T11:10:47.148503741Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T11:10:47.157133896Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T11:10:47.157133896Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T11:10:50.883923644Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T11:10:51.046020579Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T13:07:24.562017117Z",
                    "created_by": "LABEL io.balena.device-type=iot-gate-imx8plus",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T13:07:24.562017117Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T13:07:24.709335954Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:22de68abb450063be7e40efd22fd3b41bec469efafdd95e25c65998648e52b28",
                    "sha256:60f2f571d3fb1d1d2155d703033185efdcb8fd06f11360aff3752c6009ddbba5",
                    "sha256:8bb3ecdba476409248d260241fff01266e4176e947fe811a5efe5456870e671e",
                    "sha256:6852dc1f1a771f4a7632382350c1dbaa2ae3e16802b4884d04618e03763e8376",
                    "sha256:9db2458df0d1ffca59509d5dbd49436ef952483f1042d53531ca90ba7d6de9e9",
                    "sha256:8d401a597be69855ebfaf84921f07b57da8bb7a5c49c370999b998f6062358a2",
                    "sha256:05f9f870334e6de793d303f103d1f1b35f7df1ff21724f7ebaeb6fc561bccc2c",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:24546f46791bf568236132bceae1cdf41c9ca9f6d3e09077cab2bc32ee6bb76c",
                    "sha256:0ee6e1af05fed5090277a4b66a20553164e97d4f26af60bcbbf5e8e130a0424b",
                    "sha256:ec20f57723356e56d8c7929c3a784ed0aae50b2d6f8cde6bb310e89190f528ca"
                ]
            }
        },
        "latest-run-20231204": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "iot-gate-imx8plus",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2023-12-06T22:55:31.420425013Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:31.895761202Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-29T00:47:03.16713451Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:270e11b4c18af1c1efb8b8579be7fbda5255d56dd69f83ef7d933cfd2c685e5c in / "
                },
                {
                    "created": "2023-11-29T00:47:04.125919026Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T20:40:21.575448793Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T20:40:21.575448793Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T20:40:21.575448793Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T20:59:06.4416038Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T20:59:07.14149679Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T20:59:07.14149679Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T20:59:07.150718208Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T20:59:07.159290685Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T20:59:07.187587582Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T20:59:07.187587582Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T20:59:10.850419463Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T20:59:11.010511508Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T22:55:31.287807643Z",
                    "created_by": "LABEL io.balena.device-type=iot-gate-imx8plus",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T22:55:31.287807643Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T22:55:31.420425013Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:22de68abb450063be7e40efd22fd3b41bec469efafdd95e25c65998648e52b28",
                    "sha256:2c6b0df21f9efd51a24a59463b9265452ccc9cf8a26908c50d2742c0e67683bd",
                    "sha256:906012c4f278d0d6c4a614afd4c812fc55bc367d28aac2c10cbdd33ac6ec80b8",
                    "sha256:34fc306b51c5f84676518d54cf67a097f48bfc8e79fb8c0ffc71ed9b2d1b5def",
                    "sha256:aa005d370b40094b326443ce4f1b6d04a780598588bd8f8fa1dc601171d59314",
                    "sha256:e580b4505982459166845d47c3159777541e000c8826a05635c6f84f62f03011",
                    "sha256:79990d4ff119d7188fd5fdcaaa04c391747be11fefbbe682a6a2c495c8ca3a6b",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:0aff9ccfdfd88ab9194d2d15e49264900a8942406276260bf5fb479d637d2075",
                    "sha256:316c5f8b0fbeb6ffb3a0ce73220b175e794d17f6e310a3e0bc7a2ef50c645342",
                    "sha256:8ce4d7578ff5a2e8887d47cae9a1c35fc64d1636cfc68bbe8c15b48010e4dd60"
                ]
            }
        },
        "latest-run-20240205": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "iot-gate-imx8plus",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2024-02-05T02:46:30.94219159Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:31.895761202Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-29T00:47:03.16713451Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:270e11b4c18af1c1efb8b8579be7fbda5255d56dd69f83ef7d933cfd2c685e5c in / "
                },
                {
                    "created": "2023-11-29T00:47:04.125919026Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-05T00:26:08.862006831Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-05T00:26:08.862006831Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-05T00:26:08.862006831Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T00:44:51.352289509Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T00:44:52.031271896Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T00:44:52.031271896Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-05T00:44:52.040913956Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T00:44:52.086913794Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T00:44:52.096058179Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T00:44:52.096058179Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-05T00:44:55.875508418Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T00:44:56.018376913Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T02:46:30.829833069Z",
                    "created_by": "LABEL io.balena.device-type=iot-gate-imx8plus",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-05T02:46:30.829833069Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T02:46:30.94219159Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:22de68abb450063be7e40efd22fd3b41bec469efafdd95e25c65998648e52b28",
                    "sha256:7d94e909dc19f31d9248e1ca5731a04da35c29e754dd69d2fb5a44a2502cc818",
                    "sha256:ed6509b907c0701f8a2a621cb39dbd26d066f869bf0b780990c71b717675bb3d",
                    "sha256:e03ba5a1224f9b985f2d94275263fa36221b3ab01f59437a07d3c1a623b76d77",
                    "sha256:9be68f287ebf7d1727a82714c098ca3ac0e021a4f0bd91d94de4992f010d993f",
                    "sha256:a5b159b9ba50945bb72f35a268a6bd8fca087febe08b2ec49f6982b5d39309e7",
                    "sha256:5efcacbddce62383428c47d9f0b7b716feaa80d8781fe6dd2b1dc81f391509df",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:4491643620a3eb30fa973704b1de6c31cc71b0330dda8cb2847cc88b0981d732",
                    "sha256:b2d88aa29c18001e4fcb693150a36e72f0dbafe39051ee215465168339f864fd",
                    "sha256:86521cd5b53fa059ea52a2ddcdd18f2a7c7e0e90e30865b1d1f18970eac65b84"
                ]
            }
        },
        "latest-run-20240227": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "iot-gate-imx8plus",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2024-03-01T23:22:38.162250541Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:31.895761202Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-29T00:47:03.16713451Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:270e11b4c18af1c1efb8b8579be7fbda5255d56dd69f83ef7d933cfd2c685e5c in / "
                },
                {
                    "created": "2023-11-29T00:47:04.125919026Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T20:49:58.705358685Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T20:49:58.705358685Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T20:49:58.705358685Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:08:24.834287933Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:08:25.565567755Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:08:25.565567755Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T21:08:25.579271093Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:08:25.617204263Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:08:25.629384601Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:08:25.629384601Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T21:08:29.321790107Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:08:29.46619614Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T23:22:38.053697448Z",
                    "created_by": "LABEL io.balena.device-type=iot-gate-imx8plus",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T23:22:38.053697448Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T23:22:38.162250541Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:22de68abb450063be7e40efd22fd3b41bec469efafdd95e25c65998648e52b28",
                    "sha256:bfe341409759f9ccd364ecb2d335246560d19282f3ecf321c53836e101a82d2a",
                    "sha256:22279a1bcbb3b6a49c8d9ada414e0b58c5c83f35e20c9a33acc65e0aedb733a1",
                    "sha256:59b3dbe842a8cbc03ed09e65a15a87e8c46f6653b87eb93c5b37d8ab77060acf",
                    "sha256:2ad87538d509ffa4457cec4d29a36d570c8392257dab445452209d4097b7bf52",
                    "sha256:4b3f303bc53eefd36ad3db9ee937836bf0e5855a96ec2546c67cb8238fa8c5bc",
                    "sha256:27f44cee2cfb128916d178e2e1dd253065b766fcffe0f37cdb2588702c65bd5f",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:7f5845d6da8e4b02efd4b375c5222854a386a7b02c491fe3b96307345b96014d",
                    "sha256:a3ac2e153463933f1666d85b7eb6378535612a047bdd475eda21d486a894b92f",
                    "sha256:6f8dd89a74009292ee644b2c2ea6dde8488e5dae9ebf8cbd127f77b88f8bf4fc"
                ]
            }
        },
        "latest-run-20240304": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "iot-gate-imx8plus",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2024-03-05T10:49:02.924094Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:31.895761202Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-29T00:47:03.16713451Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:270e11b4c18af1c1efb8b8579be7fbda5255d56dd69f83ef7d933cfd2c685e5c in / "
                },
                {
                    "created": "2023-11-29T00:47:04.125919026Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T08:24:13.360409226Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T08:24:13.360409226Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T08:24:13.360409226Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T08:43:22.770169859Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T08:43:23.650621519Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T08:43:23.650621519Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T08:43:23.66033272Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T08:43:23.670216283Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T08:43:23.695421657Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T08:43:23.695421657Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T08:43:27.455502812Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T08:43:27.593974423Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T10:49:02.81018686Z",
                    "created_by": "LABEL io.balena.device-type=iot-gate-imx8plus",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T10:49:02.81018686Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T10:49:02.924094Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:22de68abb450063be7e40efd22fd3b41bec469efafdd95e25c65998648e52b28",
                    "sha256:28463901e499aa0a1515b57d0fbafa9cb9a2cc02cc10ed1687c180941c557184",
                    "sha256:0ca6f2444de4ad55ab4af4fd74364d376cec4fab74ebda60cba78c9fa2d7e649",
                    "sha256:cfc10fd96b96916769b790f45b5a4f0a1a17202f2532d659330de963d4494ebf",
                    "sha256:d2c34fbda1de7685d96923948d480fbe0ebab10b9087bfebda73744dbe2a6f9a",
                    "sha256:0d88f38f1e25f8d79cc6f17c26de206e21378fdd492c88062ab3e718003d32df",
                    "sha256:01e1144fabf916d9df9dbc69c087247ccbb1e57b391ed28f7dac24153a50d7b2",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:7ad9ead66349340e94a99303f594e85c786a6fabee7368153801d079722794bc",
                    "sha256:6d9bc439379dc6b8df2f5253f7c1eb3eab4b7df41d36779811aef70800e08407",
                    "sha256:26ba84d0e46a6d26e818ccc2fbc28157723ab106845216c395ca1e47649fa446"
                ]
            }
        },
        "latest-run-20240401": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "iot-gate-imx8plus",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                }
            },
            "created": "2024-04-01T23:47:50.81840626Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:31.895761202Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-29T00:47:03.16713451Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:270e11b4c18af1c1efb8b8579be7fbda5255d56dd69f83ef7d933cfd2c685e5c in / "
                },
                {
                    "created": "2023-11-29T00:47:04.125919026Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T21:26:29.343455526Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T21:26:29.343455526Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T21:26:29.343455526Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T21:45:10.957762154Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T21:45:11.852141047Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T21:45:11.852141047Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T21:45:11.862471903Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T21:45:11.872331413Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T21:45:11.898584749Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T21:45:11.898584749Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T21:45:15.686171825Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T21:45:15.820771715Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T23:47:50.707520722Z",
                    "created_by": "LABEL io.balena.device-type=iot-gate-imx8plus",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T23:47:50.707520722Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T23:47:50.81840626Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:22de68abb450063be7e40efd22fd3b41bec469efafdd95e25c65998648e52b28",
                    "sha256:3a6d39f67382783e2c69d9a448aa59d1d7654260210364d05c2cae2ef469e3c8",
                    "sha256:8b316e0949cd1905304ca774963ddae530565f690a65de9db1a2dafa9aed0363",
                    "sha256:7fa4949a4c79caf7d749cc4abcbc241a5dd3a5c8d0155458cf6d4d83ac483646",
                    "sha256:0a0eea417236fa5be4e06c1d20766fd9f3b0e064419a66f356dea0f1f6d794df",
                    "sha256:ad31ce618fd1f26b74bc2900fbd27319ed86917e85375f90b57d28b291156d51",
                    "sha256:7b8582873ef4cde2aca83ece090a3993ca7c4f8fe0b13c3b0b064f08c7b21c21",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:8050b5f7d3d161f91b3bad0576691d8640130b32c0b8f23db87cdd4fee47c82e",
                    "sha256:c51d3491b64019f87ef0efcdbc52139676fb9f32add80fde849c9fa5d585dc91",
                    "sha256:66dab9d052d7becc66f0b8b7ae75872806657705cd92ef92ca7ff6d4e51a4240"
                ]
            }
        },
        "latest-run-20240408": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "iot-gate-imx8plus",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                }
            },
            "created": "2024-04-09T20:02:56.694145507Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:31.895761202Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-29T00:47:03.16713451Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:270e11b4c18af1c1efb8b8579be7fbda5255d56dd69f83ef7d933cfd2c685e5c in / "
                },
                {
                    "created": "2023-11-29T00:47:04.125919026Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:52.915602222Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:52.915602222Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:52.915602222Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:54:04.100191166Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:54:04.963844501Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:54:04.963844501Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:54:04.973366628Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:54:05.001513857Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:54:05.024710968Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:54:05.024710968Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:54:08.797015979Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:54:08.943058393Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T20:02:56.566729467Z",
                    "created_by": "LABEL io.balena.device-type=iot-gate-imx8plus",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T20:02:56.566729467Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T20:02:56.694145507Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:22de68abb450063be7e40efd22fd3b41bec469efafdd95e25c65998648e52b28",
                    "sha256:03dd9a4ed991dc43e9a504ad71941782bb6fd4cd57f8ade649bbe25b622e3902",
                    "sha256:d24e8e6aec171dc7068d2c19b85d8c6341381b2f0cf4e1d1a20d5419f2d1ec53",
                    "sha256:e743a07ebcce27b755341d992eb4148fe86bd04481c6d8f2b6fe7364a942af19",
                    "sha256:1c988fbb0bdd3374b1f72bebc1953bd62853c7e33608dbc885ff64eba44dc1eb",
                    "sha256:7fad6968fdbdd1afee5f76e3b2f3df1829677bc85be4fa920cb57db14562699c",
                    "sha256:2999088cf700c485af0973e03dd5e2ff9d96b3f604f5908307f3edb5377c6d58",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:a75c43802eb36b20a7183fe5c30e33ef495a904237a7483d5c73c1df1691887b",
                    "sha256:ba82a540cbc6793313055baaceac216ac219896739f6c0d5c70520d7498ba8f0",
                    "sha256:e6c9a7824e2c775d74446a1eca6572ba467b4af264e68ed89d05bc8535d080e4"
                ]
            }
        },
        "latest-run-20240429": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "iot-gate-imx8plus",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                }
            },
            "created": "2024-05-06T10:39:20.130192892Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:31.895761202Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-29T00:47:03.16713451Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:270e11b4c18af1c1efb8b8579be7fbda5255d56dd69f83ef7d933cfd2c685e5c in / "
                },
                {
                    "created": "2023-11-29T00:47:04.125919026Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T09:28:47.993183335Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T09:28:47.993183335Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T09:28:47.993183335Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T09:47:56.501476974Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T09:47:57.631980985Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T09:47:57.631980985Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T09:47:57.644124262Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T09:47:57.678847981Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T09:47:57.688494096Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T09:47:57.688494096Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T09:48:01.526529414Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T09:48:01.665893428Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T10:39:20.006293092Z",
                    "created_by": "LABEL io.balena.device-type=iot-gate-imx8plus",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T10:39:20.006293092Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T10:39:20.130192892Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:22de68abb450063be7e40efd22fd3b41bec469efafdd95e25c65998648e52b28",
                    "sha256:ef64ad49ccf58709af070779ae49d014558d78a8b6a21fcc279c09ddac79e6c9",
                    "sha256:486e799e950e2b998ed0a1a7221aed44130002259c2b437524c7a8a72b725a56",
                    "sha256:5ad52f9d14deab1b2c3a79dfb68bf730440e209f5926a2cd2ebd561c519a08de",
                    "sha256:73001e4334a2e5a98b50faf87e712eaf851af09ac903e83a569150844ce9eda1",
                    "sha256:696c197b14bb7731bf0a36bbdc5e5272937b693f192b143e02dac747a1305ba1",
                    "sha256:f27b4f97c199fdc59cc49eb91fc7a348daf160285ca6bfce88ede5b64e4bb0a9",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:22341517b8222bb5810db07c816fbd0de10749523856c0263caf14789e77d27d",
                    "sha256:108db07c780851f92a4d8ef0c1926797631a48d81f409bc8850b3a37f31fe4bb",
                    "sha256:5019b6b6e2ea25b8b42acd497a8ea0bb3aa9edf8a150d35e826ed803ec8d3f57"
                ]
            }
        },
        "run": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "iot-gate-imx8plus",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                }
            },
            "created": "2024-05-06T10:39:20.130192892Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:31.895761202Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-29T00:47:03.16713451Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:270e11b4c18af1c1efb8b8579be7fbda5255d56dd69f83ef7d933cfd2c685e5c in / "
                },
                {
                    "created": "2023-11-29T00:47:04.125919026Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T09:28:47.993183335Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T09:28:47.993183335Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T09:28:47.993183335Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T09:47:56.501476974Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T09:47:57.631980985Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T09:47:57.631980985Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T09:47:57.644124262Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T09:47:57.678847981Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T09:47:57.688494096Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T09:47:57.688494096Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T09:48:01.526529414Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T09:48:01.665893428Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T10:39:20.006293092Z",
                    "created_by": "LABEL io.balena.device-type=iot-gate-imx8plus",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T10:39:20.006293092Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T10:39:20.130192892Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:22de68abb450063be7e40efd22fd3b41bec469efafdd95e25c65998648e52b28",
                    "sha256:ef64ad49ccf58709af070779ae49d014558d78a8b6a21fcc279c09ddac79e6c9",
                    "sha256:486e799e950e2b998ed0a1a7221aed44130002259c2b437524c7a8a72b725a56",
                    "sha256:5ad52f9d14deab1b2c3a79dfb68bf730440e209f5926a2cd2ebd561c519a08de",
                    "sha256:73001e4334a2e5a98b50faf87e712eaf851af09ac903e83a569150844ce9eda1",
                    "sha256:696c197b14bb7731bf0a36bbdc5e5272937b693f192b143e02dac747a1305ba1",
                    "sha256:f27b4f97c199fdc59cc49eb91fc7a348daf160285ca6bfce88ede5b64e4bb0a9",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:22341517b8222bb5810db07c816fbd0de10749523856c0263caf14789e77d27d",
                    "sha256:108db07c780851f92a4d8ef0c1926797631a48d81f409bc8850b3a37f31fe4bb",
                    "sha256:5019b6b6e2ea25b8b42acd497a8ea0bb3aa9edf8a150d35e826ed803ec8d3f57"
                ]
            }
        },
        "run-20230502": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Cmd": null,
                "Image": "sha256:a68b119daf3e28debdf078c13084aef27795d0c41eca3070757270c37007dcff",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "OnBuild": null,
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-tx2",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                }
            },
            "container": "7423fe45f993649cd50a86110c3aade31acd4783b1f8f74b94b9a14cd0d3e651",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "[ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info"
                ],
                "Image": "sha256:a68b119daf3e28debdf078c13084aef27795d0c41eca3070757270c37007dcff",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-tx2",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                }
            },
            "created": "2023-05-08T16:20:14.664626498Z",
            "docker_version": "20.10.21",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:31.895761202Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-13T20:39:36.516425489Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:8f1c4c2e60330243e66c553f2377951b11c09601b874f6c778e90ff74c6dc376 in / "
                },
                {
                    "created": "2023-03-13T20:39:37.717809378Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-04-02T00:15:42.184062394Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL io.balena.architecture=aarch64",
                    "empty_layer": true
                },
                {
                    "created": "2023-04-02T00:15:42.325999277Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "empty_layer": true
                },
                {
                    "created": "2023-04-02T00:15:42.488342363Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:24916d641d0ee761d2bebd935412ac2263719e3f48829dd83555470573235ed9 in /usr/bin "
                },
                {
                    "created": "2023-04-02T00:34:27.312050054Z",
                    "created_by": "/bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\""
                },
                {
                    "created": "2023-04-02T01:08:25.388465514Z",
                    "created_by": "/bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end"
                },
                {
                    "created": "2023-04-02T01:08:25.551533349Z",
                    "created_by": "/bin/sh -c #(nop)  ENV UDEV=off",
                    "empty_layer": true
                },
                {
                    "created": "2023-04-02T01:08:25.703401831Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:0e8e5e7fcb5ff4b4caac2552d3c5cbf829703430466832566297680a5b09c62b in /usr/bin/entry.sh "
                },
                {
                    "created": "2023-04-02T01:08:25.832144045Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:207cdc191bada5970fb21d3481971b4a391e6e52061bd584dc75404c36d01fcf in /usr/bin/balena-info "
                },
                {
                    "created": "2023-04-02T01:08:25.936921778Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:def7f364bfe93992865dfba2017def9a3c407b6cf8ac0233dcd0aabaa9e4b75b in /usr/bin/balena-idle "
                },
                {
                    "created": "2023-04-02T01:08:26.059241016Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-04-02T01:08:30.523539615Z",
                    "created_by": "/bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh",
                    "empty_layer": true
                },
                {
                    "created": "2023-04-02T01:08:31.078585399Z",
                    "created_by": "/bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info"
                },
                {
                    "created": "2023-05-08T16:04:48.123965098Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL io.balena.device-type=jetson-tx2",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-08T16:20:13.834488214Z",
                    "created_by": "/bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all"
                },
                {
                    "created": "2023-05-08T16:20:14.664626498Z",
                    "created_by": "/bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:6fa23825e7d36de818dd635e6ddcfb1a63b42c8d2a2ebe9dc929a2d8e763fe3f",
                    "sha256:07b0d4da5e04230bb8db9790c1ff3923ecfeaf3f1e9a415e2aab47b5a9a3c0f1",
                    "sha256:48150357fa88a44cf5998c4a5b7e13f8107d4a0b881d13e4aca84aebe66babea",
                    "sha256:efe5d73677d2d6bf2c9aff6540e5fd3471e4445a5ebd050fcf61edacabd24493",
                    "sha256:a4786e5f9479fd133d3e0656a2d110fa7171de1d557215c0963994517a246db0",
                    "sha256:ac16514f34947310a8a17a27f099a5c82bb2f563a28a4e1431998927adaa1e53",
                    "sha256:eda8f31ef2f8144169de7e12869fc1e897e7427c6cab3e81041c33c07d11ff5b",
                    "sha256:6f7ea015bad319a12178cc9deed86ad6432b252ebd6dc7141a974eee74653f64",
                    "sha256:cfd8b93ad27a03808da6e42d10bfd05a9317239d5bfaf63b1e62b4f172372cbc",
                    "sha256:59c871739bd4ff474a5cef9442579177864a340096aa438609cddb64c1b102f0"
                ]
            }
        },
        "run-20230530": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Cmd": null,
                "Image": "sha256:20f9e37cab056b4dae525c039f7037ba42e096a6f55717137afee04271e77e96",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "OnBuild": null,
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-tx2",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                }
            },
            "container": "02586b804b62abfb75793d789ea4c7363176723ca5b24c0b44b7cf4458c84c71",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "[ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info"
                ],
                "Image": "sha256:20f9e37cab056b4dae525c039f7037ba42e096a6f55717137afee04271e77e96",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-tx2",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                }
            },
            "created": "2023-06-07T02:52:23.839260472Z",
            "docker_version": "20.10.21",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:31.895761202Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-31T18:09:14.311114615Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:ba657df1d10e8dc0a769b25e4ab09a73bca3a89df41b3a1b4e10f5fef058d1de in / "
                },
                {
                    "created": "2023-05-31T18:09:15.547149675Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-05T02:03:26.945834815Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL io.balena.architecture=aarch64",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-05T02:03:27.13778573Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-05T02:03:27.332819661Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:24916d641d0ee761d2bebd935412ac2263719e3f48829dd83555470573235ed9 in /usr/bin "
                },
                {
                    "created": "2023-06-05T02:24:26.189516816Z",
                    "created_by": "/bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\""
                },
                {
                    "created": "2023-06-05T03:02:04.392445503Z",
                    "created_by": "/bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end"
                },
                {
                    "created": "2023-06-05T03:02:04.646844986Z",
                    "created_by": "/bin/sh -c #(nop)  ENV UDEV=off",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-05T03:02:04.825711363Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:0e8e5e7fcb5ff4b4caac2552d3c5cbf829703430466832566297680a5b09c62b in /usr/bin/entry.sh "
                },
                {
                    "created": "2023-06-05T03:02:04.983337019Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:207cdc191bada5970fb21d3481971b4a391e6e52061bd584dc75404c36d01fcf in /usr/bin/balena-info "
                },
                {
                    "created": "2023-06-05T03:02:05.123767699Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:def7f364bfe93992865dfba2017def9a3c407b6cf8ac0233dcd0aabaa9e4b75b in /usr/bin/balena-idle "
                },
                {
                    "created": "2023-06-05T03:02:05.338685177Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-05T03:02:12.042609634Z",
                    "created_by": "/bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-05T03:02:13.377800909Z",
                    "created_by": "/bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info"
                },
                {
                    "created": "2023-06-07T02:34:44.82287582Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL io.balena.device-type=jetson-tx2",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-07T02:52:22.830368797Z",
                    "created_by": "/bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all"
                },
                {
                    "created": "2023-06-07T02:52:23.839260472Z",
                    "created_by": "/bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:249911891a8331ea3bbb5bf844c0feaad6066fdc936878a8c464416b1d78b22e",
                    "sha256:bc78f7b899700e4367bb848ecbc496f06865e82c6015e2a802406742f1cbefcf",
                    "sha256:284c09b1cb3f1977b7c56605e5ae1944d5ce3a83c3d77c0a22357607feb3701c",
                    "sha256:003aced5afcb43cee3c9363048741d8467dca9a7dfc7978926eeba94c0c793f5",
                    "sha256:83dfca5fa07e53ca9393a9653242046ccad66ffed2c2b472e349ccc34984f78f",
                    "sha256:546722af04ce5a848511c0f9b3850aefac740a4d7aff4fbbe9cf3e1caacbdaf8",
                    "sha256:fd8a15cd2653a1a0a698c31f8c62ce5e4920a30df101f4d3b8c125c83cdb0d3e",
                    "sha256:c497def0fd9a40925b091eb2a284460584d191e6f8bc647f5f3aa8c26565ff0b",
                    "sha256:1075349ad85152e3b31e6065a7f2f80d43d7f13314a1ef8a342ec2ebb114cc6f",
                    "sha256:adec9d84947aa22da33ef3f88120acb40c3a38fdcb36d111ea65e0514b23f071"
                ]
            }
        },
        "run-20230803": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "generic-aarch64",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2023-08-04T23:07:43.375331667Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:31.895761202Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-04T18:40:58.001277299Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:614dff70ca4206841645edfd3dab48901efeefccc8ef99772f475ee9bac861ff in / "
                },
                {
                    "created": "2023-08-04T18:40:59.951513662Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-04T18:54:04.279599867Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-04T18:54:04.279599867Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-04T18:54:04.279599867Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-04T19:20:03.223955138Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-04T20:07:46.587328502Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-04T20:07:46.587328502Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-04T20:07:46.609548438Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-04T20:07:46.619000353Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-04T20:07:46.643784193Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-04T20:07:46.643784193Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-04T20:07:51.914868814Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-04T20:07:52.316641812Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-04T23:07:42.902689671Z",
                    "created_by": "LABEL io.balena.device-type=generic-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-04T23:07:42.902689671Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-04T23:07:43.375331667Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "moby.buildkit.buildinfo.v1": "eyJmcm9udGVuZCI6ImRvY2tlcmZpbGUudjAiLCJhdHRycyI6eyJmaWxlbmFtZSI6IkRvY2tlcmZpbGUifSwic291cmNlcyI6W3sidHlwZSI6ImRvY2tlci1pbWFnZSIsInJlZiI6ImRvY2tlci5pby9iYWxlbmFsaWIvYWFyY2g2NC1mZWRvcmE6MzctcnVuIiwicGluIjoic2hhMjU2OjYyZDgyMzU1YTk1ZGFkNjNkZmFiYjAwYWRmMDg0ZDM1YjFlODUxYTQyZWU1OTQzYjE3OGQ5ODE5NjljMmFkZjIifV19",
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:cf819d1f191d71ce750fc0b9ca71726d50fc052d7c695682165a84c2bd1eb716",
                    "sha256:03789feb1993fcca25eacd7c042a5e0da237c9f2fa4a6f2ba8ad8ddcbcc047df",
                    "sha256:df63306f05b409fc7c242f10144cdea2d6eb06bd1c0d437922509682bf196d4f",
                    "sha256:bbdfed2dd994f5e7e9323593f9ca29bfb8b828a195790f981d11f82dc13c624f",
                    "sha256:2776818030d35900166dbf5a502fabc1ff88dd330f244d1162ca86ce8a18233b",
                    "sha256:26be61103dde02ae7eeb259ca681c784e0d557bf6b12df2a1a6552473280bedd",
                    "sha256:bb747782f19553a77f709283cb961b77fe72e296acc3ead020eca924dc5fce01",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:e8b5341d265b6c5db48a0f11ed785549f85f32a54ea1909674b6c08a33a2d0f7",
                    "sha256:a623c30286ac9d16628692759bdc53e28ae39e8e61efd5ee7364a36d900d6042",
                    "sha256:24834edc35e897ebb0f69be2daa23f220350916750c2c3d6586074bbd8ec730d"
                ]
            }
        },
        "run-20230829": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "generic-aarch64",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2023-09-02T08:58:38.635902453Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:31.895761202Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-04T18:40:58.001277299Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:614dff70ca4206841645edfd3dab48901efeefccc8ef99772f475ee9bac861ff in / "
                },
                {
                    "created": "2023-08-04T18:40:59.951513662Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-02T05:03:54.900306555Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-02T05:03:54.900306555Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-02T05:03:54.900306555Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T05:29:59.032216117Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T07:49:31.667835224Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T07:49:31.667835224Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-02T07:49:31.703166771Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T07:49:31.71048196Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T07:49:31.717951149Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T07:49:31.717951149Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-02T07:49:36.906076254Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T07:49:37.296912313Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T08:58:38.205221045Z",
                    "created_by": "LABEL io.balena.device-type=generic-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-02T08:58:38.205221045Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T08:58:38.635902453Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:cf819d1f191d71ce750fc0b9ca71726d50fc052d7c695682165a84c2bd1eb716",
                    "sha256:3c382cf512bf47b7376b28df697eafe60fb026ff08ad6264f571b1804576a531",
                    "sha256:242c49d1b03e40d91c941d76ea65e48dbfb13a6b7f6a8c0f17fa2b79bb3bf341",
                    "sha256:bba0a7dd26656a143d366c9386e193e577dde85487fea059991acb5311c337f8",
                    "sha256:0229146c9a8ae2f2d63e6a19a19370e3c3106fb917ff4041c69c337bafe20825",
                    "sha256:1b2572994e04be16791b3c500716eb39f1b1319dafd2c50ada219e826ddb81dc",
                    "sha256:4e58dca27db4d5d9ee1fdb2b00ba98010756175be3e905351b42f93464022edc",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:c6be8ccf7f63475573716aad14ea1215d6bee6236ef265531b27279cfde66460",
                    "sha256:430d5314f168d952339399356004a06369867fbb81a12c88de124e83359ed690",
                    "sha256:1eb82bdf03c1148a5816e4a3e00c8910fc70d37dee35dc007afe8037e2376b8e"
                ]
            }
        },
        "run-20230904": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "generic-aarch64",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2023-09-09T09:10:48.662664437Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:31.895761202Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-04T18:40:58.001277299Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:614dff70ca4206841645edfd3dab48901efeefccc8ef99772f475ee9bac861ff in / "
                },
                {
                    "created": "2023-08-04T18:40:59.951513662Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T05:16:42.403188583Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T05:16:42.403188583Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T05:16:42.403188583Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T05:41:14.882541843Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T05:41:16.309377049Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T05:41:16.309377049Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T05:41:16.340188202Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T05:41:16.351150734Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T05:41:16.360211026Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T05:41:16.360211026Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T05:41:21.389664273Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T05:41:21.747711571Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T09:10:48.373996507Z",
                    "created_by": "LABEL io.balena.device-type=generic-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T09:10:48.373996507Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T09:10:48.662664437Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:cf819d1f191d71ce750fc0b9ca71726d50fc052d7c695682165a84c2bd1eb716",
                    "sha256:2c61372b1614282bfdb58c104252b37a61be492de5c3298dffc56376adfe0a8f",
                    "sha256:3892fad87609c0724cb700c7b327865d8b642316f214825299540678c84e007b",
                    "sha256:47b1691c56a15153e34460e97d0615abbde7eb4128cffd187b3c4507be55c4a0",
                    "sha256:526255e20ebb75f4e4a9cd0b179342ccc59ea09dfb95f916aad1dfd38903c411",
                    "sha256:10a91abc01c07dd01c837dc1a35597c3030ffee89a81f6dcc760a204a2da9e5a",
                    "sha256:fb61a502b5a7e114c0e1b65ffbf1f5d42041b65c52f9ecb41e2fb9a1cdcdbd97",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:cc06c053add61653ccca8a1d621c01df905dfb240d202ad2f7452d1777852952",
                    "sha256:153e452baec08f41027fff3674c18b22fab8e703bf9fe321cbd5b2239a8b437a",
                    "sha256:4b49328db1c28b0599a6dba7094df0748381930f9162e62cd99f60c6d32cb0de"
                ]
            }
        },
        "run-20230911": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "iot-gate-imx8plus",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2023-09-12T03:05:53.243163887Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:31.895761202Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-04T18:40:58.001277299Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:614dff70ca4206841645edfd3dab48901efeefccc8ef99772f475ee9bac861ff in / "
                },
                {
                    "created": "2023-08-04T18:40:59.951513662Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T05:16:42.403188583Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T05:16:42.403188583Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T05:16:42.403188583Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T05:41:14.882541843Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T05:41:16.309377049Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T05:41:16.309377049Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T05:41:16.340188202Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T05:41:16.351150734Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T05:41:16.360211026Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T05:41:16.360211026Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T05:41:21.389664273Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T05:41:21.747711571Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-12T03:05:53.110371243Z",
                    "created_by": "LABEL io.balena.device-type=iot-gate-imx8plus",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-12T03:05:53.110371243Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-12T03:05:53.243163887Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:cf819d1f191d71ce750fc0b9ca71726d50fc052d7c695682165a84c2bd1eb716",
                    "sha256:2c61372b1614282bfdb58c104252b37a61be492de5c3298dffc56376adfe0a8f",
                    "sha256:3892fad87609c0724cb700c7b327865d8b642316f214825299540678c84e007b",
                    "sha256:47b1691c56a15153e34460e97d0615abbde7eb4128cffd187b3c4507be55c4a0",
                    "sha256:526255e20ebb75f4e4a9cd0b179342ccc59ea09dfb95f916aad1dfd38903c411",
                    "sha256:10a91abc01c07dd01c837dc1a35597c3030ffee89a81f6dcc760a204a2da9e5a",
                    "sha256:fb61a502b5a7e114c0e1b65ffbf1f5d42041b65c52f9ecb41e2fb9a1cdcdbd97",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:cc06c053add61653ccca8a1d621c01df905dfb240d202ad2f7452d1777852952",
                    "sha256:b8ed483edfdee7085e4a858d5943ce5fae61b59ccf5d6a7752f71ae9e0877449",
                    "sha256:7dcfcdfbc1c37f420235199d40c101579b8e90adcdc44c1990bf1d8334f375b0"
                ]
            }
        },
        "run-20231103": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "iot-gate-imx8plus",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2023-11-04T16:58:36.691823802Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:31.895761202Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-06T18:42:53.905315575Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:a506790441a5cd056fb456111da480939a46667d520b519dcb9b2e2aa16aae70 in / "
                },
                {
                    "created": "2023-10-06T18:42:54.852939758Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-04T14:05:43.22598589Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-04T14:05:43.22598589Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-04T14:05:43.22598589Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T14:34:18.977818495Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T14:34:20.236374739Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T14:34:20.236374739Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-04T14:34:20.246502673Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T14:34:20.255833503Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T14:34:20.26399513Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T14:34:20.26399513Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-04T14:34:25.601224907Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T14:34:25.783838009Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T16:58:36.562666967Z",
                    "created_by": "LABEL io.balena.device-type=iot-gate-imx8plus",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-04T16:58:36.562666967Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T16:58:36.691823802Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:a37bac7c99baeb556998a67a51775b34aa6df7829fa1ff19323033c5e19837b3",
                    "sha256:768fbcc1112a55954ab49021af3e5b3e77d06892f0018801cb6a68567a441e44",
                    "sha256:b339e6005ff8696452b8a5daf08c04afc137c0da129e399cf294d19b6213af01",
                    "sha256:80e7fcb77b05762cb4af7a336c31edd97b255eb9c5e68b5e2d99fcd0c0941c00",
                    "sha256:faa025149da6c8af6245b9feb2dfa133869871b24b83291212a581a8ac861951",
                    "sha256:85fb00c475997eaa7bf88fdc4a78bd8ad8ecfcafaa4870eb4c2e610747381ba2",
                    "sha256:707dbcf7ea87fd75e1d03a7f275e36d8fcfc1b4ea1f3c867ab6830318bf147e9",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:2509d1d7a240f88f51a41393363e38c35b81e3edf67fa356b59390c21617a3ab",
                    "sha256:a4c40202ed504a23f0061115359756ce4296061beebaccdceecebd8da4e63af9",
                    "sha256:ecdaaf53e54bd152818947b8d0306f4958ea11182202936dd9defa9f17ffdaa6"
                ]
            }
        },
        "run-20231106": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "iot-gate-imx8plus",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2023-11-06T12:31:35.98179637Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:31.895761202Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-06T18:42:53.905315575Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:a506790441a5cd056fb456111da480939a46667d520b519dcb9b2e2aa16aae70 in / "
                },
                {
                    "created": "2023-10-06T18:42:54.852939758Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T09:12:27.261337628Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T09:12:27.261337628Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T09:12:27.261337628Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T09:44:07.194449485Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T09:44:08.356242913Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T09:44:08.356242913Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T09:44:08.370923209Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T09:44:08.383861082Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T09:44:08.401598819Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T09:44:08.401598819Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T09:44:14.097449997Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T09:44:14.33458648Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T12:31:35.819901526Z",
                    "created_by": "LABEL io.balena.device-type=iot-gate-imx8plus",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T12:31:35.819901526Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T12:31:35.98179637Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:a37bac7c99baeb556998a67a51775b34aa6df7829fa1ff19323033c5e19837b3",
                    "sha256:bb42b2b57488a97c34e8f0aa9c9a04b6b5ddc51428a7f869c902e262985533fa",
                    "sha256:f41e2d07027059a658a46da06111805a1c38c357d7a263b65a57906a413afcb8",
                    "sha256:6dfd1348c7cf846716582db5414652bd266c84c3ceb084217d2c1faaa43610bd",
                    "sha256:1ef3bd9e556e1fe5e94ee5fc778405d0e160b3b2f911f7b73b841e3f2947d4ec",
                    "sha256:b00ab734246e3ab0a163af225efd04d30fbb893167c4883967444d8739b0a28b",
                    "sha256:505040d84b751f1b80aad25e47e2b5770da95393e303943d0e90452bb789625d",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:3de7d77508b1af83bfd44b6a7776ab5e9c687ecfe948f5f9d8f15802beed22b0",
                    "sha256:79f3108df0f2d1f13340291298342905907c027b115b3d6798004268b3aee89c",
                    "sha256:688938a5f4feaf8e78c732bb0f26f5b4b9bc6e12f1d5280518263bd268f74441"
                ]
            }
        },
        "run-20231127": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "iot-gate-imx8plus",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2023-12-01T13:07:24.709335954Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:31.895761202Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-29T00:47:03.16713451Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:270e11b4c18af1c1efb8b8579be7fbda5255d56dd69f83ef7d933cfd2c685e5c in / "
                },
                {
                    "created": "2023-11-29T00:47:04.125919026Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T10:52:09.172740458Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T10:52:09.172740458Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T10:52:09.172740458Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T11:10:46.008255947Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T11:10:47.111959762Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T11:10:47.111959762Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T11:10:47.123059062Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T11:10:47.148503741Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T11:10:47.157133896Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T11:10:47.157133896Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T11:10:50.883923644Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T11:10:51.046020579Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T13:07:24.562017117Z",
                    "created_by": "LABEL io.balena.device-type=iot-gate-imx8plus",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T13:07:24.562017117Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T13:07:24.709335954Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:22de68abb450063be7e40efd22fd3b41bec469efafdd95e25c65998648e52b28",
                    "sha256:60f2f571d3fb1d1d2155d703033185efdcb8fd06f11360aff3752c6009ddbba5",
                    "sha256:8bb3ecdba476409248d260241fff01266e4176e947fe811a5efe5456870e671e",
                    "sha256:6852dc1f1a771f4a7632382350c1dbaa2ae3e16802b4884d04618e03763e8376",
                    "sha256:9db2458df0d1ffca59509d5dbd49436ef952483f1042d53531ca90ba7d6de9e9",
                    "sha256:8d401a597be69855ebfaf84921f07b57da8bb7a5c49c370999b998f6062358a2",
                    "sha256:05f9f870334e6de793d303f103d1f1b35f7df1ff21724f7ebaeb6fc561bccc2c",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:24546f46791bf568236132bceae1cdf41c9ca9f6d3e09077cab2bc32ee6bb76c",
                    "sha256:0ee6e1af05fed5090277a4b66a20553164e97d4f26af60bcbbf5e8e130a0424b",
                    "sha256:ec20f57723356e56d8c7929c3a784ed0aae50b2d6f8cde6bb310e89190f528ca"
                ]
            }
        },
        "run-20231204": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "iot-gate-imx8plus",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2023-12-06T22:55:31.420425013Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:31.895761202Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-29T00:47:03.16713451Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:270e11b4c18af1c1efb8b8579be7fbda5255d56dd69f83ef7d933cfd2c685e5c in / "
                },
                {
                    "created": "2023-11-29T00:47:04.125919026Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T20:40:21.575448793Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T20:40:21.575448793Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T20:40:21.575448793Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T20:59:06.4416038Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T20:59:07.14149679Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T20:59:07.14149679Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T20:59:07.150718208Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T20:59:07.159290685Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T20:59:07.187587582Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T20:59:07.187587582Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T20:59:10.850419463Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T20:59:11.010511508Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T22:55:31.287807643Z",
                    "created_by": "LABEL io.balena.device-type=iot-gate-imx8plus",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T22:55:31.287807643Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T22:55:31.420425013Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:22de68abb450063be7e40efd22fd3b41bec469efafdd95e25c65998648e52b28",
                    "sha256:2c6b0df21f9efd51a24a59463b9265452ccc9cf8a26908c50d2742c0e67683bd",
                    "sha256:906012c4f278d0d6c4a614afd4c812fc55bc367d28aac2c10cbdd33ac6ec80b8",
                    "sha256:34fc306b51c5f84676518d54cf67a097f48bfc8e79fb8c0ffc71ed9b2d1b5def",
                    "sha256:aa005d370b40094b326443ce4f1b6d04a780598588bd8f8fa1dc601171d59314",
                    "sha256:e580b4505982459166845d47c3159777541e000c8826a05635c6f84f62f03011",
                    "sha256:79990d4ff119d7188fd5fdcaaa04c391747be11fefbbe682a6a2c495c8ca3a6b",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:0aff9ccfdfd88ab9194d2d15e49264900a8942406276260bf5fb479d637d2075",
                    "sha256:316c5f8b0fbeb6ffb3a0ce73220b175e794d17f6e310a3e0bc7a2ef50c645342",
                    "sha256:8ce4d7578ff5a2e8887d47cae9a1c35fc64d1636cfc68bbe8c15b48010e4dd60"
                ]
            }
        },
        "run-20240205": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "iot-gate-imx8plus",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2024-02-05T02:46:30.94219159Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:31.895761202Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-29T00:47:03.16713451Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:270e11b4c18af1c1efb8b8579be7fbda5255d56dd69f83ef7d933cfd2c685e5c in / "
                },
                {
                    "created": "2023-11-29T00:47:04.125919026Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-05T00:26:08.862006831Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-05T00:26:08.862006831Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-05T00:26:08.862006831Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T00:44:51.352289509Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T00:44:52.031271896Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T00:44:52.031271896Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-05T00:44:52.040913956Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T00:44:52.086913794Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T00:44:52.096058179Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T00:44:52.096058179Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-05T00:44:55.875508418Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T00:44:56.018376913Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T02:46:30.829833069Z",
                    "created_by": "LABEL io.balena.device-type=iot-gate-imx8plus",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-05T02:46:30.829833069Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T02:46:30.94219159Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:22de68abb450063be7e40efd22fd3b41bec469efafdd95e25c65998648e52b28",
                    "sha256:7d94e909dc19f31d9248e1ca5731a04da35c29e754dd69d2fb5a44a2502cc818",
                    "sha256:ed6509b907c0701f8a2a621cb39dbd26d066f869bf0b780990c71b717675bb3d",
                    "sha256:e03ba5a1224f9b985f2d94275263fa36221b3ab01f59437a07d3c1a623b76d77",
                    "sha256:9be68f287ebf7d1727a82714c098ca3ac0e021a4f0bd91d94de4992f010d993f",
                    "sha256:a5b159b9ba50945bb72f35a268a6bd8fca087febe08b2ec49f6982b5d39309e7",
                    "sha256:5efcacbddce62383428c47d9f0b7b716feaa80d8781fe6dd2b1dc81f391509df",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:4491643620a3eb30fa973704b1de6c31cc71b0330dda8cb2847cc88b0981d732",
                    "sha256:b2d88aa29c18001e4fcb693150a36e72f0dbafe39051ee215465168339f864fd",
                    "sha256:86521cd5b53fa059ea52a2ddcdd18f2a7c7e0e90e30865b1d1f18970eac65b84"
                ]
            }
        },
        "run-20240227": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "iot-gate-imx8plus",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2024-03-01T23:22:38.162250541Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:31.895761202Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-29T00:47:03.16713451Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:270e11b4c18af1c1efb8b8579be7fbda5255d56dd69f83ef7d933cfd2c685e5c in / "
                },
                {
                    "created": "2023-11-29T00:47:04.125919026Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T20:49:58.705358685Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T20:49:58.705358685Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T20:49:58.705358685Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:08:24.834287933Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:08:25.565567755Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:08:25.565567755Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T21:08:25.579271093Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:08:25.617204263Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:08:25.629384601Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:08:25.629384601Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T21:08:29.321790107Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:08:29.46619614Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T23:22:38.053697448Z",
                    "created_by": "LABEL io.balena.device-type=iot-gate-imx8plus",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T23:22:38.053697448Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T23:22:38.162250541Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:22de68abb450063be7e40efd22fd3b41bec469efafdd95e25c65998648e52b28",
                    "sha256:bfe341409759f9ccd364ecb2d335246560d19282f3ecf321c53836e101a82d2a",
                    "sha256:22279a1bcbb3b6a49c8d9ada414e0b58c5c83f35e20c9a33acc65e0aedb733a1",
                    "sha256:59b3dbe842a8cbc03ed09e65a15a87e8c46f6653b87eb93c5b37d8ab77060acf",
                    "sha256:2ad87538d509ffa4457cec4d29a36d570c8392257dab445452209d4097b7bf52",
                    "sha256:4b3f303bc53eefd36ad3db9ee937836bf0e5855a96ec2546c67cb8238fa8c5bc",
                    "sha256:27f44cee2cfb128916d178e2e1dd253065b766fcffe0f37cdb2588702c65bd5f",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:7f5845d6da8e4b02efd4b375c5222854a386a7b02c491fe3b96307345b96014d",
                    "sha256:a3ac2e153463933f1666d85b7eb6378535612a047bdd475eda21d486a894b92f",
                    "sha256:6f8dd89a74009292ee644b2c2ea6dde8488e5dae9ebf8cbd127f77b88f8bf4fc"
                ]
            }
        },
        "run-20240304": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "iot-gate-imx8plus",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2024-03-05T10:49:02.924094Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:31.895761202Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-29T00:47:03.16713451Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:270e11b4c18af1c1efb8b8579be7fbda5255d56dd69f83ef7d933cfd2c685e5c in / "
                },
                {
                    "created": "2023-11-29T00:47:04.125919026Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T08:24:13.360409226Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T08:24:13.360409226Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T08:24:13.360409226Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T08:43:22.770169859Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T08:43:23.650621519Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T08:43:23.650621519Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T08:43:23.66033272Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T08:43:23.670216283Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T08:43:23.695421657Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T08:43:23.695421657Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T08:43:27.455502812Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T08:43:27.593974423Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T10:49:02.81018686Z",
                    "created_by": "LABEL io.balena.device-type=iot-gate-imx8plus",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T10:49:02.81018686Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T10:49:02.924094Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:22de68abb450063be7e40efd22fd3b41bec469efafdd95e25c65998648e52b28",
                    "sha256:28463901e499aa0a1515b57d0fbafa9cb9a2cc02cc10ed1687c180941c557184",
                    "sha256:0ca6f2444de4ad55ab4af4fd74364d376cec4fab74ebda60cba78c9fa2d7e649",
                    "sha256:cfc10fd96b96916769b790f45b5a4f0a1a17202f2532d659330de963d4494ebf",
                    "sha256:d2c34fbda1de7685d96923948d480fbe0ebab10b9087bfebda73744dbe2a6f9a",
                    "sha256:0d88f38f1e25f8d79cc6f17c26de206e21378fdd492c88062ab3e718003d32df",
                    "sha256:01e1144fabf916d9df9dbc69c087247ccbb1e57b391ed28f7dac24153a50d7b2",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:7ad9ead66349340e94a99303f594e85c786a6fabee7368153801d079722794bc",
                    "sha256:6d9bc439379dc6b8df2f5253f7c1eb3eab4b7df41d36779811aef70800e08407",
                    "sha256:26ba84d0e46a6d26e818ccc2fbc28157723ab106845216c395ca1e47649fa446"
                ]
            }
        },
        "run-20240401": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "iot-gate-imx8plus",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                }
            },
            "created": "2024-04-01T23:47:50.81840626Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:31.895761202Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-29T00:47:03.16713451Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:270e11b4c18af1c1efb8b8579be7fbda5255d56dd69f83ef7d933cfd2c685e5c in / "
                },
                {
                    "created": "2023-11-29T00:47:04.125919026Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T21:26:29.343455526Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T21:26:29.343455526Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T21:26:29.343455526Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T21:45:10.957762154Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T21:45:11.852141047Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T21:45:11.852141047Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T21:45:11.862471903Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T21:45:11.872331413Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T21:45:11.898584749Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T21:45:11.898584749Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T21:45:15.686171825Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T21:45:15.820771715Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T23:47:50.707520722Z",
                    "created_by": "LABEL io.balena.device-type=iot-gate-imx8plus",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T23:47:50.707520722Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T23:47:50.81840626Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:22de68abb450063be7e40efd22fd3b41bec469efafdd95e25c65998648e52b28",
                    "sha256:3a6d39f67382783e2c69d9a448aa59d1d7654260210364d05c2cae2ef469e3c8",
                    "sha256:8b316e0949cd1905304ca774963ddae530565f690a65de9db1a2dafa9aed0363",
                    "sha256:7fa4949a4c79caf7d749cc4abcbc241a5dd3a5c8d0155458cf6d4d83ac483646",
                    "sha256:0a0eea417236fa5be4e06c1d20766fd9f3b0e064419a66f356dea0f1f6d794df",
                    "sha256:ad31ce618fd1f26b74bc2900fbd27319ed86917e85375f90b57d28b291156d51",
                    "sha256:7b8582873ef4cde2aca83ece090a3993ca7c4f8fe0b13c3b0b064f08c7b21c21",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:8050b5f7d3d161f91b3bad0576691d8640130b32c0b8f23db87cdd4fee47c82e",
                    "sha256:c51d3491b64019f87ef0efcdbc52139676fb9f32add80fde849c9fa5d585dc91",
                    "sha256:66dab9d052d7becc66f0b8b7ae75872806657705cd92ef92ca7ff6d4e51a4240"
                ]
            }
        },
        "run-20240408": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "iot-gate-imx8plus",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                }
            },
            "created": "2024-04-09T20:02:56.694145507Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:31.895761202Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-29T00:47:03.16713451Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:270e11b4c18af1c1efb8b8579be7fbda5255d56dd69f83ef7d933cfd2c685e5c in / "
                },
                {
                    "created": "2023-11-29T00:47:04.125919026Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:52.915602222Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:52.915602222Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:52.915602222Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:54:04.100191166Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:54:04.963844501Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:54:04.963844501Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:54:04.973366628Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:54:05.001513857Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:54:05.024710968Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:54:05.024710968Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:54:08.797015979Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:54:08.943058393Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T20:02:56.566729467Z",
                    "created_by": "LABEL io.balena.device-type=iot-gate-imx8plus",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T20:02:56.566729467Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T20:02:56.694145507Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:22de68abb450063be7e40efd22fd3b41bec469efafdd95e25c65998648e52b28",
                    "sha256:03dd9a4ed991dc43e9a504ad71941782bb6fd4cd57f8ade649bbe25b622e3902",
                    "sha256:d24e8e6aec171dc7068d2c19b85d8c6341381b2f0cf4e1d1a20d5419f2d1ec53",
                    "sha256:e743a07ebcce27b755341d992eb4148fe86bd04481c6d8f2b6fe7364a942af19",
                    "sha256:1c988fbb0bdd3374b1f72bebc1953bd62853c7e33608dbc885ff64eba44dc1eb",
                    "sha256:7fad6968fdbdd1afee5f76e3b2f3df1829677bc85be4fa920cb57db14562699c",
                    "sha256:2999088cf700c485af0973e03dd5e2ff9d96b3f604f5908307f3edb5377c6d58",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:a75c43802eb36b20a7183fe5c30e33ef495a904237a7483d5c73c1df1691887b",
                    "sha256:ba82a540cbc6793313055baaceac216ac219896739f6c0d5c70520d7498ba8f0",
                    "sha256:e6c9a7824e2c775d74446a1eca6572ba467b4af264e68ed89d05bc8535d080e4"
                ]
            }
        },
        "run-20240429": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "iot-gate-imx8plus",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                }
            },
            "created": "2024-05-06T10:39:20.130192892Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:31.895761202Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-29T00:47:03.16713451Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:270e11b4c18af1c1efb8b8579be7fbda5255d56dd69f83ef7d933cfd2c685e5c in / "
                },
                {
                    "created": "2023-11-29T00:47:04.125919026Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T09:28:47.993183335Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T09:28:47.993183335Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T09:28:47.993183335Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T09:47:56.501476974Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T09:47:57.631980985Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T09:47:57.631980985Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T09:47:57.644124262Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T09:47:57.678847981Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T09:47:57.688494096Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T09:47:57.688494096Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T09:48:01.526529414Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T09:48:01.665893428Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T10:39:20.006293092Z",
                    "created_by": "LABEL io.balena.device-type=iot-gate-imx8plus",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T10:39:20.006293092Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T10:39:20.130192892Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:22de68abb450063be7e40efd22fd3b41bec469efafdd95e25c65998648e52b28",
                    "sha256:ef64ad49ccf58709af070779ae49d014558d78a8b6a21fcc279c09ddac79e6c9",
                    "sha256:486e799e950e2b998ed0a1a7221aed44130002259c2b437524c7a8a72b725a56",
                    "sha256:5ad52f9d14deab1b2c3a79dfb68bf730440e209f5926a2cd2ebd561c519a08de",
                    "sha256:73001e4334a2e5a98b50faf87e712eaf851af09ac903e83a569150844ce9eda1",
                    "sha256:696c197b14bb7731bf0a36bbdc5e5272937b693f192b143e02dac747a1305ba1",
                    "sha256:f27b4f97c199fdc59cc49eb91fc7a348daf160285ca6bfce88ede5b64e4bb0a9",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:22341517b8222bb5810db07c816fbd0de10749523856c0263caf14789e77d27d",
                    "sha256:108db07c780851f92a4d8ef0c1926797631a48d81f409bc8850b3a37f31fe4bb",
                    "sha256:5019b6b6e2ea25b8b42acd497a8ea0bb3aa9edf8a150d35e826ed803ec8d3f57"
                ]
            }
        }
    }
}