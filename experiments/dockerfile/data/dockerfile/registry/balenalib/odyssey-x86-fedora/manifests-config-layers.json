{
    "manifests": {
        "20230811": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 6668,
                "digest": "sha256:3e0080a26f103363400244bebbfd0ff5d06fc24b1c0fa688b2191dd292f63970"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 66534340,
                    "digest": "sha256:e52979b1015a445d09d63bb33f41e3cf0ec020fb421106e9ec5ccd5d2d4c3eca"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 25143226,
                    "digest": "sha256:b5d988feaed8c6ffb1b33594f0927306b14c0f99130f525452e4121d05671660"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 473584,
                    "digest": "sha256:229924996900e055f10a97289223e507bd6d314b486bf12256b0033329f50b2f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1018,
                    "digest": "sha256:ad469405724f5ebfa5388db76cea2193b20d9adaf889af963441e70e14c576fb"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 283,
                    "digest": "sha256:d6dbfc5ed9adfd3e2932836372894f67ffa7ca76ff36c38e9c43b41f08883cd4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 684,
                    "digest": "sha256:844d47ca30d4b5eeeddb6e4c2f7fb345a7b0f20c96381f50a4f679e1eb5d78db"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 442,
                    "digest": "sha256:6fda4af151b097d2187f1b4f986cdf8576bc19abf3f723561851abce35431819"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 6676311,
                    "digest": "sha256:f9ade005b55026e81ad272ef4432cc1c3a8ded9378fe7695a3d5755ca22cdcbf"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 483,
                    "digest": "sha256:0b3839ca6c182efadd04760095eabef467a30eb5b3928c1743a16536c78fb905"
                }
            ]
        },
        "20230829": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 6334,
                "digest": "sha256:5f4565d6581f5891d281c149682d0d7c50538bfa5013f89e17f9386e934584f9"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 66534340,
                    "digest": "sha256:e52979b1015a445d09d63bb33f41e3cf0ec020fb421106e9ec5ccd5d2d4c3eca"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 29828162,
                    "digest": "sha256:1902a8ce6a847e43111f7f9dfc1977900620a266911b721836c2af9e1a329368"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 473575,
                    "digest": "sha256:15d2268bfe6351fb37fd09c4a96c844b9b3afef4df0b2b709d43d0b5cbdd9f85"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1014,
                    "digest": "sha256:edace452f624c13eb2f1e9aabad7820479555fcd494bbb554ef3b084971fa1f7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 281,
                    "digest": "sha256:b10ade70ae4ae5d3c0a50ef9da4e7d4e739d15bc0d402e804d3803b6fe53e36b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 681,
                    "digest": "sha256:4f63e82fbc411af7f584b337b891d38d46899790446e29bbaf2ddb0b4ce7a7b0"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 440,
                    "digest": "sha256:2c152717a8c0907343fa2824b5439d982d77dd0eec75a4d1539805c3c92df1ec"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 6712803,
                    "digest": "sha256:1c1bb3372356e9d07e9421ce1a5ecaceeaf652e2b3a7ca0e8af30b44cb8d5447"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 483,
                    "digest": "sha256:9b8cae22d6ea0568a4536163db02efc054a68250737b44955790bbc1264ac930"
                }
            ]
        },
        "20230904": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 6334,
                "digest": "sha256:a49e4b777faea57581f7794fb1fba4c77a4a3b9408a2e39fca67eef554e37377"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 66534340,
                    "digest": "sha256:e52979b1015a445d09d63bb33f41e3cf0ec020fb421106e9ec5ccd5d2d4c3eca"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 29827981,
                    "digest": "sha256:2027c0ec9d1eaf143fea0c0654e788ec5ddfe4b54b1237ee25ea8acd1779a4e1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 473575,
                    "digest": "sha256:932ac56fb601e5eb729b0dcd65650440d35f0877a391a379ef9019326ec1bfda"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1016,
                    "digest": "sha256:4bc46925606fb0a2143644f6eab1d223320935a856361f66cf71c4ed6327a87d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 282,
                    "digest": "sha256:cbf6285b20078c98c9d4a998f064c93a84f256f9971fab93d7aed699b7c9cfe0"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 681,
                    "digest": "sha256:526a6c2de7d3e79ed359f01d02dd9d48290b245403e0201a935f083484961e38"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 439,
                    "digest": "sha256:ba1d6d9da4501fb9e2d95d2f865a8f5a9e9b2e249887af30a4f30e045d518e6d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 6712831,
                    "digest": "sha256:b5cf518152d5676d7098d741ffdc5f0e3ded7508263678cd6ea700cc40e7ca57"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 482,
                    "digest": "sha256:f598a9e05c7b788f4686df2e5aa19e4c17e08f6171c27910223264761d44db6f"
                }
            ]
        },
        "20230911": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:ac459a230e16952629f00f426a26eb86b5bdc662d78ccfb6bf047690047ed2db",
                "size": 6338
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e52979b1015a445d09d63bb33f41e3cf0ec020fb421106e9ec5ccd5d2d4c3eca",
                    "size": 66534340
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2027c0ec9d1eaf143fea0c0654e788ec5ddfe4b54b1237ee25ea8acd1779a4e1",
                    "size": 29827981
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:932ac56fb601e5eb729b0dcd65650440d35f0877a391a379ef9019326ec1bfda",
                    "size": 473575
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4bc46925606fb0a2143644f6eab1d223320935a856361f66cf71c4ed6327a87d",
                    "size": 1016
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:cbf6285b20078c98c9d4a998f064c93a84f256f9971fab93d7aed699b7c9cfe0",
                    "size": 282
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:526a6c2de7d3e79ed359f01d02dd9d48290b245403e0201a935f083484961e38",
                    "size": 681
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ba1d6d9da4501fb9e2d95d2f865a8f5a9e9b2e249887af30a4f30e045d518e6d",
                    "size": 439
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d3afa241cef5b84552fd731dfdea51adbd5bc2025b2cf5f47abbb661fdcd6bc4",
                    "size": 6713345
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:34b1a68d316ad57d98ad254c7f15ffa0c09208d522a5fe4222510b80ef949c6f",
                    "size": 485
                }
            ]
        },
        "20231103": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:7e81f3dea9f9e0c1053b65578b878d939a35065876795daceafe6fd9c47337fe",
                "size": 6337
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d7a9dc132f00a11a7e4f430fbea6af388f02cd765659df6c506fd18a19f5d122",
                    "size": 66705827
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5ada43b1ff524507d6206ea840fa86ad81e3ebeb53656a3dfbb677b562d496fe",
                    "size": 45529372
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:99d1c4f4a9250399a5e4b19f0596a9b77e4df97dfd2c9c428aaf33fea1b8e259",
                    "size": 473572
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:224c775941ceda556a1680d4766d17e235b32e87de039485392edbb477b49826",
                    "size": 1009
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b10b18389bc121e92a8a5d45e3b53384aca887ea2c9e760164263e1d508f85e9",
                    "size": 276
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:536070598d62154a96c0128dde03ef3bf31cb77f5963fe38cd880e73738ef7c6",
                    "size": 673
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b1a23b40bbc5c0275715045634db9bbf15671432b6af39249bfa447ce6c6a8fd",
                    "size": 440
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b14404e368d6132724d927b460202e4896d864fde9491d5ddf81ba1cf2b6d984",
                    "size": 6840828
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ca4bd3b455a00fe6c62a2e8e656fe2411eea0770be37e9e0a3d2be15170c1381",
                    "size": 482
                }
            ]
        },
        "20231204": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:339472f7ed9411cdcf32e0386a7cccfe5303911bca18692b13b23e0edcd582d5",
                "size": 6338
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:70ffab5718fea0e15c61500da8ee3e247dd22fd98fb4b68e9a3e8c51d93b3025",
                    "size": 65029635
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2a5fe1a5c0b663c9895380594f812eb9f5c468f54914da91117101953bcf54ae",
                    "size": 24684016
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:db32e5fb93909460197b968d8142f7a5c6e03e121a5707005994ebdf021f66b4",
                    "size": 473571
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:cbc51047542634ba656c4e6e10885f1d105e5b62cf3cf5531f9d9fa6d06f3541",
                    "size": 1011
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8963d0019942b1d1cf04b7d5cda9c8c932e870c0e1af9f08c77303d2124fb414",
                    "size": 277
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d9f0c460ef282741fd09c81698beb08d7df875305ac7edd764e9933d7a943214",
                    "size": 675
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3d09ccdede5a88c85693ce88f72a94ce0ee7cddd8bdadf6254fe1a032e393c8d",
                    "size": 440
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9e2c7a515b3d425f253c3ae68e2a8f1326fd34cf8d1914a1a0f3187887f186cf",
                    "size": 6652007
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d40889ab8a9ba5cbab7db533033ebf17b8cbabe549f5ab64712b4a713e15fb43",
                    "size": 483
                }
            ]
        },
        "20240105": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:28d87dc2c9a17131eb07b0ff8c52fbaab24a11f3fc5cce91afebaf16cf5226a4",
                "size": 6330
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:70ffab5718fea0e15c61500da8ee3e247dd22fd98fb4b68e9a3e8c51d93b3025",
                    "size": 65029635
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0d3256139a64a3c44feeaa1473c4c599f751fae9bc8cbaea8f9f7ed7398d1215",
                    "size": 24684374
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5dfa1b3659b84cf09fc16657ede421ac2e35903f3f4fd35dfbf5994fdbd72f44",
                    "size": 473566
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:65cee28720a254f44a00edb4422823c83ae198b6e9f1e5060e82c79fc9f0f87d",
                    "size": 1008
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a9f57c40b274a0c0a0788c1491ae6edf9c77c9abb6197bf811ed6f89c8e61693",
                    "size": 276
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:837ebc5139523a61c619d4b3b910c050be8140c230a9939cb31890d538c888e2",
                    "size": 676
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b2c14d398150cadcf6f3ab8fe8c47af020fb8eee5ee44664cdcc169a0ece1ebe",
                    "size": 441
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6b71675a99070f9090dc37011c2e4a94abfe9efb22c72f5b11b20af4b58c89a5",
                    "size": 6651803
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f7cc0f1bcd59ee27297f710196fa6407644572a5851a75d5eab0bf86a35fc9e0",
                    "size": 481
                }
            ]
        },
        "20240201": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:8ad7251887276b85b38e7c41a32bf9859b04b21c40ab89c8cd21a43ec6e6f6ba",
                "size": 6338
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:70ffab5718fea0e15c61500da8ee3e247dd22fd98fb4b68e9a3e8c51d93b3025",
                    "size": 65029635
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6266aa16a1076eb200a9e5a1e34760a495e98c4b60db8ede2e49f38f14efd088",
                    "size": 24684233
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a144d60c01b9290d646d9f6122fda2fddc46f7625a951b0d7308b9e1a942de3c",
                    "size": 473575
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3d491f49152e07ce118454d93dc61580c637dc6ef3925adb864607a33d85f75d",
                    "size": 1008
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:198d30920974d977acffa25d34654824de8398360967c01ba8b948b0ad0d7078",
                    "size": 276
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0b0b47a23a7e4de767dd3ad900c6938231064a5fc47b9695869bdc71103fe3e4",
                    "size": 675
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ed2038c1e6d60199c2d8ec7b71ad0fb573577356081ce001d986db0347fc6deb",
                    "size": 440
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:660d289308631b655c09bf0d492b9b2752f88a46acfdc876b1d2c1a05d469ff5",
                    "size": 6652200
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:74ad52721bc115260813c961ab5efbb3f7f3b5f6ad2199b5f3b6ac0195631a25",
                    "size": 483
                }
            ]
        },
        "20240304": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:0f839391e4af99e40462c3b63fb2a17ebeb3f3c187f8b524809e840f7d3011fd",
                "size": 6335
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:70ffab5718fea0e15c61500da8ee3e247dd22fd98fb4b68e9a3e8c51d93b3025",
                    "size": 65029635
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2ac36a055edb8d7d1c23892fe15e1c3b434ed33df4c847f5f0ced1d217b46a38",
                    "size": 24684028
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d6eff4af478365690d81212799d67c21ca6324307b003f66a1fc66e56f761ea4",
                    "size": 473575
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9c6eb8f233ceab952e59f4a2e73ac8a1e5ebd9ccda01de859cf5fe9f5b653f3b",
                    "size": 1009
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:984090a6409d23b040a2c91770c17a5d7e8e32d5cfbd650d9e252c14f1e2f00f",
                    "size": 276
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b3a692e0adc91ae241cd75e0d5c7a6040cd1ef100c4c1cf693252d6e420405fb",
                    "size": 675
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e45bed57f628036e05c35a8cefc91e7f65cd46138aeaa05670d876b8ede0ac54",
                    "size": 440
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e022de268281e2c32762dfd2063689fed595eae38a60a47f8142f584f2873e09",
                    "size": 6651920
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2882aad611c2a4d61ec2329d8b416ae53762716fa36f49338373a2464f9dc7c1",
                    "size": 483
                }
            ]
        },
        "20240401": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:1e79788f1873482ac6f05e698c3e61b3034a6bd5cb5c70233f8617557b8392a1",
                "size": 6322
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:70ffab5718fea0e15c61500da8ee3e247dd22fd98fb4b68e9a3e8c51d93b3025",
                    "size": 65029635
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e10e4914a91a46180b1e9e654fe81b3ef80f31cc2f55ca0109b719c9b1afee7a",
                    "size": 24684229
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:58491e471b68e66954c33badd9727bb06ef76a98df99be31c2216ce2c32d15da",
                    "size": 473577
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5cfae6112c9f1e79a2e41a9f4648604e5fc6f36360177223d03ff7045feae769",
                    "size": 1010
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:16f6d5314211f95032497ce5520a9d14c05925a99c61d2447874e58d3094bb60",
                    "size": 277
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:cd1464be263a2f42dfc9b396d9270800d62ace69d274af0cf37f54bfc85ae4b7",
                    "size": 677
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3fb537258e1f64889b58e323ca14433d2712bd695b7e037d20be09977e3a2603",
                    "size": 441
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:29d6e4390b60aa2479d1e79a54f323e7445269df3960e09c9fefc8abb888d59e",
                    "size": 6652083
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d55c093a44c8f9d5f63da0032695dc6990e9ee938605a1e2c112594d18effc83",
                    "size": 483
                }
            ]
        },
        "20240408": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:3d6465bc79aeadfcfd2e305ee0649cb5f2901274d2608ee7d6ed0e67d5060ec2",
                "size": 6323
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:70ffab5718fea0e15c61500da8ee3e247dd22fd98fb4b68e9a3e8c51d93b3025",
                    "size": 65029635
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:810cc0af2123a5b710b00a510661c42dd9f042defb921024e63e96104d1787ad",
                    "size": 24684051
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2ed67df3c24006c7aa570de04fe83e2f65ac30ec2fdc74544d06830f9c8836bc",
                    "size": 473572
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3075ffd7d64ed2d4116e67e62ebca6e1b242b6ba3d3519b07231fd013ec8f50a",
                    "size": 1012
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0a872d328eeb19a10571d3bf6b7028e43313ea99279cd463cdadd4c2672b722d",
                    "size": 278
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fd686a5a44e1bde50a09640df89523e5534773f9249b819c3761a9061374edd7",
                    "size": 678
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:69290262a3b92a42acde4fb0506ca6c4c7f7f06957e1cc5ab25a6c5e89078bbc",
                    "size": 440
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e3c8db67ee890f75231ca3ec266708cab4718cb55d929ff12037be55e7d59fdc",
                    "size": 6652032
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a848b7ca14b13162fa608e690095241372e490c1727c7038b28c82696fe478a4",
                    "size": 483
                }
            ]
        },
        "20240429": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:2df8cad269a8ef1af556af9b86faea9f46b5ebd9dde6f350262f9ef5a6c4b046",
                "size": 6323
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:70ffab5718fea0e15c61500da8ee3e247dd22fd98fb4b68e9a3e8c51d93b3025",
                    "size": 65029635
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:091a22464e090e560c1eae70d6b60d1df293f0cc92e3455f13891ac9737589ee",
                    "size": 24684150
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4ba64e71b26acf1dcd14850f27294bf84574b0abf17704f3c7b1e1bc8924ae3e",
                    "size": 473574
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b9f588bc96c09005302be43e24375ab320fb260116256b9006a46ca1962bb2b3",
                    "size": 1010
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ec4d31d05d5223fca6a7bcc5813d36b990393626091ee48bfffc4289f851e299",
                    "size": 277
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:27a58040671a456e831f6fffd854ef45c9cba94e7bd19ad615af43b1fbfc80bf",
                    "size": 675
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9cdafbeb678e6b83255cade03b0805656a4259196b20d063b7b70aaaed64b6a4",
                    "size": 440
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:14700c5115d80cc94bb8efd0e5dafce0d0e14d1ac320eb393b48d568d41b7b20",
                    "size": 6652181
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:42d58f5cda947c98bf040363d1ab8ca0611158d2966fdf8fdd0ff7069c386f54",
                    "size": 483
                }
            ]
        },
        "36": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:4658773c7cd754c5c629a5c589886462ec125b31f9270e2c2f7d692d8f949564",
                "size": 6322
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c7bef7d09442a4c4deef8e8120027e7fa3f163c7b5a0afedc3f2c4c2e7652e1c",
                    "size": 60065882
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:575fafef33150d2b9dbc87cd65a2e5db7b561f3fba9b9a4e3de0c3e3d15c5412",
                    "size": 19731456
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ef218e9d85c10e22d532c71ea44e4033397eae85c64b21171e8039373206e31c",
                    "size": 473572
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:102b958bc3de6e49fcc44e1a088927add56722198171eb1fc843ccc430dd363f",
                    "size": 1012
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:32bc3349ac3636abac8c4c25d2c914056a94fe38c0b211f61b9ee5fe6d9ec8a0",
                    "size": 279
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:00d8208b7b187ff3676c23299c45698953eba9c3c3bd528ed02b032869af520d",
                    "size": 678
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c0240f8c5a417ede1927c5b54f99fb998e901c7c470c07d22e0e55acbac7a5a2",
                    "size": 439
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:96d31ee88a468a5555dd154840b3c4cd35a8cc0309677f610ad549509b25e5b1",
                    "size": 5914692
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5707c5fc0d9d57ddb87a4315fedca089c0dac71cbe6c26c064ceeee84a6654ae",
                    "size": 482
                }
            ]
        },
        "36-20230811": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 6666,
                "digest": "sha256:ff5e24fffbeb462a69a8e7c86635f6ae5f1b553f1582dc402f15018035da8ee5"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 60065882,
                    "digest": "sha256:c7bef7d09442a4c4deef8e8120027e7fa3f163c7b5a0afedc3f2c4c2e7652e1c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 19728854,
                    "digest": "sha256:4f9712a9a2ea3086a3cbbada651cf9f55038bcce66b8d3a72857e4cb1f801076"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 473577,
                    "digest": "sha256:2803323a67be2a06f5e40e6270c11afe6618ea545332bb925b118b917cbcf927"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1017,
                    "digest": "sha256:eb4617782a9b7b5ee3a18d5ce5ba47aa00f3b269813b707f30efd479a98efc77"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 283,
                    "digest": "sha256:3cf40764e7e2dc0b0417243c14563fabd565728f0651b79609c730fdaba3f0c3"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 684,
                    "digest": "sha256:f30866c549dcee5bc75bc38512d209a8bef3d44f9bdb8903cc557ca56c96b24a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 440,
                    "digest": "sha256:1f1083b8e7743aa98cdbb24d8c10bd0bbdea54827b3f942d9508e1e2c696d598"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 5915398,
                    "digest": "sha256:465b341b2dd2375b1b87897c7398a0a1f730e2460b61baab17166d05ccf7ab5a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 482,
                    "digest": "sha256:7e045e400ada5b296b7d4876f010c120924a315edbcde925a8477503450b5c7e"
                }
            ]
        },
        "36-20230829": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 6333,
                "digest": "sha256:7876496ffab83eb16f1722a66e502da431b8796510484d82bfa0c28242f40f07"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 60065882,
                    "digest": "sha256:c7bef7d09442a4c4deef8e8120027e7fa3f163c7b5a0afedc3f2c4c2e7652e1c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 19729004,
                    "digest": "sha256:dd3354186957edd8daf806ffd7f439b0626bd732e5f2e59689edb5aee3fae5db"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 473573,
                    "digest": "sha256:b8cfc471bdd50894385a834291ed42d6ac5178ac6a98288a6f8fdc3582d9d290"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1016,
                    "digest": "sha256:df30512076e8673f489c6b030b90cf37b24f86c7253d927c659ed86ae949d549"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 282,
                    "digest": "sha256:b6d0300575787301a8f66e46118aaa6a5db5a3fe50528601cb06ad3b22463bd6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 684,
                    "digest": "sha256:e136c46799959a7c95289f278b2c94f5ba4b31483ade34539a37f9fdabbc83c9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 440,
                    "digest": "sha256:fa16fad762d307918206ef2ddd8ddcc961366b3d2c434fd283ffea257f2649e7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 5914861,
                    "digest": "sha256:f086d38d71f6765568a17447529bd342998f78fced3a87e08b698c69a34f8650"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 482,
                    "digest": "sha256:f4728b0d4cc44a6a05260ab863bec476399403a72eda3c3184ecf8de1852d2a2"
                }
            ]
        },
        "36-20230904": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 6330,
                "digest": "sha256:744d62c82b73e30b5c088867aebccfc708b1cdf27e4dc9664c069bcfd6e9169f"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 60065882,
                    "digest": "sha256:c7bef7d09442a4c4deef8e8120027e7fa3f163c7b5a0afedc3f2c4c2e7652e1c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 19728929,
                    "digest": "sha256:ed2921fb7f4465aade808e01fd0a0af1aee3fd2d20b90671a6d45e5e668db68d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 473573,
                    "digest": "sha256:de1d8ab271c3ef897f8e15d419c9f8721cef879a3f7d7605a4f9de9fef22f057"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1015,
                    "digest": "sha256:4568dec13190b9f24dc2ebd7e6c48222ee150ee187d6974e8ef4beb236947e42"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 282,
                    "digest": "sha256:85fefbcff0a0a7f60a2e0482b994c667b46d95d469cac106f75d9cfab467a048"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 681,
                    "digest": "sha256:d26f11089abc4fad3b1a94f3a93e832b3b1c949fd9acbc0c1752ab5e1e9082a9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 440,
                    "digest": "sha256:ea31be511e0057e42f306ad41b72745551050d3805aea36aab704b54f51c96f4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 5914830,
                    "digest": "sha256:00d5c563d57b117d5d921767ce6f9e21d22529fc11b454ed021ed88175cea99f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 482,
                    "digest": "sha256:646cd0cec2958a4d1afa61d97744790c6c4e58c088197ca13242d8b68f4ceaee"
                }
            ]
        },
        "36-20230911": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:a4bb718bcf6149b04fb53155cd2ac9459b69a4d65475d60656265ff2a2330eaf",
                "size": 6334
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c7bef7d09442a4c4deef8e8120027e7fa3f163c7b5a0afedc3f2c4c2e7652e1c",
                    "size": 60065882
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ed2921fb7f4465aade808e01fd0a0af1aee3fd2d20b90671a6d45e5e668db68d",
                    "size": 19728929
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:de1d8ab271c3ef897f8e15d419c9f8721cef879a3f7d7605a4f9de9fef22f057",
                    "size": 473573
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4568dec13190b9f24dc2ebd7e6c48222ee150ee187d6974e8ef4beb236947e42",
                    "size": 1015
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:85fefbcff0a0a7f60a2e0482b994c667b46d95d469cac106f75d9cfab467a048",
                    "size": 282
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d26f11089abc4fad3b1a94f3a93e832b3b1c949fd9acbc0c1752ab5e1e9082a9",
                    "size": 681
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ea31be511e0057e42f306ad41b72745551050d3805aea36aab704b54f51c96f4",
                    "size": 440
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2a076db1e46908c283311d8e3fef1c1a35c3286ba249fa9a2ce218cd3df3e98b",
                    "size": 5914958
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a28007347f229951b00f5b3e3fea137b20db03798f5ee85d335dcf65b9f8ad39",
                    "size": 484
                }
            ]
        },
        "36-20231103": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:30d5537d3b9628c205a77535787324c4a7fa819ed37df7192d12b18814d64cd4",
                "size": 6332
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c7bef7d09442a4c4deef8e8120027e7fa3f163c7b5a0afedc3f2c4c2e7652e1c",
                    "size": 60065882
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a6d094b63f0c857a6e3062087c3e9d790d80076639de755c448df0ad7e8dff3b",
                    "size": 19732718
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9f35fc679bc9dbd15b7d8b265e21f3952147ff4cf9f15009c8ff0b0395aeab19",
                    "size": 473573
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8198f753917d2ddd9565eff3fbc92c6eb1f3df1b9c0804170f8cab426d610e79",
                    "size": 1011
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c90859cbfa8aa3461b182d5de19dcda3035a2f9f64b9e93017195f04714c95f3",
                    "size": 278
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0a7dcd04ba9e1ee6e2740ef5fccc273a3f9f4d8ddc5bc9c67d4d52829c6ed3f6",
                    "size": 677
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c545358d2141c6d8b5eb1ac734ebbf3a37dec90a01d15d3cc1ef6d105eac3750",
                    "size": 440
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fe68687bd1307a5d44dbfb6d363541a35fc9f1900d0b3029ea1bae4eba2ab30a",
                    "size": 5917784
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1aacf66578829e055de5d3c3d1e3dd353ef1240167fd02c5e42552ed64353350",
                    "size": 483
                }
            ]
        },
        "36-20231204": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:ce3657ce91f55fe82f66f180c01a22937f46a780bcf4619d4dee1ccb5aab8844",
                "size": 6337
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c7bef7d09442a4c4deef8e8120027e7fa3f163c7b5a0afedc3f2c4c2e7652e1c",
                    "size": 60065882
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:87ca060317625a1d3579d7d09dc34a812bb64bb9172d6566c2f08e6ee21938ea",
                    "size": 19731406
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c5dbbba3407caa0a21b7266a147ea6d7a2a9d4b9b58c54d90c616693a38d1dc3",
                    "size": 473571
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3ba443bbec93f90f07f489a2c40fb7491863f6827bd96f01f9984fcb5900e2fe",
                    "size": 1012
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:140b17da807ebe63eae5f0a41b6855ed72ff7f36957e0fe8b6fc697b0eadf00c",
                    "size": 279
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8761fee91d1fab123886fb3aa440d9caede96173372b7e3acb0cc6e632c51bed",
                    "size": 679
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6d0d6983d1b8ef885743928520fe6423659086d8e2427befde79200d5a7fe42d",
                    "size": 441
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:db79b4f9aa14b7ce67448dfc57280459ad3b89532c74b2a44aa389c0c4b7ffea",
                    "size": 5914623
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:693304f2951322621b03a1ddf7a6afe570eb35e10b02d00b60fe5cdf4383b11e",
                    "size": 483
                }
            ]
        },
        "36-20240105": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:2b0c4b579d92d892b815021d52925a34c1bded8bb12fc011035625d917830356",
                "size": 6337
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c7bef7d09442a4c4deef8e8120027e7fa3f163c7b5a0afedc3f2c4c2e7652e1c",
                    "size": 60065882
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c4bc70c7f8f3c710944acae7143b05381cea191369dcb2f5a6133b3102705bde",
                    "size": 19731483
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e69798ae8873a7f6fd78ddfcdeaa1dd4e3e83aa1004720e77fe6cd73d9ad9526",
                    "size": 473570
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e2b93da14bfb11d34196c7aa4c1dc75fa1f00c4f1cf426bbfc216ca9bdfe6579",
                    "size": 1008
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:cdf0ed6c36f367ca6f74f917fd0c35313ec5eed2efcc039740426fffc75b9a55",
                    "size": 276
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6f8cc78be9994a3d595602705ca10df88d13fcb87af5fcc3b489373ad108245f",
                    "size": 674
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:967eaae7e368fb581392038a1921b4f1b1b392f96c2362396a5e63ee43f3b732",
                    "size": 439
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e4fa6c4f40122835bf0b13dd827a4e86b7a9e654ac0fd6c54fded0d87229dd8e",
                    "size": 5914757
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:62394de27c1bee2b44ab2a020fa062bd64aa63eb50e614f1b926bb132934a2de",
                    "size": 481
                }
            ]
        },
        "36-20240201": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:0e9a8e416811adcc930a19928e8cc43167115173a9a4f032b0393c1e9597a330",
                "size": 6336
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c7bef7d09442a4c4deef8e8120027e7fa3f163c7b5a0afedc3f2c4c2e7652e1c",
                    "size": 60065882
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6560448236e4640184542eafed550ce6cd2748154a8ec382b8b71574780a1a7c",
                    "size": 19731559
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fe1fa53f9d023792e496efc2dfcd8c5a48a54c248a7468700b07146e001da72c",
                    "size": 473574
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:649ffc40d86e3a22c538079e02520d9067df8a26aadd7ec73e9b6eefa43359c2",
                    "size": 1012
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fe1415d10447847d33d4b31c84e9c71f937d901c1f45a7d2dd1f9052dd531517",
                    "size": 278
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d0a81557af803a4cd39c6d7feaf5b7855b512586c5b18b42aa55e0a60045659d",
                    "size": 679
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:70aff33bbf47fab751815a3f4101a96e17663f6aae05686c4433ba8e512aab08",
                    "size": 441
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2651a873d204fa7afa5fb5b1e8e8d5c21521c442ec3b45e08f47b72e61e1c5a4",
                    "size": 5914644
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e5f7f4be355284376bad3dddbd0918e1ee0df8324cec7bdc0e3d3e527aca2cbb",
                    "size": 483
                }
            ]
        },
        "36-20240304": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:4fea74da05be50c4216350f1317ff2ce58dc5492c472c3809e93f9d6dbf85233",
                "size": 6337
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c7bef7d09442a4c4deef8e8120027e7fa3f163c7b5a0afedc3f2c4c2e7652e1c",
                    "size": 60065882
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:369eb74e99960c5945206ebe6897db5f70140707a34117992dbfa3fdeea018eb",
                    "size": 19731465
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:73ae63d0864f3a04b8ad3261fd5d959c7ad4ea9773491cfe932c26435dbbbe89",
                    "size": 473573
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9e406d585175e97fae732fef3174fe4f1922c6df93d9a490d7a946a2dc7d526d",
                    "size": 1010
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b8afb93fd7a5fa98c6ebd2d20afdac6108f0a35de53c7fed2a5131edbfab7d5e",
                    "size": 277
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4fd3d957a24e5222696dbc6d25510061fe62da32458da7294ca79e84bcbfcb2d",
                    "size": 675
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bcfb94f35ea4076d5c6c93a48478873266879c7f0ddaf5e05d9d5236b2d2f249",
                    "size": 440
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:96d0651b62718e73a4a0980f4b3111fb72fcdddb5823e8947e02c4de550d376b",
                    "size": 5914536
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bf0d1eb9dfee5ed90db6ff5ff5908af73e5f853ff5cd2250ceaf77ce20db3356",
                    "size": 483
                }
            ]
        },
        "36-20240401": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:71d51f11530bc8359e87358206f172d781dab830b7296a85d3491ff783f19bcf",
                "size": 6322
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c7bef7d09442a4c4deef8e8120027e7fa3f163c7b5a0afedc3f2c4c2e7652e1c",
                    "size": 60065882
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7c1d2f1bd80edc0791b24e67787205cab2b05f0a4a80793a026635139ee2c718",
                    "size": 19731641
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ed248c377b60862082358cef4a6469d068e390d4ad25a21458d4356b2005551b",
                    "size": 473573
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bc86a0af83c9714496f30db0134dfc424d40d2ed69429a69ca2fc5bd4fdd2d17",
                    "size": 1011
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7d96f84d3653bc5572f9007e8447eba30954ab480403a258474d127d63f363b5",
                    "size": 278
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ea7bde9ac474cf1bdad123ef199a605dd225a7f2fdd1cdbffdbb83bd421902bf",
                    "size": 678
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5620faf4662c143dcd9d4d88afe97222e4133f372d9a0f2c45de7b1dd1932562",
                    "size": 440
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:20852e54a360c898690cea798439ffa1452d6454552c35fbbb63fdb0f7e2fd2b",
                    "size": 5914616
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2ba1381739c40663c0f20ec6222f20bd80dc7d639bb7ecbb5ebade17ef453f37",
                    "size": 483
                }
            ]
        },
        "36-20240408": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:4658773c7cd754c5c629a5c589886462ec125b31f9270e2c2f7d692d8f949564",
                "size": 6322
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c7bef7d09442a4c4deef8e8120027e7fa3f163c7b5a0afedc3f2c4c2e7652e1c",
                    "size": 60065882
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:575fafef33150d2b9dbc87cd65a2e5db7b561f3fba9b9a4e3de0c3e3d15c5412",
                    "size": 19731456
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ef218e9d85c10e22d532c71ea44e4033397eae85c64b21171e8039373206e31c",
                    "size": 473572
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:102b958bc3de6e49fcc44e1a088927add56722198171eb1fc843ccc430dd363f",
                    "size": 1012
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:32bc3349ac3636abac8c4c25d2c914056a94fe38c0b211f61b9ee5fe6d9ec8a0",
                    "size": 279
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:00d8208b7b187ff3676c23299c45698953eba9c3c3bd528ed02b032869af520d",
                    "size": 678
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c0240f8c5a417ede1927c5b54f99fb998e901c7c470c07d22e0e55acbac7a5a2",
                    "size": 439
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:96d31ee88a468a5555dd154840b3c4cd35a8cc0309677f610ad549509b25e5b1",
                    "size": 5914692
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5707c5fc0d9d57ddb87a4315fedca089c0dac71cbe6c26c064ceeee84a6654ae",
                    "size": 482
                }
            ]
        },
        "36-build": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:45dd08e8aa9693530e765ee80b566ddf61296fc445e0ac3bda2f6581d7c6abed",
                "size": 7081
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c7bef7d09442a4c4deef8e8120027e7fa3f163c7b5a0afedc3f2c4c2e7652e1c",
                    "size": 60065882
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ab0b656b63ac35c05d068c9b4702aa6df70bd769ca70ce9e42784567b5ba54e4",
                    "size": 19731491
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bdda4386676eb765593e257a50a055587037cabea40d36d8d4b2b9cbe528b850",
                    "size": 205095711
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0f7400aebf2a735c03fc16f5280ab404b1c09ffa88f68df4737d82cc010b210d",
                    "size": 473573
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:72ef9529044ea398844fb0d3b0ed123dcde0d280ef4a5a4f559ac731db05d17a",
                    "size": 1013
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:24ee44fe7dd21203ec8648cf57541a577097077b2ba8295adb37716b9f06c2ff",
                    "size": 279
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:46c08ef1846039f6918924e0ba804ff5ee1b8b53dea11f8925eb0c112f024982",
                    "size": 678
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:39608675dcd8b90a518b7933699c22b699876223ad5a924abb707a52c4bf5689",
                    "size": 441
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bec44bd3530db82ec5c93a576212f0d01d867515c35b49d0083125425f1a938f",
                    "size": 10886598
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d3f1d3e24b1ddc0fd2838a4663b216f3834ec599ed583505a84dcf748095c37e",
                    "size": 482
                }
            ]
        },
        "36-build-20230811": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 7426,
                "digest": "sha256:99920bbff0dfc7b2316ff48e659893185e58ebfeafd845c3712caa70841a1d4c"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 60065882,
                    "digest": "sha256:c7bef7d09442a4c4deef8e8120027e7fa3f163c7b5a0afedc3f2c4c2e7652e1c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 19728854,
                    "digest": "sha256:4f9712a9a2ea3086a3cbbada651cf9f55038bcce66b8d3a72857e4cb1f801076"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 205095470,
                    "digest": "sha256:42ff32fad376c2bfd4fdc03a7bb759930d6ece69ab3caa99ca783e56275b96d3"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 473578,
                    "digest": "sha256:e9dd28f0df3a4157832d16b108806d8adc0ba35f80baa6d72fa6bc787527284e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1018,
                    "digest": "sha256:0025b78cb54e0935b53bdce3a9a3a6cc449ec17c5481fadd0734b72931173983"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 284,
                    "digest": "sha256:943b51baed082d6e9f566e051fccd542181b70058803e3921173d58a38cf2263"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 684,
                    "digest": "sha256:020203f6e8f92a18f5509dbb96ecfe9b339fa126a5b52eaf2d6f179d22731a80"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 443,
                    "digest": "sha256:f4e7dc40e30bec4526a6717115fe1a900bb73b87299eee186895df2868bfa8c7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 10886645,
                    "digest": "sha256:a88ce4fbd2de7dd63eb8f09fe753f9e59bd110d0b7a06bb68df6f6684d641c02"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 482,
                    "digest": "sha256:d0c055e41762829581597b54a668d587ec3d6a80ca4114a425a315f511a48c17"
                }
            ]
        },
        "36-build-20230829": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 7093,
                "digest": "sha256:1f89c74b06fbee6d6ae9b2f7dd349852e60320f8e765a0b9b1fc4ec4be757d42"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 60065882,
                    "digest": "sha256:c7bef7d09442a4c4deef8e8120027e7fa3f163c7b5a0afedc3f2c4c2e7652e1c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 19729004,
                    "digest": "sha256:dd3354186957edd8daf806ffd7f439b0626bd732e5f2e59689edb5aee3fae5db"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 205100290,
                    "digest": "sha256:2e06f016615fa7c0760ea612a997ddf3e5ed2cedea3b96fab63289dc5365b15d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 473571,
                    "digest": "sha256:cad68613e50905d0e7b807d44a7efe191e9e047a669002c97a2a2dfaf6b306a4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1015,
                    "digest": "sha256:a6f3b94bc9e04812e4fa4137aa92c8dc3c5e81f3a98da9646b3d6ca7fdfebc76"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 281,
                    "digest": "sha256:c8e2060ee90b13d1e8a532a8b8497f9567f6b37c4b663f828e7dd9f4fe3ce931"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 682,
                    "digest": "sha256:5cd1f9e9b4ad1cf41b5dbc97533937a5d70a0fb5f6328d1d7641c63935c36a88"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 442,
                    "digest": "sha256:d267a9c9ee31ab67059f91a67b8b73be0f53fc2c5b42e97c96bb9a7e5b07083b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 10886898,
                    "digest": "sha256:0dbf7a61c860aa8b732f565c1b512a5149d94c57ffc5e121d70be39fcf475935"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 482,
                    "digest": "sha256:9e478ad3a51b94aa1b8ecc2341a226156b6e693733e9f1504bbac90b5f376750"
                }
            ]
        },
        "36-build-20230904": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 7091,
                "digest": "sha256:e292cac0d53eba7df2fa1eb81da81d763be12143c773ca5c7735aa0663bc18ff"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 60065882,
                    "digest": "sha256:c7bef7d09442a4c4deef8e8120027e7fa3f163c7b5a0afedc3f2c4c2e7652e1c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 19728929,
                    "digest": "sha256:ed2921fb7f4465aade808e01fd0a0af1aee3fd2d20b90671a6d45e5e668db68d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 205100140,
                    "digest": "sha256:93e15016a8fcfc933a1a0de41ee2baf044d31fc2571d06f61f7179ceda8fce39"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 473573,
                    "digest": "sha256:e204ec0e3d6b8f024d3db076de701535da3c8f20f77de84a09a99c3259602601"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1016,
                    "digest": "sha256:e3f6ea835ee23790aa6f99ffec37a456eea00b11fe27c7249aec8fbe9bc7976f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 282,
                    "digest": "sha256:c804989fc19f42763e241a80d292d020d8eb77c17d0d1fc21c7a4116adcb5e40"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 682,
                    "digest": "sha256:cbe8e47a77a610a7dc5ea3e69f0f7253d538c99ea318610e7565fc4c140c1fd3"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 442,
                    "digest": "sha256:079f675858db36e6b6fc00a10ad7a572c6de899d2b29c5d70b57b59ba1233ac9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 10887354,
                    "digest": "sha256:b64f8fdb6724aeb628f35ea7c00673cfe9d7442d6e2375ecd896e51315b4e5ae"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 481,
                    "digest": "sha256:985c562a61b942fe25b57425fb6be3861823ab9a376cac2f3f1868062f8c3c6b"
                }
            ]
        },
        "36-build-20230911": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:ab69898c34a2cee6904af93a80bf4415a377454c928435c1acddb5beb83786d3",
                "size": 7095
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c7bef7d09442a4c4deef8e8120027e7fa3f163c7b5a0afedc3f2c4c2e7652e1c",
                    "size": 60065882
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ed2921fb7f4465aade808e01fd0a0af1aee3fd2d20b90671a6d45e5e668db68d",
                    "size": 19728929
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:93e15016a8fcfc933a1a0de41ee2baf044d31fc2571d06f61f7179ceda8fce39",
                    "size": 205100140
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e204ec0e3d6b8f024d3db076de701535da3c8f20f77de84a09a99c3259602601",
                    "size": 473573
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e3f6ea835ee23790aa6f99ffec37a456eea00b11fe27c7249aec8fbe9bc7976f",
                    "size": 1016
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c804989fc19f42763e241a80d292d020d8eb77c17d0d1fc21c7a4116adcb5e40",
                    "size": 282
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:cbe8e47a77a610a7dc5ea3e69f0f7253d538c99ea318610e7565fc4c140c1fd3",
                    "size": 682
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:079f675858db36e6b6fc00a10ad7a572c6de899d2b29c5d70b57b59ba1233ac9",
                    "size": 442
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:52f2ab628f5e6720521f148099d06e3a2c56a279c92c2fd36f22a1e3af7bc970",
                    "size": 10887106
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:58cbb3e0dde3413809dcc8488df92030f5b0c72b0ab03e00a3609780b9617e53",
                    "size": 484
                }
            ]
        },
        "36-build-20231103": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:4a107565bbb5da589dc902f7b746308a6efac254f2e3edec14b312081a034edb",
                "size": 7097
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c7bef7d09442a4c4deef8e8120027e7fa3f163c7b5a0afedc3f2c4c2e7652e1c",
                    "size": 60065882
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:22fdc01ded8da73a2d161f174555d1252ef5aeee3ebcb9d6ad3600305c6805cf",
                    "size": 19732727
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3df3643b4871cbafaba18aa751a2fcce1d998e561bc71e5f3e6c61893b0b6fb7",
                    "size": 205099334
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:efd760c6c0c47ca8b149c0083cc1f8e277065633b00b6baebfb1dae3d0a8293c",
                    "size": 473571
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1b698267db5e48468e4f9e4cb5791debbec21697f87fc72263cc27436d84edce",
                    "size": 1009
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:23861cf8537403e068a102687deac835413bfc0fda097aef5ced45641e1d6c3d",
                    "size": 278
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:98432c93876cd1f4595272d8e680b526a4f11b81e1f70b6166a8b7ad6a6fbdc1",
                    "size": 677
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:41f59cbcd52cdfd86b39dfabdfca19b2ddc03425758c10a21c6f84fc181b6915",
                    "size": 441
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4273f53f5b6f4a67798c7effb177d705b96c6518d5edc01859706f0cd7f76832",
                    "size": 10890295
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3b501025e6b40e49ba89df7f31ca0ff81bda4b52fed58fa3cf9032689ffebb95",
                    "size": 481
                }
            ]
        },
        "36-build-20231204": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:2f4330211f28b771e8b25164423f3b6e8e0aa941b3ff1482a2e5106b5e7b273e",
                "size": 7095
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c7bef7d09442a4c4deef8e8120027e7fa3f163c7b5a0afedc3f2c4c2e7652e1c",
                    "size": 60065882
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d3fcc94030e969e1f322dc9a0ba5abda1ccc807fff62fd3fc4d954882482cbf7",
                    "size": 19731562
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:91a90184374ea71b3bb5dc8f2e35de834e657321e4e66a8bc96c5dfed86b3c70",
                    "size": 205096384
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1d5199c6ccc3426ed83c4ea607a7ca63573d706df8122b291e5c0b191a52ce3f",
                    "size": 473571
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a4446c984089d7da3599d7de73b9d4dac2bb20cdd9eff07ddfa4183afcd10578",
                    "size": 1012
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4453b35f25556e286f6101fd5f4d5d6abd3e5cad80b8e76674a796b02df01ace",
                    "size": 278
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:966ff8bb5c6ba2aaeb1ccf1b953745d705edd6de535a23081e9d28382d16f88d",
                    "size": 678
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0bff49ee8e574b76220132616387c0fb93161b626df76ca33b732fb2b9cdb3ad",
                    "size": 442
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:45da8721a9904a0ad7b51ab910a399d481632222ce11db5d5efcde755536ad09",
                    "size": 10886334
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:54afbc988eccb0eb25a7d1e8ba1955d7f9ccd507b04cb1bb749fb2c665d4ded3",
                    "size": 482
                }
            ]
        },
        "36-build-20240105": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:a86501ffd5abac7f8311485adff3e5a21dda13a4ba37cec50c6e43afd9110da4",
                "size": 7093
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c7bef7d09442a4c4deef8e8120027e7fa3f163c7b5a0afedc3f2c4c2e7652e1c",
                    "size": 60065882
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:58250d063db4579cd48fab2a8d91307d914cdc264237bb82289ad9bff61d6665",
                    "size": 19731544
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8469dd645fffbab796fd9d50b56de6c1197a4e38e1c3df619f3c2cfdde1b6a71",
                    "size": 205096648
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0162ecba6f2abadc9ef2053a8380244d64412390a4d42065376c931dddfba818",
                    "size": 473575
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4c36e9d9d9fa7c2e60792da990e1dff42c72affceb2af2b038fcf2e504e2ff33",
                    "size": 1010
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c0ad8f681c636fe00f22e4e0bbc6f836137310f03bf2c5f270039f1fbf699caa",
                    "size": 278
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ddfa1bb4ed8e092cd0a3785e3f9da905872ee8183d156c2cc30c494e2e7394f7",
                    "size": 679
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6f7391837fcaade61217a3a0d93f84ac6d24611fcd88d4aa9ba9ec701fd60488",
                    "size": 442
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a43fa095ef7e5f7fd9ba4bae07d05d4f2be0b53cd85b40ebf9d85a5d32601f24",
                    "size": 10886497
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8b63b60fa196da3629c79d1d0c2e45f6f31b3aee2157e14f4ef6d2816f2346be",
                    "size": 482
                }
            ]
        },
        "36-build-20240201": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:43420518ac682e5ff27257756dfdc4dea82598b0b70767d3146f33e83b78fdbc",
                "size": 7097
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c7bef7d09442a4c4deef8e8120027e7fa3f163c7b5a0afedc3f2c4c2e7652e1c",
                    "size": 60065882
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e91901ed729c4572b47d1ec22ede6e8867a0f761f85720671b61c2a5be8a8461",
                    "size": 19731650
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9687a16f5fcecbc80082220610213c5b0099ae4c4b45180061fea697ce3b9111",
                    "size": 205095075
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:52754efb574eb2f4e42b58e4b2c63e57ba8a031493473ee42872ec959337b39b",
                    "size": 473573
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:42d266d091c71d85e2b6803f902da92400610ab76ee39a5b5c77c8b09f241361",
                    "size": 1012
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2674f98c62e152bee6565d2e18bcfd3622a34d3f9295c89eac7d28c1a9dd67d3",
                    "size": 278
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b83b7db40012f635d11e13bd3a8be8056fcdf6b2935131eddb5dcd2766f1c23f",
                    "size": 679
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:35296e6a9e10eb6200af5d77b1ad9951ca2146c4a9b7157e09c7db3d5e04e158",
                    "size": 441
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b1e53bc386812d1f4d94a0ae86a3bd807f4785e55d8f34ccf0123f7953b56fdc",
                    "size": 10886573
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c4f85670ab0cb9b9c263bc5b123ecdd8dbe1f3cea32216d526304027a9f03c16",
                    "size": 482
                }
            ]
        },
        "36-build-20240304": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:07657fbdf241796e4fb436705674c500726f7412053897ed5a1781beb6de7c6e",
                "size": 7095
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c7bef7d09442a4c4deef8e8120027e7fa3f163c7b5a0afedc3f2c4c2e7652e1c",
                    "size": 60065882
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7bcebbd47657355ce8fe5e74d0573e6b079a4e3f4147b276bdce8650884a6788",
                    "size": 19731671
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e85ab0eb4df2db283cd0b4a8dd9b664a19842188901e5468acf6ad6590a48b79",
                    "size": 205096607
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4da6a0dfab30f38516d86cdb13dae549dfd376b57f3953008cc467771cc91467",
                    "size": 473573
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0c6aef8659952499539e02cfaf5df2616e8fb825dabf691bd09f322027ca8ad9",
                    "size": 1010
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d99f559b175be6ee78c95b8a89044977f69a6e919fada750a5639bb7eec00929",
                    "size": 277
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:387c06b4fa59101266475431839fc5ed5c23cd623d5b6c3d6db3592aa309c623",
                    "size": 677
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b8eb1eda646245d4373128b44caf8c440f3e6abb954f26f555fdb8a62f8cdfc3",
                    "size": 442
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6aa07a3853aecf6bc5b1ded119ab4ede2e63414fc91503b6f9d54fd39f6b7872",
                    "size": 10886449
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:74360235bb078fe6bc2eff6dd52eb284067405675524730f1214cdd821244dcf",
                    "size": 481
                }
            ]
        },
        "36-build-20240401": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:9cebd6f1befe5707e6df14c7ebb49cbf2592d92a47142bb7c1ef57003a21ecc9",
                "size": 7078
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c7bef7d09442a4c4deef8e8120027e7fa3f163c7b5a0afedc3f2c4c2e7652e1c",
                    "size": 60065882
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ad47041a57198ca7422e12098f52efd3d64da55eb2180816054bd295330047a3",
                    "size": 19731256
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a67f93c4766716e9b7d823f1cc9927fb11af3577be025275b27eae1426446bcd",
                    "size": 205097519
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3e0845f75e4a2e01ec606c946bb059888b9583c5c4e0195f78df6ae4553789fb",
                    "size": 473573
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:112da7d14e554f2376fcb5e9024cdf5dac8c7f7858b9d2cc3e7c0fb528891c2f",
                    "size": 1011
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:354ec7feb09ccc4d038acd88a0f635760add6209d7aeea93702d16b9a7bd94c8",
                    "size": 278
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:98163b477dd1dd719b820daeb33365ce381389520569271a91495aa17aedc4a8",
                    "size": 678
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1ceb0e0e0317eade9e0eb7c84f3df0dcbe0c6377e7ae55b58c850473e10a4bc4",
                    "size": 442
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8b8b41cf52a6925bb2b85a4b605d07e0d77e65bb7e9be6347149966f6e24746b",
                    "size": 10886311
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2d4152321ec110c737e012d90ef526ba4a39c17498f2913a7ee0a264656b1d9e",
                    "size": 481
                }
            ]
        },
        "36-build-20240408": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:45dd08e8aa9693530e765ee80b566ddf61296fc445e0ac3bda2f6581d7c6abed",
                "size": 7081
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c7bef7d09442a4c4deef8e8120027e7fa3f163c7b5a0afedc3f2c4c2e7652e1c",
                    "size": 60065882
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ab0b656b63ac35c05d068c9b4702aa6df70bd769ca70ce9e42784567b5ba54e4",
                    "size": 19731491
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bdda4386676eb765593e257a50a055587037cabea40d36d8d4b2b9cbe528b850",
                    "size": 205095711
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0f7400aebf2a735c03fc16f5280ab404b1c09ffa88f68df4737d82cc010b210d",
                    "size": 473573
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:72ef9529044ea398844fb0d3b0ed123dcde0d280ef4a5a4f559ac731db05d17a",
                    "size": 1013
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:24ee44fe7dd21203ec8648cf57541a577097077b2ba8295adb37716b9f06c2ff",
                    "size": 279
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:46c08ef1846039f6918924e0ba804ff5ee1b8b53dea11f8925eb0c112f024982",
                    "size": 678
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:39608675dcd8b90a518b7933699c22b699876223ad5a924abb707a52c4bf5689",
                    "size": 441
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bec44bd3530db82ec5c93a576212f0d01d867515c35b49d0083125425f1a938f",
                    "size": 10886598
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d3f1d3e24b1ddc0fd2838a4663b216f3834ec599ed583505a84dcf748095c37e",
                    "size": 482
                }
            ]
        },
        "36-run": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:4658773c7cd754c5c629a5c589886462ec125b31f9270e2c2f7d692d8f949564",
                "size": 6322
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c7bef7d09442a4c4deef8e8120027e7fa3f163c7b5a0afedc3f2c4c2e7652e1c",
                    "size": 60065882
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:575fafef33150d2b9dbc87cd65a2e5db7b561f3fba9b9a4e3de0c3e3d15c5412",
                    "size": 19731456
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ef218e9d85c10e22d532c71ea44e4033397eae85c64b21171e8039373206e31c",
                    "size": 473572
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:102b958bc3de6e49fcc44e1a088927add56722198171eb1fc843ccc430dd363f",
                    "size": 1012
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:32bc3349ac3636abac8c4c25d2c914056a94fe38c0b211f61b9ee5fe6d9ec8a0",
                    "size": 279
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:00d8208b7b187ff3676c23299c45698953eba9c3c3bd528ed02b032869af520d",
                    "size": 678
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c0240f8c5a417ede1927c5b54f99fb998e901c7c470c07d22e0e55acbac7a5a2",
                    "size": 439
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:96d31ee88a468a5555dd154840b3c4cd35a8cc0309677f610ad549509b25e5b1",
                    "size": 5914692
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5707c5fc0d9d57ddb87a4315fedca089c0dac71cbe6c26c064ceeee84a6654ae",
                    "size": 482
                }
            ]
        },
        "36-run-20230811": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 6666,
                "digest": "sha256:ff5e24fffbeb462a69a8e7c86635f6ae5f1b553f1582dc402f15018035da8ee5"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 60065882,
                    "digest": "sha256:c7bef7d09442a4c4deef8e8120027e7fa3f163c7b5a0afedc3f2c4c2e7652e1c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 19728854,
                    "digest": "sha256:4f9712a9a2ea3086a3cbbada651cf9f55038bcce66b8d3a72857e4cb1f801076"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 473577,
                    "digest": "sha256:2803323a67be2a06f5e40e6270c11afe6618ea545332bb925b118b917cbcf927"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1017,
                    "digest": "sha256:eb4617782a9b7b5ee3a18d5ce5ba47aa00f3b269813b707f30efd479a98efc77"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 283,
                    "digest": "sha256:3cf40764e7e2dc0b0417243c14563fabd565728f0651b79609c730fdaba3f0c3"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 684,
                    "digest": "sha256:f30866c549dcee5bc75bc38512d209a8bef3d44f9bdb8903cc557ca56c96b24a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 440,
                    "digest": "sha256:1f1083b8e7743aa98cdbb24d8c10bd0bbdea54827b3f942d9508e1e2c696d598"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 5915398,
                    "digest": "sha256:465b341b2dd2375b1b87897c7398a0a1f730e2460b61baab17166d05ccf7ab5a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 482,
                    "digest": "sha256:7e045e400ada5b296b7d4876f010c120924a315edbcde925a8477503450b5c7e"
                }
            ]
        },
        "36-run-20230829": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 6333,
                "digest": "sha256:7876496ffab83eb16f1722a66e502da431b8796510484d82bfa0c28242f40f07"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 60065882,
                    "digest": "sha256:c7bef7d09442a4c4deef8e8120027e7fa3f163c7b5a0afedc3f2c4c2e7652e1c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 19729004,
                    "digest": "sha256:dd3354186957edd8daf806ffd7f439b0626bd732e5f2e59689edb5aee3fae5db"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 473573,
                    "digest": "sha256:b8cfc471bdd50894385a834291ed42d6ac5178ac6a98288a6f8fdc3582d9d290"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1016,
                    "digest": "sha256:df30512076e8673f489c6b030b90cf37b24f86c7253d927c659ed86ae949d549"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 282,
                    "digest": "sha256:b6d0300575787301a8f66e46118aaa6a5db5a3fe50528601cb06ad3b22463bd6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 684,
                    "digest": "sha256:e136c46799959a7c95289f278b2c94f5ba4b31483ade34539a37f9fdabbc83c9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 440,
                    "digest": "sha256:fa16fad762d307918206ef2ddd8ddcc961366b3d2c434fd283ffea257f2649e7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 5914861,
                    "digest": "sha256:f086d38d71f6765568a17447529bd342998f78fced3a87e08b698c69a34f8650"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 482,
                    "digest": "sha256:f4728b0d4cc44a6a05260ab863bec476399403a72eda3c3184ecf8de1852d2a2"
                }
            ]
        },
        "36-run-20230904": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 6330,
                "digest": "sha256:744d62c82b73e30b5c088867aebccfc708b1cdf27e4dc9664c069bcfd6e9169f"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 60065882,
                    "digest": "sha256:c7bef7d09442a4c4deef8e8120027e7fa3f163c7b5a0afedc3f2c4c2e7652e1c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 19728929,
                    "digest": "sha256:ed2921fb7f4465aade808e01fd0a0af1aee3fd2d20b90671a6d45e5e668db68d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 473573,
                    "digest": "sha256:de1d8ab271c3ef897f8e15d419c9f8721cef879a3f7d7605a4f9de9fef22f057"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1015,
                    "digest": "sha256:4568dec13190b9f24dc2ebd7e6c48222ee150ee187d6974e8ef4beb236947e42"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 282,
                    "digest": "sha256:85fefbcff0a0a7f60a2e0482b994c667b46d95d469cac106f75d9cfab467a048"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 681,
                    "digest": "sha256:d26f11089abc4fad3b1a94f3a93e832b3b1c949fd9acbc0c1752ab5e1e9082a9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 440,
                    "digest": "sha256:ea31be511e0057e42f306ad41b72745551050d3805aea36aab704b54f51c96f4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 5914830,
                    "digest": "sha256:00d5c563d57b117d5d921767ce6f9e21d22529fc11b454ed021ed88175cea99f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 482,
                    "digest": "sha256:646cd0cec2958a4d1afa61d97744790c6c4e58c088197ca13242d8b68f4ceaee"
                }
            ]
        },
        "36-run-20230911": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:a4bb718bcf6149b04fb53155cd2ac9459b69a4d65475d60656265ff2a2330eaf",
                "size": 6334
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c7bef7d09442a4c4deef8e8120027e7fa3f163c7b5a0afedc3f2c4c2e7652e1c",
                    "size": 60065882
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ed2921fb7f4465aade808e01fd0a0af1aee3fd2d20b90671a6d45e5e668db68d",
                    "size": 19728929
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:de1d8ab271c3ef897f8e15d419c9f8721cef879a3f7d7605a4f9de9fef22f057",
                    "size": 473573
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4568dec13190b9f24dc2ebd7e6c48222ee150ee187d6974e8ef4beb236947e42",
                    "size": 1015
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:85fefbcff0a0a7f60a2e0482b994c667b46d95d469cac106f75d9cfab467a048",
                    "size": 282
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d26f11089abc4fad3b1a94f3a93e832b3b1c949fd9acbc0c1752ab5e1e9082a9",
                    "size": 681
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ea31be511e0057e42f306ad41b72745551050d3805aea36aab704b54f51c96f4",
                    "size": 440
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2a076db1e46908c283311d8e3fef1c1a35c3286ba249fa9a2ce218cd3df3e98b",
                    "size": 5914958
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a28007347f229951b00f5b3e3fea137b20db03798f5ee85d335dcf65b9f8ad39",
                    "size": 484
                }
            ]
        },
        "36-run-20231103": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:30d5537d3b9628c205a77535787324c4a7fa819ed37df7192d12b18814d64cd4",
                "size": 6332
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c7bef7d09442a4c4deef8e8120027e7fa3f163c7b5a0afedc3f2c4c2e7652e1c",
                    "size": 60065882
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a6d094b63f0c857a6e3062087c3e9d790d80076639de755c448df0ad7e8dff3b",
                    "size": 19732718
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9f35fc679bc9dbd15b7d8b265e21f3952147ff4cf9f15009c8ff0b0395aeab19",
                    "size": 473573
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8198f753917d2ddd9565eff3fbc92c6eb1f3df1b9c0804170f8cab426d610e79",
                    "size": 1011
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c90859cbfa8aa3461b182d5de19dcda3035a2f9f64b9e93017195f04714c95f3",
                    "size": 278
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0a7dcd04ba9e1ee6e2740ef5fccc273a3f9f4d8ddc5bc9c67d4d52829c6ed3f6",
                    "size": 677
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c545358d2141c6d8b5eb1ac734ebbf3a37dec90a01d15d3cc1ef6d105eac3750",
                    "size": 440
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fe68687bd1307a5d44dbfb6d363541a35fc9f1900d0b3029ea1bae4eba2ab30a",
                    "size": 5917784
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1aacf66578829e055de5d3c3d1e3dd353ef1240167fd02c5e42552ed64353350",
                    "size": 483
                }
            ]
        },
        "36-run-20231204": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:ce3657ce91f55fe82f66f180c01a22937f46a780bcf4619d4dee1ccb5aab8844",
                "size": 6337
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c7bef7d09442a4c4deef8e8120027e7fa3f163c7b5a0afedc3f2c4c2e7652e1c",
                    "size": 60065882
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:87ca060317625a1d3579d7d09dc34a812bb64bb9172d6566c2f08e6ee21938ea",
                    "size": 19731406
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c5dbbba3407caa0a21b7266a147ea6d7a2a9d4b9b58c54d90c616693a38d1dc3",
                    "size": 473571
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3ba443bbec93f90f07f489a2c40fb7491863f6827bd96f01f9984fcb5900e2fe",
                    "size": 1012
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:140b17da807ebe63eae5f0a41b6855ed72ff7f36957e0fe8b6fc697b0eadf00c",
                    "size": 279
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8761fee91d1fab123886fb3aa440d9caede96173372b7e3acb0cc6e632c51bed",
                    "size": 679
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6d0d6983d1b8ef885743928520fe6423659086d8e2427befde79200d5a7fe42d",
                    "size": 441
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:db79b4f9aa14b7ce67448dfc57280459ad3b89532c74b2a44aa389c0c4b7ffea",
                    "size": 5914623
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:693304f2951322621b03a1ddf7a6afe570eb35e10b02d00b60fe5cdf4383b11e",
                    "size": 483
                }
            ]
        },
        "36-run-20240105": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:2b0c4b579d92d892b815021d52925a34c1bded8bb12fc011035625d917830356",
                "size": 6337
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c7bef7d09442a4c4deef8e8120027e7fa3f163c7b5a0afedc3f2c4c2e7652e1c",
                    "size": 60065882
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c4bc70c7f8f3c710944acae7143b05381cea191369dcb2f5a6133b3102705bde",
                    "size": 19731483
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e69798ae8873a7f6fd78ddfcdeaa1dd4e3e83aa1004720e77fe6cd73d9ad9526",
                    "size": 473570
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e2b93da14bfb11d34196c7aa4c1dc75fa1f00c4f1cf426bbfc216ca9bdfe6579",
                    "size": 1008
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:cdf0ed6c36f367ca6f74f917fd0c35313ec5eed2efcc039740426fffc75b9a55",
                    "size": 276
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6f8cc78be9994a3d595602705ca10df88d13fcb87af5fcc3b489373ad108245f",
                    "size": 674
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:967eaae7e368fb581392038a1921b4f1b1b392f96c2362396a5e63ee43f3b732",
                    "size": 439
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e4fa6c4f40122835bf0b13dd827a4e86b7a9e654ac0fd6c54fded0d87229dd8e",
                    "size": 5914757
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:62394de27c1bee2b44ab2a020fa062bd64aa63eb50e614f1b926bb132934a2de",
                    "size": 481
                }
            ]
        },
        "36-run-20240201": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:0e9a8e416811adcc930a19928e8cc43167115173a9a4f032b0393c1e9597a330",
                "size": 6336
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c7bef7d09442a4c4deef8e8120027e7fa3f163c7b5a0afedc3f2c4c2e7652e1c",
                    "size": 60065882
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6560448236e4640184542eafed550ce6cd2748154a8ec382b8b71574780a1a7c",
                    "size": 19731559
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fe1fa53f9d023792e496efc2dfcd8c5a48a54c248a7468700b07146e001da72c",
                    "size": 473574
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:649ffc40d86e3a22c538079e02520d9067df8a26aadd7ec73e9b6eefa43359c2",
                    "size": 1012
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fe1415d10447847d33d4b31c84e9c71f937d901c1f45a7d2dd1f9052dd531517",
                    "size": 278
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d0a81557af803a4cd39c6d7feaf5b7855b512586c5b18b42aa55e0a60045659d",
                    "size": 679
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:70aff33bbf47fab751815a3f4101a96e17663f6aae05686c4433ba8e512aab08",
                    "size": 441
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2651a873d204fa7afa5fb5b1e8e8d5c21521c442ec3b45e08f47b72e61e1c5a4",
                    "size": 5914644
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e5f7f4be355284376bad3dddbd0918e1ee0df8324cec7bdc0e3d3e527aca2cbb",
                    "size": 483
                }
            ]
        },
        "36-run-20240304": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:4fea74da05be50c4216350f1317ff2ce58dc5492c472c3809e93f9d6dbf85233",
                "size": 6337
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c7bef7d09442a4c4deef8e8120027e7fa3f163c7b5a0afedc3f2c4c2e7652e1c",
                    "size": 60065882
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:369eb74e99960c5945206ebe6897db5f70140707a34117992dbfa3fdeea018eb",
                    "size": 19731465
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:73ae63d0864f3a04b8ad3261fd5d959c7ad4ea9773491cfe932c26435dbbbe89",
                    "size": 473573
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9e406d585175e97fae732fef3174fe4f1922c6df93d9a490d7a946a2dc7d526d",
                    "size": 1010
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b8afb93fd7a5fa98c6ebd2d20afdac6108f0a35de53c7fed2a5131edbfab7d5e",
                    "size": 277
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4fd3d957a24e5222696dbc6d25510061fe62da32458da7294ca79e84bcbfcb2d",
                    "size": 675
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bcfb94f35ea4076d5c6c93a48478873266879c7f0ddaf5e05d9d5236b2d2f249",
                    "size": 440
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:96d0651b62718e73a4a0980f4b3111fb72fcdddb5823e8947e02c4de550d376b",
                    "size": 5914536
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bf0d1eb9dfee5ed90db6ff5ff5908af73e5f853ff5cd2250ceaf77ce20db3356",
                    "size": 483
                }
            ]
        },
        "36-run-20240401": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:71d51f11530bc8359e87358206f172d781dab830b7296a85d3491ff783f19bcf",
                "size": 6322
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c7bef7d09442a4c4deef8e8120027e7fa3f163c7b5a0afedc3f2c4c2e7652e1c",
                    "size": 60065882
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7c1d2f1bd80edc0791b24e67787205cab2b05f0a4a80793a026635139ee2c718",
                    "size": 19731641
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ed248c377b60862082358cef4a6469d068e390d4ad25a21458d4356b2005551b",
                    "size": 473573
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bc86a0af83c9714496f30db0134dfc424d40d2ed69429a69ca2fc5bd4fdd2d17",
                    "size": 1011
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7d96f84d3653bc5572f9007e8447eba30954ab480403a258474d127d63f363b5",
                    "size": 278
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ea7bde9ac474cf1bdad123ef199a605dd225a7f2fdd1cdbffdbb83bd421902bf",
                    "size": 678
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5620faf4662c143dcd9d4d88afe97222e4133f372d9a0f2c45de7b1dd1932562",
                    "size": 440
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:20852e54a360c898690cea798439ffa1452d6454552c35fbbb63fdb0f7e2fd2b",
                    "size": 5914616
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2ba1381739c40663c0f20ec6222f20bd80dc7d639bb7ecbb5ebade17ef453f37",
                    "size": 483
                }
            ]
        },
        "36-run-20240408": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:4658773c7cd754c5c629a5c589886462ec125b31f9270e2c2f7d692d8f949564",
                "size": 6322
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c7bef7d09442a4c4deef8e8120027e7fa3f163c7b5a0afedc3f2c4c2e7652e1c",
                    "size": 60065882
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:575fafef33150d2b9dbc87cd65a2e5db7b561f3fba9b9a4e3de0c3e3d15c5412",
                    "size": 19731456
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ef218e9d85c10e22d532c71ea44e4033397eae85c64b21171e8039373206e31c",
                    "size": 473572
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:102b958bc3de6e49fcc44e1a088927add56722198171eb1fc843ccc430dd363f",
                    "size": 1012
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:32bc3349ac3636abac8c4c25d2c914056a94fe38c0b211f61b9ee5fe6d9ec8a0",
                    "size": 279
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:00d8208b7b187ff3676c23299c45698953eba9c3c3bd528ed02b032869af520d",
                    "size": 678
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c0240f8c5a417ede1927c5b54f99fb998e901c7c470c07d22e0e55acbac7a5a2",
                    "size": 439
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:96d31ee88a468a5555dd154840b3c4cd35a8cc0309677f610ad549509b25e5b1",
                    "size": 5914692
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5707c5fc0d9d57ddb87a4315fedca089c0dac71cbe6c26c064ceeee84a6654ae",
                    "size": 482
                }
            ]
        },
        "37": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:2df8cad269a8ef1af556af9b86faea9f46b5ebd9dde6f350262f9ef5a6c4b046",
                "size": 6323
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:70ffab5718fea0e15c61500da8ee3e247dd22fd98fb4b68e9a3e8c51d93b3025",
                    "size": 65029635
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:091a22464e090e560c1eae70d6b60d1df293f0cc92e3455f13891ac9737589ee",
                    "size": 24684150
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4ba64e71b26acf1dcd14850f27294bf84574b0abf17704f3c7b1e1bc8924ae3e",
                    "size": 473574
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b9f588bc96c09005302be43e24375ab320fb260116256b9006a46ca1962bb2b3",
                    "size": 1010
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ec4d31d05d5223fca6a7bcc5813d36b990393626091ee48bfffc4289f851e299",
                    "size": 277
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:27a58040671a456e831f6fffd854ef45c9cba94e7bd19ad615af43b1fbfc80bf",
                    "size": 675
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9cdafbeb678e6b83255cade03b0805656a4259196b20d063b7b70aaaed64b6a4",
                    "size": 440
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:14700c5115d80cc94bb8efd0e5dafce0d0e14d1ac320eb393b48d568d41b7b20",
                    "size": 6652181
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:42d58f5cda947c98bf040363d1ab8ca0611158d2966fdf8fdd0ff7069c386f54",
                    "size": 483
                }
            ]
        },
        "37-20230811": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 6668,
                "digest": "sha256:3e0080a26f103363400244bebbfd0ff5d06fc24b1c0fa688b2191dd292f63970"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 66534340,
                    "digest": "sha256:e52979b1015a445d09d63bb33f41e3cf0ec020fb421106e9ec5ccd5d2d4c3eca"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 25143226,
                    "digest": "sha256:b5d988feaed8c6ffb1b33594f0927306b14c0f99130f525452e4121d05671660"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 473584,
                    "digest": "sha256:229924996900e055f10a97289223e507bd6d314b486bf12256b0033329f50b2f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1018,
                    "digest": "sha256:ad469405724f5ebfa5388db76cea2193b20d9adaf889af963441e70e14c576fb"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 283,
                    "digest": "sha256:d6dbfc5ed9adfd3e2932836372894f67ffa7ca76ff36c38e9c43b41f08883cd4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 684,
                    "digest": "sha256:844d47ca30d4b5eeeddb6e4c2f7fb345a7b0f20c96381f50a4f679e1eb5d78db"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 442,
                    "digest": "sha256:6fda4af151b097d2187f1b4f986cdf8576bc19abf3f723561851abce35431819"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 6676311,
                    "digest": "sha256:f9ade005b55026e81ad272ef4432cc1c3a8ded9378fe7695a3d5755ca22cdcbf"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 483,
                    "digest": "sha256:0b3839ca6c182efadd04760095eabef467a30eb5b3928c1743a16536c78fb905"
                }
            ]
        },
        "37-20230829": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 6334,
                "digest": "sha256:5f4565d6581f5891d281c149682d0d7c50538bfa5013f89e17f9386e934584f9"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 66534340,
                    "digest": "sha256:e52979b1015a445d09d63bb33f41e3cf0ec020fb421106e9ec5ccd5d2d4c3eca"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 29828162,
                    "digest": "sha256:1902a8ce6a847e43111f7f9dfc1977900620a266911b721836c2af9e1a329368"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 473575,
                    "digest": "sha256:15d2268bfe6351fb37fd09c4a96c844b9b3afef4df0b2b709d43d0b5cbdd9f85"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1014,
                    "digest": "sha256:edace452f624c13eb2f1e9aabad7820479555fcd494bbb554ef3b084971fa1f7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 281,
                    "digest": "sha256:b10ade70ae4ae5d3c0a50ef9da4e7d4e739d15bc0d402e804d3803b6fe53e36b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 681,
                    "digest": "sha256:4f63e82fbc411af7f584b337b891d38d46899790446e29bbaf2ddb0b4ce7a7b0"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 440,
                    "digest": "sha256:2c152717a8c0907343fa2824b5439d982d77dd0eec75a4d1539805c3c92df1ec"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 6712803,
                    "digest": "sha256:1c1bb3372356e9d07e9421ce1a5ecaceeaf652e2b3a7ca0e8af30b44cb8d5447"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 483,
                    "digest": "sha256:9b8cae22d6ea0568a4536163db02efc054a68250737b44955790bbc1264ac930"
                }
            ]
        },
        "37-20230904": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 6334,
                "digest": "sha256:a49e4b777faea57581f7794fb1fba4c77a4a3b9408a2e39fca67eef554e37377"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 66534340,
                    "digest": "sha256:e52979b1015a445d09d63bb33f41e3cf0ec020fb421106e9ec5ccd5d2d4c3eca"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 29827981,
                    "digest": "sha256:2027c0ec9d1eaf143fea0c0654e788ec5ddfe4b54b1237ee25ea8acd1779a4e1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 473575,
                    "digest": "sha256:932ac56fb601e5eb729b0dcd65650440d35f0877a391a379ef9019326ec1bfda"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1016,
                    "digest": "sha256:4bc46925606fb0a2143644f6eab1d223320935a856361f66cf71c4ed6327a87d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 282,
                    "digest": "sha256:cbf6285b20078c98c9d4a998f064c93a84f256f9971fab93d7aed699b7c9cfe0"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 681,
                    "digest": "sha256:526a6c2de7d3e79ed359f01d02dd9d48290b245403e0201a935f083484961e38"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 439,
                    "digest": "sha256:ba1d6d9da4501fb9e2d95d2f865a8f5a9e9b2e249887af30a4f30e045d518e6d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 6712831,
                    "digest": "sha256:b5cf518152d5676d7098d741ffdc5f0e3ded7508263678cd6ea700cc40e7ca57"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 482,
                    "digest": "sha256:f598a9e05c7b788f4686df2e5aa19e4c17e08f6171c27910223264761d44db6f"
                }
            ]
        },
        "37-20230911": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:ac459a230e16952629f00f426a26eb86b5bdc662d78ccfb6bf047690047ed2db",
                "size": 6338
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e52979b1015a445d09d63bb33f41e3cf0ec020fb421106e9ec5ccd5d2d4c3eca",
                    "size": 66534340
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2027c0ec9d1eaf143fea0c0654e788ec5ddfe4b54b1237ee25ea8acd1779a4e1",
                    "size": 29827981
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:932ac56fb601e5eb729b0dcd65650440d35f0877a391a379ef9019326ec1bfda",
                    "size": 473575
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4bc46925606fb0a2143644f6eab1d223320935a856361f66cf71c4ed6327a87d",
                    "size": 1016
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:cbf6285b20078c98c9d4a998f064c93a84f256f9971fab93d7aed699b7c9cfe0",
                    "size": 282
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:526a6c2de7d3e79ed359f01d02dd9d48290b245403e0201a935f083484961e38",
                    "size": 681
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ba1d6d9da4501fb9e2d95d2f865a8f5a9e9b2e249887af30a4f30e045d518e6d",
                    "size": 439
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d3afa241cef5b84552fd731dfdea51adbd5bc2025b2cf5f47abbb661fdcd6bc4",
                    "size": 6713345
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:34b1a68d316ad57d98ad254c7f15ffa0c09208d522a5fe4222510b80ef949c6f",
                    "size": 485
                }
            ]
        },
        "37-20231103": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:7e81f3dea9f9e0c1053b65578b878d939a35065876795daceafe6fd9c47337fe",
                "size": 6337
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d7a9dc132f00a11a7e4f430fbea6af388f02cd765659df6c506fd18a19f5d122",
                    "size": 66705827
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5ada43b1ff524507d6206ea840fa86ad81e3ebeb53656a3dfbb677b562d496fe",
                    "size": 45529372
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:99d1c4f4a9250399a5e4b19f0596a9b77e4df97dfd2c9c428aaf33fea1b8e259",
                    "size": 473572
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:224c775941ceda556a1680d4766d17e235b32e87de039485392edbb477b49826",
                    "size": 1009
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b10b18389bc121e92a8a5d45e3b53384aca887ea2c9e760164263e1d508f85e9",
                    "size": 276
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:536070598d62154a96c0128dde03ef3bf31cb77f5963fe38cd880e73738ef7c6",
                    "size": 673
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b1a23b40bbc5c0275715045634db9bbf15671432b6af39249bfa447ce6c6a8fd",
                    "size": 440
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b14404e368d6132724d927b460202e4896d864fde9491d5ddf81ba1cf2b6d984",
                    "size": 6840828
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ca4bd3b455a00fe6c62a2e8e656fe2411eea0770be37e9e0a3d2be15170c1381",
                    "size": 482
                }
            ]
        },
        "37-20231204": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:339472f7ed9411cdcf32e0386a7cccfe5303911bca18692b13b23e0edcd582d5",
                "size": 6338
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:70ffab5718fea0e15c61500da8ee3e247dd22fd98fb4b68e9a3e8c51d93b3025",
                    "size": 65029635
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2a5fe1a5c0b663c9895380594f812eb9f5c468f54914da91117101953bcf54ae",
                    "size": 24684016
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:db32e5fb93909460197b968d8142f7a5c6e03e121a5707005994ebdf021f66b4",
                    "size": 473571
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:cbc51047542634ba656c4e6e10885f1d105e5b62cf3cf5531f9d9fa6d06f3541",
                    "size": 1011
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8963d0019942b1d1cf04b7d5cda9c8c932e870c0e1af9f08c77303d2124fb414",
                    "size": 277
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d9f0c460ef282741fd09c81698beb08d7df875305ac7edd764e9933d7a943214",
                    "size": 675
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3d09ccdede5a88c85693ce88f72a94ce0ee7cddd8bdadf6254fe1a032e393c8d",
                    "size": 440
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9e2c7a515b3d425f253c3ae68e2a8f1326fd34cf8d1914a1a0f3187887f186cf",
                    "size": 6652007
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d40889ab8a9ba5cbab7db533033ebf17b8cbabe549f5ab64712b4a713e15fb43",
                    "size": 483
                }
            ]
        },
        "37-20240105": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:28d87dc2c9a17131eb07b0ff8c52fbaab24a11f3fc5cce91afebaf16cf5226a4",
                "size": 6330
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:70ffab5718fea0e15c61500da8ee3e247dd22fd98fb4b68e9a3e8c51d93b3025",
                    "size": 65029635
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0d3256139a64a3c44feeaa1473c4c599f751fae9bc8cbaea8f9f7ed7398d1215",
                    "size": 24684374
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5dfa1b3659b84cf09fc16657ede421ac2e35903f3f4fd35dfbf5994fdbd72f44",
                    "size": 473566
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:65cee28720a254f44a00edb4422823c83ae198b6e9f1e5060e82c79fc9f0f87d",
                    "size": 1008
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a9f57c40b274a0c0a0788c1491ae6edf9c77c9abb6197bf811ed6f89c8e61693",
                    "size": 276
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:837ebc5139523a61c619d4b3b910c050be8140c230a9939cb31890d538c888e2",
                    "size": 676
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b2c14d398150cadcf6f3ab8fe8c47af020fb8eee5ee44664cdcc169a0ece1ebe",
                    "size": 441
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6b71675a99070f9090dc37011c2e4a94abfe9efb22c72f5b11b20af4b58c89a5",
                    "size": 6651803
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f7cc0f1bcd59ee27297f710196fa6407644572a5851a75d5eab0bf86a35fc9e0",
                    "size": 481
                }
            ]
        },
        "37-20240201": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:8ad7251887276b85b38e7c41a32bf9859b04b21c40ab89c8cd21a43ec6e6f6ba",
                "size": 6338
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:70ffab5718fea0e15c61500da8ee3e247dd22fd98fb4b68e9a3e8c51d93b3025",
                    "size": 65029635
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6266aa16a1076eb200a9e5a1e34760a495e98c4b60db8ede2e49f38f14efd088",
                    "size": 24684233
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a144d60c01b9290d646d9f6122fda2fddc46f7625a951b0d7308b9e1a942de3c",
                    "size": 473575
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3d491f49152e07ce118454d93dc61580c637dc6ef3925adb864607a33d85f75d",
                    "size": 1008
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:198d30920974d977acffa25d34654824de8398360967c01ba8b948b0ad0d7078",
                    "size": 276
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0b0b47a23a7e4de767dd3ad900c6938231064a5fc47b9695869bdc71103fe3e4",
                    "size": 675
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ed2038c1e6d60199c2d8ec7b71ad0fb573577356081ce001d986db0347fc6deb",
                    "size": 440
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:660d289308631b655c09bf0d492b9b2752f88a46acfdc876b1d2c1a05d469ff5",
                    "size": 6652200
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:74ad52721bc115260813c961ab5efbb3f7f3b5f6ad2199b5f3b6ac0195631a25",
                    "size": 483
                }
            ]
        },
        "37-20240304": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:0f839391e4af99e40462c3b63fb2a17ebeb3f3c187f8b524809e840f7d3011fd",
                "size": 6335
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:70ffab5718fea0e15c61500da8ee3e247dd22fd98fb4b68e9a3e8c51d93b3025",
                    "size": 65029635
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2ac36a055edb8d7d1c23892fe15e1c3b434ed33df4c847f5f0ced1d217b46a38",
                    "size": 24684028
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d6eff4af478365690d81212799d67c21ca6324307b003f66a1fc66e56f761ea4",
                    "size": 473575
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9c6eb8f233ceab952e59f4a2e73ac8a1e5ebd9ccda01de859cf5fe9f5b653f3b",
                    "size": 1009
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:984090a6409d23b040a2c91770c17a5d7e8e32d5cfbd650d9e252c14f1e2f00f",
                    "size": 276
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b3a692e0adc91ae241cd75e0d5c7a6040cd1ef100c4c1cf693252d6e420405fb",
                    "size": 675
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e45bed57f628036e05c35a8cefc91e7f65cd46138aeaa05670d876b8ede0ac54",
                    "size": 440
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e022de268281e2c32762dfd2063689fed595eae38a60a47f8142f584f2873e09",
                    "size": 6651920
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2882aad611c2a4d61ec2329d8b416ae53762716fa36f49338373a2464f9dc7c1",
                    "size": 483
                }
            ]
        },
        "37-20240401": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:1e79788f1873482ac6f05e698c3e61b3034a6bd5cb5c70233f8617557b8392a1",
                "size": 6322
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:70ffab5718fea0e15c61500da8ee3e247dd22fd98fb4b68e9a3e8c51d93b3025",
                    "size": 65029635
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e10e4914a91a46180b1e9e654fe81b3ef80f31cc2f55ca0109b719c9b1afee7a",
                    "size": 24684229
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:58491e471b68e66954c33badd9727bb06ef76a98df99be31c2216ce2c32d15da",
                    "size": 473577
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5cfae6112c9f1e79a2e41a9f4648604e5fc6f36360177223d03ff7045feae769",
                    "size": 1010
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:16f6d5314211f95032497ce5520a9d14c05925a99c61d2447874e58d3094bb60",
                    "size": 277
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:cd1464be263a2f42dfc9b396d9270800d62ace69d274af0cf37f54bfc85ae4b7",
                    "size": 677
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3fb537258e1f64889b58e323ca14433d2712bd695b7e037d20be09977e3a2603",
                    "size": 441
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:29d6e4390b60aa2479d1e79a54f323e7445269df3960e09c9fefc8abb888d59e",
                    "size": 6652083
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d55c093a44c8f9d5f63da0032695dc6990e9ee938605a1e2c112594d18effc83",
                    "size": 483
                }
            ]
        },
        "37-20240408": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:3d6465bc79aeadfcfd2e305ee0649cb5f2901274d2608ee7d6ed0e67d5060ec2",
                "size": 6323
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:70ffab5718fea0e15c61500da8ee3e247dd22fd98fb4b68e9a3e8c51d93b3025",
                    "size": 65029635
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:810cc0af2123a5b710b00a510661c42dd9f042defb921024e63e96104d1787ad",
                    "size": 24684051
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2ed67df3c24006c7aa570de04fe83e2f65ac30ec2fdc74544d06830f9c8836bc",
                    "size": 473572
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3075ffd7d64ed2d4116e67e62ebca6e1b242b6ba3d3519b07231fd013ec8f50a",
                    "size": 1012
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0a872d328eeb19a10571d3bf6b7028e43313ea99279cd463cdadd4c2672b722d",
                    "size": 278
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fd686a5a44e1bde50a09640df89523e5534773f9249b819c3761a9061374edd7",
                    "size": 678
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:69290262a3b92a42acde4fb0506ca6c4c7f7f06957e1cc5ab25a6c5e89078bbc",
                    "size": 440
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e3c8db67ee890f75231ca3ec266708cab4718cb55d929ff12037be55e7d59fdc",
                    "size": 6652032
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a848b7ca14b13162fa608e690095241372e490c1727c7038b28c82696fe478a4",
                    "size": 483
                }
            ]
        },
        "37-20240429": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:2df8cad269a8ef1af556af9b86faea9f46b5ebd9dde6f350262f9ef5a6c4b046",
                "size": 6323
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:70ffab5718fea0e15c61500da8ee3e247dd22fd98fb4b68e9a3e8c51d93b3025",
                    "size": 65029635
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:091a22464e090e560c1eae70d6b60d1df293f0cc92e3455f13891ac9737589ee",
                    "size": 24684150
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4ba64e71b26acf1dcd14850f27294bf84574b0abf17704f3c7b1e1bc8924ae3e",
                    "size": 473574
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b9f588bc96c09005302be43e24375ab320fb260116256b9006a46ca1962bb2b3",
                    "size": 1010
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ec4d31d05d5223fca6a7bcc5813d36b990393626091ee48bfffc4289f851e299",
                    "size": 277
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:27a58040671a456e831f6fffd854ef45c9cba94e7bd19ad615af43b1fbfc80bf",
                    "size": 675
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9cdafbeb678e6b83255cade03b0805656a4259196b20d063b7b70aaaed64b6a4",
                    "size": 440
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:14700c5115d80cc94bb8efd0e5dafce0d0e14d1ac320eb393b48d568d41b7b20",
                    "size": 6652181
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:42d58f5cda947c98bf040363d1ab8ca0611158d2966fdf8fdd0ff7069c386f54",
                    "size": 483
                }
            ]
        },
        "37-build": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:94929cc5be56f1530c566acdaba266fa216e81b5231e690d8d2ca20768d3c527",
                "size": 7083
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:70ffab5718fea0e15c61500da8ee3e247dd22fd98fb4b68e9a3e8c51d93b3025",
                    "size": 65029635
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:99d5b39434fb34322d2538e726b22a180c5512e8798e40de9b79d5b3bf48d7c6",
                    "size": 24684034
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9f2f482a4ec9fffaeda8d6e747e7398460a0228f76733c47d18d78a2d657b6c4",
                    "size": 235741099
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:696a0055108af30566be19bcfa3b1503a4802898314a8686252d5bcdaedf4652",
                    "size": 473572
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5988908a8c45a73a2ef86e8625ee9f3f4e03a173592818421d9441a87b06a6ef",
                    "size": 1010
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6ef7d326faacfe723ed24ad3f84d153496f8899ec2e10c96e3b3385271a8d1a9",
                    "size": 277
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:432b4c6a90343ef5c1baefab8f80b015a59e1b0dd6244fcf3763e91b96c71298",
                    "size": 677
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f9af09aee2002f2e15926bd10005614c25881682167169cc0226af25f803b7ae",
                    "size": 442
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3aaea23821fd27f4c014bcc686d754c85bb896586c7dd6d32a19b63e7fe11640",
                    "size": 14172238
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7aac30e4d420b3abd114a09a455554cecd4957535aa668033845216e52189927",
                    "size": 482
                }
            ]
        },
        "37-build-20230811": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 7426,
                "digest": "sha256:ee9f9afc34670ecb9ee2058b2355eec456f40d14f3d4d5a9def073f923c4b05b"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 66534340,
                    "digest": "sha256:e52979b1015a445d09d63bb33f41e3cf0ec020fb421106e9ec5ccd5d2d4c3eca"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 25143226,
                    "digest": "sha256:b5d988feaed8c6ffb1b33594f0927306b14c0f99130f525452e4121d05671660"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 235353220,
                    "digest": "sha256:732569a5de90f9b52407b3366d5476e72a9c7a40e415f3abb3ecea4fcd9ab1ff"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 473585,
                    "digest": "sha256:5c99ed12124d0163c07b896af68ce4070a52ce71ec57a0726349edfe595b540a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1017,
                    "digest": "sha256:b7015c50417e6ad5a18d58871f6fab14482dc9e1c183f00890e9fbc8f9223620"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 284,
                    "digest": "sha256:39fb84c1f7effd24a80e0598e3204c7cd5f315a196828dc1a68f146c13f894c3"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 684,
                    "digest": "sha256:169947dfce7490d3ea74cbedd18279edf83fbac188e232cdef46daa81228167e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 443,
                    "digest": "sha256:a13fbfd2833965520e99f5de659fa959b7b394b24d6940ceb9f7923db95deb0b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 14099409,
                    "digest": "sha256:40e49b526ecef8f04eeb8e8d80ae8b1850d9d56b8f3862a712e0e95aabd27f9d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 481,
                    "digest": "sha256:c33180dffb5d9653f730d2d6331de80b7fe1673b5a67f8d72f39c61e33d1ed03"
                }
            ]
        },
        "37-build-20230829": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 7094,
                "digest": "sha256:3fd965570994aa3888d0f9bc3e9a2f3d3fd6a0876eb12ad67527df50c2b11806"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 66534340,
                    "digest": "sha256:e52979b1015a445d09d63bb33f41e3cf0ec020fb421106e9ec5ccd5d2d4c3eca"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 29828162,
                    "digest": "sha256:1902a8ce6a847e43111f7f9dfc1977900620a266911b721836c2af9e1a329368"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 238957127,
                    "digest": "sha256:7ed305e9ff336f144ff67134dbf90006097a58e7050abd739d96d1fb8bd1f681"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 473575,
                    "digest": "sha256:5a211c819ea929e4aa7ea0aef924b0a628dbe470deffd06d2866e877460b3b15"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1015,
                    "digest": "sha256:0c9d94eed525cd9c2da20f1d41ea202183cafb1d07cb8a31c14a7023b74c0a0c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 282,
                    "digest": "sha256:ff84e0cdf45aab2f8994a87701c2a1d93fd6c3cb37c013e216bfb46176a048e7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 682,
                    "digest": "sha256:b34a7d1eec70bf533e41710bfcf693058d240b13bb4b89d4156a8ffa4ecd8da8"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 439,
                    "digest": "sha256:8398a79b08ee1fb43de238e4ca856fbbd1e4db8390d8762876fb8d2efd8b33bc"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 14141539,
                    "digest": "sha256:71362da03ec49a2d026dc9d0ab45247da06c08bca8f7854fb37698a8c38d1981"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 480,
                    "digest": "sha256:605b97b14027c7824ec6405017f8d93d2bb93be1e631f935cd414397a01b3c83"
                }
            ]
        },
        "37-build-20230904": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 7094,
                "digest": "sha256:1ef50d5dba5c69285c4a9b09a118ea91ce5b290c69a7991899cea10e822cba11"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 66534340,
                    "digest": "sha256:e52979b1015a445d09d63bb33f41e3cf0ec020fb421106e9ec5ccd5d2d4c3eca"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 29827981,
                    "digest": "sha256:2027c0ec9d1eaf143fea0c0654e788ec5ddfe4b54b1237ee25ea8acd1779a4e1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 235401718,
                    "digest": "sha256:58b567e7951d89b953da3b3df55f6660e616305a4a31fdf0c8142b0dd3453f49"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 473571,
                    "digest": "sha256:a976effc1fe051a6c265eb021cdcd33ce58afa31bb788cb2082c313e56284d86"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1015,
                    "digest": "sha256:8ff10a65c0666e420a44b339babe1c7b1057611736082430ee08a029a456f95b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 281,
                    "digest": "sha256:3713d86efa354563e47d96e82131696c4ef8756085307ed3746af90679178f23"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 681,
                    "digest": "sha256:738e033be75c2e38279167f429a22a488b3bce84657b1b23c9ac9e79ce3d6ae8"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 440,
                    "digest": "sha256:333bc780ce73e5a0ffcb77ce573f65f9b9744d88da1c99bb20e95eb140fa0567"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 14125326,
                    "digest": "sha256:905ad29a09ed7d9987e20d0ff73d46631eaec9bf83df94271c4b0f4262e0cd22"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 480,
                    "digest": "sha256:fa35488b89601d145c3e13ed9ed7cb9539542592fba634fe9d8d6a160c4d8cdf"
                }
            ]
        },
        "37-build-20230911": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:387384dbb211242ea0511d2ca832775e7148af0d2aedb8c50c79b0853a3e6935",
                "size": 7096
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e52979b1015a445d09d63bb33f41e3cf0ec020fb421106e9ec5ccd5d2d4c3eca",
                    "size": 66534340
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2027c0ec9d1eaf143fea0c0654e788ec5ddfe4b54b1237ee25ea8acd1779a4e1",
                    "size": 29827981
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:58b567e7951d89b953da3b3df55f6660e616305a4a31fdf0c8142b0dd3453f49",
                    "size": 235401718
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a976effc1fe051a6c265eb021cdcd33ce58afa31bb788cb2082c313e56284d86",
                    "size": 473571
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8ff10a65c0666e420a44b339babe1c7b1057611736082430ee08a029a456f95b",
                    "size": 1015
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3713d86efa354563e47d96e82131696c4ef8756085307ed3746af90679178f23",
                    "size": 281
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:738e033be75c2e38279167f429a22a488b3bce84657b1b23c9ac9e79ce3d6ae8",
                    "size": 681
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:333bc780ce73e5a0ffcb77ce573f65f9b9744d88da1c99bb20e95eb140fa0567",
                    "size": 440
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2c627594a0d9963137ba46fd071618ac208d1c0d5083f4612b79d7276efb350d",
                    "size": 14125667
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:26626a9221fedb58a5e32c61b2c5f0852f21a9cab4bfd2294e8615333cef0f9c",
                    "size": 482
                }
            ]
        },
        "37-build-20231103": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:be9ea464d3e34cea15e1e64cb120ab3111f06119d01ba83c87eb0fdebf98da09",
                "size": 7096
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d7a9dc132f00a11a7e4f430fbea6af388f02cd765659df6c506fd18a19f5d122",
                    "size": 66705827
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:71c20b4a6f49a419b3011c15106e5f2aecf70bf56ec6a76fe9f8470b9ae7144c",
                    "size": 45529324
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:346640de5bc85f66dcade37c4a859ab946936975350ac806fca182b09c969bf6",
                    "size": 235677689
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:aabafe706f7c9ca4b223002726e8a9287da6034241c92cdcb771a1d71577ac97",
                    "size": 473572
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:cd071fd61c9500f371bc71adf550c933fb9e4035db571296284df66be12f3f38",
                    "size": 1009
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6d3f95fe383805b260f21d49c7b7d6b4a265f1065b9ee082f3ac52b2afb4206f",
                    "size": 276
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8d13d0db6fb6ccfca3973f9bcf2f2734218914e823ad8bb221e54b805e302160",
                    "size": 675
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7851dcec2d2d3d29c8ef4b1bc36d08f020f4e386cb1e8972872ecd5dc3ca8e73",
                    "size": 442
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b4cfe56e9eac859494848833d110af6dc784a5262f66f0731e419c3e7f447b4e",
                    "size": 14166522
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ebddfeb896adab4b02c989c87f8f5308d3945f437722e7b1da093748a07663e7",
                    "size": 481
                }
            ]
        },
        "37-build-20231204": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:99162b94d3a48a3f352dfe675d87278061d6a0bac3acb9a417df7eec73c9ea23",
                "size": 7096
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:70ffab5718fea0e15c61500da8ee3e247dd22fd98fb4b68e9a3e8c51d93b3025",
                    "size": 65029635
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0ee857b42124439142c81be632481692232d2e8875b899f8d398db725c218792",
                    "size": 24684037
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:65cbd5776ecf57ac342e8d733e0f2264864ec82a191becda14634aa2c4620a3d",
                    "size": 235740015
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8922b5705473408f6f721f1b4e7b3872dc453c30822daa6791ad17d460c11b55",
                    "size": 473571
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:86c28970b584af5b306514eba0ffc5afd92a2375b19e509190dd6ff1844978cb",
                    "size": 1012
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:55f58392dad2e729dbb0b96cec0f30b59377a2c72309dded4e3a4a8fcb4ea181",
                    "size": 277
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9f9dd602a2a97882e93b98f2e47cf9b308ec0bfa522726eeaa1ac4fe6ec89a65",
                    "size": 677
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e27de6fa5f6fb8f4d549a1ea5146dffda3d1732bc6be3f99dfcf77710e6e0ed9",
                    "size": 441
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a3ee9147adc3038436e748f10e0e0f3bad60e6bd758c23ae3b84f7359a90109d",
                    "size": 14171633
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ee6a5c4c737e9d0e5a047fa5aca5e72044bac178d765828f572f9219d770a911",
                    "size": 482
                }
            ]
        },
        "37-build-20240105": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:c2a492abc3ec6a49df7f4e240b13a69708db66c188e474915e135ade39b7ef83",
                "size": 7098
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:70ffab5718fea0e15c61500da8ee3e247dd22fd98fb4b68e9a3e8c51d93b3025",
                    "size": 65029635
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ea10d7d9d327bfb4ca95a61cb4e668de87a07942be5839dd839ca7143fdc6bb6",
                    "size": 24684122
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e8a5b99b04b04348c78e5a58c76dce3867e50fa42e8dd9626dc360bbf8a460ee",
                    "size": 235738030
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f7df2f177b44a2e2005b4ec55b8a858cbda5e29f45dc9e4a48a9e062ca755377",
                    "size": 473572
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ccbea00def3540b259a005f1c2c90250d1572f7ba372a73b27d1d36d283a0a95",
                    "size": 1009
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4ae7f2eb4854e3675353e40ff2659bd0cb4ad8f62b84af3c4ca0c676a73775b0",
                    "size": 276
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:33bb8f102326f6701edcb667749db8e64c12436822d5d6cbafd692f3b9c23dc5",
                    "size": 675
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ea631cf09da0a8baa07dd7f4fae0b2ae0d864edd451e3b9fe0a09f606ec471e7",
                    "size": 441
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b72ba030276f8b5e94ebe25c5becb2c102a22b1de358ec4b5615c36459884ca1",
                    "size": 14172107
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4d7b9d3531a7d928255a5c9811c8c6ee9ae9aa5b5c00257eba2d3f54be607edc",
                    "size": 481
                }
            ]
        },
        "37-build-20240201": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:7f569b3748ba3319e54552e989d5edd65fee69b38ae03442c157a4dd0afd3f16",
                "size": 7096
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:70ffab5718fea0e15c61500da8ee3e247dd22fd98fb4b68e9a3e8c51d93b3025",
                    "size": 65029635
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b07dc9ad4161f042b57c41653f184d49c487d2a25ed1f3e083bd47154421305e",
                    "size": 24684095
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6ea906368c368af0660bc7ed3adb6f96851178ad9d97a543d34df9390a80d6d0",
                    "size": 235742309
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:aaf30d4ff1a0d351ecd5305e3a75c7bb623991bc11cba053c6c1a3cf4d25525c",
                    "size": 473575
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1852ffb159bd58d44f3935d28de7e50d48040aafde1980f129fe8944aedf62c3",
                    "size": 1011
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:16177c442f941e7fd31cec81c36ebe39b5320d600bb2deafbf3cf5733fd57ee8",
                    "size": 278
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f6c72f0981e167d2bc0f6eb5f0f5aeb0334a78c3213f1ea35a061ee84713a6ac",
                    "size": 677
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ab4decc4699180f64e838d83d030ff2080b68dde23dac915174996f94d914428",
                    "size": 442
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a73f38565354436a506dee01ba4e3effadc7bc7084ccf25a055e5d48bcf5b474",
                    "size": 14172326
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3eb7c1139970388fa00de25989f192662a46a0f0f484405f8143aa7c0c9c6914",
                    "size": 481
                }
            ]
        },
        "37-build-20240304": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:f499f3421978fddc24a6cb354f4f65806ca9fad25af3841f0864a7be8de556bb",
                "size": 7098
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:70ffab5718fea0e15c61500da8ee3e247dd22fd98fb4b68e9a3e8c51d93b3025",
                    "size": 65029635
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9ec94aadf83b384475cb172e72990c0f1d41fa99f4665fe753d552584af4c8bc",
                    "size": 24683991
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fbbb20ee0e4b9acf95d288b1d49d16311371c4b4a33f5bea9b44f683d097687f",
                    "size": 235740019
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:008189645b0d6cdbfb836db598d2397c0274f6befae67cd8233967c2b3e2f711",
                    "size": 473575
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:676539c76824ba4388330705acd0c06c1100f841efbfd940d48f6aac1fcdfc4d",
                    "size": 1009
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bf0648e7d4e21f62042c27b1796237f3a905028ca6bf8f157cbd9101ec92549e",
                    "size": 277
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:67830ceb0a7a2cd83b237df1439d15ea7f533b19a04ddf31ea9c4348b09ce67c",
                    "size": 675
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3bbb42c18a724f71a9cd3c8bb6f12bb9b3d9684eed98477f374c503b0b2057e4",
                    "size": 442
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:653f16fc2ffd1f643931436d82b219fd83b905b2ed382643a880236096c63c0a",
                    "size": 14172100
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e569b9cfd5aa127c979687c2bc6e50a732e95c2de6ca22b0411cb871b95c3654",
                    "size": 481
                }
            ]
        },
        "37-build-20240401": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:1fa40d4c224977c96decff26af2f978452df8c01ab33d7681c914e276dba97c5",
                "size": 7078
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:70ffab5718fea0e15c61500da8ee3e247dd22fd98fb4b68e9a3e8c51d93b3025",
                    "size": 65029635
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bb8c2f17c43f3fce343073d0420d8df8f4ac9bf5a89589ed7bd7444a4c3bb7e7",
                    "size": 24684121
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c86262dc73f1e4a40fb15ad6af3d47a8a04c556ca41258ace98b3111252115a1",
                    "size": 235742726
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f20dad326e942bb6aa56b1142ba6b1e9560c8ddf08eb3d641c65be15e6510909",
                    "size": 473576
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:37f905577fd10cad38bd9f6267e3a57160672b8e6abfe4ea7176404d4409634f",
                    "size": 1012
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ad44ac894809118b3c5207c3304bebd743e973d655b3cf765c1e1725a4cb4f7b",
                    "size": 278
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a8ac9944d8f40b573194d3b8d82c873604ed9ce2a428e51ae1e27ed5999b72e3",
                    "size": 677
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ad1313dd0864a0ccaf7eb12560591c696228364b08cbd6603e2c26360358780e",
                    "size": 442
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6f32df641fa8b78d3c23fc3821d63b5a359e91f1443f26514a16d77f8a7d3b1c",
                    "size": 14172224
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d42145cc15d8bb5e6f1a940f1b338eb6ed8b37d13afbf5eefa601ac3dcb5f883",
                    "size": 482
                }
            ]
        },
        "37-build-20240408": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:ae657cd9decfa83e992ed3ac90bcdec52699172c0551db392fc8fd9ed8a19da4",
                "size": 7083
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:70ffab5718fea0e15c61500da8ee3e247dd22fd98fb4b68e9a3e8c51d93b3025",
                    "size": 65029635
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7169f8f710a41c8b32f8b1746aae6312834d62d139ea287548290b82c2067396",
                    "size": 24684035
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:29a178c8758dfe67a1e54a1b9f7634d1b8eabe0594fe835e39d6dd7d4b8857e4",
                    "size": 235741885
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5b4afa4031234f569c71a408abd91cb738367a90d7e8b3f0afef97a8f2a040f7",
                    "size": 473576
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fca1a50907f18ef7182ae0b51540a527595c0c4526400f69b581d2f570048d03",
                    "size": 1012
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a198a72639f6f3159577b2c32d8abbf77848be58982fb9d7c2584cfe7d995bb3",
                    "size": 278
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e32373cf5cb8af987ae4b4307a6845a837708d49f334832407946a373cac898f",
                    "size": 679
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ff0080399277e2005225aee8d8b3e4e509efe6fdd71182e8d99413e078a12907",
                    "size": 441
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:73dfdcf536cd4d53b05169127c3242f879e69cb0ccd714def2937ea309a5abe6",
                    "size": 14172112
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bb12700b0db29427b2b74b983d3773ef887f3fd07e809ff1c73a304c2d6cfe32",
                    "size": 482
                }
            ]
        },
        "37-build-20240429": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:94929cc5be56f1530c566acdaba266fa216e81b5231e690d8d2ca20768d3c527",
                "size": 7083
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:70ffab5718fea0e15c61500da8ee3e247dd22fd98fb4b68e9a3e8c51d93b3025",
                    "size": 65029635
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:99d5b39434fb34322d2538e726b22a180c5512e8798e40de9b79d5b3bf48d7c6",
                    "size": 24684034
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9f2f482a4ec9fffaeda8d6e747e7398460a0228f76733c47d18d78a2d657b6c4",
                    "size": 235741099
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:696a0055108af30566be19bcfa3b1503a4802898314a8686252d5bcdaedf4652",
                    "size": 473572
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5988908a8c45a73a2ef86e8625ee9f3f4e03a173592818421d9441a87b06a6ef",
                    "size": 1010
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6ef7d326faacfe723ed24ad3f84d153496f8899ec2e10c96e3b3385271a8d1a9",
                    "size": 277
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:432b4c6a90343ef5c1baefab8f80b015a59e1b0dd6244fcf3763e91b96c71298",
                    "size": 677
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f9af09aee2002f2e15926bd10005614c25881682167169cc0226af25f803b7ae",
                    "size": 442
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3aaea23821fd27f4c014bcc686d754c85bb896586c7dd6d32a19b63e7fe11640",
                    "size": 14172238
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7aac30e4d420b3abd114a09a455554cecd4957535aa668033845216e52189927",
                    "size": 482
                }
            ]
        },
        "37-run": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:2df8cad269a8ef1af556af9b86faea9f46b5ebd9dde6f350262f9ef5a6c4b046",
                "size": 6323
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:70ffab5718fea0e15c61500da8ee3e247dd22fd98fb4b68e9a3e8c51d93b3025",
                    "size": 65029635
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:091a22464e090e560c1eae70d6b60d1df293f0cc92e3455f13891ac9737589ee",
                    "size": 24684150
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4ba64e71b26acf1dcd14850f27294bf84574b0abf17704f3c7b1e1bc8924ae3e",
                    "size": 473574
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b9f588bc96c09005302be43e24375ab320fb260116256b9006a46ca1962bb2b3",
                    "size": 1010
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ec4d31d05d5223fca6a7bcc5813d36b990393626091ee48bfffc4289f851e299",
                    "size": 277
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:27a58040671a456e831f6fffd854ef45c9cba94e7bd19ad615af43b1fbfc80bf",
                    "size": 675
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9cdafbeb678e6b83255cade03b0805656a4259196b20d063b7b70aaaed64b6a4",
                    "size": 440
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:14700c5115d80cc94bb8efd0e5dafce0d0e14d1ac320eb393b48d568d41b7b20",
                    "size": 6652181
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:42d58f5cda947c98bf040363d1ab8ca0611158d2966fdf8fdd0ff7069c386f54",
                    "size": 483
                }
            ]
        },
        "37-run-20230811": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 6668,
                "digest": "sha256:3e0080a26f103363400244bebbfd0ff5d06fc24b1c0fa688b2191dd292f63970"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 66534340,
                    "digest": "sha256:e52979b1015a445d09d63bb33f41e3cf0ec020fb421106e9ec5ccd5d2d4c3eca"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 25143226,
                    "digest": "sha256:b5d988feaed8c6ffb1b33594f0927306b14c0f99130f525452e4121d05671660"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 473584,
                    "digest": "sha256:229924996900e055f10a97289223e507bd6d314b486bf12256b0033329f50b2f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1018,
                    "digest": "sha256:ad469405724f5ebfa5388db76cea2193b20d9adaf889af963441e70e14c576fb"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 283,
                    "digest": "sha256:d6dbfc5ed9adfd3e2932836372894f67ffa7ca76ff36c38e9c43b41f08883cd4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 684,
                    "digest": "sha256:844d47ca30d4b5eeeddb6e4c2f7fb345a7b0f20c96381f50a4f679e1eb5d78db"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 442,
                    "digest": "sha256:6fda4af151b097d2187f1b4f986cdf8576bc19abf3f723561851abce35431819"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 6676311,
                    "digest": "sha256:f9ade005b55026e81ad272ef4432cc1c3a8ded9378fe7695a3d5755ca22cdcbf"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 483,
                    "digest": "sha256:0b3839ca6c182efadd04760095eabef467a30eb5b3928c1743a16536c78fb905"
                }
            ]
        },
        "37-run-20230829": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 6334,
                "digest": "sha256:5f4565d6581f5891d281c149682d0d7c50538bfa5013f89e17f9386e934584f9"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 66534340,
                    "digest": "sha256:e52979b1015a445d09d63bb33f41e3cf0ec020fb421106e9ec5ccd5d2d4c3eca"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 29828162,
                    "digest": "sha256:1902a8ce6a847e43111f7f9dfc1977900620a266911b721836c2af9e1a329368"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 473575,
                    "digest": "sha256:15d2268bfe6351fb37fd09c4a96c844b9b3afef4df0b2b709d43d0b5cbdd9f85"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1014,
                    "digest": "sha256:edace452f624c13eb2f1e9aabad7820479555fcd494bbb554ef3b084971fa1f7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 281,
                    "digest": "sha256:b10ade70ae4ae5d3c0a50ef9da4e7d4e739d15bc0d402e804d3803b6fe53e36b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 681,
                    "digest": "sha256:4f63e82fbc411af7f584b337b891d38d46899790446e29bbaf2ddb0b4ce7a7b0"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 440,
                    "digest": "sha256:2c152717a8c0907343fa2824b5439d982d77dd0eec75a4d1539805c3c92df1ec"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 6712803,
                    "digest": "sha256:1c1bb3372356e9d07e9421ce1a5ecaceeaf652e2b3a7ca0e8af30b44cb8d5447"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 483,
                    "digest": "sha256:9b8cae22d6ea0568a4536163db02efc054a68250737b44955790bbc1264ac930"
                }
            ]
        },
        "37-run-20230904": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 6334,
                "digest": "sha256:a49e4b777faea57581f7794fb1fba4c77a4a3b9408a2e39fca67eef554e37377"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 66534340,
                    "digest": "sha256:e52979b1015a445d09d63bb33f41e3cf0ec020fb421106e9ec5ccd5d2d4c3eca"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 29827981,
                    "digest": "sha256:2027c0ec9d1eaf143fea0c0654e788ec5ddfe4b54b1237ee25ea8acd1779a4e1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 473575,
                    "digest": "sha256:932ac56fb601e5eb729b0dcd65650440d35f0877a391a379ef9019326ec1bfda"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1016,
                    "digest": "sha256:4bc46925606fb0a2143644f6eab1d223320935a856361f66cf71c4ed6327a87d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 282,
                    "digest": "sha256:cbf6285b20078c98c9d4a998f064c93a84f256f9971fab93d7aed699b7c9cfe0"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 681,
                    "digest": "sha256:526a6c2de7d3e79ed359f01d02dd9d48290b245403e0201a935f083484961e38"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 439,
                    "digest": "sha256:ba1d6d9da4501fb9e2d95d2f865a8f5a9e9b2e249887af30a4f30e045d518e6d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 6712831,
                    "digest": "sha256:b5cf518152d5676d7098d741ffdc5f0e3ded7508263678cd6ea700cc40e7ca57"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 482,
                    "digest": "sha256:f598a9e05c7b788f4686df2e5aa19e4c17e08f6171c27910223264761d44db6f"
                }
            ]
        },
        "37-run-20230911": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:ac459a230e16952629f00f426a26eb86b5bdc662d78ccfb6bf047690047ed2db",
                "size": 6338
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e52979b1015a445d09d63bb33f41e3cf0ec020fb421106e9ec5ccd5d2d4c3eca",
                    "size": 66534340
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2027c0ec9d1eaf143fea0c0654e788ec5ddfe4b54b1237ee25ea8acd1779a4e1",
                    "size": 29827981
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:932ac56fb601e5eb729b0dcd65650440d35f0877a391a379ef9019326ec1bfda",
                    "size": 473575
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4bc46925606fb0a2143644f6eab1d223320935a856361f66cf71c4ed6327a87d",
                    "size": 1016
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:cbf6285b20078c98c9d4a998f064c93a84f256f9971fab93d7aed699b7c9cfe0",
                    "size": 282
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:526a6c2de7d3e79ed359f01d02dd9d48290b245403e0201a935f083484961e38",
                    "size": 681
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ba1d6d9da4501fb9e2d95d2f865a8f5a9e9b2e249887af30a4f30e045d518e6d",
                    "size": 439
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d3afa241cef5b84552fd731dfdea51adbd5bc2025b2cf5f47abbb661fdcd6bc4",
                    "size": 6713345
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:34b1a68d316ad57d98ad254c7f15ffa0c09208d522a5fe4222510b80ef949c6f",
                    "size": 485
                }
            ]
        },
        "37-run-20231103": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:7e81f3dea9f9e0c1053b65578b878d939a35065876795daceafe6fd9c47337fe",
                "size": 6337
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d7a9dc132f00a11a7e4f430fbea6af388f02cd765659df6c506fd18a19f5d122",
                    "size": 66705827
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5ada43b1ff524507d6206ea840fa86ad81e3ebeb53656a3dfbb677b562d496fe",
                    "size": 45529372
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:99d1c4f4a9250399a5e4b19f0596a9b77e4df97dfd2c9c428aaf33fea1b8e259",
                    "size": 473572
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:224c775941ceda556a1680d4766d17e235b32e87de039485392edbb477b49826",
                    "size": 1009
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b10b18389bc121e92a8a5d45e3b53384aca887ea2c9e760164263e1d508f85e9",
                    "size": 276
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:536070598d62154a96c0128dde03ef3bf31cb77f5963fe38cd880e73738ef7c6",
                    "size": 673
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b1a23b40bbc5c0275715045634db9bbf15671432b6af39249bfa447ce6c6a8fd",
                    "size": 440
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b14404e368d6132724d927b460202e4896d864fde9491d5ddf81ba1cf2b6d984",
                    "size": 6840828
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ca4bd3b455a00fe6c62a2e8e656fe2411eea0770be37e9e0a3d2be15170c1381",
                    "size": 482
                }
            ]
        },
        "37-run-20231204": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:339472f7ed9411cdcf32e0386a7cccfe5303911bca18692b13b23e0edcd582d5",
                "size": 6338
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:70ffab5718fea0e15c61500da8ee3e247dd22fd98fb4b68e9a3e8c51d93b3025",
                    "size": 65029635
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2a5fe1a5c0b663c9895380594f812eb9f5c468f54914da91117101953bcf54ae",
                    "size": 24684016
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:db32e5fb93909460197b968d8142f7a5c6e03e121a5707005994ebdf021f66b4",
                    "size": 473571
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:cbc51047542634ba656c4e6e10885f1d105e5b62cf3cf5531f9d9fa6d06f3541",
                    "size": 1011
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8963d0019942b1d1cf04b7d5cda9c8c932e870c0e1af9f08c77303d2124fb414",
                    "size": 277
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d9f0c460ef282741fd09c81698beb08d7df875305ac7edd764e9933d7a943214",
                    "size": 675
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3d09ccdede5a88c85693ce88f72a94ce0ee7cddd8bdadf6254fe1a032e393c8d",
                    "size": 440
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9e2c7a515b3d425f253c3ae68e2a8f1326fd34cf8d1914a1a0f3187887f186cf",
                    "size": 6652007
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d40889ab8a9ba5cbab7db533033ebf17b8cbabe549f5ab64712b4a713e15fb43",
                    "size": 483
                }
            ]
        },
        "37-run-20240105": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:28d87dc2c9a17131eb07b0ff8c52fbaab24a11f3fc5cce91afebaf16cf5226a4",
                "size": 6330
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:70ffab5718fea0e15c61500da8ee3e247dd22fd98fb4b68e9a3e8c51d93b3025",
                    "size": 65029635
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0d3256139a64a3c44feeaa1473c4c599f751fae9bc8cbaea8f9f7ed7398d1215",
                    "size": 24684374
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5dfa1b3659b84cf09fc16657ede421ac2e35903f3f4fd35dfbf5994fdbd72f44",
                    "size": 473566
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:65cee28720a254f44a00edb4422823c83ae198b6e9f1e5060e82c79fc9f0f87d",
                    "size": 1008
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a9f57c40b274a0c0a0788c1491ae6edf9c77c9abb6197bf811ed6f89c8e61693",
                    "size": 276
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:837ebc5139523a61c619d4b3b910c050be8140c230a9939cb31890d538c888e2",
                    "size": 676
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b2c14d398150cadcf6f3ab8fe8c47af020fb8eee5ee44664cdcc169a0ece1ebe",
                    "size": 441
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6b71675a99070f9090dc37011c2e4a94abfe9efb22c72f5b11b20af4b58c89a5",
                    "size": 6651803
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f7cc0f1bcd59ee27297f710196fa6407644572a5851a75d5eab0bf86a35fc9e0",
                    "size": 481
                }
            ]
        },
        "37-run-20240201": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:8ad7251887276b85b38e7c41a32bf9859b04b21c40ab89c8cd21a43ec6e6f6ba",
                "size": 6338
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:70ffab5718fea0e15c61500da8ee3e247dd22fd98fb4b68e9a3e8c51d93b3025",
                    "size": 65029635
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6266aa16a1076eb200a9e5a1e34760a495e98c4b60db8ede2e49f38f14efd088",
                    "size": 24684233
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a144d60c01b9290d646d9f6122fda2fddc46f7625a951b0d7308b9e1a942de3c",
                    "size": 473575
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3d491f49152e07ce118454d93dc61580c637dc6ef3925adb864607a33d85f75d",
                    "size": 1008
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:198d30920974d977acffa25d34654824de8398360967c01ba8b948b0ad0d7078",
                    "size": 276
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0b0b47a23a7e4de767dd3ad900c6938231064a5fc47b9695869bdc71103fe3e4",
                    "size": 675
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ed2038c1e6d60199c2d8ec7b71ad0fb573577356081ce001d986db0347fc6deb",
                    "size": 440
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:660d289308631b655c09bf0d492b9b2752f88a46acfdc876b1d2c1a05d469ff5",
                    "size": 6652200
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:74ad52721bc115260813c961ab5efbb3f7f3b5f6ad2199b5f3b6ac0195631a25",
                    "size": 483
                }
            ]
        },
        "37-run-20240304": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:0f839391e4af99e40462c3b63fb2a17ebeb3f3c187f8b524809e840f7d3011fd",
                "size": 6335
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:70ffab5718fea0e15c61500da8ee3e247dd22fd98fb4b68e9a3e8c51d93b3025",
                    "size": 65029635
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2ac36a055edb8d7d1c23892fe15e1c3b434ed33df4c847f5f0ced1d217b46a38",
                    "size": 24684028
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d6eff4af478365690d81212799d67c21ca6324307b003f66a1fc66e56f761ea4",
                    "size": 473575
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9c6eb8f233ceab952e59f4a2e73ac8a1e5ebd9ccda01de859cf5fe9f5b653f3b",
                    "size": 1009
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:984090a6409d23b040a2c91770c17a5d7e8e32d5cfbd650d9e252c14f1e2f00f",
                    "size": 276
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b3a692e0adc91ae241cd75e0d5c7a6040cd1ef100c4c1cf693252d6e420405fb",
                    "size": 675
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e45bed57f628036e05c35a8cefc91e7f65cd46138aeaa05670d876b8ede0ac54",
                    "size": 440
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e022de268281e2c32762dfd2063689fed595eae38a60a47f8142f584f2873e09",
                    "size": 6651920
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2882aad611c2a4d61ec2329d8b416ae53762716fa36f49338373a2464f9dc7c1",
                    "size": 483
                }
            ]
        },
        "37-run-20240401": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:1e79788f1873482ac6f05e698c3e61b3034a6bd5cb5c70233f8617557b8392a1",
                "size": 6322
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:70ffab5718fea0e15c61500da8ee3e247dd22fd98fb4b68e9a3e8c51d93b3025",
                    "size": 65029635
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e10e4914a91a46180b1e9e654fe81b3ef80f31cc2f55ca0109b719c9b1afee7a",
                    "size": 24684229
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:58491e471b68e66954c33badd9727bb06ef76a98df99be31c2216ce2c32d15da",
                    "size": 473577
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5cfae6112c9f1e79a2e41a9f4648604e5fc6f36360177223d03ff7045feae769",
                    "size": 1010
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:16f6d5314211f95032497ce5520a9d14c05925a99c61d2447874e58d3094bb60",
                    "size": 277
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:cd1464be263a2f42dfc9b396d9270800d62ace69d274af0cf37f54bfc85ae4b7",
                    "size": 677
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3fb537258e1f64889b58e323ca14433d2712bd695b7e037d20be09977e3a2603",
                    "size": 441
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:29d6e4390b60aa2479d1e79a54f323e7445269df3960e09c9fefc8abb888d59e",
                    "size": 6652083
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d55c093a44c8f9d5f63da0032695dc6990e9ee938605a1e2c112594d18effc83",
                    "size": 483
                }
            ]
        },
        "37-run-20240408": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:3d6465bc79aeadfcfd2e305ee0649cb5f2901274d2608ee7d6ed0e67d5060ec2",
                "size": 6323
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:70ffab5718fea0e15c61500da8ee3e247dd22fd98fb4b68e9a3e8c51d93b3025",
                    "size": 65029635
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:810cc0af2123a5b710b00a510661c42dd9f042defb921024e63e96104d1787ad",
                    "size": 24684051
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2ed67df3c24006c7aa570de04fe83e2f65ac30ec2fdc74544d06830f9c8836bc",
                    "size": 473572
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3075ffd7d64ed2d4116e67e62ebca6e1b242b6ba3d3519b07231fd013ec8f50a",
                    "size": 1012
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0a872d328eeb19a10571d3bf6b7028e43313ea99279cd463cdadd4c2672b722d",
                    "size": 278
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fd686a5a44e1bde50a09640df89523e5534773f9249b819c3761a9061374edd7",
                    "size": 678
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:69290262a3b92a42acde4fb0506ca6c4c7f7f06957e1cc5ab25a6c5e89078bbc",
                    "size": 440
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e3c8db67ee890f75231ca3ec266708cab4718cb55d929ff12037be55e7d59fdc",
                    "size": 6652032
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a848b7ca14b13162fa608e690095241372e490c1727c7038b28c82696fe478a4",
                    "size": 483
                }
            ]
        },
        "37-run-20240429": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:2df8cad269a8ef1af556af9b86faea9f46b5ebd9dde6f350262f9ef5a6c4b046",
                "size": 6323
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:70ffab5718fea0e15c61500da8ee3e247dd22fd98fb4b68e9a3e8c51d93b3025",
                    "size": 65029635
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:091a22464e090e560c1eae70d6b60d1df293f0cc92e3455f13891ac9737589ee",
                    "size": 24684150
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4ba64e71b26acf1dcd14850f27294bf84574b0abf17704f3c7b1e1bc8924ae3e",
                    "size": 473574
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b9f588bc96c09005302be43e24375ab320fb260116256b9006a46ca1962bb2b3",
                    "size": 1010
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ec4d31d05d5223fca6a7bcc5813d36b990393626091ee48bfffc4289f851e299",
                    "size": 277
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:27a58040671a456e831f6fffd854ef45c9cba94e7bd19ad615af43b1fbfc80bf",
                    "size": 675
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9cdafbeb678e6b83255cade03b0805656a4259196b20d063b7b70aaaed64b6a4",
                    "size": 440
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:14700c5115d80cc94bb8efd0e5dafce0d0e14d1ac320eb393b48d568d41b7b20",
                    "size": 6652181
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:42d58f5cda947c98bf040363d1ab8ca0611158d2966fdf8fdd0ff7069c386f54",
                    "size": 483
                }
            ]
        },
        "38": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:b66c0d1d1c848437abe4de9ea45d3a2c8d7798ecac9004756a0fa11f26a027b8",
                "size": 6323
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:633a2a041c85d22a814d80c8fd43a885066522afeea82db646cff81983f3dbaf",
                    "size": 66970486
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2ec501b11b419ba7c8a4e62761ac819b075b794d35a687d19c2ed9861c59a1e3",
                    "size": 24651613
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:221d552a6b8f4c1309ed6a8b7aa9b321a44f6b9ec69a2fbed04665c7b8c3dee6",
                    "size": 473571
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:48ec1a409967103d902c0f7f049efb4e4069a4d4ca8327abdf0dd5b0dd21998f",
                    "size": 1010
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8bd23a94d305b836ddf22b83bbe96fb6f0ebbbd08a7c210ad992be5c33d84321",
                    "size": 276
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:107363a2834eeb90d70c4c3f8f572b7bb7cdfddc2feb2f5265fba07f5dc0dc99",
                    "size": 674
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b51244d223dce8c556e00c7cfb9c5a3e671cf94ac86e863c85b3eb8cfd7c20b6",
                    "size": 441
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0a94b5dd8b5a06e6e3146a480a7d5d858358075e1c2104abc0cc11ed7ca90223",
                    "size": 6937043
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1685dc35bccb425a473c032206ba657bc883d03f8db2db5cc35ad93b2f7f6218",
                    "size": 482
                }
            ]
        },
        "38-20230811": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 6670,
                "digest": "sha256:c0940bb3221324057288125f4064df19a8af2276ae894c3d609030d029de796a"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 68440765,
                    "digest": "sha256:deb9cd9f829fea30353f8c711013769a0cacbfa6963532841501df300f8f54e6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 25387763,
                    "digest": "sha256:ce53412f7f9256b86a3322bb9c77fbbbe8c31ec9677f6b0369ea493df1fc3fa1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 473584,
                    "digest": "sha256:2d12b9b2fb47edaea20a01080c55aa9c8b5e349de4f6019ce75965f98ee1099b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1018,
                    "digest": "sha256:c0bc2fec0ee1357653d3d5d43708670c3a486da3d8ed74a5d8fb4a05e671e811"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 283,
                    "digest": "sha256:8546b989b58a19f9f647bf85d4f81adaf1c383288ba89ee14b9f22b3b35ded5e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 683,
                    "digest": "sha256:5f02cf357bc9dbc2b9dd91032b36ede26342abead7582c6f787ac9c03214b537"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 441,
                    "digest": "sha256:3081fdf25336da0734638161f12f59cf7e4bec496f02244170f8716dc07adaf2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 6942126,
                    "digest": "sha256:bbc49683103f0b5ba2f3c382c387aab381b2d5d05723b031082c82a9917d2b1f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 481,
                    "digest": "sha256:4210d5d79bf099ccc5c57927206da82d05e52e6276334303d58fb71915bdf07c"
                }
            ]
        },
        "38-20230829": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 6328,
                "digest": "sha256:bf9ce7fbfc47da3ebb816d7dc8bafece87e771467f1d5b2c36107582cf435e1f"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 68440765,
                    "digest": "sha256:deb9cd9f829fea30353f8c711013769a0cacbfa6963532841501df300f8f54e6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 27643339,
                    "digest": "sha256:33dcdb2e5de5fead93b70e75367e4324d7901b6e4d7645e291b4567d13978f5c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 473575,
                    "digest": "sha256:a7cae922c7d86d60b8b8353ab11580c7b065fcab92bde2166fe0f8ed91788621"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1015,
                    "digest": "sha256:720acd01e8414eb1281c723d4e2d453a3a2a92c62d92ed1982fa3c62d2e21951"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 282,
                    "digest": "sha256:c2a54576905eac6e5874e288956c798ef1e91d8ed061709b74e7d3fefe9c1608"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 682,
                    "digest": "sha256:3e961670aa9dd02f54a5035b74acfb7683f17b6f0b0ab806764f49121c96cd8b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 441,
                    "digest": "sha256:1f14551331c016b38e59cd68cf53f8bd4fe9b515aabbc26e998f92347e20f1b5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 6950732,
                    "digest": "sha256:871cb2a5217286ca4179507012df27c33de743c8b57ba50b5faf804fe4ed128f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 482,
                    "digest": "sha256:e4211ac7f30e8db3afe1850a43ca0cf8965e377d47ed0544d5d6ef76c5724a3f"
                }
            ]
        },
        "38-20230904": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 6332,
                "digest": "sha256:1098b9e68eac9545bba8174edc3d8de074b6a56cb8b86f3805d200c58ee72ee0"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 68440765,
                    "digest": "sha256:deb9cd9f829fea30353f8c711013769a0cacbfa6963532841501df300f8f54e6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 29400587,
                    "digest": "sha256:f7bae61e9d8ac2f2969379f98e6329cee9d7e01d1d0968e1b09b5347074cf712"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 473572,
                    "digest": "sha256:5f39f24cefc4f8e09dcd813424f3351a37531e417a9207e42d381725b5d07e70"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1016,
                    "digest": "sha256:1d57721b9ea9fc39e89825ba1c7d51cde1d9636c12889be2373f7a5cf6e96f64"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 282,
                    "digest": "sha256:f1d6686ef536a2cf79fd172a2d1f777ec1c9671474c565b4101822df6dfb09e0"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 681,
                    "digest": "sha256:a685647649e42ee3cb0d0c88aaf8b4f28793ef427b94564d306e5a607e533d0c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 440,
                    "digest": "sha256:c99876cdf0fb49a9a8c7619b0cd2d49a6830335ebab3640c06cd214d15c7068f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 6956466,
                    "digest": "sha256:fe9c3f2caee878cab2117797086ce69747c40af36baee2d44f71affb547275a3"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 483,
                    "digest": "sha256:d5c6eadbd58d060673bc1d46f4709d68b51de7f34f2d73f94fa69712e3d2603b"
                }
            ]
        },
        "38-20230911": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:cd4cd33e35bc769b8a5c9f7cebc58dbadb7814c572c593cef8510066816bac67",
                "size": 6336
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:deb9cd9f829fea30353f8c711013769a0cacbfa6963532841501df300f8f54e6",
                    "size": 68440765
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f7bae61e9d8ac2f2969379f98e6329cee9d7e01d1d0968e1b09b5347074cf712",
                    "size": 29400587
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5f39f24cefc4f8e09dcd813424f3351a37531e417a9207e42d381725b5d07e70",
                    "size": 473572
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1d57721b9ea9fc39e89825ba1c7d51cde1d9636c12889be2373f7a5cf6e96f64",
                    "size": 1016
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f1d6686ef536a2cf79fd172a2d1f777ec1c9671474c565b4101822df6dfb09e0",
                    "size": 282
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a685647649e42ee3cb0d0c88aaf8b4f28793ef427b94564d306e5a607e533d0c",
                    "size": 681
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c99876cdf0fb49a9a8c7619b0cd2d49a6830335ebab3640c06cd214d15c7068f",
                    "size": 440
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:945a3dc737efe36119f766968f2e741cff88675c1d98c2b9a18021a6e8634dd9",
                    "size": 6956824
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d0b4474a4561e3c0d51547aa9fc8985228a8a568ed75fc960ab67e5958b2e796",
                    "size": 485
                }
            ]
        },
        "38-20231103": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:d903372e574acbf525dc2be530c9c0e1570e66acd2aeb517ea5e370e9fba557c",
                "size": 6338
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:315d8c5c1d7b9910a2f6a898d3978aa4fb1cec860ee7269702a86c538ecc1f56",
                    "size": 68537580
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1cd805c5ce0df170b0ff5799f5ca45435458db94b3127bcc29ac66894fe79c01",
                    "size": 48665073
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:52d64bf7058e38a38991d3d13f6107f6a0cd83714d97f1126ba6af8320729965",
                    "size": 473575
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:40d9fb8036b5c563d4515f77b47d762eb91194e24aafeb7ccc425eecfef0ae28",
                    "size": 1009
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:52c2b0ffd2a84262b6c10f1097728ebc449892935f821be327307c603c21b609",
                    "size": 276
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f42ca9ffac3e61e3a470c8ce731f6ce4315c8815b185c7b07561d8b3b4aa5e83",
                    "size": 675
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:50b794fad49c7838d8c7eba2b8791631a70a9301680bd0aea02b282208111ea6",
                    "size": 440
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7c2cadb1622d8adf26433aa153239656c6038ef45825d098519b5f805da19031",
                    "size": 7045472
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b22982304c3b2ab4d5944042298288f5e043bdf5648b7a3c9f155484b0c1b9c8",
                    "size": 482
                }
            ]
        },
        "38-20231204": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:ef2f662b5e0a45cb72466ad8a76ac87dd5c3cf124ff2869af4d941e8995a5efb",
                "size": 6337
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3e7ebcee8f49721f108df55fe82f00c02578eaed9d54e379d4080cb3c81e74db",
                    "size": 66865675
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ca05c242db83addda0f004f5f2d8c3dcb969640129b0bcc60b0e336028dc6a7c",
                    "size": 25164237
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a1dec9b5c2607c6029a7b78678d7dae7f931d4be1d448f313879be4ed5b7f889",
                    "size": 473570
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:11ed13392d118c03e133c0cd4f43dd9277d104fa8819448d0fa4393d76a1f485",
                    "size": 1009
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0098472338f67b4b088c788cd5e1b03788bc04cba314554230231b187e4f1d34",
                    "size": 276
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:77f98631c3b507e2cfba20cecf8a35342f2d9f13b11757c97ffd60806ca56c0e",
                    "size": 677
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:675b9ba8ea03a837e38cf5739fcf5c4fface89fcdf021cb9ecb7d1b0db04a4e4",
                    "size": 440
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:70c6d623950bac6990d193e2508f28c1f3c64c9764a583840e228436dbd428ae",
                    "size": 6903507
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3444513fa74f6887bc9739dcb69754d9a614a1a690bf7affc3435aedf39f06cd",
                    "size": 482
                }
            ]
        },
        "38-20240105": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:f398c8bfe8dbff856cd51b570cd0cab660d2178880451d148ed2a8d9076d3141",
                "size": 6336
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3e7ebcee8f49721f108df55fe82f00c02578eaed9d54e379d4080cb3c81e74db",
                    "size": 66865675
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8457fa2eeaf51da34fdb2329381b7fae177ad0d179f8d81fb55aa441ab82fb55",
                    "size": 47177942
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bd1cb4e3ee6d52fc195608b87c80d07ecb8e949ab03e01987ea61bf1cf80eb4c",
                    "size": 473569
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d6604e31c553ba54d02d96a7c5c56e0691bd2ac615d77a984ff14ce176e6355c",
                    "size": 1009
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b5a30d69d8e56755315a26beeff86631f7bf3bb16cb0f301887777df5bdea17d",
                    "size": 276
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8a2617f11a5b04a3f4ee2f5686489b65aff9c6a9ebe05b699600a553fefe26eb",
                    "size": 674
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:387f104185a597fee0124f56ce0ec113634e0024b149493ad3f3cd7b850dcfe2",
                    "size": 441
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fb1c2a763285ff6f42afa80bd1c0b29d52c9df2bb2d003e1833ac931a0533144",
                    "size": 7007397
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0e238efba4c6ef546bb98ed26cddbc5680a10df3696975b6034e90cbf6cbba38",
                    "size": 481
                }
            ]
        },
        "38-20240201": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:f5068bfa772e36831aa865948ae53f0b09f6c5d29a8dc7b673bdee20dbaffd74",
                "size": 6338
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3e7ebcee8f49721f108df55fe82f00c02578eaed9d54e379d4080cb3c81e74db",
                    "size": 66865675
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:50f93414a50501d122410c6d84a88295606a21ccaec8c7900c7f4a5a2b4257ee",
                    "size": 49783989
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2483810aafd1efb6cae93c26d1711e9e46134abb72fe9277312ac6c7aebb2708",
                    "size": 473572
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:61f8a8f9d5731c9ba155b49f784b594b16bb036fce3b204a5d4c43747b3921ee",
                    "size": 1008
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1d7cf8757bedfd583773d3dfd4a791e0af75bb7f619155dd54f2c956ff44bb8b",
                    "size": 276
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:59a09ac7d7067b4cfa97648c889f2ccaac24d5591d7d758046cda828e7283be7",
                    "size": 677
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:44c697f96de5af09fbf6a56fab35325898137e4f83e475d8d83372654691ade2",
                    "size": 440
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8c4ddd9bc14c87e28f8f63e51d47968bbaddffe9c952a5ccad117b1fdec73dd8",
                    "size": 7358802
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e9a97afd30168df55e98019f54514f189033544f3d80cf4b7c8315f788c465c4",
                    "size": 483
                }
            ]
        },
        "38-20240304": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:b3a15f2da1a2ea3f5cb09527be40822ae5df5c4efc9d3d68422293bfc854a97f",
                "size": 6336
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:81506d6a09b0030e30959de0c69b234989eefc730fc69a997802e518780468b6",
                    "size": 66902418
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:853cdca42be7a8fffe261495c7315dfb9e2674b6447a15d4d6684e8aac44a49f",
                    "size": 38822527
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:52268d2b867615e6e716e275da541518b77ed4ed886a75774735f202ccefbfde",
                    "size": 473575
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:de9bcc09dfaae3dd93aec6643f38579b58d85221f05b67ed793669482271afd5",
                    "size": 1011
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:46beb8b6410bbd935b1fff175d8cde61233a997f0a5bd7ec3df94b06d65afc82",
                    "size": 278
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:23dec449b68440d93bbe3d291523243a4d141a1f073989e692b4cf6cd7f74f98",
                    "size": 678
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:49fda0ce363b14f699bd6fe537a65ca532cec31379cab4477ecc657d694d634a",
                    "size": 440
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ad3526eeb51527311ea5bad56db41e40ad3acc0dc8e96202d00f8b4d5276e643",
                    "size": 6966137
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4a264544b347ecaa063465a704893d72ac6a1e445949199d1028ed735de98319",
                    "size": 482
                }
            ]
        },
        "38-20240401": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:a1db5d4fff812c68786882ff5c2676670238f78830597ce324efb86892483b87",
                "size": 6322
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:81506d6a09b0030e30959de0c69b234989eefc730fc69a997802e518780468b6",
                    "size": 66902418
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8d43d51f1a41c7477be1d70eb1b80468e756e96849bb0ce21cb95ceac447fd64",
                    "size": 44006071
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a2ed0ed33927383135e5e68e1e86f03eed4aa11fcdd3c3c890f1891b095578af",
                    "size": 473576
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b9f8e4ab2fe0baab06d6651320364937bfd6a2ef06cd83cf572106e5716d4729",
                    "size": 1009
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3b7163dcee376656ee166156e57a654175790d8133070ef0c209c6c868acbff8",
                    "size": 276
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:318396adf3fb9c92e27f4a704e5e2881d8e9b52d811e8dbe1bdb9d11ae277bc3",
                    "size": 674
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:49b43abcc5c19baad6b966c5acbbb09612fd022aeeef5d2f38180469796c54b7",
                    "size": 440
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:56aaff8a0f970c65bd04732aff7eb9f7c619c7a483c6706ee5f1c4dfec8286b6",
                    "size": 7023670
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:66ff1c50ad15f79665cca34b8d3b7bdfe3c500536d6d4ff07b5f4df123887956",
                    "size": 481
                }
            ]
        },
        "38-20240408": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:af2798e52f10fe1f297b38b7e9bab4ca56db658951ca8aeffd5d2868c1599fca",
                "size": 6322
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:81506d6a09b0030e30959de0c69b234989eefc730fc69a997802e518780468b6",
                    "size": 66902418
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4dba619e0146286a5aaa3874c3784b843d8090856a7632ae2c84271f665e5dae",
                    "size": 44099873
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5432924788d26e310d2d617d234f02660a388b0654ae24317d90120c2b67181e",
                    "size": 473575
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3e1134b619d79e1fcbe6c8b73f3cf00601dae690371a13816c667096c0f78832",
                    "size": 1011
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f7abf0dde09733197030962d5b76fe6389fcca17708fae0cfc8d7cd5b44fcfcc",
                    "size": 278
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fc026638b374954a486a475355b4c4c9affe5cc903d237f6f076c46777efeafd",
                    "size": 677
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:752263ef7b1d7b65da5cae41cd13b25dbf376ce4603bf36c48dfa32a1ede8df7",
                    "size": 440
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:db72f89d21ea5103d6e93bb0794e47395e143847c486b995233973c7f88c109a",
                    "size": 7033996
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8717982d4b6904496f448a043f145ee7a11e192b8783f6982f9b934d2a87468f",
                    "size": 481
                }
            ]
        },
        "38-20240429": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:b66c0d1d1c848437abe4de9ea45d3a2c8d7798ecac9004756a0fa11f26a027b8",
                "size": 6323
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:633a2a041c85d22a814d80c8fd43a885066522afeea82db646cff81983f3dbaf",
                    "size": 66970486
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2ec501b11b419ba7c8a4e62761ac819b075b794d35a687d19c2ed9861c59a1e3",
                    "size": 24651613
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:221d552a6b8f4c1309ed6a8b7aa9b321a44f6b9ec69a2fbed04665c7b8c3dee6",
                    "size": 473571
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:48ec1a409967103d902c0f7f049efb4e4069a4d4ca8327abdf0dd5b0dd21998f",
                    "size": 1010
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8bd23a94d305b836ddf22b83bbe96fb6f0ebbbd08a7c210ad992be5c33d84321",
                    "size": 276
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:107363a2834eeb90d70c4c3f8f572b7bb7cdfddc2feb2f5265fba07f5dc0dc99",
                    "size": 674
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b51244d223dce8c556e00c7cfb9c5a3e671cf94ac86e863c85b3eb8cfd7c20b6",
                    "size": 441
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0a94b5dd8b5a06e6e3146a480a7d5d858358075e1c2104abc0cc11ed7ca90223",
                    "size": 6937043
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1685dc35bccb425a473c032206ba657bc883d03f8db2db5cc35ad93b2f7f6218",
                    "size": 482
                }
            ]
        },
        "38-build": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:d1498ed7f0816f849cbccb4e70c4674c648d63e54b6fc78cbe3dadeeddb02b16",
                "size": 7078
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:633a2a041c85d22a814d80c8fd43a885066522afeea82db646cff81983f3dbaf",
                    "size": 66970486
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6f6aefc4105886f3e4009dd84c7a6d16c20f75d2bac6fd89883997699c719c83",
                    "size": 24651574
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:595eee21de503ac1c3d18f61907d9f600dc3483953b12a2d117bf7d20070957e",
                    "size": 239543883
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:dff7ade51b124261d4218f0e4c6cde70cf5ac2875bbccc8b2d68890327ebac38",
                    "size": 473570
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:13452420b7f150e866221b609e4d0f06b4dcdf4a1a13006835dfddb55efe4bfe",
                    "size": 1010
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3545085024a1384932610959e54fd5a51df42bf121aeee674a0bbdf97bdb37cd",
                    "size": 276
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:570fb7a244582fbf1860dd269d8b78090339730b5e196cf07fe89bd96c867d36",
                    "size": 675
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f0f8f7967ace8e4925d98943cfef464584153dfe5e9217c2cc45ebea81f19cb7",
                    "size": 442
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:29516453335dfc6536d91eb314e0f4f8a8de4d41b2f4b672a3111e71e36aa43f",
                    "size": 15252690
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5211834e84eb43cc93ad20fb4cc55297c7cbea3841c56d55f80d9baaef1fdb36",
                    "size": 483
                }
            ]
        },
        "38-build-20230811": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 7430,
                "digest": "sha256:0c0bd48281821713949d6824ebdf04eafde281935b214dc47d4d7b4435d29c06"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 68440765,
                    "digest": "sha256:deb9cd9f829fea30353f8c711013769a0cacbfa6963532841501df300f8f54e6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 25387763,
                    "digest": "sha256:ce53412f7f9256b86a3322bb9c77fbbbe8c31ec9677f6b0369ea493df1fc3fa1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 238551663,
                    "digest": "sha256:1f130fe1d81f847a7e8fed49426d8a95090e9af48e41fb2188c29cc08a0b5a8b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 473581,
                    "digest": "sha256:1c3d471c126d80da3f688cda3117ed39c1d98f31f2ed1018b62d1fb7cca37721"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1017,
                    "digest": "sha256:60b7e5a76ac25f2553b9c34643ec33b8c6f621cf1d481f5cb1c15859714fec10"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 283,
                    "digest": "sha256:1720328e1d0c09a9919d55114367123a432d586674a9737df5cf2a0dcbd9f88f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 683,
                    "digest": "sha256:ed96bcec3bae304af9d1b3e9a1f2391632de748032787a661af59abe3bc4db6b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 442,
                    "digest": "sha256:3cbaa2d54f68c0cd6ce32196c27ac1728593fe90779045ff3a1e68b31c3b3697"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 15130377,
                    "digest": "sha256:fa2c9ac16dfc55f7e601bb418d29710b960002b4c83f23d4f614187a4706939b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 480,
                    "digest": "sha256:ed676ded0ad5f34a22c332aed517e6620b0c5215ed43de142859bc03dd456e64"
                }
            ]
        },
        "38-build-20230829": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 7086,
                "digest": "sha256:751832aca7e786997fbb29f68f34b43e9df279046c66f0d52623f6105134fc14"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 68440765,
                    "digest": "sha256:deb9cd9f829fea30353f8c711013769a0cacbfa6963532841501df300f8f54e6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 27643339,
                    "digest": "sha256:33dcdb2e5de5fead93b70e75367e4324d7901b6e4d7645e291b4567d13978f5c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 240590259,
                    "digest": "sha256:2f791f4613df43333fa1cf3f9bbb81c9dd765c19bdbc437e1968e7226b3fa68f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 473574,
                    "digest": "sha256:543b425cd92384ad608a98af1ccad028ba4dbb28b816f283e0c8e4759b4931a3"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1015,
                    "digest": "sha256:31c14949b783e600c50d6d19ad758b645c8bbd5e4bc6d2466b8d4e14706dbf6c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 282,
                    "digest": "sha256:6ddfb1acfc1f5f2f545c80f90a689ad8fa22eb439797fadce6eb602727f8732b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 682,
                    "digest": "sha256:5d27dab37d3a15f85cad39179f6cbb4a967183c85aa2a0affcf4ea41df46884f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 442,
                    "digest": "sha256:57f07ae2b584e42a28ce2c5445112075578a489402497c31344c3a8bf88fdcc7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 15128261,
                    "digest": "sha256:98b025754361c28f6b77430ff2ba01202702d9729a9135d3d1e73024d2c7c5ab"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 483,
                    "digest": "sha256:7218383b40119fc5cfb7ec62602350f92398a9cdd91bdb4366761d1871beb75b"
                }
            ]
        },
        "38-build-20230904": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 7091,
                "digest": "sha256:f8104ab5f3a3f97635783e2142b5d31e4d5714075626cc642e8864a5aa33e47a"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 68440765,
                    "digest": "sha256:deb9cd9f829fea30353f8c711013769a0cacbfa6963532841501df300f8f54e6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 29400587,
                    "digest": "sha256:f7bae61e9d8ac2f2969379f98e6329cee9d7e01d1d0968e1b09b5347074cf712"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 240605903,
                    "digest": "sha256:09f012eb692b33cf31c51dcbcaf49703f7463c360d4851cdffc6c59195356017"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 473575,
                    "digest": "sha256:e18fffd1eac1c9c0e9601ebfb7c759698f43abf3f31daf8be731bb075051af21"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1016,
                    "digest": "sha256:6682b9ff801c152fd045bea37f261c1683d1374a41d93ce14df1963e38515a44"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 282,
                    "digest": "sha256:5b6332f7a2f57a185a37166f83117d9fc2f3450a065dab0f44e56131e3fd56d5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 682,
                    "digest": "sha256:8354a5dde2898823309286b4da33e391562e3ded6a73e0d83fb38077b8aa5d36"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 441,
                    "digest": "sha256:c7741b3a4f44701bb11c30a58df310c28d7b974f84f66485d48d6b0af1826b78"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 15126740,
                    "digest": "sha256:0a7dff00153b602f757288f85add28efae95d73717077dba89caa6247912118b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 482,
                    "digest": "sha256:cc33ee2527e49e18dd44f563cf2ffe72bc2786ee19dd05165e7ea1bfaf5eed7b"
                }
            ]
        },
        "38-build-20230911": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:0fb3024e3ca10b23c9859ad1f35732a79537bdc70c20dddb4383e6fa94556312",
                "size": 7095
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:deb9cd9f829fea30353f8c711013769a0cacbfa6963532841501df300f8f54e6",
                    "size": 68440765
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f7bae61e9d8ac2f2969379f98e6329cee9d7e01d1d0968e1b09b5347074cf712",
                    "size": 29400587
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:09f012eb692b33cf31c51dcbcaf49703f7463c360d4851cdffc6c59195356017",
                    "size": 240605903
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e18fffd1eac1c9c0e9601ebfb7c759698f43abf3f31daf8be731bb075051af21",
                    "size": 473575
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6682b9ff801c152fd045bea37f261c1683d1374a41d93ce14df1963e38515a44",
                    "size": 1016
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5b6332f7a2f57a185a37166f83117d9fc2f3450a065dab0f44e56131e3fd56d5",
                    "size": 282
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8354a5dde2898823309286b4da33e391562e3ded6a73e0d83fb38077b8aa5d36",
                    "size": 682
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c7741b3a4f44701bb11c30a58df310c28d7b974f84f66485d48d6b0af1826b78",
                    "size": 441
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7e64bf9b143fb775ac7d8b57f8feafdb0dc88e5aadeeb19bddfd2b0b8cdd1674",
                    "size": 15126883
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2f3c005063217293a009247b394126e57ab9782d838cece1d860de7342d208e0",
                    "size": 483
                }
            ]
        },
        "38-build-20231103": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:659bf49d147519f169e5b27548989ff5088fe8d4dd1761e652dd96ee09e82a1a",
                "size": 7096
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:315d8c5c1d7b9910a2f6a898d3978aa4fb1cec860ee7269702a86c538ecc1f56",
                    "size": 68537580
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0d3647a6e597f748f2fcbb3a9b9451399b2c11324363603130f588ae0d65e657",
                    "size": 48664541
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9246915212742701b19285495a8b22fb052cb72e2ad12ef297f604a20465f138",
                    "size": 238453522
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f4be446a9cc24f7a4ad06e76a92daafcc8545ed60bf93885b4e1148467e3e553",
                    "size": 473572
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1f62d061e8f7f2f7ad20e8ff185dac37a9566f971e948194684f520aabaec848",
                    "size": 1009
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8d65e4145b85467bb9e42cfcc54eac056a6e6107724bfc77e0acc7f30df5ec7e",
                    "size": 277
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a31f96f1873982ce3f28d58815fe4f4027a2ce5da42e6fe3f493593d90829dc5",
                    "size": 675
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6871bf14aee4aa4402d139f1dfe95ce289dac6682a476b50484f815f2a3d2b42",
                    "size": 442
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c614614008ef567cda331995ca71aab82811e48979472805abf20213efc73df7",
                    "size": 15156826
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:985a624ade1def949c8312ac430ae910a1e8c3e8802aae50198b494a3e072113",
                    "size": 483
                }
            ]
        },
        "38-build-20231204": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:86539e65ce31573a6df3e021f2c6f7fea0cf5f3e40584880794c7b11f441efcc",
                "size": 7089
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3e7ebcee8f49721f108df55fe82f00c02578eaed9d54e379d4080cb3c81e74db",
                    "size": 66865675
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:201107ecbbeb276307a46864f21f2a4aba5c9f84bb3d67f9b91c196e6496b24d",
                    "size": 25164135
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d7da82667dbc1ccb4b931c53482a59713f17e3cf35138e1739c6429940585193",
                    "size": 238705707
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:41edb0fc4e0b582afee8f983ebb004d931155a0cb1a5e9117ddd6346191f3a60",
                    "size": 473571
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8a10c241047902fae4ab0ca4125077a5b7200071d57cfd17a90f6308994d11a0",
                    "size": 1010
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5cecca9acd56f035f98225cd55674a501941df085089ad69fed26aa265946573",
                    "size": 277
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:116247a51666c0d5ce143b6adca65a99361e690b346fa4680cdab15b38b9000b",
                    "size": 676
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9d9510e88f0095b1f56131314d0b519fd1476ecdaffbeb1fe4ed67a0fea67b85",
                    "size": 441
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:64b2a3ca87edcf1dc875fe7e7f501f6787d040c48317e8a3e1f9d2967dd87161",
                    "size": 15209730
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7541cadfe576d8c6129cb97c2f157ce8cc6a19be3433ef7de6b35e003813dbd1",
                    "size": 483
                }
            ]
        },
        "38-build-20240105": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:b28edd47351523d11f0eb380679b0c4a47b0b220b5f2c5075fb50820aa7c22ed",
                "size": 7098
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3e7ebcee8f49721f108df55fe82f00c02578eaed9d54e379d4080cb3c81e74db",
                    "size": 66865675
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9947ef1ef869fe6fc75152544634485510deb82225960fc8c52f387b8a5020bd",
                    "size": 47177832
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f51e2cdfc727fb3bee9e188c676ab0f8ae6bfa2674c16d798bfacd74d6955ddf",
                    "size": 238720683
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d022ce69f06d128ca8719e1ab01d163b3cd9f2156d5c071ca0ee785b52f49c30",
                    "size": 473574
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0326579c91fba77341f26dea62d5fda4c8e18409f56f7ed70ca7eaaa8cdecc7a",
                    "size": 1011
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0d1f22547990c82ced513cf4f1a084af5a3810c6b5ebb7b1c516105a5203c512",
                    "size": 277
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bf354314c73914f1f2e00c0e18b17962aa69af2d523ea3db88ecb851a595a938",
                    "size": 676
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a5fed23934f8f34e3eb40d94d5e96c23b5984083ac11e023f60debe1be9ccd06",
                    "size": 441
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4070ffd8fda168db2e6f098ba2a3b3bedaf5e6177334e8414eb1f152758f7153",
                    "size": 15172695
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bc3921b33465166f0ba5f85e94c0a9ee2cb72539914ffaee138a4831833c7a40",
                    "size": 483
                }
            ]
        },
        "38-build-20240201": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:7c069ad54bced549c4d2aaeadd075f6ecfa1aa1c00425b2176e49aaa2d043325",
                "size": 7096
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3e7ebcee8f49721f108df55fe82f00c02578eaed9d54e379d4080cb3c81e74db",
                    "size": 66865675
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:14e3d974d7a225f28ee6fe575a2da4f8ca8b202472a2de31378fa9af0a322187",
                    "size": 49784280
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7d304e7de90380c0d64efe821aa9e518f702777d7c52028b7933f59192424c70",
                    "size": 239142338
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ba244d8c68c496c7638bb8bb462429347a8019f48a08efc3d34a23835892171c",
                    "size": 473574
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e79c856a09d9f2d1d662e66bf4c73a216186b9acd6acaf9e9e152206ad5495e5",
                    "size": 1009
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b29b82434abf0c4b6375bb5c06576764eb1ac71d99c8cb333691d5a474a2cb64",
                    "size": 277
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:945abedffa739b44107580eea78b4ddaa6828d4cf4cfddc4aba678d6a82358b2",
                    "size": 675
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c4dad656a4006824c1c11ef149f1c5ee325589b427f5bae3319e003800442509",
                    "size": 442
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:44b48a4ac727883eb9f6e22e8d03be27120754cc17c9930a215e638bcfee5b2d",
                    "size": 15179362
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1f6a10fe3c1eaf362f1379172be5d283cd7bc0b4b1c1756cef252142ac1e8410",
                    "size": 482
                }
            ]
        },
        "38-build-20240304": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:e354ddba4c61fb90a2c627a6d2d69056e2f8ea99ec47255b13c5e0a61ae1f9ba",
                "size": 7096
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:81506d6a09b0030e30959de0c69b234989eefc730fc69a997802e518780468b6",
                    "size": 66902418
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:84cb65373c2124ab631e0c35fdfc800daa6ebde8113e06d03d97cc3af46f3950",
                    "size": 38822560
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0d1c0cd57828ed021276331a58a6be90f7a585e08b0ad21ac899929e7f204957",
                    "size": 239360435
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:34c1f6fac6e71f1ffc1486824752e3978be0eb68454d86469fa302ed794e066e",
                    "size": 473576
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0117d91778d20be4115dd5642b425d126262d3b24f22c827499604df9b225d09",
                    "size": 1011
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:83921b374b23c505e6598b3216fb16d29b3f7ccc4d688c09311d35f265b3304e",
                    "size": 278
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ae0f1ba97b10263374ebfa1f80f5a1f95c0942ffe0912e7d87a4d6bf64a5ba1b",
                    "size": 678
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1bd4fbfbe9ad8663bdedb9c4e5bbcd519922315572882a2b1b33cb2ce8005768",
                    "size": 442
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b72784354086ecb4f9079d9c44c9d355264f379af208413d2465788382bd9857",
                    "size": 15220815
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8989018f1af2eda5e269211d1c2cb8ad14e18f56baa97c4a7b8b5ce784bf8d83",
                    "size": 482
                }
            ]
        },
        "38-build-20240401": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:aedeff8891bad813e36ae14bb9e47db8ea17acbf5b2199912e39aaa41538809e",
                "size": 7081
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:81506d6a09b0030e30959de0c69b234989eefc730fc69a997802e518780468b6",
                    "size": 66902418
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0a851e51d3ae8aabead9739fd55d347ceccffb303abc2328fcaf95a678df6676",
                    "size": 44005838
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f76fcca13f1a890f146b68deb86162fe335a7e580398c3c8e215cf721d78d926",
                    "size": 239270788
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ed7d8b138ac164ab67eb3a657bd9700cf7bc46a2a79e4b45e6711f478d3b9688",
                    "size": 473575
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a4ba67d9b7383c73c71901c303c63d3f4afeeed787a27108c6e4f584d4868c5f",
                    "size": 1011
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:83f10e814c588fb750038977a1019f0ed023bffff537867e02ee1798eaa32e30",
                    "size": 278
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e5c5233d70fc1c36d30c0972ae4bc9512ffc4ec78c79c4583096808cecadcba1",
                    "size": 677
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:37e98a50d910754b73c219410b1cd1775a89f386dff8527f3c24d658eecfbde0",
                    "size": 442
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6207882ce35a3a85efc3e5e8e8cd5c9b16d7a28d2b5f9455e7b91611488bd986",
                    "size": 15233259
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7a8a568d5ed5a3765384fe312182f7d142452446b11f8f0d580c9da314280c2c",
                    "size": 482
                }
            ]
        },
        "38-build-20240408": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:104feb6c4e9f9cca9cdb73303e5762df3bce408eab25a0034acfaece843f60c8",
                "size": 7083
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:81506d6a09b0030e30959de0c69b234989eefc730fc69a997802e518780468b6",
                    "size": 66902418
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3e5201d7910122c612b1385c60da00e23ddd2073e1d5c1375edfaec609065ab9",
                    "size": 44099781
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e223b9b86e8194b4b953048e7ea3d8f3efc7ce362c5708d1a36b4107e8e73756",
                    "size": 239455568
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6f39df8e71bb21d16310c7e4635614f8b70b222c1a098fc941a60dd1b48cee28",
                    "size": 473572
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d5c69b9b042ad3b929fd983b01bb68d09dc2b63bf4c221da48ce1949e76264e9",
                    "size": 1011
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:acb681c1d691a876594849ed8bf50981e48c6d66a224fe749f8a0a4671a07e4a",
                    "size": 277
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:388eb5dacb56ec6df9b6dd4e3c5c5e1477c1930a3325a1a261d38f047a82f234",
                    "size": 676
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6ee034fb2d43107f083c1a43a6b197a982258801c9d353bf601733ca6a334e5d",
                    "size": 442
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c40a1c6c3b81c676fe71de6f037d19f823321b042deeb8a134590014d2c4b0ef",
                    "size": 15211407
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5721040d14fea219ab2c9addfc5799c04dc9497d2c2cbeb535cf73f7c2e75fba",
                    "size": 482
                }
            ]
        },
        "38-build-20240429": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:d1498ed7f0816f849cbccb4e70c4674c648d63e54b6fc78cbe3dadeeddb02b16",
                "size": 7078
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:633a2a041c85d22a814d80c8fd43a885066522afeea82db646cff81983f3dbaf",
                    "size": 66970486
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6f6aefc4105886f3e4009dd84c7a6d16c20f75d2bac6fd89883997699c719c83",
                    "size": 24651574
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:595eee21de503ac1c3d18f61907d9f600dc3483953b12a2d117bf7d20070957e",
                    "size": 239543883
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:dff7ade51b124261d4218f0e4c6cde70cf5ac2875bbccc8b2d68890327ebac38",
                    "size": 473570
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:13452420b7f150e866221b609e4d0f06b4dcdf4a1a13006835dfddb55efe4bfe",
                    "size": 1010
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3545085024a1384932610959e54fd5a51df42bf121aeee674a0bbdf97bdb37cd",
                    "size": 276
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:570fb7a244582fbf1860dd269d8b78090339730b5e196cf07fe89bd96c867d36",
                    "size": 675
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f0f8f7967ace8e4925d98943cfef464584153dfe5e9217c2cc45ebea81f19cb7",
                    "size": 442
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:29516453335dfc6536d91eb314e0f4f8a8de4d41b2f4b672a3111e71e36aa43f",
                    "size": 15252690
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5211834e84eb43cc93ad20fb4cc55297c7cbea3841c56d55f80d9baaef1fdb36",
                    "size": 483
                }
            ]
        },
        "38-run": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:b66c0d1d1c848437abe4de9ea45d3a2c8d7798ecac9004756a0fa11f26a027b8",
                "size": 6323
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:633a2a041c85d22a814d80c8fd43a885066522afeea82db646cff81983f3dbaf",
                    "size": 66970486
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2ec501b11b419ba7c8a4e62761ac819b075b794d35a687d19c2ed9861c59a1e3",
                    "size": 24651613
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:221d552a6b8f4c1309ed6a8b7aa9b321a44f6b9ec69a2fbed04665c7b8c3dee6",
                    "size": 473571
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:48ec1a409967103d902c0f7f049efb4e4069a4d4ca8327abdf0dd5b0dd21998f",
                    "size": 1010
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8bd23a94d305b836ddf22b83bbe96fb6f0ebbbd08a7c210ad992be5c33d84321",
                    "size": 276
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:107363a2834eeb90d70c4c3f8f572b7bb7cdfddc2feb2f5265fba07f5dc0dc99",
                    "size": 674
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b51244d223dce8c556e00c7cfb9c5a3e671cf94ac86e863c85b3eb8cfd7c20b6",
                    "size": 441
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0a94b5dd8b5a06e6e3146a480a7d5d858358075e1c2104abc0cc11ed7ca90223",
                    "size": 6937043
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1685dc35bccb425a473c032206ba657bc883d03f8db2db5cc35ad93b2f7f6218",
                    "size": 482
                }
            ]
        },
        "38-run-20230811": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 6670,
                "digest": "sha256:c0940bb3221324057288125f4064df19a8af2276ae894c3d609030d029de796a"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 68440765,
                    "digest": "sha256:deb9cd9f829fea30353f8c711013769a0cacbfa6963532841501df300f8f54e6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 25387763,
                    "digest": "sha256:ce53412f7f9256b86a3322bb9c77fbbbe8c31ec9677f6b0369ea493df1fc3fa1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 473584,
                    "digest": "sha256:2d12b9b2fb47edaea20a01080c55aa9c8b5e349de4f6019ce75965f98ee1099b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1018,
                    "digest": "sha256:c0bc2fec0ee1357653d3d5d43708670c3a486da3d8ed74a5d8fb4a05e671e811"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 283,
                    "digest": "sha256:8546b989b58a19f9f647bf85d4f81adaf1c383288ba89ee14b9f22b3b35ded5e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 683,
                    "digest": "sha256:5f02cf357bc9dbc2b9dd91032b36ede26342abead7582c6f787ac9c03214b537"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 441,
                    "digest": "sha256:3081fdf25336da0734638161f12f59cf7e4bec496f02244170f8716dc07adaf2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 6942126,
                    "digest": "sha256:bbc49683103f0b5ba2f3c382c387aab381b2d5d05723b031082c82a9917d2b1f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 481,
                    "digest": "sha256:4210d5d79bf099ccc5c57927206da82d05e52e6276334303d58fb71915bdf07c"
                }
            ]
        },
        "38-run-20230829": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 6328,
                "digest": "sha256:bf9ce7fbfc47da3ebb816d7dc8bafece87e771467f1d5b2c36107582cf435e1f"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 68440765,
                    "digest": "sha256:deb9cd9f829fea30353f8c711013769a0cacbfa6963532841501df300f8f54e6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 27643339,
                    "digest": "sha256:33dcdb2e5de5fead93b70e75367e4324d7901b6e4d7645e291b4567d13978f5c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 473575,
                    "digest": "sha256:a7cae922c7d86d60b8b8353ab11580c7b065fcab92bde2166fe0f8ed91788621"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1015,
                    "digest": "sha256:720acd01e8414eb1281c723d4e2d453a3a2a92c62d92ed1982fa3c62d2e21951"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 282,
                    "digest": "sha256:c2a54576905eac6e5874e288956c798ef1e91d8ed061709b74e7d3fefe9c1608"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 682,
                    "digest": "sha256:3e961670aa9dd02f54a5035b74acfb7683f17b6f0b0ab806764f49121c96cd8b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 441,
                    "digest": "sha256:1f14551331c016b38e59cd68cf53f8bd4fe9b515aabbc26e998f92347e20f1b5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 6950732,
                    "digest": "sha256:871cb2a5217286ca4179507012df27c33de743c8b57ba50b5faf804fe4ed128f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 482,
                    "digest": "sha256:e4211ac7f30e8db3afe1850a43ca0cf8965e377d47ed0544d5d6ef76c5724a3f"
                }
            ]
        },
        "38-run-20230904": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 6332,
                "digest": "sha256:1098b9e68eac9545bba8174edc3d8de074b6a56cb8b86f3805d200c58ee72ee0"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 68440765,
                    "digest": "sha256:deb9cd9f829fea30353f8c711013769a0cacbfa6963532841501df300f8f54e6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 29400587,
                    "digest": "sha256:f7bae61e9d8ac2f2969379f98e6329cee9d7e01d1d0968e1b09b5347074cf712"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 473572,
                    "digest": "sha256:5f39f24cefc4f8e09dcd813424f3351a37531e417a9207e42d381725b5d07e70"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1016,
                    "digest": "sha256:1d57721b9ea9fc39e89825ba1c7d51cde1d9636c12889be2373f7a5cf6e96f64"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 282,
                    "digest": "sha256:f1d6686ef536a2cf79fd172a2d1f777ec1c9671474c565b4101822df6dfb09e0"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 681,
                    "digest": "sha256:a685647649e42ee3cb0d0c88aaf8b4f28793ef427b94564d306e5a607e533d0c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 440,
                    "digest": "sha256:c99876cdf0fb49a9a8c7619b0cd2d49a6830335ebab3640c06cd214d15c7068f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 6956466,
                    "digest": "sha256:fe9c3f2caee878cab2117797086ce69747c40af36baee2d44f71affb547275a3"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 483,
                    "digest": "sha256:d5c6eadbd58d060673bc1d46f4709d68b51de7f34f2d73f94fa69712e3d2603b"
                }
            ]
        },
        "38-run-20230911": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:cd4cd33e35bc769b8a5c9f7cebc58dbadb7814c572c593cef8510066816bac67",
                "size": 6336
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:deb9cd9f829fea30353f8c711013769a0cacbfa6963532841501df300f8f54e6",
                    "size": 68440765
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f7bae61e9d8ac2f2969379f98e6329cee9d7e01d1d0968e1b09b5347074cf712",
                    "size": 29400587
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5f39f24cefc4f8e09dcd813424f3351a37531e417a9207e42d381725b5d07e70",
                    "size": 473572
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1d57721b9ea9fc39e89825ba1c7d51cde1d9636c12889be2373f7a5cf6e96f64",
                    "size": 1016
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f1d6686ef536a2cf79fd172a2d1f777ec1c9671474c565b4101822df6dfb09e0",
                    "size": 282
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a685647649e42ee3cb0d0c88aaf8b4f28793ef427b94564d306e5a607e533d0c",
                    "size": 681
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c99876cdf0fb49a9a8c7619b0cd2d49a6830335ebab3640c06cd214d15c7068f",
                    "size": 440
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:945a3dc737efe36119f766968f2e741cff88675c1d98c2b9a18021a6e8634dd9",
                    "size": 6956824
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d0b4474a4561e3c0d51547aa9fc8985228a8a568ed75fc960ab67e5958b2e796",
                    "size": 485
                }
            ]
        },
        "38-run-20231103": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:d903372e574acbf525dc2be530c9c0e1570e66acd2aeb517ea5e370e9fba557c",
                "size": 6338
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:315d8c5c1d7b9910a2f6a898d3978aa4fb1cec860ee7269702a86c538ecc1f56",
                    "size": 68537580
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1cd805c5ce0df170b0ff5799f5ca45435458db94b3127bcc29ac66894fe79c01",
                    "size": 48665073
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:52d64bf7058e38a38991d3d13f6107f6a0cd83714d97f1126ba6af8320729965",
                    "size": 473575
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:40d9fb8036b5c563d4515f77b47d762eb91194e24aafeb7ccc425eecfef0ae28",
                    "size": 1009
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:52c2b0ffd2a84262b6c10f1097728ebc449892935f821be327307c603c21b609",
                    "size": 276
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f42ca9ffac3e61e3a470c8ce731f6ce4315c8815b185c7b07561d8b3b4aa5e83",
                    "size": 675
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:50b794fad49c7838d8c7eba2b8791631a70a9301680bd0aea02b282208111ea6",
                    "size": 440
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7c2cadb1622d8adf26433aa153239656c6038ef45825d098519b5f805da19031",
                    "size": 7045472
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b22982304c3b2ab4d5944042298288f5e043bdf5648b7a3c9f155484b0c1b9c8",
                    "size": 482
                }
            ]
        },
        "38-run-20231204": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:ef2f662b5e0a45cb72466ad8a76ac87dd5c3cf124ff2869af4d941e8995a5efb",
                "size": 6337
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3e7ebcee8f49721f108df55fe82f00c02578eaed9d54e379d4080cb3c81e74db",
                    "size": 66865675
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ca05c242db83addda0f004f5f2d8c3dcb969640129b0bcc60b0e336028dc6a7c",
                    "size": 25164237
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a1dec9b5c2607c6029a7b78678d7dae7f931d4be1d448f313879be4ed5b7f889",
                    "size": 473570
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:11ed13392d118c03e133c0cd4f43dd9277d104fa8819448d0fa4393d76a1f485",
                    "size": 1009
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0098472338f67b4b088c788cd5e1b03788bc04cba314554230231b187e4f1d34",
                    "size": 276
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:77f98631c3b507e2cfba20cecf8a35342f2d9f13b11757c97ffd60806ca56c0e",
                    "size": 677
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:675b9ba8ea03a837e38cf5739fcf5c4fface89fcdf021cb9ecb7d1b0db04a4e4",
                    "size": 440
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:70c6d623950bac6990d193e2508f28c1f3c64c9764a583840e228436dbd428ae",
                    "size": 6903507
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3444513fa74f6887bc9739dcb69754d9a614a1a690bf7affc3435aedf39f06cd",
                    "size": 482
                }
            ]
        },
        "38-run-20240105": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:f398c8bfe8dbff856cd51b570cd0cab660d2178880451d148ed2a8d9076d3141",
                "size": 6336
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3e7ebcee8f49721f108df55fe82f00c02578eaed9d54e379d4080cb3c81e74db",
                    "size": 66865675
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8457fa2eeaf51da34fdb2329381b7fae177ad0d179f8d81fb55aa441ab82fb55",
                    "size": 47177942
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bd1cb4e3ee6d52fc195608b87c80d07ecb8e949ab03e01987ea61bf1cf80eb4c",
                    "size": 473569
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d6604e31c553ba54d02d96a7c5c56e0691bd2ac615d77a984ff14ce176e6355c",
                    "size": 1009
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b5a30d69d8e56755315a26beeff86631f7bf3bb16cb0f301887777df5bdea17d",
                    "size": 276
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8a2617f11a5b04a3f4ee2f5686489b65aff9c6a9ebe05b699600a553fefe26eb",
                    "size": 674
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:387f104185a597fee0124f56ce0ec113634e0024b149493ad3f3cd7b850dcfe2",
                    "size": 441
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fb1c2a763285ff6f42afa80bd1c0b29d52c9df2bb2d003e1833ac931a0533144",
                    "size": 7007397
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0e238efba4c6ef546bb98ed26cddbc5680a10df3696975b6034e90cbf6cbba38",
                    "size": 481
                }
            ]
        },
        "38-run-20240201": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:f5068bfa772e36831aa865948ae53f0b09f6c5d29a8dc7b673bdee20dbaffd74",
                "size": 6338
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3e7ebcee8f49721f108df55fe82f00c02578eaed9d54e379d4080cb3c81e74db",
                    "size": 66865675
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:50f93414a50501d122410c6d84a88295606a21ccaec8c7900c7f4a5a2b4257ee",
                    "size": 49783989
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2483810aafd1efb6cae93c26d1711e9e46134abb72fe9277312ac6c7aebb2708",
                    "size": 473572
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:61f8a8f9d5731c9ba155b49f784b594b16bb036fce3b204a5d4c43747b3921ee",
                    "size": 1008
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1d7cf8757bedfd583773d3dfd4a791e0af75bb7f619155dd54f2c956ff44bb8b",
                    "size": 276
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:59a09ac7d7067b4cfa97648c889f2ccaac24d5591d7d758046cda828e7283be7",
                    "size": 677
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:44c697f96de5af09fbf6a56fab35325898137e4f83e475d8d83372654691ade2",
                    "size": 440
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8c4ddd9bc14c87e28f8f63e51d47968bbaddffe9c952a5ccad117b1fdec73dd8",
                    "size": 7358802
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e9a97afd30168df55e98019f54514f189033544f3d80cf4b7c8315f788c465c4",
                    "size": 483
                }
            ]
        },
        "38-run-20240304": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:b3a15f2da1a2ea3f5cb09527be40822ae5df5c4efc9d3d68422293bfc854a97f",
                "size": 6336
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:81506d6a09b0030e30959de0c69b234989eefc730fc69a997802e518780468b6",
                    "size": 66902418
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:853cdca42be7a8fffe261495c7315dfb9e2674b6447a15d4d6684e8aac44a49f",
                    "size": 38822527
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:52268d2b867615e6e716e275da541518b77ed4ed886a75774735f202ccefbfde",
                    "size": 473575
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:de9bcc09dfaae3dd93aec6643f38579b58d85221f05b67ed793669482271afd5",
                    "size": 1011
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:46beb8b6410bbd935b1fff175d8cde61233a997f0a5bd7ec3df94b06d65afc82",
                    "size": 278
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:23dec449b68440d93bbe3d291523243a4d141a1f073989e692b4cf6cd7f74f98",
                    "size": 678
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:49fda0ce363b14f699bd6fe537a65ca532cec31379cab4477ecc657d694d634a",
                    "size": 440
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ad3526eeb51527311ea5bad56db41e40ad3acc0dc8e96202d00f8b4d5276e643",
                    "size": 6966137
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4a264544b347ecaa063465a704893d72ac6a1e445949199d1028ed735de98319",
                    "size": 482
                }
            ]
        },
        "38-run-20240401": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:a1db5d4fff812c68786882ff5c2676670238f78830597ce324efb86892483b87",
                "size": 6322
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:81506d6a09b0030e30959de0c69b234989eefc730fc69a997802e518780468b6",
                    "size": 66902418
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8d43d51f1a41c7477be1d70eb1b80468e756e96849bb0ce21cb95ceac447fd64",
                    "size": 44006071
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a2ed0ed33927383135e5e68e1e86f03eed4aa11fcdd3c3c890f1891b095578af",
                    "size": 473576
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b9f8e4ab2fe0baab06d6651320364937bfd6a2ef06cd83cf572106e5716d4729",
                    "size": 1009
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3b7163dcee376656ee166156e57a654175790d8133070ef0c209c6c868acbff8",
                    "size": 276
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:318396adf3fb9c92e27f4a704e5e2881d8e9b52d811e8dbe1bdb9d11ae277bc3",
                    "size": 674
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:49b43abcc5c19baad6b966c5acbbb09612fd022aeeef5d2f38180469796c54b7",
                    "size": 440
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:56aaff8a0f970c65bd04732aff7eb9f7c619c7a483c6706ee5f1c4dfec8286b6",
                    "size": 7023670
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:66ff1c50ad15f79665cca34b8d3b7bdfe3c500536d6d4ff07b5f4df123887956",
                    "size": 481
                }
            ]
        },
        "38-run-20240408": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:af2798e52f10fe1f297b38b7e9bab4ca56db658951ca8aeffd5d2868c1599fca",
                "size": 6322
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:81506d6a09b0030e30959de0c69b234989eefc730fc69a997802e518780468b6",
                    "size": 66902418
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4dba619e0146286a5aaa3874c3784b843d8090856a7632ae2c84271f665e5dae",
                    "size": 44099873
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5432924788d26e310d2d617d234f02660a388b0654ae24317d90120c2b67181e",
                    "size": 473575
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3e1134b619d79e1fcbe6c8b73f3cf00601dae690371a13816c667096c0f78832",
                    "size": 1011
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f7abf0dde09733197030962d5b76fe6389fcca17708fae0cfc8d7cd5b44fcfcc",
                    "size": 278
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fc026638b374954a486a475355b4c4c9affe5cc903d237f6f076c46777efeafd",
                    "size": 677
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:752263ef7b1d7b65da5cae41cd13b25dbf376ce4603bf36c48dfa32a1ede8df7",
                    "size": 440
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:db72f89d21ea5103d6e93bb0794e47395e143847c486b995233973c7f88c109a",
                    "size": 7033996
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8717982d4b6904496f448a043f145ee7a11e192b8783f6982f9b934d2a87468f",
                    "size": 481
                }
            ]
        },
        "38-run-20240429": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:b66c0d1d1c848437abe4de9ea45d3a2c8d7798ecac9004756a0fa11f26a027b8",
                "size": 6323
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:633a2a041c85d22a814d80c8fd43a885066522afeea82db646cff81983f3dbaf",
                    "size": 66970486
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2ec501b11b419ba7c8a4e62761ac819b075b794d35a687d19c2ed9861c59a1e3",
                    "size": 24651613
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:221d552a6b8f4c1309ed6a8b7aa9b321a44f6b9ec69a2fbed04665c7b8c3dee6",
                    "size": 473571
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:48ec1a409967103d902c0f7f049efb4e4069a4d4ca8327abdf0dd5b0dd21998f",
                    "size": 1010
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8bd23a94d305b836ddf22b83bbe96fb6f0ebbbd08a7c210ad992be5c33d84321",
                    "size": 276
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:107363a2834eeb90d70c4c3f8f572b7bb7cdfddc2feb2f5265fba07f5dc0dc99",
                    "size": 674
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b51244d223dce8c556e00c7cfb9c5a3e671cf94ac86e863c85b3eb8cfd7c20b6",
                    "size": 441
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0a94b5dd8b5a06e6e3146a480a7d5d858358075e1c2104abc0cc11ed7ca90223",
                    "size": 6937043
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1685dc35bccb425a473c032206ba657bc883d03f8db2db5cc35ad93b2f7f6218",
                    "size": 482
                }
            ]
        },
        "build": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:94929cc5be56f1530c566acdaba266fa216e81b5231e690d8d2ca20768d3c527",
                "size": 7083
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:70ffab5718fea0e15c61500da8ee3e247dd22fd98fb4b68e9a3e8c51d93b3025",
                    "size": 65029635
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:99d5b39434fb34322d2538e726b22a180c5512e8798e40de9b79d5b3bf48d7c6",
                    "size": 24684034
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9f2f482a4ec9fffaeda8d6e747e7398460a0228f76733c47d18d78a2d657b6c4",
                    "size": 235741099
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:696a0055108af30566be19bcfa3b1503a4802898314a8686252d5bcdaedf4652",
                    "size": 473572
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5988908a8c45a73a2ef86e8625ee9f3f4e03a173592818421d9441a87b06a6ef",
                    "size": 1010
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6ef7d326faacfe723ed24ad3f84d153496f8899ec2e10c96e3b3385271a8d1a9",
                    "size": 277
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:432b4c6a90343ef5c1baefab8f80b015a59e1b0dd6244fcf3763e91b96c71298",
                    "size": 677
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f9af09aee2002f2e15926bd10005614c25881682167169cc0226af25f803b7ae",
                    "size": 442
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3aaea23821fd27f4c014bcc686d754c85bb896586c7dd6d32a19b63e7fe11640",
                    "size": 14172238
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7aac30e4d420b3abd114a09a455554cecd4957535aa668033845216e52189927",
                    "size": 482
                }
            ]
        },
        "build-20230811": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 7426,
                "digest": "sha256:ee9f9afc34670ecb9ee2058b2355eec456f40d14f3d4d5a9def073f923c4b05b"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 66534340,
                    "digest": "sha256:e52979b1015a445d09d63bb33f41e3cf0ec020fb421106e9ec5ccd5d2d4c3eca"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 25143226,
                    "digest": "sha256:b5d988feaed8c6ffb1b33594f0927306b14c0f99130f525452e4121d05671660"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 235353220,
                    "digest": "sha256:732569a5de90f9b52407b3366d5476e72a9c7a40e415f3abb3ecea4fcd9ab1ff"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 473585,
                    "digest": "sha256:5c99ed12124d0163c07b896af68ce4070a52ce71ec57a0726349edfe595b540a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1017,
                    "digest": "sha256:b7015c50417e6ad5a18d58871f6fab14482dc9e1c183f00890e9fbc8f9223620"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 284,
                    "digest": "sha256:39fb84c1f7effd24a80e0598e3204c7cd5f315a196828dc1a68f146c13f894c3"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 684,
                    "digest": "sha256:169947dfce7490d3ea74cbedd18279edf83fbac188e232cdef46daa81228167e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 443,
                    "digest": "sha256:a13fbfd2833965520e99f5de659fa959b7b394b24d6940ceb9f7923db95deb0b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 14099409,
                    "digest": "sha256:40e49b526ecef8f04eeb8e8d80ae8b1850d9d56b8f3862a712e0e95aabd27f9d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 481,
                    "digest": "sha256:c33180dffb5d9653f730d2d6331de80b7fe1673b5a67f8d72f39c61e33d1ed03"
                }
            ]
        },
        "build-20230829": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 7094,
                "digest": "sha256:3fd965570994aa3888d0f9bc3e9a2f3d3fd6a0876eb12ad67527df50c2b11806"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 66534340,
                    "digest": "sha256:e52979b1015a445d09d63bb33f41e3cf0ec020fb421106e9ec5ccd5d2d4c3eca"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 29828162,
                    "digest": "sha256:1902a8ce6a847e43111f7f9dfc1977900620a266911b721836c2af9e1a329368"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 238957127,
                    "digest": "sha256:7ed305e9ff336f144ff67134dbf90006097a58e7050abd739d96d1fb8bd1f681"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 473575,
                    "digest": "sha256:5a211c819ea929e4aa7ea0aef924b0a628dbe470deffd06d2866e877460b3b15"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1015,
                    "digest": "sha256:0c9d94eed525cd9c2da20f1d41ea202183cafb1d07cb8a31c14a7023b74c0a0c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 282,
                    "digest": "sha256:ff84e0cdf45aab2f8994a87701c2a1d93fd6c3cb37c013e216bfb46176a048e7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 682,
                    "digest": "sha256:b34a7d1eec70bf533e41710bfcf693058d240b13bb4b89d4156a8ffa4ecd8da8"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 439,
                    "digest": "sha256:8398a79b08ee1fb43de238e4ca856fbbd1e4db8390d8762876fb8d2efd8b33bc"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 14141539,
                    "digest": "sha256:71362da03ec49a2d026dc9d0ab45247da06c08bca8f7854fb37698a8c38d1981"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 480,
                    "digest": "sha256:605b97b14027c7824ec6405017f8d93d2bb93be1e631f935cd414397a01b3c83"
                }
            ]
        },
        "build-20230904": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 7094,
                "digest": "sha256:1ef50d5dba5c69285c4a9b09a118ea91ce5b290c69a7991899cea10e822cba11"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 66534340,
                    "digest": "sha256:e52979b1015a445d09d63bb33f41e3cf0ec020fb421106e9ec5ccd5d2d4c3eca"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 29827981,
                    "digest": "sha256:2027c0ec9d1eaf143fea0c0654e788ec5ddfe4b54b1237ee25ea8acd1779a4e1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 235401718,
                    "digest": "sha256:58b567e7951d89b953da3b3df55f6660e616305a4a31fdf0c8142b0dd3453f49"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 473571,
                    "digest": "sha256:a976effc1fe051a6c265eb021cdcd33ce58afa31bb788cb2082c313e56284d86"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1015,
                    "digest": "sha256:8ff10a65c0666e420a44b339babe1c7b1057611736082430ee08a029a456f95b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 281,
                    "digest": "sha256:3713d86efa354563e47d96e82131696c4ef8756085307ed3746af90679178f23"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 681,
                    "digest": "sha256:738e033be75c2e38279167f429a22a488b3bce84657b1b23c9ac9e79ce3d6ae8"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 440,
                    "digest": "sha256:333bc780ce73e5a0ffcb77ce573f65f9b9744d88da1c99bb20e95eb140fa0567"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 14125326,
                    "digest": "sha256:905ad29a09ed7d9987e20d0ff73d46631eaec9bf83df94271c4b0f4262e0cd22"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 480,
                    "digest": "sha256:fa35488b89601d145c3e13ed9ed7cb9539542592fba634fe9d8d6a160c4d8cdf"
                }
            ]
        },
        "build-20230911": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:387384dbb211242ea0511d2ca832775e7148af0d2aedb8c50c79b0853a3e6935",
                "size": 7096
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e52979b1015a445d09d63bb33f41e3cf0ec020fb421106e9ec5ccd5d2d4c3eca",
                    "size": 66534340
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2027c0ec9d1eaf143fea0c0654e788ec5ddfe4b54b1237ee25ea8acd1779a4e1",
                    "size": 29827981
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:58b567e7951d89b953da3b3df55f6660e616305a4a31fdf0c8142b0dd3453f49",
                    "size": 235401718
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a976effc1fe051a6c265eb021cdcd33ce58afa31bb788cb2082c313e56284d86",
                    "size": 473571
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8ff10a65c0666e420a44b339babe1c7b1057611736082430ee08a029a456f95b",
                    "size": 1015
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3713d86efa354563e47d96e82131696c4ef8756085307ed3746af90679178f23",
                    "size": 281
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:738e033be75c2e38279167f429a22a488b3bce84657b1b23c9ac9e79ce3d6ae8",
                    "size": 681
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:333bc780ce73e5a0ffcb77ce573f65f9b9744d88da1c99bb20e95eb140fa0567",
                    "size": 440
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2c627594a0d9963137ba46fd071618ac208d1c0d5083f4612b79d7276efb350d",
                    "size": 14125667
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:26626a9221fedb58a5e32c61b2c5f0852f21a9cab4bfd2294e8615333cef0f9c",
                    "size": 482
                }
            ]
        },
        "build-20231103": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:be9ea464d3e34cea15e1e64cb120ab3111f06119d01ba83c87eb0fdebf98da09",
                "size": 7096
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d7a9dc132f00a11a7e4f430fbea6af388f02cd765659df6c506fd18a19f5d122",
                    "size": 66705827
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:71c20b4a6f49a419b3011c15106e5f2aecf70bf56ec6a76fe9f8470b9ae7144c",
                    "size": 45529324
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:346640de5bc85f66dcade37c4a859ab946936975350ac806fca182b09c969bf6",
                    "size": 235677689
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:aabafe706f7c9ca4b223002726e8a9287da6034241c92cdcb771a1d71577ac97",
                    "size": 473572
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:cd071fd61c9500f371bc71adf550c933fb9e4035db571296284df66be12f3f38",
                    "size": 1009
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6d3f95fe383805b260f21d49c7b7d6b4a265f1065b9ee082f3ac52b2afb4206f",
                    "size": 276
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8d13d0db6fb6ccfca3973f9bcf2f2734218914e823ad8bb221e54b805e302160",
                    "size": 675
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7851dcec2d2d3d29c8ef4b1bc36d08f020f4e386cb1e8972872ecd5dc3ca8e73",
                    "size": 442
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b4cfe56e9eac859494848833d110af6dc784a5262f66f0731e419c3e7f447b4e",
                    "size": 14166522
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ebddfeb896adab4b02c989c87f8f5308d3945f437722e7b1da093748a07663e7",
                    "size": 481
                }
            ]
        },
        "build-20231204": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:99162b94d3a48a3f352dfe675d87278061d6a0bac3acb9a417df7eec73c9ea23",
                "size": 7096
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:70ffab5718fea0e15c61500da8ee3e247dd22fd98fb4b68e9a3e8c51d93b3025",
                    "size": 65029635
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0ee857b42124439142c81be632481692232d2e8875b899f8d398db725c218792",
                    "size": 24684037
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:65cbd5776ecf57ac342e8d733e0f2264864ec82a191becda14634aa2c4620a3d",
                    "size": 235740015
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8922b5705473408f6f721f1b4e7b3872dc453c30822daa6791ad17d460c11b55",
                    "size": 473571
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:86c28970b584af5b306514eba0ffc5afd92a2375b19e509190dd6ff1844978cb",
                    "size": 1012
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:55f58392dad2e729dbb0b96cec0f30b59377a2c72309dded4e3a4a8fcb4ea181",
                    "size": 277
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9f9dd602a2a97882e93b98f2e47cf9b308ec0bfa522726eeaa1ac4fe6ec89a65",
                    "size": 677
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e27de6fa5f6fb8f4d549a1ea5146dffda3d1732bc6be3f99dfcf77710e6e0ed9",
                    "size": 441
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a3ee9147adc3038436e748f10e0e0f3bad60e6bd758c23ae3b84f7359a90109d",
                    "size": 14171633
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ee6a5c4c737e9d0e5a047fa5aca5e72044bac178d765828f572f9219d770a911",
                    "size": 482
                }
            ]
        },
        "build-20240105": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:c2a492abc3ec6a49df7f4e240b13a69708db66c188e474915e135ade39b7ef83",
                "size": 7098
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:70ffab5718fea0e15c61500da8ee3e247dd22fd98fb4b68e9a3e8c51d93b3025",
                    "size": 65029635
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ea10d7d9d327bfb4ca95a61cb4e668de87a07942be5839dd839ca7143fdc6bb6",
                    "size": 24684122
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e8a5b99b04b04348c78e5a58c76dce3867e50fa42e8dd9626dc360bbf8a460ee",
                    "size": 235738030
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f7df2f177b44a2e2005b4ec55b8a858cbda5e29f45dc9e4a48a9e062ca755377",
                    "size": 473572
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ccbea00def3540b259a005f1c2c90250d1572f7ba372a73b27d1d36d283a0a95",
                    "size": 1009
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4ae7f2eb4854e3675353e40ff2659bd0cb4ad8f62b84af3c4ca0c676a73775b0",
                    "size": 276
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:33bb8f102326f6701edcb667749db8e64c12436822d5d6cbafd692f3b9c23dc5",
                    "size": 675
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ea631cf09da0a8baa07dd7f4fae0b2ae0d864edd451e3b9fe0a09f606ec471e7",
                    "size": 441
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b72ba030276f8b5e94ebe25c5becb2c102a22b1de358ec4b5615c36459884ca1",
                    "size": 14172107
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4d7b9d3531a7d928255a5c9811c8c6ee9ae9aa5b5c00257eba2d3f54be607edc",
                    "size": 481
                }
            ]
        },
        "build-20240201": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:7f569b3748ba3319e54552e989d5edd65fee69b38ae03442c157a4dd0afd3f16",
                "size": 7096
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:70ffab5718fea0e15c61500da8ee3e247dd22fd98fb4b68e9a3e8c51d93b3025",
                    "size": 65029635
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b07dc9ad4161f042b57c41653f184d49c487d2a25ed1f3e083bd47154421305e",
                    "size": 24684095
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6ea906368c368af0660bc7ed3adb6f96851178ad9d97a543d34df9390a80d6d0",
                    "size": 235742309
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:aaf30d4ff1a0d351ecd5305e3a75c7bb623991bc11cba053c6c1a3cf4d25525c",
                    "size": 473575
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1852ffb159bd58d44f3935d28de7e50d48040aafde1980f129fe8944aedf62c3",
                    "size": 1011
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:16177c442f941e7fd31cec81c36ebe39b5320d600bb2deafbf3cf5733fd57ee8",
                    "size": 278
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f6c72f0981e167d2bc0f6eb5f0f5aeb0334a78c3213f1ea35a061ee84713a6ac",
                    "size": 677
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ab4decc4699180f64e838d83d030ff2080b68dde23dac915174996f94d914428",
                    "size": 442
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a73f38565354436a506dee01ba4e3effadc7bc7084ccf25a055e5d48bcf5b474",
                    "size": 14172326
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3eb7c1139970388fa00de25989f192662a46a0f0f484405f8143aa7c0c9c6914",
                    "size": 481
                }
            ]
        },
        "build-20240304": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:f499f3421978fddc24a6cb354f4f65806ca9fad25af3841f0864a7be8de556bb",
                "size": 7098
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:70ffab5718fea0e15c61500da8ee3e247dd22fd98fb4b68e9a3e8c51d93b3025",
                    "size": 65029635
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9ec94aadf83b384475cb172e72990c0f1d41fa99f4665fe753d552584af4c8bc",
                    "size": 24683991
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fbbb20ee0e4b9acf95d288b1d49d16311371c4b4a33f5bea9b44f683d097687f",
                    "size": 235740019
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:008189645b0d6cdbfb836db598d2397c0274f6befae67cd8233967c2b3e2f711",
                    "size": 473575
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:676539c76824ba4388330705acd0c06c1100f841efbfd940d48f6aac1fcdfc4d",
                    "size": 1009
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bf0648e7d4e21f62042c27b1796237f3a905028ca6bf8f157cbd9101ec92549e",
                    "size": 277
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:67830ceb0a7a2cd83b237df1439d15ea7f533b19a04ddf31ea9c4348b09ce67c",
                    "size": 675
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3bbb42c18a724f71a9cd3c8bb6f12bb9b3d9684eed98477f374c503b0b2057e4",
                    "size": 442
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:653f16fc2ffd1f643931436d82b219fd83b905b2ed382643a880236096c63c0a",
                    "size": 14172100
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e569b9cfd5aa127c979687c2bc6e50a732e95c2de6ca22b0411cb871b95c3654",
                    "size": 481
                }
            ]
        },
        "build-20240401": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:1fa40d4c224977c96decff26af2f978452df8c01ab33d7681c914e276dba97c5",
                "size": 7078
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:70ffab5718fea0e15c61500da8ee3e247dd22fd98fb4b68e9a3e8c51d93b3025",
                    "size": 65029635
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bb8c2f17c43f3fce343073d0420d8df8f4ac9bf5a89589ed7bd7444a4c3bb7e7",
                    "size": 24684121
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c86262dc73f1e4a40fb15ad6af3d47a8a04c556ca41258ace98b3111252115a1",
                    "size": 235742726
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f20dad326e942bb6aa56b1142ba6b1e9560c8ddf08eb3d641c65be15e6510909",
                    "size": 473576
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:37f905577fd10cad38bd9f6267e3a57160672b8e6abfe4ea7176404d4409634f",
                    "size": 1012
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ad44ac894809118b3c5207c3304bebd743e973d655b3cf765c1e1725a4cb4f7b",
                    "size": 278
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a8ac9944d8f40b573194d3b8d82c873604ed9ce2a428e51ae1e27ed5999b72e3",
                    "size": 677
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ad1313dd0864a0ccaf7eb12560591c696228364b08cbd6603e2c26360358780e",
                    "size": 442
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6f32df641fa8b78d3c23fc3821d63b5a359e91f1443f26514a16d77f8a7d3b1c",
                    "size": 14172224
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d42145cc15d8bb5e6f1a940f1b338eb6ed8b37d13afbf5eefa601ac3dcb5f883",
                    "size": 482
                }
            ]
        },
        "build-20240408": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:ae657cd9decfa83e992ed3ac90bcdec52699172c0551db392fc8fd9ed8a19da4",
                "size": 7083
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:70ffab5718fea0e15c61500da8ee3e247dd22fd98fb4b68e9a3e8c51d93b3025",
                    "size": 65029635
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7169f8f710a41c8b32f8b1746aae6312834d62d139ea287548290b82c2067396",
                    "size": 24684035
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:29a178c8758dfe67a1e54a1b9f7634d1b8eabe0594fe835e39d6dd7d4b8857e4",
                    "size": 235741885
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5b4afa4031234f569c71a408abd91cb738367a90d7e8b3f0afef97a8f2a040f7",
                    "size": 473576
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fca1a50907f18ef7182ae0b51540a527595c0c4526400f69b581d2f570048d03",
                    "size": 1012
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a198a72639f6f3159577b2c32d8abbf77848be58982fb9d7c2584cfe7d995bb3",
                    "size": 278
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e32373cf5cb8af987ae4b4307a6845a837708d49f334832407946a373cac898f",
                    "size": 679
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ff0080399277e2005225aee8d8b3e4e509efe6fdd71182e8d99413e078a12907",
                    "size": 441
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:73dfdcf536cd4d53b05169127c3242f879e69cb0ccd714def2937ea309a5abe6",
                    "size": 14172112
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bb12700b0db29427b2b74b983d3773ef887f3fd07e809ff1c73a304c2d6cfe32",
                    "size": 482
                }
            ]
        },
        "build-20240429": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:94929cc5be56f1530c566acdaba266fa216e81b5231e690d8d2ca20768d3c527",
                "size": 7083
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:70ffab5718fea0e15c61500da8ee3e247dd22fd98fb4b68e9a3e8c51d93b3025",
                    "size": 65029635
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:99d5b39434fb34322d2538e726b22a180c5512e8798e40de9b79d5b3bf48d7c6",
                    "size": 24684034
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9f2f482a4ec9fffaeda8d6e747e7398460a0228f76733c47d18d78a2d657b6c4",
                    "size": 235741099
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:696a0055108af30566be19bcfa3b1503a4802898314a8686252d5bcdaedf4652",
                    "size": 473572
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5988908a8c45a73a2ef86e8625ee9f3f4e03a173592818421d9441a87b06a6ef",
                    "size": 1010
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6ef7d326faacfe723ed24ad3f84d153496f8899ec2e10c96e3b3385271a8d1a9",
                    "size": 277
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:432b4c6a90343ef5c1baefab8f80b015a59e1b0dd6244fcf3763e91b96c71298",
                    "size": 677
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f9af09aee2002f2e15926bd10005614c25881682167169cc0226af25f803b7ae",
                    "size": 442
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3aaea23821fd27f4c014bcc686d754c85bb896586c7dd6d32a19b63e7fe11640",
                    "size": 14172238
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7aac30e4d420b3abd114a09a455554cecd4957535aa668033845216e52189927",
                    "size": 482
                }
            ]
        },
        "latest": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:2df8cad269a8ef1af556af9b86faea9f46b5ebd9dde6f350262f9ef5a6c4b046",
                "size": 6323
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:70ffab5718fea0e15c61500da8ee3e247dd22fd98fb4b68e9a3e8c51d93b3025",
                    "size": 65029635
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:091a22464e090e560c1eae70d6b60d1df293f0cc92e3455f13891ac9737589ee",
                    "size": 24684150
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4ba64e71b26acf1dcd14850f27294bf84574b0abf17704f3c7b1e1bc8924ae3e",
                    "size": 473574
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b9f588bc96c09005302be43e24375ab320fb260116256b9006a46ca1962bb2b3",
                    "size": 1010
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ec4d31d05d5223fca6a7bcc5813d36b990393626091ee48bfffc4289f851e299",
                    "size": 277
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:27a58040671a456e831f6fffd854ef45c9cba94e7bd19ad615af43b1fbfc80bf",
                    "size": 675
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9cdafbeb678e6b83255cade03b0805656a4259196b20d063b7b70aaaed64b6a4",
                    "size": 440
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:14700c5115d80cc94bb8efd0e5dafce0d0e14d1ac320eb393b48d568d41b7b20",
                    "size": 6652181
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:42d58f5cda947c98bf040363d1ab8ca0611158d2966fdf8fdd0ff7069c386f54",
                    "size": 483
                }
            ]
        },
        "latest-20230811": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 6668,
                "digest": "sha256:3e0080a26f103363400244bebbfd0ff5d06fc24b1c0fa688b2191dd292f63970"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 66534340,
                    "digest": "sha256:e52979b1015a445d09d63bb33f41e3cf0ec020fb421106e9ec5ccd5d2d4c3eca"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 25143226,
                    "digest": "sha256:b5d988feaed8c6ffb1b33594f0927306b14c0f99130f525452e4121d05671660"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 473584,
                    "digest": "sha256:229924996900e055f10a97289223e507bd6d314b486bf12256b0033329f50b2f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1018,
                    "digest": "sha256:ad469405724f5ebfa5388db76cea2193b20d9adaf889af963441e70e14c576fb"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 283,
                    "digest": "sha256:d6dbfc5ed9adfd3e2932836372894f67ffa7ca76ff36c38e9c43b41f08883cd4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 684,
                    "digest": "sha256:844d47ca30d4b5eeeddb6e4c2f7fb345a7b0f20c96381f50a4f679e1eb5d78db"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 442,
                    "digest": "sha256:6fda4af151b097d2187f1b4f986cdf8576bc19abf3f723561851abce35431819"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 6676311,
                    "digest": "sha256:f9ade005b55026e81ad272ef4432cc1c3a8ded9378fe7695a3d5755ca22cdcbf"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 483,
                    "digest": "sha256:0b3839ca6c182efadd04760095eabef467a30eb5b3928c1743a16536c78fb905"
                }
            ]
        },
        "latest-20230829": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 6334,
                "digest": "sha256:5f4565d6581f5891d281c149682d0d7c50538bfa5013f89e17f9386e934584f9"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 66534340,
                    "digest": "sha256:e52979b1015a445d09d63bb33f41e3cf0ec020fb421106e9ec5ccd5d2d4c3eca"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 29828162,
                    "digest": "sha256:1902a8ce6a847e43111f7f9dfc1977900620a266911b721836c2af9e1a329368"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 473575,
                    "digest": "sha256:15d2268bfe6351fb37fd09c4a96c844b9b3afef4df0b2b709d43d0b5cbdd9f85"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1014,
                    "digest": "sha256:edace452f624c13eb2f1e9aabad7820479555fcd494bbb554ef3b084971fa1f7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 281,
                    "digest": "sha256:b10ade70ae4ae5d3c0a50ef9da4e7d4e739d15bc0d402e804d3803b6fe53e36b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 681,
                    "digest": "sha256:4f63e82fbc411af7f584b337b891d38d46899790446e29bbaf2ddb0b4ce7a7b0"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 440,
                    "digest": "sha256:2c152717a8c0907343fa2824b5439d982d77dd0eec75a4d1539805c3c92df1ec"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 6712803,
                    "digest": "sha256:1c1bb3372356e9d07e9421ce1a5ecaceeaf652e2b3a7ca0e8af30b44cb8d5447"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 483,
                    "digest": "sha256:9b8cae22d6ea0568a4536163db02efc054a68250737b44955790bbc1264ac930"
                }
            ]
        },
        "latest-20230904": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 6334,
                "digest": "sha256:a49e4b777faea57581f7794fb1fba4c77a4a3b9408a2e39fca67eef554e37377"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 66534340,
                    "digest": "sha256:e52979b1015a445d09d63bb33f41e3cf0ec020fb421106e9ec5ccd5d2d4c3eca"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 29827981,
                    "digest": "sha256:2027c0ec9d1eaf143fea0c0654e788ec5ddfe4b54b1237ee25ea8acd1779a4e1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 473575,
                    "digest": "sha256:932ac56fb601e5eb729b0dcd65650440d35f0877a391a379ef9019326ec1bfda"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1016,
                    "digest": "sha256:4bc46925606fb0a2143644f6eab1d223320935a856361f66cf71c4ed6327a87d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 282,
                    "digest": "sha256:cbf6285b20078c98c9d4a998f064c93a84f256f9971fab93d7aed699b7c9cfe0"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 681,
                    "digest": "sha256:526a6c2de7d3e79ed359f01d02dd9d48290b245403e0201a935f083484961e38"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 439,
                    "digest": "sha256:ba1d6d9da4501fb9e2d95d2f865a8f5a9e9b2e249887af30a4f30e045d518e6d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 6712831,
                    "digest": "sha256:b5cf518152d5676d7098d741ffdc5f0e3ded7508263678cd6ea700cc40e7ca57"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 482,
                    "digest": "sha256:f598a9e05c7b788f4686df2e5aa19e4c17e08f6171c27910223264761d44db6f"
                }
            ]
        },
        "latest-20230911": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:ac459a230e16952629f00f426a26eb86b5bdc662d78ccfb6bf047690047ed2db",
                "size": 6338
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e52979b1015a445d09d63bb33f41e3cf0ec020fb421106e9ec5ccd5d2d4c3eca",
                    "size": 66534340
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2027c0ec9d1eaf143fea0c0654e788ec5ddfe4b54b1237ee25ea8acd1779a4e1",
                    "size": 29827981
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:932ac56fb601e5eb729b0dcd65650440d35f0877a391a379ef9019326ec1bfda",
                    "size": 473575
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4bc46925606fb0a2143644f6eab1d223320935a856361f66cf71c4ed6327a87d",
                    "size": 1016
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:cbf6285b20078c98c9d4a998f064c93a84f256f9971fab93d7aed699b7c9cfe0",
                    "size": 282
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:526a6c2de7d3e79ed359f01d02dd9d48290b245403e0201a935f083484961e38",
                    "size": 681
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ba1d6d9da4501fb9e2d95d2f865a8f5a9e9b2e249887af30a4f30e045d518e6d",
                    "size": 439
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d3afa241cef5b84552fd731dfdea51adbd5bc2025b2cf5f47abbb661fdcd6bc4",
                    "size": 6713345
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:34b1a68d316ad57d98ad254c7f15ffa0c09208d522a5fe4222510b80ef949c6f",
                    "size": 485
                }
            ]
        },
        "latest-20231103": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:7e81f3dea9f9e0c1053b65578b878d939a35065876795daceafe6fd9c47337fe",
                "size": 6337
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d7a9dc132f00a11a7e4f430fbea6af388f02cd765659df6c506fd18a19f5d122",
                    "size": 66705827
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5ada43b1ff524507d6206ea840fa86ad81e3ebeb53656a3dfbb677b562d496fe",
                    "size": 45529372
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:99d1c4f4a9250399a5e4b19f0596a9b77e4df97dfd2c9c428aaf33fea1b8e259",
                    "size": 473572
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:224c775941ceda556a1680d4766d17e235b32e87de039485392edbb477b49826",
                    "size": 1009
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b10b18389bc121e92a8a5d45e3b53384aca887ea2c9e760164263e1d508f85e9",
                    "size": 276
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:536070598d62154a96c0128dde03ef3bf31cb77f5963fe38cd880e73738ef7c6",
                    "size": 673
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b1a23b40bbc5c0275715045634db9bbf15671432b6af39249bfa447ce6c6a8fd",
                    "size": 440
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b14404e368d6132724d927b460202e4896d864fde9491d5ddf81ba1cf2b6d984",
                    "size": 6840828
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ca4bd3b455a00fe6c62a2e8e656fe2411eea0770be37e9e0a3d2be15170c1381",
                    "size": 482
                }
            ]
        },
        "latest-20231204": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:339472f7ed9411cdcf32e0386a7cccfe5303911bca18692b13b23e0edcd582d5",
                "size": 6338
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:70ffab5718fea0e15c61500da8ee3e247dd22fd98fb4b68e9a3e8c51d93b3025",
                    "size": 65029635
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2a5fe1a5c0b663c9895380594f812eb9f5c468f54914da91117101953bcf54ae",
                    "size": 24684016
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:db32e5fb93909460197b968d8142f7a5c6e03e121a5707005994ebdf021f66b4",
                    "size": 473571
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:cbc51047542634ba656c4e6e10885f1d105e5b62cf3cf5531f9d9fa6d06f3541",
                    "size": 1011
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8963d0019942b1d1cf04b7d5cda9c8c932e870c0e1af9f08c77303d2124fb414",
                    "size": 277
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d9f0c460ef282741fd09c81698beb08d7df875305ac7edd764e9933d7a943214",
                    "size": 675
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3d09ccdede5a88c85693ce88f72a94ce0ee7cddd8bdadf6254fe1a032e393c8d",
                    "size": 440
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9e2c7a515b3d425f253c3ae68e2a8f1326fd34cf8d1914a1a0f3187887f186cf",
                    "size": 6652007
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d40889ab8a9ba5cbab7db533033ebf17b8cbabe549f5ab64712b4a713e15fb43",
                    "size": 483
                }
            ]
        },
        "latest-20240105": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:28d87dc2c9a17131eb07b0ff8c52fbaab24a11f3fc5cce91afebaf16cf5226a4",
                "size": 6330
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:70ffab5718fea0e15c61500da8ee3e247dd22fd98fb4b68e9a3e8c51d93b3025",
                    "size": 65029635
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0d3256139a64a3c44feeaa1473c4c599f751fae9bc8cbaea8f9f7ed7398d1215",
                    "size": 24684374
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5dfa1b3659b84cf09fc16657ede421ac2e35903f3f4fd35dfbf5994fdbd72f44",
                    "size": 473566
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:65cee28720a254f44a00edb4422823c83ae198b6e9f1e5060e82c79fc9f0f87d",
                    "size": 1008
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a9f57c40b274a0c0a0788c1491ae6edf9c77c9abb6197bf811ed6f89c8e61693",
                    "size": 276
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:837ebc5139523a61c619d4b3b910c050be8140c230a9939cb31890d538c888e2",
                    "size": 676
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b2c14d398150cadcf6f3ab8fe8c47af020fb8eee5ee44664cdcc169a0ece1ebe",
                    "size": 441
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6b71675a99070f9090dc37011c2e4a94abfe9efb22c72f5b11b20af4b58c89a5",
                    "size": 6651803
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f7cc0f1bcd59ee27297f710196fa6407644572a5851a75d5eab0bf86a35fc9e0",
                    "size": 481
                }
            ]
        },
        "latest-20240201": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:8ad7251887276b85b38e7c41a32bf9859b04b21c40ab89c8cd21a43ec6e6f6ba",
                "size": 6338
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:70ffab5718fea0e15c61500da8ee3e247dd22fd98fb4b68e9a3e8c51d93b3025",
                    "size": 65029635
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6266aa16a1076eb200a9e5a1e34760a495e98c4b60db8ede2e49f38f14efd088",
                    "size": 24684233
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a144d60c01b9290d646d9f6122fda2fddc46f7625a951b0d7308b9e1a942de3c",
                    "size": 473575
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3d491f49152e07ce118454d93dc61580c637dc6ef3925adb864607a33d85f75d",
                    "size": 1008
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:198d30920974d977acffa25d34654824de8398360967c01ba8b948b0ad0d7078",
                    "size": 276
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0b0b47a23a7e4de767dd3ad900c6938231064a5fc47b9695869bdc71103fe3e4",
                    "size": 675
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ed2038c1e6d60199c2d8ec7b71ad0fb573577356081ce001d986db0347fc6deb",
                    "size": 440
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:660d289308631b655c09bf0d492b9b2752f88a46acfdc876b1d2c1a05d469ff5",
                    "size": 6652200
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:74ad52721bc115260813c961ab5efbb3f7f3b5f6ad2199b5f3b6ac0195631a25",
                    "size": 483
                }
            ]
        },
        "latest-20240304": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:0f839391e4af99e40462c3b63fb2a17ebeb3f3c187f8b524809e840f7d3011fd",
                "size": 6335
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:70ffab5718fea0e15c61500da8ee3e247dd22fd98fb4b68e9a3e8c51d93b3025",
                    "size": 65029635
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2ac36a055edb8d7d1c23892fe15e1c3b434ed33df4c847f5f0ced1d217b46a38",
                    "size": 24684028
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d6eff4af478365690d81212799d67c21ca6324307b003f66a1fc66e56f761ea4",
                    "size": 473575
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9c6eb8f233ceab952e59f4a2e73ac8a1e5ebd9ccda01de859cf5fe9f5b653f3b",
                    "size": 1009
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:984090a6409d23b040a2c91770c17a5d7e8e32d5cfbd650d9e252c14f1e2f00f",
                    "size": 276
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b3a692e0adc91ae241cd75e0d5c7a6040cd1ef100c4c1cf693252d6e420405fb",
                    "size": 675
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e45bed57f628036e05c35a8cefc91e7f65cd46138aeaa05670d876b8ede0ac54",
                    "size": 440
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e022de268281e2c32762dfd2063689fed595eae38a60a47f8142f584f2873e09",
                    "size": 6651920
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2882aad611c2a4d61ec2329d8b416ae53762716fa36f49338373a2464f9dc7c1",
                    "size": 483
                }
            ]
        },
        "latest-20240401": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:1e79788f1873482ac6f05e698c3e61b3034a6bd5cb5c70233f8617557b8392a1",
                "size": 6322
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:70ffab5718fea0e15c61500da8ee3e247dd22fd98fb4b68e9a3e8c51d93b3025",
                    "size": 65029635
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e10e4914a91a46180b1e9e654fe81b3ef80f31cc2f55ca0109b719c9b1afee7a",
                    "size": 24684229
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:58491e471b68e66954c33badd9727bb06ef76a98df99be31c2216ce2c32d15da",
                    "size": 473577
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5cfae6112c9f1e79a2e41a9f4648604e5fc6f36360177223d03ff7045feae769",
                    "size": 1010
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:16f6d5314211f95032497ce5520a9d14c05925a99c61d2447874e58d3094bb60",
                    "size": 277
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:cd1464be263a2f42dfc9b396d9270800d62ace69d274af0cf37f54bfc85ae4b7",
                    "size": 677
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3fb537258e1f64889b58e323ca14433d2712bd695b7e037d20be09977e3a2603",
                    "size": 441
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:29d6e4390b60aa2479d1e79a54f323e7445269df3960e09c9fefc8abb888d59e",
                    "size": 6652083
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d55c093a44c8f9d5f63da0032695dc6990e9ee938605a1e2c112594d18effc83",
                    "size": 483
                }
            ]
        },
        "latest-20240408": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:3d6465bc79aeadfcfd2e305ee0649cb5f2901274d2608ee7d6ed0e67d5060ec2",
                "size": 6323
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:70ffab5718fea0e15c61500da8ee3e247dd22fd98fb4b68e9a3e8c51d93b3025",
                    "size": 65029635
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:810cc0af2123a5b710b00a510661c42dd9f042defb921024e63e96104d1787ad",
                    "size": 24684051
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2ed67df3c24006c7aa570de04fe83e2f65ac30ec2fdc74544d06830f9c8836bc",
                    "size": 473572
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3075ffd7d64ed2d4116e67e62ebca6e1b242b6ba3d3519b07231fd013ec8f50a",
                    "size": 1012
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0a872d328eeb19a10571d3bf6b7028e43313ea99279cd463cdadd4c2672b722d",
                    "size": 278
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fd686a5a44e1bde50a09640df89523e5534773f9249b819c3761a9061374edd7",
                    "size": 678
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:69290262a3b92a42acde4fb0506ca6c4c7f7f06957e1cc5ab25a6c5e89078bbc",
                    "size": 440
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e3c8db67ee890f75231ca3ec266708cab4718cb55d929ff12037be55e7d59fdc",
                    "size": 6652032
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a848b7ca14b13162fa608e690095241372e490c1727c7038b28c82696fe478a4",
                    "size": 483
                }
            ]
        },
        "latest-20240429": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:2df8cad269a8ef1af556af9b86faea9f46b5ebd9dde6f350262f9ef5a6c4b046",
                "size": 6323
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:70ffab5718fea0e15c61500da8ee3e247dd22fd98fb4b68e9a3e8c51d93b3025",
                    "size": 65029635
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:091a22464e090e560c1eae70d6b60d1df293f0cc92e3455f13891ac9737589ee",
                    "size": 24684150
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4ba64e71b26acf1dcd14850f27294bf84574b0abf17704f3c7b1e1bc8924ae3e",
                    "size": 473574
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b9f588bc96c09005302be43e24375ab320fb260116256b9006a46ca1962bb2b3",
                    "size": 1010
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ec4d31d05d5223fca6a7bcc5813d36b990393626091ee48bfffc4289f851e299",
                    "size": 277
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:27a58040671a456e831f6fffd854ef45c9cba94e7bd19ad615af43b1fbfc80bf",
                    "size": 675
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9cdafbeb678e6b83255cade03b0805656a4259196b20d063b7b70aaaed64b6a4",
                    "size": 440
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:14700c5115d80cc94bb8efd0e5dafce0d0e14d1ac320eb393b48d568d41b7b20",
                    "size": 6652181
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:42d58f5cda947c98bf040363d1ab8ca0611158d2966fdf8fdd0ff7069c386f54",
                    "size": 483
                }
            ]
        },
        "latest-build": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:94929cc5be56f1530c566acdaba266fa216e81b5231e690d8d2ca20768d3c527",
                "size": 7083
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:70ffab5718fea0e15c61500da8ee3e247dd22fd98fb4b68e9a3e8c51d93b3025",
                    "size": 65029635
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:99d5b39434fb34322d2538e726b22a180c5512e8798e40de9b79d5b3bf48d7c6",
                    "size": 24684034
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9f2f482a4ec9fffaeda8d6e747e7398460a0228f76733c47d18d78a2d657b6c4",
                    "size": 235741099
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:696a0055108af30566be19bcfa3b1503a4802898314a8686252d5bcdaedf4652",
                    "size": 473572
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5988908a8c45a73a2ef86e8625ee9f3f4e03a173592818421d9441a87b06a6ef",
                    "size": 1010
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6ef7d326faacfe723ed24ad3f84d153496f8899ec2e10c96e3b3385271a8d1a9",
                    "size": 277
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:432b4c6a90343ef5c1baefab8f80b015a59e1b0dd6244fcf3763e91b96c71298",
                    "size": 677
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f9af09aee2002f2e15926bd10005614c25881682167169cc0226af25f803b7ae",
                    "size": 442
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3aaea23821fd27f4c014bcc686d754c85bb896586c7dd6d32a19b63e7fe11640",
                    "size": 14172238
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7aac30e4d420b3abd114a09a455554cecd4957535aa668033845216e52189927",
                    "size": 482
                }
            ]
        },
        "latest-build-20230811": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 7426,
                "digest": "sha256:ee9f9afc34670ecb9ee2058b2355eec456f40d14f3d4d5a9def073f923c4b05b"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 66534340,
                    "digest": "sha256:e52979b1015a445d09d63bb33f41e3cf0ec020fb421106e9ec5ccd5d2d4c3eca"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 25143226,
                    "digest": "sha256:b5d988feaed8c6ffb1b33594f0927306b14c0f99130f525452e4121d05671660"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 235353220,
                    "digest": "sha256:732569a5de90f9b52407b3366d5476e72a9c7a40e415f3abb3ecea4fcd9ab1ff"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 473585,
                    "digest": "sha256:5c99ed12124d0163c07b896af68ce4070a52ce71ec57a0726349edfe595b540a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1017,
                    "digest": "sha256:b7015c50417e6ad5a18d58871f6fab14482dc9e1c183f00890e9fbc8f9223620"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 284,
                    "digest": "sha256:39fb84c1f7effd24a80e0598e3204c7cd5f315a196828dc1a68f146c13f894c3"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 684,
                    "digest": "sha256:169947dfce7490d3ea74cbedd18279edf83fbac188e232cdef46daa81228167e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 443,
                    "digest": "sha256:a13fbfd2833965520e99f5de659fa959b7b394b24d6940ceb9f7923db95deb0b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 14099409,
                    "digest": "sha256:40e49b526ecef8f04eeb8e8d80ae8b1850d9d56b8f3862a712e0e95aabd27f9d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 481,
                    "digest": "sha256:c33180dffb5d9653f730d2d6331de80b7fe1673b5a67f8d72f39c61e33d1ed03"
                }
            ]
        },
        "latest-build-20230829": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 7094,
                "digest": "sha256:3fd965570994aa3888d0f9bc3e9a2f3d3fd6a0876eb12ad67527df50c2b11806"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 66534340,
                    "digest": "sha256:e52979b1015a445d09d63bb33f41e3cf0ec020fb421106e9ec5ccd5d2d4c3eca"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 29828162,
                    "digest": "sha256:1902a8ce6a847e43111f7f9dfc1977900620a266911b721836c2af9e1a329368"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 238957127,
                    "digest": "sha256:7ed305e9ff336f144ff67134dbf90006097a58e7050abd739d96d1fb8bd1f681"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 473575,
                    "digest": "sha256:5a211c819ea929e4aa7ea0aef924b0a628dbe470deffd06d2866e877460b3b15"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1015,
                    "digest": "sha256:0c9d94eed525cd9c2da20f1d41ea202183cafb1d07cb8a31c14a7023b74c0a0c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 282,
                    "digest": "sha256:ff84e0cdf45aab2f8994a87701c2a1d93fd6c3cb37c013e216bfb46176a048e7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 682,
                    "digest": "sha256:b34a7d1eec70bf533e41710bfcf693058d240b13bb4b89d4156a8ffa4ecd8da8"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 439,
                    "digest": "sha256:8398a79b08ee1fb43de238e4ca856fbbd1e4db8390d8762876fb8d2efd8b33bc"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 14141539,
                    "digest": "sha256:71362da03ec49a2d026dc9d0ab45247da06c08bca8f7854fb37698a8c38d1981"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 480,
                    "digest": "sha256:605b97b14027c7824ec6405017f8d93d2bb93be1e631f935cd414397a01b3c83"
                }
            ]
        },
        "latest-build-20230904": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 7094,
                "digest": "sha256:1ef50d5dba5c69285c4a9b09a118ea91ce5b290c69a7991899cea10e822cba11"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 66534340,
                    "digest": "sha256:e52979b1015a445d09d63bb33f41e3cf0ec020fb421106e9ec5ccd5d2d4c3eca"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 29827981,
                    "digest": "sha256:2027c0ec9d1eaf143fea0c0654e788ec5ddfe4b54b1237ee25ea8acd1779a4e1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 235401718,
                    "digest": "sha256:58b567e7951d89b953da3b3df55f6660e616305a4a31fdf0c8142b0dd3453f49"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 473571,
                    "digest": "sha256:a976effc1fe051a6c265eb021cdcd33ce58afa31bb788cb2082c313e56284d86"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1015,
                    "digest": "sha256:8ff10a65c0666e420a44b339babe1c7b1057611736082430ee08a029a456f95b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 281,
                    "digest": "sha256:3713d86efa354563e47d96e82131696c4ef8756085307ed3746af90679178f23"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 681,
                    "digest": "sha256:738e033be75c2e38279167f429a22a488b3bce84657b1b23c9ac9e79ce3d6ae8"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 440,
                    "digest": "sha256:333bc780ce73e5a0ffcb77ce573f65f9b9744d88da1c99bb20e95eb140fa0567"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 14125326,
                    "digest": "sha256:905ad29a09ed7d9987e20d0ff73d46631eaec9bf83df94271c4b0f4262e0cd22"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 480,
                    "digest": "sha256:fa35488b89601d145c3e13ed9ed7cb9539542592fba634fe9d8d6a160c4d8cdf"
                }
            ]
        },
        "latest-build-20230911": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:387384dbb211242ea0511d2ca832775e7148af0d2aedb8c50c79b0853a3e6935",
                "size": 7096
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e52979b1015a445d09d63bb33f41e3cf0ec020fb421106e9ec5ccd5d2d4c3eca",
                    "size": 66534340
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2027c0ec9d1eaf143fea0c0654e788ec5ddfe4b54b1237ee25ea8acd1779a4e1",
                    "size": 29827981
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:58b567e7951d89b953da3b3df55f6660e616305a4a31fdf0c8142b0dd3453f49",
                    "size": 235401718
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a976effc1fe051a6c265eb021cdcd33ce58afa31bb788cb2082c313e56284d86",
                    "size": 473571
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8ff10a65c0666e420a44b339babe1c7b1057611736082430ee08a029a456f95b",
                    "size": 1015
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3713d86efa354563e47d96e82131696c4ef8756085307ed3746af90679178f23",
                    "size": 281
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:738e033be75c2e38279167f429a22a488b3bce84657b1b23c9ac9e79ce3d6ae8",
                    "size": 681
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:333bc780ce73e5a0ffcb77ce573f65f9b9744d88da1c99bb20e95eb140fa0567",
                    "size": 440
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2c627594a0d9963137ba46fd071618ac208d1c0d5083f4612b79d7276efb350d",
                    "size": 14125667
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:26626a9221fedb58a5e32c61b2c5f0852f21a9cab4bfd2294e8615333cef0f9c",
                    "size": 482
                }
            ]
        },
        "latest-build-20231103": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:be9ea464d3e34cea15e1e64cb120ab3111f06119d01ba83c87eb0fdebf98da09",
                "size": 7096
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d7a9dc132f00a11a7e4f430fbea6af388f02cd765659df6c506fd18a19f5d122",
                    "size": 66705827
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:71c20b4a6f49a419b3011c15106e5f2aecf70bf56ec6a76fe9f8470b9ae7144c",
                    "size": 45529324
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:346640de5bc85f66dcade37c4a859ab946936975350ac806fca182b09c969bf6",
                    "size": 235677689
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:aabafe706f7c9ca4b223002726e8a9287da6034241c92cdcb771a1d71577ac97",
                    "size": 473572
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:cd071fd61c9500f371bc71adf550c933fb9e4035db571296284df66be12f3f38",
                    "size": 1009
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6d3f95fe383805b260f21d49c7b7d6b4a265f1065b9ee082f3ac52b2afb4206f",
                    "size": 276
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8d13d0db6fb6ccfca3973f9bcf2f2734218914e823ad8bb221e54b805e302160",
                    "size": 675
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7851dcec2d2d3d29c8ef4b1bc36d08f020f4e386cb1e8972872ecd5dc3ca8e73",
                    "size": 442
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b4cfe56e9eac859494848833d110af6dc784a5262f66f0731e419c3e7f447b4e",
                    "size": 14166522
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ebddfeb896adab4b02c989c87f8f5308d3945f437722e7b1da093748a07663e7",
                    "size": 481
                }
            ]
        },
        "latest-build-20231204": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:99162b94d3a48a3f352dfe675d87278061d6a0bac3acb9a417df7eec73c9ea23",
                "size": 7096
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:70ffab5718fea0e15c61500da8ee3e247dd22fd98fb4b68e9a3e8c51d93b3025",
                    "size": 65029635
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0ee857b42124439142c81be632481692232d2e8875b899f8d398db725c218792",
                    "size": 24684037
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:65cbd5776ecf57ac342e8d733e0f2264864ec82a191becda14634aa2c4620a3d",
                    "size": 235740015
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8922b5705473408f6f721f1b4e7b3872dc453c30822daa6791ad17d460c11b55",
                    "size": 473571
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:86c28970b584af5b306514eba0ffc5afd92a2375b19e509190dd6ff1844978cb",
                    "size": 1012
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:55f58392dad2e729dbb0b96cec0f30b59377a2c72309dded4e3a4a8fcb4ea181",
                    "size": 277
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9f9dd602a2a97882e93b98f2e47cf9b308ec0bfa522726eeaa1ac4fe6ec89a65",
                    "size": 677
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e27de6fa5f6fb8f4d549a1ea5146dffda3d1732bc6be3f99dfcf77710e6e0ed9",
                    "size": 441
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a3ee9147adc3038436e748f10e0e0f3bad60e6bd758c23ae3b84f7359a90109d",
                    "size": 14171633
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ee6a5c4c737e9d0e5a047fa5aca5e72044bac178d765828f572f9219d770a911",
                    "size": 482
                }
            ]
        },
        "latest-build-20240105": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:c2a492abc3ec6a49df7f4e240b13a69708db66c188e474915e135ade39b7ef83",
                "size": 7098
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:70ffab5718fea0e15c61500da8ee3e247dd22fd98fb4b68e9a3e8c51d93b3025",
                    "size": 65029635
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ea10d7d9d327bfb4ca95a61cb4e668de87a07942be5839dd839ca7143fdc6bb6",
                    "size": 24684122
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e8a5b99b04b04348c78e5a58c76dce3867e50fa42e8dd9626dc360bbf8a460ee",
                    "size": 235738030
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f7df2f177b44a2e2005b4ec55b8a858cbda5e29f45dc9e4a48a9e062ca755377",
                    "size": 473572
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ccbea00def3540b259a005f1c2c90250d1572f7ba372a73b27d1d36d283a0a95",
                    "size": 1009
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4ae7f2eb4854e3675353e40ff2659bd0cb4ad8f62b84af3c4ca0c676a73775b0",
                    "size": 276
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:33bb8f102326f6701edcb667749db8e64c12436822d5d6cbafd692f3b9c23dc5",
                    "size": 675
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ea631cf09da0a8baa07dd7f4fae0b2ae0d864edd451e3b9fe0a09f606ec471e7",
                    "size": 441
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b72ba030276f8b5e94ebe25c5becb2c102a22b1de358ec4b5615c36459884ca1",
                    "size": 14172107
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4d7b9d3531a7d928255a5c9811c8c6ee9ae9aa5b5c00257eba2d3f54be607edc",
                    "size": 481
                }
            ]
        },
        "latest-build-20240201": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:7f569b3748ba3319e54552e989d5edd65fee69b38ae03442c157a4dd0afd3f16",
                "size": 7096
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:70ffab5718fea0e15c61500da8ee3e247dd22fd98fb4b68e9a3e8c51d93b3025",
                    "size": 65029635
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b07dc9ad4161f042b57c41653f184d49c487d2a25ed1f3e083bd47154421305e",
                    "size": 24684095
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6ea906368c368af0660bc7ed3adb6f96851178ad9d97a543d34df9390a80d6d0",
                    "size": 235742309
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:aaf30d4ff1a0d351ecd5305e3a75c7bb623991bc11cba053c6c1a3cf4d25525c",
                    "size": 473575
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1852ffb159bd58d44f3935d28de7e50d48040aafde1980f129fe8944aedf62c3",
                    "size": 1011
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:16177c442f941e7fd31cec81c36ebe39b5320d600bb2deafbf3cf5733fd57ee8",
                    "size": 278
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f6c72f0981e167d2bc0f6eb5f0f5aeb0334a78c3213f1ea35a061ee84713a6ac",
                    "size": 677
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ab4decc4699180f64e838d83d030ff2080b68dde23dac915174996f94d914428",
                    "size": 442
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a73f38565354436a506dee01ba4e3effadc7bc7084ccf25a055e5d48bcf5b474",
                    "size": 14172326
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3eb7c1139970388fa00de25989f192662a46a0f0f484405f8143aa7c0c9c6914",
                    "size": 481
                }
            ]
        },
        "latest-build-20240304": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:f499f3421978fddc24a6cb354f4f65806ca9fad25af3841f0864a7be8de556bb",
                "size": 7098
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:70ffab5718fea0e15c61500da8ee3e247dd22fd98fb4b68e9a3e8c51d93b3025",
                    "size": 65029635
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9ec94aadf83b384475cb172e72990c0f1d41fa99f4665fe753d552584af4c8bc",
                    "size": 24683991
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fbbb20ee0e4b9acf95d288b1d49d16311371c4b4a33f5bea9b44f683d097687f",
                    "size": 235740019
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:008189645b0d6cdbfb836db598d2397c0274f6befae67cd8233967c2b3e2f711",
                    "size": 473575
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:676539c76824ba4388330705acd0c06c1100f841efbfd940d48f6aac1fcdfc4d",
                    "size": 1009
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bf0648e7d4e21f62042c27b1796237f3a905028ca6bf8f157cbd9101ec92549e",
                    "size": 277
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:67830ceb0a7a2cd83b237df1439d15ea7f533b19a04ddf31ea9c4348b09ce67c",
                    "size": 675
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3bbb42c18a724f71a9cd3c8bb6f12bb9b3d9684eed98477f374c503b0b2057e4",
                    "size": 442
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:653f16fc2ffd1f643931436d82b219fd83b905b2ed382643a880236096c63c0a",
                    "size": 14172100
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e569b9cfd5aa127c979687c2bc6e50a732e95c2de6ca22b0411cb871b95c3654",
                    "size": 481
                }
            ]
        },
        "latest-build-20240401": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:1fa40d4c224977c96decff26af2f978452df8c01ab33d7681c914e276dba97c5",
                "size": 7078
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:70ffab5718fea0e15c61500da8ee3e247dd22fd98fb4b68e9a3e8c51d93b3025",
                    "size": 65029635
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bb8c2f17c43f3fce343073d0420d8df8f4ac9bf5a89589ed7bd7444a4c3bb7e7",
                    "size": 24684121
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c86262dc73f1e4a40fb15ad6af3d47a8a04c556ca41258ace98b3111252115a1",
                    "size": 235742726
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f20dad326e942bb6aa56b1142ba6b1e9560c8ddf08eb3d641c65be15e6510909",
                    "size": 473576
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:37f905577fd10cad38bd9f6267e3a57160672b8e6abfe4ea7176404d4409634f",
                    "size": 1012
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ad44ac894809118b3c5207c3304bebd743e973d655b3cf765c1e1725a4cb4f7b",
                    "size": 278
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a8ac9944d8f40b573194d3b8d82c873604ed9ce2a428e51ae1e27ed5999b72e3",
                    "size": 677
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ad1313dd0864a0ccaf7eb12560591c696228364b08cbd6603e2c26360358780e",
                    "size": 442
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6f32df641fa8b78d3c23fc3821d63b5a359e91f1443f26514a16d77f8a7d3b1c",
                    "size": 14172224
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d42145cc15d8bb5e6f1a940f1b338eb6ed8b37d13afbf5eefa601ac3dcb5f883",
                    "size": 482
                }
            ]
        },
        "latest-build-20240408": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:ae657cd9decfa83e992ed3ac90bcdec52699172c0551db392fc8fd9ed8a19da4",
                "size": 7083
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:70ffab5718fea0e15c61500da8ee3e247dd22fd98fb4b68e9a3e8c51d93b3025",
                    "size": 65029635
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7169f8f710a41c8b32f8b1746aae6312834d62d139ea287548290b82c2067396",
                    "size": 24684035
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:29a178c8758dfe67a1e54a1b9f7634d1b8eabe0594fe835e39d6dd7d4b8857e4",
                    "size": 235741885
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5b4afa4031234f569c71a408abd91cb738367a90d7e8b3f0afef97a8f2a040f7",
                    "size": 473576
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fca1a50907f18ef7182ae0b51540a527595c0c4526400f69b581d2f570048d03",
                    "size": 1012
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a198a72639f6f3159577b2c32d8abbf77848be58982fb9d7c2584cfe7d995bb3",
                    "size": 278
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e32373cf5cb8af987ae4b4307a6845a837708d49f334832407946a373cac898f",
                    "size": 679
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ff0080399277e2005225aee8d8b3e4e509efe6fdd71182e8d99413e078a12907",
                    "size": 441
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:73dfdcf536cd4d53b05169127c3242f879e69cb0ccd714def2937ea309a5abe6",
                    "size": 14172112
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bb12700b0db29427b2b74b983d3773ef887f3fd07e809ff1c73a304c2d6cfe32",
                    "size": 482
                }
            ]
        },
        "latest-build-20240429": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:94929cc5be56f1530c566acdaba266fa216e81b5231e690d8d2ca20768d3c527",
                "size": 7083
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:70ffab5718fea0e15c61500da8ee3e247dd22fd98fb4b68e9a3e8c51d93b3025",
                    "size": 65029635
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:99d5b39434fb34322d2538e726b22a180c5512e8798e40de9b79d5b3bf48d7c6",
                    "size": 24684034
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9f2f482a4ec9fffaeda8d6e747e7398460a0228f76733c47d18d78a2d657b6c4",
                    "size": 235741099
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:696a0055108af30566be19bcfa3b1503a4802898314a8686252d5bcdaedf4652",
                    "size": 473572
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5988908a8c45a73a2ef86e8625ee9f3f4e03a173592818421d9441a87b06a6ef",
                    "size": 1010
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6ef7d326faacfe723ed24ad3f84d153496f8899ec2e10c96e3b3385271a8d1a9",
                    "size": 277
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:432b4c6a90343ef5c1baefab8f80b015a59e1b0dd6244fcf3763e91b96c71298",
                    "size": 677
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f9af09aee2002f2e15926bd10005614c25881682167169cc0226af25f803b7ae",
                    "size": 442
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3aaea23821fd27f4c014bcc686d754c85bb896586c7dd6d32a19b63e7fe11640",
                    "size": 14172238
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7aac30e4d420b3abd114a09a455554cecd4957535aa668033845216e52189927",
                    "size": 482
                }
            ]
        },
        "latest-run": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:2df8cad269a8ef1af556af9b86faea9f46b5ebd9dde6f350262f9ef5a6c4b046",
                "size": 6323
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:70ffab5718fea0e15c61500da8ee3e247dd22fd98fb4b68e9a3e8c51d93b3025",
                    "size": 65029635
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:091a22464e090e560c1eae70d6b60d1df293f0cc92e3455f13891ac9737589ee",
                    "size": 24684150
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4ba64e71b26acf1dcd14850f27294bf84574b0abf17704f3c7b1e1bc8924ae3e",
                    "size": 473574
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b9f588bc96c09005302be43e24375ab320fb260116256b9006a46ca1962bb2b3",
                    "size": 1010
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ec4d31d05d5223fca6a7bcc5813d36b990393626091ee48bfffc4289f851e299",
                    "size": 277
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:27a58040671a456e831f6fffd854ef45c9cba94e7bd19ad615af43b1fbfc80bf",
                    "size": 675
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9cdafbeb678e6b83255cade03b0805656a4259196b20d063b7b70aaaed64b6a4",
                    "size": 440
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:14700c5115d80cc94bb8efd0e5dafce0d0e14d1ac320eb393b48d568d41b7b20",
                    "size": 6652181
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:42d58f5cda947c98bf040363d1ab8ca0611158d2966fdf8fdd0ff7069c386f54",
                    "size": 483
                }
            ]
        },
        "latest-run-20230811": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 6668,
                "digest": "sha256:3e0080a26f103363400244bebbfd0ff5d06fc24b1c0fa688b2191dd292f63970"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 66534340,
                    "digest": "sha256:e52979b1015a445d09d63bb33f41e3cf0ec020fb421106e9ec5ccd5d2d4c3eca"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 25143226,
                    "digest": "sha256:b5d988feaed8c6ffb1b33594f0927306b14c0f99130f525452e4121d05671660"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 473584,
                    "digest": "sha256:229924996900e055f10a97289223e507bd6d314b486bf12256b0033329f50b2f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1018,
                    "digest": "sha256:ad469405724f5ebfa5388db76cea2193b20d9adaf889af963441e70e14c576fb"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 283,
                    "digest": "sha256:d6dbfc5ed9adfd3e2932836372894f67ffa7ca76ff36c38e9c43b41f08883cd4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 684,
                    "digest": "sha256:844d47ca30d4b5eeeddb6e4c2f7fb345a7b0f20c96381f50a4f679e1eb5d78db"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 442,
                    "digest": "sha256:6fda4af151b097d2187f1b4f986cdf8576bc19abf3f723561851abce35431819"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 6676311,
                    "digest": "sha256:f9ade005b55026e81ad272ef4432cc1c3a8ded9378fe7695a3d5755ca22cdcbf"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 483,
                    "digest": "sha256:0b3839ca6c182efadd04760095eabef467a30eb5b3928c1743a16536c78fb905"
                }
            ]
        },
        "latest-run-20230829": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 6334,
                "digest": "sha256:5f4565d6581f5891d281c149682d0d7c50538bfa5013f89e17f9386e934584f9"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 66534340,
                    "digest": "sha256:e52979b1015a445d09d63bb33f41e3cf0ec020fb421106e9ec5ccd5d2d4c3eca"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 29828162,
                    "digest": "sha256:1902a8ce6a847e43111f7f9dfc1977900620a266911b721836c2af9e1a329368"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 473575,
                    "digest": "sha256:15d2268bfe6351fb37fd09c4a96c844b9b3afef4df0b2b709d43d0b5cbdd9f85"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1014,
                    "digest": "sha256:edace452f624c13eb2f1e9aabad7820479555fcd494bbb554ef3b084971fa1f7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 281,
                    "digest": "sha256:b10ade70ae4ae5d3c0a50ef9da4e7d4e739d15bc0d402e804d3803b6fe53e36b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 681,
                    "digest": "sha256:4f63e82fbc411af7f584b337b891d38d46899790446e29bbaf2ddb0b4ce7a7b0"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 440,
                    "digest": "sha256:2c152717a8c0907343fa2824b5439d982d77dd0eec75a4d1539805c3c92df1ec"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 6712803,
                    "digest": "sha256:1c1bb3372356e9d07e9421ce1a5ecaceeaf652e2b3a7ca0e8af30b44cb8d5447"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 483,
                    "digest": "sha256:9b8cae22d6ea0568a4536163db02efc054a68250737b44955790bbc1264ac930"
                }
            ]
        },
        "latest-run-20230904": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 6334,
                "digest": "sha256:a49e4b777faea57581f7794fb1fba4c77a4a3b9408a2e39fca67eef554e37377"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 66534340,
                    "digest": "sha256:e52979b1015a445d09d63bb33f41e3cf0ec020fb421106e9ec5ccd5d2d4c3eca"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 29827981,
                    "digest": "sha256:2027c0ec9d1eaf143fea0c0654e788ec5ddfe4b54b1237ee25ea8acd1779a4e1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 473575,
                    "digest": "sha256:932ac56fb601e5eb729b0dcd65650440d35f0877a391a379ef9019326ec1bfda"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1016,
                    "digest": "sha256:4bc46925606fb0a2143644f6eab1d223320935a856361f66cf71c4ed6327a87d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 282,
                    "digest": "sha256:cbf6285b20078c98c9d4a998f064c93a84f256f9971fab93d7aed699b7c9cfe0"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 681,
                    "digest": "sha256:526a6c2de7d3e79ed359f01d02dd9d48290b245403e0201a935f083484961e38"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 439,
                    "digest": "sha256:ba1d6d9da4501fb9e2d95d2f865a8f5a9e9b2e249887af30a4f30e045d518e6d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 6712831,
                    "digest": "sha256:b5cf518152d5676d7098d741ffdc5f0e3ded7508263678cd6ea700cc40e7ca57"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 482,
                    "digest": "sha256:f598a9e05c7b788f4686df2e5aa19e4c17e08f6171c27910223264761d44db6f"
                }
            ]
        },
        "latest-run-20230911": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:ac459a230e16952629f00f426a26eb86b5bdc662d78ccfb6bf047690047ed2db",
                "size": 6338
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e52979b1015a445d09d63bb33f41e3cf0ec020fb421106e9ec5ccd5d2d4c3eca",
                    "size": 66534340
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2027c0ec9d1eaf143fea0c0654e788ec5ddfe4b54b1237ee25ea8acd1779a4e1",
                    "size": 29827981
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:932ac56fb601e5eb729b0dcd65650440d35f0877a391a379ef9019326ec1bfda",
                    "size": 473575
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4bc46925606fb0a2143644f6eab1d223320935a856361f66cf71c4ed6327a87d",
                    "size": 1016
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:cbf6285b20078c98c9d4a998f064c93a84f256f9971fab93d7aed699b7c9cfe0",
                    "size": 282
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:526a6c2de7d3e79ed359f01d02dd9d48290b245403e0201a935f083484961e38",
                    "size": 681
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ba1d6d9da4501fb9e2d95d2f865a8f5a9e9b2e249887af30a4f30e045d518e6d",
                    "size": 439
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d3afa241cef5b84552fd731dfdea51adbd5bc2025b2cf5f47abbb661fdcd6bc4",
                    "size": 6713345
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:34b1a68d316ad57d98ad254c7f15ffa0c09208d522a5fe4222510b80ef949c6f",
                    "size": 485
                }
            ]
        },
        "latest-run-20231103": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:7e81f3dea9f9e0c1053b65578b878d939a35065876795daceafe6fd9c47337fe",
                "size": 6337
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d7a9dc132f00a11a7e4f430fbea6af388f02cd765659df6c506fd18a19f5d122",
                    "size": 66705827
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5ada43b1ff524507d6206ea840fa86ad81e3ebeb53656a3dfbb677b562d496fe",
                    "size": 45529372
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:99d1c4f4a9250399a5e4b19f0596a9b77e4df97dfd2c9c428aaf33fea1b8e259",
                    "size": 473572
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:224c775941ceda556a1680d4766d17e235b32e87de039485392edbb477b49826",
                    "size": 1009
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b10b18389bc121e92a8a5d45e3b53384aca887ea2c9e760164263e1d508f85e9",
                    "size": 276
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:536070598d62154a96c0128dde03ef3bf31cb77f5963fe38cd880e73738ef7c6",
                    "size": 673
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b1a23b40bbc5c0275715045634db9bbf15671432b6af39249bfa447ce6c6a8fd",
                    "size": 440
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b14404e368d6132724d927b460202e4896d864fde9491d5ddf81ba1cf2b6d984",
                    "size": 6840828
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ca4bd3b455a00fe6c62a2e8e656fe2411eea0770be37e9e0a3d2be15170c1381",
                    "size": 482
                }
            ]
        },
        "latest-run-20231204": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:339472f7ed9411cdcf32e0386a7cccfe5303911bca18692b13b23e0edcd582d5",
                "size": 6338
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:70ffab5718fea0e15c61500da8ee3e247dd22fd98fb4b68e9a3e8c51d93b3025",
                    "size": 65029635
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2a5fe1a5c0b663c9895380594f812eb9f5c468f54914da91117101953bcf54ae",
                    "size": 24684016
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:db32e5fb93909460197b968d8142f7a5c6e03e121a5707005994ebdf021f66b4",
                    "size": 473571
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:cbc51047542634ba656c4e6e10885f1d105e5b62cf3cf5531f9d9fa6d06f3541",
                    "size": 1011
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8963d0019942b1d1cf04b7d5cda9c8c932e870c0e1af9f08c77303d2124fb414",
                    "size": 277
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d9f0c460ef282741fd09c81698beb08d7df875305ac7edd764e9933d7a943214",
                    "size": 675
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3d09ccdede5a88c85693ce88f72a94ce0ee7cddd8bdadf6254fe1a032e393c8d",
                    "size": 440
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9e2c7a515b3d425f253c3ae68e2a8f1326fd34cf8d1914a1a0f3187887f186cf",
                    "size": 6652007
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d40889ab8a9ba5cbab7db533033ebf17b8cbabe549f5ab64712b4a713e15fb43",
                    "size": 483
                }
            ]
        },
        "latest-run-20240105": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:28d87dc2c9a17131eb07b0ff8c52fbaab24a11f3fc5cce91afebaf16cf5226a4",
                "size": 6330
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:70ffab5718fea0e15c61500da8ee3e247dd22fd98fb4b68e9a3e8c51d93b3025",
                    "size": 65029635
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0d3256139a64a3c44feeaa1473c4c599f751fae9bc8cbaea8f9f7ed7398d1215",
                    "size": 24684374
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5dfa1b3659b84cf09fc16657ede421ac2e35903f3f4fd35dfbf5994fdbd72f44",
                    "size": 473566
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:65cee28720a254f44a00edb4422823c83ae198b6e9f1e5060e82c79fc9f0f87d",
                    "size": 1008
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a9f57c40b274a0c0a0788c1491ae6edf9c77c9abb6197bf811ed6f89c8e61693",
                    "size": 276
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:837ebc5139523a61c619d4b3b910c050be8140c230a9939cb31890d538c888e2",
                    "size": 676
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b2c14d398150cadcf6f3ab8fe8c47af020fb8eee5ee44664cdcc169a0ece1ebe",
                    "size": 441
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6b71675a99070f9090dc37011c2e4a94abfe9efb22c72f5b11b20af4b58c89a5",
                    "size": 6651803
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f7cc0f1bcd59ee27297f710196fa6407644572a5851a75d5eab0bf86a35fc9e0",
                    "size": 481
                }
            ]
        },
        "latest-run-20240201": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:8ad7251887276b85b38e7c41a32bf9859b04b21c40ab89c8cd21a43ec6e6f6ba",
                "size": 6338
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:70ffab5718fea0e15c61500da8ee3e247dd22fd98fb4b68e9a3e8c51d93b3025",
                    "size": 65029635
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6266aa16a1076eb200a9e5a1e34760a495e98c4b60db8ede2e49f38f14efd088",
                    "size": 24684233
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a144d60c01b9290d646d9f6122fda2fddc46f7625a951b0d7308b9e1a942de3c",
                    "size": 473575
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3d491f49152e07ce118454d93dc61580c637dc6ef3925adb864607a33d85f75d",
                    "size": 1008
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:198d30920974d977acffa25d34654824de8398360967c01ba8b948b0ad0d7078",
                    "size": 276
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0b0b47a23a7e4de767dd3ad900c6938231064a5fc47b9695869bdc71103fe3e4",
                    "size": 675
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ed2038c1e6d60199c2d8ec7b71ad0fb573577356081ce001d986db0347fc6deb",
                    "size": 440
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:660d289308631b655c09bf0d492b9b2752f88a46acfdc876b1d2c1a05d469ff5",
                    "size": 6652200
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:74ad52721bc115260813c961ab5efbb3f7f3b5f6ad2199b5f3b6ac0195631a25",
                    "size": 483
                }
            ]
        },
        "latest-run-20240304": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:0f839391e4af99e40462c3b63fb2a17ebeb3f3c187f8b524809e840f7d3011fd",
                "size": 6335
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:70ffab5718fea0e15c61500da8ee3e247dd22fd98fb4b68e9a3e8c51d93b3025",
                    "size": 65029635
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2ac36a055edb8d7d1c23892fe15e1c3b434ed33df4c847f5f0ced1d217b46a38",
                    "size": 24684028
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d6eff4af478365690d81212799d67c21ca6324307b003f66a1fc66e56f761ea4",
                    "size": 473575
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9c6eb8f233ceab952e59f4a2e73ac8a1e5ebd9ccda01de859cf5fe9f5b653f3b",
                    "size": 1009
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:984090a6409d23b040a2c91770c17a5d7e8e32d5cfbd650d9e252c14f1e2f00f",
                    "size": 276
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b3a692e0adc91ae241cd75e0d5c7a6040cd1ef100c4c1cf693252d6e420405fb",
                    "size": 675
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e45bed57f628036e05c35a8cefc91e7f65cd46138aeaa05670d876b8ede0ac54",
                    "size": 440
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e022de268281e2c32762dfd2063689fed595eae38a60a47f8142f584f2873e09",
                    "size": 6651920
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2882aad611c2a4d61ec2329d8b416ae53762716fa36f49338373a2464f9dc7c1",
                    "size": 483
                }
            ]
        },
        "latest-run-20240401": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:1e79788f1873482ac6f05e698c3e61b3034a6bd5cb5c70233f8617557b8392a1",
                "size": 6322
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:70ffab5718fea0e15c61500da8ee3e247dd22fd98fb4b68e9a3e8c51d93b3025",
                    "size": 65029635
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e10e4914a91a46180b1e9e654fe81b3ef80f31cc2f55ca0109b719c9b1afee7a",
                    "size": 24684229
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:58491e471b68e66954c33badd9727bb06ef76a98df99be31c2216ce2c32d15da",
                    "size": 473577
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5cfae6112c9f1e79a2e41a9f4648604e5fc6f36360177223d03ff7045feae769",
                    "size": 1010
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:16f6d5314211f95032497ce5520a9d14c05925a99c61d2447874e58d3094bb60",
                    "size": 277
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:cd1464be263a2f42dfc9b396d9270800d62ace69d274af0cf37f54bfc85ae4b7",
                    "size": 677
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3fb537258e1f64889b58e323ca14433d2712bd695b7e037d20be09977e3a2603",
                    "size": 441
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:29d6e4390b60aa2479d1e79a54f323e7445269df3960e09c9fefc8abb888d59e",
                    "size": 6652083
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d55c093a44c8f9d5f63da0032695dc6990e9ee938605a1e2c112594d18effc83",
                    "size": 483
                }
            ]
        },
        "latest-run-20240408": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:3d6465bc79aeadfcfd2e305ee0649cb5f2901274d2608ee7d6ed0e67d5060ec2",
                "size": 6323
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:70ffab5718fea0e15c61500da8ee3e247dd22fd98fb4b68e9a3e8c51d93b3025",
                    "size": 65029635
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:810cc0af2123a5b710b00a510661c42dd9f042defb921024e63e96104d1787ad",
                    "size": 24684051
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2ed67df3c24006c7aa570de04fe83e2f65ac30ec2fdc74544d06830f9c8836bc",
                    "size": 473572
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3075ffd7d64ed2d4116e67e62ebca6e1b242b6ba3d3519b07231fd013ec8f50a",
                    "size": 1012
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0a872d328eeb19a10571d3bf6b7028e43313ea99279cd463cdadd4c2672b722d",
                    "size": 278
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fd686a5a44e1bde50a09640df89523e5534773f9249b819c3761a9061374edd7",
                    "size": 678
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:69290262a3b92a42acde4fb0506ca6c4c7f7f06957e1cc5ab25a6c5e89078bbc",
                    "size": 440
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e3c8db67ee890f75231ca3ec266708cab4718cb55d929ff12037be55e7d59fdc",
                    "size": 6652032
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a848b7ca14b13162fa608e690095241372e490c1727c7038b28c82696fe478a4",
                    "size": 483
                }
            ]
        },
        "latest-run-20240429": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:2df8cad269a8ef1af556af9b86faea9f46b5ebd9dde6f350262f9ef5a6c4b046",
                "size": 6323
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:70ffab5718fea0e15c61500da8ee3e247dd22fd98fb4b68e9a3e8c51d93b3025",
                    "size": 65029635
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:091a22464e090e560c1eae70d6b60d1df293f0cc92e3455f13891ac9737589ee",
                    "size": 24684150
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4ba64e71b26acf1dcd14850f27294bf84574b0abf17704f3c7b1e1bc8924ae3e",
                    "size": 473574
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b9f588bc96c09005302be43e24375ab320fb260116256b9006a46ca1962bb2b3",
                    "size": 1010
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ec4d31d05d5223fca6a7bcc5813d36b990393626091ee48bfffc4289f851e299",
                    "size": 277
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:27a58040671a456e831f6fffd854ef45c9cba94e7bd19ad615af43b1fbfc80bf",
                    "size": 675
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9cdafbeb678e6b83255cade03b0805656a4259196b20d063b7b70aaaed64b6a4",
                    "size": 440
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:14700c5115d80cc94bb8efd0e5dafce0d0e14d1ac320eb393b48d568d41b7b20",
                    "size": 6652181
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:42d58f5cda947c98bf040363d1ab8ca0611158d2966fdf8fdd0ff7069c386f54",
                    "size": 483
                }
            ]
        },
        "run": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:2df8cad269a8ef1af556af9b86faea9f46b5ebd9dde6f350262f9ef5a6c4b046",
                "size": 6323
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:70ffab5718fea0e15c61500da8ee3e247dd22fd98fb4b68e9a3e8c51d93b3025",
                    "size": 65029635
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:091a22464e090e560c1eae70d6b60d1df293f0cc92e3455f13891ac9737589ee",
                    "size": 24684150
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4ba64e71b26acf1dcd14850f27294bf84574b0abf17704f3c7b1e1bc8924ae3e",
                    "size": 473574
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b9f588bc96c09005302be43e24375ab320fb260116256b9006a46ca1962bb2b3",
                    "size": 1010
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ec4d31d05d5223fca6a7bcc5813d36b990393626091ee48bfffc4289f851e299",
                    "size": 277
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:27a58040671a456e831f6fffd854ef45c9cba94e7bd19ad615af43b1fbfc80bf",
                    "size": 675
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9cdafbeb678e6b83255cade03b0805656a4259196b20d063b7b70aaaed64b6a4",
                    "size": 440
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:14700c5115d80cc94bb8efd0e5dafce0d0e14d1ac320eb393b48d568d41b7b20",
                    "size": 6652181
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:42d58f5cda947c98bf040363d1ab8ca0611158d2966fdf8fdd0ff7069c386f54",
                    "size": 483
                }
            ]
        },
        "run-20230811": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 6668,
                "digest": "sha256:3e0080a26f103363400244bebbfd0ff5d06fc24b1c0fa688b2191dd292f63970"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 66534340,
                    "digest": "sha256:e52979b1015a445d09d63bb33f41e3cf0ec020fb421106e9ec5ccd5d2d4c3eca"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 25143226,
                    "digest": "sha256:b5d988feaed8c6ffb1b33594f0927306b14c0f99130f525452e4121d05671660"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 473584,
                    "digest": "sha256:229924996900e055f10a97289223e507bd6d314b486bf12256b0033329f50b2f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1018,
                    "digest": "sha256:ad469405724f5ebfa5388db76cea2193b20d9adaf889af963441e70e14c576fb"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 283,
                    "digest": "sha256:d6dbfc5ed9adfd3e2932836372894f67ffa7ca76ff36c38e9c43b41f08883cd4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 684,
                    "digest": "sha256:844d47ca30d4b5eeeddb6e4c2f7fb345a7b0f20c96381f50a4f679e1eb5d78db"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 442,
                    "digest": "sha256:6fda4af151b097d2187f1b4f986cdf8576bc19abf3f723561851abce35431819"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 6676311,
                    "digest": "sha256:f9ade005b55026e81ad272ef4432cc1c3a8ded9378fe7695a3d5755ca22cdcbf"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 483,
                    "digest": "sha256:0b3839ca6c182efadd04760095eabef467a30eb5b3928c1743a16536c78fb905"
                }
            ]
        },
        "run-20230829": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 6334,
                "digest": "sha256:5f4565d6581f5891d281c149682d0d7c50538bfa5013f89e17f9386e934584f9"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 66534340,
                    "digest": "sha256:e52979b1015a445d09d63bb33f41e3cf0ec020fb421106e9ec5ccd5d2d4c3eca"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 29828162,
                    "digest": "sha256:1902a8ce6a847e43111f7f9dfc1977900620a266911b721836c2af9e1a329368"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 473575,
                    "digest": "sha256:15d2268bfe6351fb37fd09c4a96c844b9b3afef4df0b2b709d43d0b5cbdd9f85"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1014,
                    "digest": "sha256:edace452f624c13eb2f1e9aabad7820479555fcd494bbb554ef3b084971fa1f7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 281,
                    "digest": "sha256:b10ade70ae4ae5d3c0a50ef9da4e7d4e739d15bc0d402e804d3803b6fe53e36b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 681,
                    "digest": "sha256:4f63e82fbc411af7f584b337b891d38d46899790446e29bbaf2ddb0b4ce7a7b0"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 440,
                    "digest": "sha256:2c152717a8c0907343fa2824b5439d982d77dd0eec75a4d1539805c3c92df1ec"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 6712803,
                    "digest": "sha256:1c1bb3372356e9d07e9421ce1a5ecaceeaf652e2b3a7ca0e8af30b44cb8d5447"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 483,
                    "digest": "sha256:9b8cae22d6ea0568a4536163db02efc054a68250737b44955790bbc1264ac930"
                }
            ]
        },
        "run-20230904": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 6334,
                "digest": "sha256:a49e4b777faea57581f7794fb1fba4c77a4a3b9408a2e39fca67eef554e37377"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 66534340,
                    "digest": "sha256:e52979b1015a445d09d63bb33f41e3cf0ec020fb421106e9ec5ccd5d2d4c3eca"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 29827981,
                    "digest": "sha256:2027c0ec9d1eaf143fea0c0654e788ec5ddfe4b54b1237ee25ea8acd1779a4e1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 473575,
                    "digest": "sha256:932ac56fb601e5eb729b0dcd65650440d35f0877a391a379ef9019326ec1bfda"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1016,
                    "digest": "sha256:4bc46925606fb0a2143644f6eab1d223320935a856361f66cf71c4ed6327a87d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 282,
                    "digest": "sha256:cbf6285b20078c98c9d4a998f064c93a84f256f9971fab93d7aed699b7c9cfe0"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 681,
                    "digest": "sha256:526a6c2de7d3e79ed359f01d02dd9d48290b245403e0201a935f083484961e38"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 439,
                    "digest": "sha256:ba1d6d9da4501fb9e2d95d2f865a8f5a9e9b2e249887af30a4f30e045d518e6d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 6712831,
                    "digest": "sha256:b5cf518152d5676d7098d741ffdc5f0e3ded7508263678cd6ea700cc40e7ca57"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 482,
                    "digest": "sha256:f598a9e05c7b788f4686df2e5aa19e4c17e08f6171c27910223264761d44db6f"
                }
            ]
        },
        "run-20230911": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:ac459a230e16952629f00f426a26eb86b5bdc662d78ccfb6bf047690047ed2db",
                "size": 6338
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e52979b1015a445d09d63bb33f41e3cf0ec020fb421106e9ec5ccd5d2d4c3eca",
                    "size": 66534340
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2027c0ec9d1eaf143fea0c0654e788ec5ddfe4b54b1237ee25ea8acd1779a4e1",
                    "size": 29827981
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:932ac56fb601e5eb729b0dcd65650440d35f0877a391a379ef9019326ec1bfda",
                    "size": 473575
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4bc46925606fb0a2143644f6eab1d223320935a856361f66cf71c4ed6327a87d",
                    "size": 1016
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:cbf6285b20078c98c9d4a998f064c93a84f256f9971fab93d7aed699b7c9cfe0",
                    "size": 282
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:526a6c2de7d3e79ed359f01d02dd9d48290b245403e0201a935f083484961e38",
                    "size": 681
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ba1d6d9da4501fb9e2d95d2f865a8f5a9e9b2e249887af30a4f30e045d518e6d",
                    "size": 439
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d3afa241cef5b84552fd731dfdea51adbd5bc2025b2cf5f47abbb661fdcd6bc4",
                    "size": 6713345
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:34b1a68d316ad57d98ad254c7f15ffa0c09208d522a5fe4222510b80ef949c6f",
                    "size": 485
                }
            ]
        },
        "run-20231103": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:7e81f3dea9f9e0c1053b65578b878d939a35065876795daceafe6fd9c47337fe",
                "size": 6337
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d7a9dc132f00a11a7e4f430fbea6af388f02cd765659df6c506fd18a19f5d122",
                    "size": 66705827
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5ada43b1ff524507d6206ea840fa86ad81e3ebeb53656a3dfbb677b562d496fe",
                    "size": 45529372
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:99d1c4f4a9250399a5e4b19f0596a9b77e4df97dfd2c9c428aaf33fea1b8e259",
                    "size": 473572
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:224c775941ceda556a1680d4766d17e235b32e87de039485392edbb477b49826",
                    "size": 1009
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b10b18389bc121e92a8a5d45e3b53384aca887ea2c9e760164263e1d508f85e9",
                    "size": 276
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:536070598d62154a96c0128dde03ef3bf31cb77f5963fe38cd880e73738ef7c6",
                    "size": 673
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b1a23b40bbc5c0275715045634db9bbf15671432b6af39249bfa447ce6c6a8fd",
                    "size": 440
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b14404e368d6132724d927b460202e4896d864fde9491d5ddf81ba1cf2b6d984",
                    "size": 6840828
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ca4bd3b455a00fe6c62a2e8e656fe2411eea0770be37e9e0a3d2be15170c1381",
                    "size": 482
                }
            ]
        },
        "run-20231204": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:339472f7ed9411cdcf32e0386a7cccfe5303911bca18692b13b23e0edcd582d5",
                "size": 6338
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:70ffab5718fea0e15c61500da8ee3e247dd22fd98fb4b68e9a3e8c51d93b3025",
                    "size": 65029635
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2a5fe1a5c0b663c9895380594f812eb9f5c468f54914da91117101953bcf54ae",
                    "size": 24684016
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:db32e5fb93909460197b968d8142f7a5c6e03e121a5707005994ebdf021f66b4",
                    "size": 473571
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:cbc51047542634ba656c4e6e10885f1d105e5b62cf3cf5531f9d9fa6d06f3541",
                    "size": 1011
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8963d0019942b1d1cf04b7d5cda9c8c932e870c0e1af9f08c77303d2124fb414",
                    "size": 277
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d9f0c460ef282741fd09c81698beb08d7df875305ac7edd764e9933d7a943214",
                    "size": 675
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3d09ccdede5a88c85693ce88f72a94ce0ee7cddd8bdadf6254fe1a032e393c8d",
                    "size": 440
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9e2c7a515b3d425f253c3ae68e2a8f1326fd34cf8d1914a1a0f3187887f186cf",
                    "size": 6652007
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d40889ab8a9ba5cbab7db533033ebf17b8cbabe549f5ab64712b4a713e15fb43",
                    "size": 483
                }
            ]
        },
        "run-20240105": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:28d87dc2c9a17131eb07b0ff8c52fbaab24a11f3fc5cce91afebaf16cf5226a4",
                "size": 6330
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:70ffab5718fea0e15c61500da8ee3e247dd22fd98fb4b68e9a3e8c51d93b3025",
                    "size": 65029635
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0d3256139a64a3c44feeaa1473c4c599f751fae9bc8cbaea8f9f7ed7398d1215",
                    "size": 24684374
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5dfa1b3659b84cf09fc16657ede421ac2e35903f3f4fd35dfbf5994fdbd72f44",
                    "size": 473566
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:65cee28720a254f44a00edb4422823c83ae198b6e9f1e5060e82c79fc9f0f87d",
                    "size": 1008
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a9f57c40b274a0c0a0788c1491ae6edf9c77c9abb6197bf811ed6f89c8e61693",
                    "size": 276
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:837ebc5139523a61c619d4b3b910c050be8140c230a9939cb31890d538c888e2",
                    "size": 676
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b2c14d398150cadcf6f3ab8fe8c47af020fb8eee5ee44664cdcc169a0ece1ebe",
                    "size": 441
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6b71675a99070f9090dc37011c2e4a94abfe9efb22c72f5b11b20af4b58c89a5",
                    "size": 6651803
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f7cc0f1bcd59ee27297f710196fa6407644572a5851a75d5eab0bf86a35fc9e0",
                    "size": 481
                }
            ]
        },
        "run-20240201": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:8ad7251887276b85b38e7c41a32bf9859b04b21c40ab89c8cd21a43ec6e6f6ba",
                "size": 6338
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:70ffab5718fea0e15c61500da8ee3e247dd22fd98fb4b68e9a3e8c51d93b3025",
                    "size": 65029635
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6266aa16a1076eb200a9e5a1e34760a495e98c4b60db8ede2e49f38f14efd088",
                    "size": 24684233
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a144d60c01b9290d646d9f6122fda2fddc46f7625a951b0d7308b9e1a942de3c",
                    "size": 473575
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3d491f49152e07ce118454d93dc61580c637dc6ef3925adb864607a33d85f75d",
                    "size": 1008
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:198d30920974d977acffa25d34654824de8398360967c01ba8b948b0ad0d7078",
                    "size": 276
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0b0b47a23a7e4de767dd3ad900c6938231064a5fc47b9695869bdc71103fe3e4",
                    "size": 675
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ed2038c1e6d60199c2d8ec7b71ad0fb573577356081ce001d986db0347fc6deb",
                    "size": 440
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:660d289308631b655c09bf0d492b9b2752f88a46acfdc876b1d2c1a05d469ff5",
                    "size": 6652200
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:74ad52721bc115260813c961ab5efbb3f7f3b5f6ad2199b5f3b6ac0195631a25",
                    "size": 483
                }
            ]
        },
        "run-20240304": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:0f839391e4af99e40462c3b63fb2a17ebeb3f3c187f8b524809e840f7d3011fd",
                "size": 6335
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:70ffab5718fea0e15c61500da8ee3e247dd22fd98fb4b68e9a3e8c51d93b3025",
                    "size": 65029635
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2ac36a055edb8d7d1c23892fe15e1c3b434ed33df4c847f5f0ced1d217b46a38",
                    "size": 24684028
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d6eff4af478365690d81212799d67c21ca6324307b003f66a1fc66e56f761ea4",
                    "size": 473575
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9c6eb8f233ceab952e59f4a2e73ac8a1e5ebd9ccda01de859cf5fe9f5b653f3b",
                    "size": 1009
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:984090a6409d23b040a2c91770c17a5d7e8e32d5cfbd650d9e252c14f1e2f00f",
                    "size": 276
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b3a692e0adc91ae241cd75e0d5c7a6040cd1ef100c4c1cf693252d6e420405fb",
                    "size": 675
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e45bed57f628036e05c35a8cefc91e7f65cd46138aeaa05670d876b8ede0ac54",
                    "size": 440
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e022de268281e2c32762dfd2063689fed595eae38a60a47f8142f584f2873e09",
                    "size": 6651920
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2882aad611c2a4d61ec2329d8b416ae53762716fa36f49338373a2464f9dc7c1",
                    "size": 483
                }
            ]
        },
        "run-20240401": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:1e79788f1873482ac6f05e698c3e61b3034a6bd5cb5c70233f8617557b8392a1",
                "size": 6322
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:70ffab5718fea0e15c61500da8ee3e247dd22fd98fb4b68e9a3e8c51d93b3025",
                    "size": 65029635
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e10e4914a91a46180b1e9e654fe81b3ef80f31cc2f55ca0109b719c9b1afee7a",
                    "size": 24684229
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:58491e471b68e66954c33badd9727bb06ef76a98df99be31c2216ce2c32d15da",
                    "size": 473577
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5cfae6112c9f1e79a2e41a9f4648604e5fc6f36360177223d03ff7045feae769",
                    "size": 1010
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:16f6d5314211f95032497ce5520a9d14c05925a99c61d2447874e58d3094bb60",
                    "size": 277
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:cd1464be263a2f42dfc9b396d9270800d62ace69d274af0cf37f54bfc85ae4b7",
                    "size": 677
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3fb537258e1f64889b58e323ca14433d2712bd695b7e037d20be09977e3a2603",
                    "size": 441
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:29d6e4390b60aa2479d1e79a54f323e7445269df3960e09c9fefc8abb888d59e",
                    "size": 6652083
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d55c093a44c8f9d5f63da0032695dc6990e9ee938605a1e2c112594d18effc83",
                    "size": 483
                }
            ]
        },
        "run-20240408": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:3d6465bc79aeadfcfd2e305ee0649cb5f2901274d2608ee7d6ed0e67d5060ec2",
                "size": 6323
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:70ffab5718fea0e15c61500da8ee3e247dd22fd98fb4b68e9a3e8c51d93b3025",
                    "size": 65029635
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:810cc0af2123a5b710b00a510661c42dd9f042defb921024e63e96104d1787ad",
                    "size": 24684051
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2ed67df3c24006c7aa570de04fe83e2f65ac30ec2fdc74544d06830f9c8836bc",
                    "size": 473572
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3075ffd7d64ed2d4116e67e62ebca6e1b242b6ba3d3519b07231fd013ec8f50a",
                    "size": 1012
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0a872d328eeb19a10571d3bf6b7028e43313ea99279cd463cdadd4c2672b722d",
                    "size": 278
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fd686a5a44e1bde50a09640df89523e5534773f9249b819c3761a9061374edd7",
                    "size": 678
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:69290262a3b92a42acde4fb0506ca6c4c7f7f06957e1cc5ab25a6c5e89078bbc",
                    "size": 440
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e3c8db67ee890f75231ca3ec266708cab4718cb55d929ff12037be55e7d59fdc",
                    "size": 6652032
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a848b7ca14b13162fa608e690095241372e490c1727c7038b28c82696fe478a4",
                    "size": 483
                }
            ]
        },
        "run-20240429": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:2df8cad269a8ef1af556af9b86faea9f46b5ebd9dde6f350262f9ef5a6c4b046",
                "size": 6323
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:70ffab5718fea0e15c61500da8ee3e247dd22fd98fb4b68e9a3e8c51d93b3025",
                    "size": 65029635
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:091a22464e090e560c1eae70d6b60d1df293f0cc92e3455f13891ac9737589ee",
                    "size": 24684150
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4ba64e71b26acf1dcd14850f27294bf84574b0abf17704f3c7b1e1bc8924ae3e",
                    "size": 473574
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b9f588bc96c09005302be43e24375ab320fb260116256b9006a46ca1962bb2b3",
                    "size": 1010
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ec4d31d05d5223fca6a7bcc5813d36b990393626091ee48bfffc4289f851e299",
                    "size": 277
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:27a58040671a456e831f6fffd854ef45c9cba94e7bd19ad615af43b1fbfc80bf",
                    "size": 675
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9cdafbeb678e6b83255cade03b0805656a4259196b20d063b7b70aaaed64b6a4",
                    "size": 440
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:14700c5115d80cc94bb8efd0e5dafce0d0e14d1ac320eb393b48d568d41b7b20",
                    "size": 6652181
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:42d58f5cda947c98bf040363d1ab8ca0611158d2966fdf8fdd0ff7069c386f54",
                    "size": 483
                }
            ]
        }
    },
    "tags": [
        "20230811",
        "20230829",
        "20230904",
        "20230911",
        "20231103",
        "20231204",
        "20240105",
        "20240201",
        "20240304",
        "20240401",
        "20240408",
        "20240429",
        "36",
        "36-20230811",
        "36-20230829",
        "36-20230904",
        "36-20230911",
        "36-20231103",
        "36-20231204",
        "36-20240105",
        "36-20240201",
        "36-20240304",
        "36-20240401",
        "36-20240408",
        "36-build",
        "36-build-20230811",
        "36-build-20230829",
        "36-build-20230904",
        "36-build-20230911",
        "36-build-20231103",
        "36-build-20231204",
        "36-build-20240105",
        "36-build-20240201",
        "36-build-20240304",
        "36-build-20240401",
        "36-build-20240408",
        "36-run",
        "36-run-20230811",
        "36-run-20230829",
        "36-run-20230904",
        "36-run-20230911",
        "36-run-20231103",
        "36-run-20231204",
        "36-run-20240105",
        "36-run-20240201",
        "36-run-20240304",
        "36-run-20240401",
        "36-run-20240408",
        "37",
        "37-20230811",
        "37-20230829",
        "37-20230904",
        "37-20230911",
        "37-20231103",
        "37-20231204",
        "37-20240105",
        "37-20240201",
        "37-20240304",
        "37-20240401",
        "37-20240408",
        "37-20240429",
        "37-build",
        "37-build-20230811",
        "37-build-20230829",
        "37-build-20230904",
        "37-build-20230911",
        "37-build-20231103",
        "37-build-20231204",
        "37-build-20240105",
        "37-build-20240201",
        "37-build-20240304",
        "37-build-20240401",
        "37-build-20240408",
        "37-build-20240429",
        "37-run",
        "37-run-20230811",
        "37-run-20230829",
        "37-run-20230904",
        "37-run-20230911",
        "37-run-20231103",
        "37-run-20231204",
        "37-run-20240105",
        "37-run-20240201",
        "37-run-20240304",
        "37-run-20240401",
        "37-run-20240408",
        "37-run-20240429",
        "38",
        "38-20230811",
        "38-20230829",
        "38-20230904",
        "38-20230911",
        "38-20231103",
        "38-20231204",
        "38-20240105",
        "38-20240201",
        "38-20240304",
        "38-20240401",
        "38-20240408",
        "38-20240429",
        "38-build",
        "38-build-20230811",
        "38-build-20230829",
        "38-build-20230904",
        "38-build-20230911",
        "38-build-20231103",
        "38-build-20231204",
        "38-build-20240105",
        "38-build-20240201",
        "38-build-20240304",
        "38-build-20240401",
        "38-build-20240408",
        "38-build-20240429",
        "38-run",
        "38-run-20230811",
        "38-run-20230829",
        "38-run-20230904",
        "38-run-20230911",
        "38-run-20231103",
        "38-run-20231204",
        "38-run-20240105",
        "38-run-20240201",
        "38-run-20240304",
        "38-run-20240401",
        "38-run-20240408",
        "38-run-20240429",
        "build",
        "build-20230811",
        "build-20230829",
        "build-20230904",
        "build-20230911",
        "build-20231103",
        "build-20231204",
        "build-20240105",
        "build-20240201",
        "build-20240304",
        "build-20240401",
        "build-20240408",
        "build-20240429",
        "latest",
        "latest-20230811",
        "latest-20230829",
        "latest-20230904",
        "latest-20230911",
        "latest-20231103",
        "latest-20231204",
        "latest-20240105",
        "latest-20240201",
        "latest-20240304",
        "latest-20240401",
        "latest-20240408",
        "latest-20240429",
        "latest-build",
        "latest-build-20230811",
        "latest-build-20230829",
        "latest-build-20230904",
        "latest-build-20230911",
        "latest-build-20231103",
        "latest-build-20231204",
        "latest-build-20240105",
        "latest-build-20240201",
        "latest-build-20240304",
        "latest-build-20240401",
        "latest-build-20240408",
        "latest-build-20240429",
        "latest-run",
        "latest-run-20230811",
        "latest-run-20230829",
        "latest-run-20230904",
        "latest-run-20230911",
        "latest-run-20231103",
        "latest-run-20231204",
        "latest-run-20240105",
        "latest-run-20240201",
        "latest-run-20240304",
        "latest-run-20240401",
        "latest-run-20240408",
        "latest-run-20240429",
        "run",
        "run-20230811",
        "run-20230829",
        "run-20230904",
        "run-20230911",
        "run-20231103",
        "run-20231204",
        "run-20240105",
        "run-20240201",
        "run-20240304",
        "run-20240401",
        "run-20240408",
        "run-20240429"
    ],
    "configs": {
        "20230811": {
            "architecture": "amd64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "amd64",
                    "io.balena.device-type": "intel-nuc",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2023-08-21T20:15:55.822498992Z",
            "history": [
                {
                    "created": "2021-04-01T17:59:37.09884046Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-20T10:46:14.111891363Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-04T18:22:42.383186833Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:3242aba4f770b24f6433fa19e51c222acf5a33d2268b82c7ec43874258838970 in / "
                },
                {
                    "created": "2023-08-04T18:22:43.038358583Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-21T19:52:26.839667108Z",
                    "created_by": "LABEL io.balena.architecture=amd64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-21T19:52:26.839667108Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-21T19:59:43.225911138Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-21T19:59:43.225911138Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-21T19:59:43.265017408Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-21T19:59:43.278822397Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-21T19:59:43.31418837Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-21T19:59:43.31418837Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-21T19:59:43.649629911Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-21T19:59:44.091734469Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: Intel 64-bit (x86-64) \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-21T20:15:55.528470281Z",
                    "created_by": "LABEL io.balena.device-type=intel-nuc",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-21T20:15:55.528470281Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-21T20:15:55.822498992Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: Intel 64-bit (x86-64) \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "moby.buildkit.buildinfo.v1": "eyJmcm9udGVuZCI6ImRvY2tlcmZpbGUudjAiLCJhdHRycyI6eyJmaWxlbmFtZSI6IkRvY2tlcmZpbGUifSwic291cmNlcyI6W3sidHlwZSI6ImRvY2tlci1pbWFnZSIsInJlZiI6ImRvY2tlci5pby9iYWxlbmFsaWIvYW1kNjQtZmVkb3JhOjM3LXJ1biIsInBpbiI6InNoYTI1Njo0ZDZkZjdlMzYzZTNiZmE5ZWZkNDVjODIxMjk2ZTE3MmMwOTAzMmE3OTU0MTkyZjczMDQxMWM4OTlmZWYyNGI3In1dfQ==",
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:8a5c91bcb42954a1d542cf1243b349f4d83fdd74d2ddc71ccaf63ffb7b661793",
                    "sha256:fca50d5c7997910a204bc6cee98bca6e25e11762221da2784c6d3645566f0ddb",
                    "sha256:3480908bbabedafa2f826ca9f403cb09eecf0383304b8bbe14e68de7beca1ddf",
                    "sha256:0dd58378b6f4109aefd89403151fb2cbfb7b5b5a829252b6828dd74ac3d4197f",
                    "sha256:597c7f0663815a1c3890fa212a75c9d37ecdc09d52d9952fd5b53e5d9caf6212",
                    "sha256:dbf5739d78d524aac1abdba9884c01b35edc636d914b379819738a3ef75648d7",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:21f04c3046c703b1a27343fba484e8a1bcdb988c7d8555b059c066ef4f0220d9",
                    "sha256:ce2118ba52ad3ebcbc8cbd5810227ff666d0cd51fad51fc828f171d92af3d74d",
                    "sha256:d111ea2ab348ba7c188e6a0c3aac986f1b5b2009b38e7416bf4ff012d1666f45"
                ]
            }
        },
        "20230829": {
            "architecture": "amd64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "amd64",
                    "io.balena.device-type": "intel-nuc",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2023-09-02T04:17:48.735207793Z",
            "history": [
                {
                    "created": "2021-04-01T17:59:37.09884046Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-20T10:46:14.111891363Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-04T18:22:42.383186833Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:3242aba4f770b24f6433fa19e51c222acf5a33d2268b82c7ec43874258838970 in / "
                },
                {
                    "created": "2023-08-04T18:22:43.038358583Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-02T03:53:27.833103705Z",
                    "created_by": "LABEL io.balena.architecture=amd64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-02T03:53:27.833103705Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T03:59:29.487734532Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T03:59:29.487734532Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-02T03:59:29.506051361Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T03:59:29.527922573Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T03:59:29.557992178Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T03:59:29.557992178Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-02T03:59:29.842622847Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T03:59:30.225039407Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: Intel 64-bit (x86-64) \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T04:17:48.484867648Z",
                    "created_by": "LABEL io.balena.device-type=intel-nuc",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-02T04:17:48.484867648Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T04:17:48.735207793Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: Intel 64-bit (x86-64) \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:8a5c91bcb42954a1d542cf1243b349f4d83fdd74d2ddc71ccaf63ffb7b661793",
                    "sha256:380419ecfa744daae3d1681c557d6abf8c91c0c5fc86a2969a8ed77e9709baa4",
                    "sha256:58c1f2554a6401c303a1ee84178afc50a8b06dab7b87655f31d30c850c487334",
                    "sha256:c3f7ce1d467d976dfa04264cd86521d73064a1ed6e9fb71dc3410e477ae870ae",
                    "sha256:6f5c6abfd2b62955e4a3b682bb44712ef50b0fd3543e11c7d4fc17f1b82f6907",
                    "sha256:56469bde0dc559a1839e14d976f279c90e21acf0ed0b000c6a72d55ee8220876",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:8e90a20b4674cca48347191b933581e0ed4da241493cbfdf5a194bae7e5f8292",
                    "sha256:95a838d8cef27239aa14c47871c7b64b3b90b793856807b90df22d3881fd91b0",
                    "sha256:ec1d9080493cb8830eb541d3ffd2142141dc02d8e2e41bccd274018f0267e682"
                ]
            }
        },
        "20230904": {
            "architecture": "amd64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "amd64",
                    "io.balena.device-type": "intel-nuc",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2023-09-09T04:14:00.317904233Z",
            "history": [
                {
                    "created": "2021-04-01T17:59:37.09884046Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-20T10:46:14.111891363Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-04T18:22:42.383186833Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:3242aba4f770b24f6433fa19e51c222acf5a33d2268b82c7ec43874258838970 in / "
                },
                {
                    "created": "2023-08-04T18:22:43.038358583Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T03:59:08.044755432Z",
                    "created_by": "LABEL io.balena.architecture=amd64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T03:59:08.044755432Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T03:59:08.444875601Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T03:59:08.444875601Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T03:59:08.456878787Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T03:59:08.464404941Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T03:59:08.470905987Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T03:59:08.470905987Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T03:59:08.778387992Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T03:59:08.973104388Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: Intel 64-bit (x86-64) \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:14:00.107701171Z",
                    "created_by": "LABEL io.balena.device-type=intel-nuc",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T04:14:00.107701171Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:14:00.317904233Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: Intel 64-bit (x86-64) \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:8a5c91bcb42954a1d542cf1243b349f4d83fdd74d2ddc71ccaf63ffb7b661793",
                    "sha256:7e137976dd3d65e1b7be54fc9701bd78bf00b6ee978ad81280b8bd275035d3a7",
                    "sha256:42ee78234deac018bf727039dafccfb78c9d756f1ec8903cef7eb85190ead930",
                    "sha256:7dc9005f3e3ce1987ea49d7c2df24a1cc02afb441b95cfff9caf872819ab4dfc",
                    "sha256:23e486a49ac227803e0c85abb4c0cd9fd2aa05725dbba3f37eb1a3aeb1d7bd57",
                    "sha256:96cfa030f844607e078e22e5b7761f3ce499394317ad0af4d4db456fb31aa74d",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:1ea1e3eb686efc3c91616ea714b0a283b6173e34d5506b3b624d37b1ed0064ed",
                    "sha256:542b978ffd01f251026ec67db609ce53d689b901747e6febcc4f908c46e731a6",
                    "sha256:ab7da43fc40a18bd1103ac844b2245b9dc80a8c437d638c05f5d64d746e937d2"
                ]
            }
        },
        "20230911": {
            "architecture": "amd64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "amd64",
                    "io.balena.device-type": "odyssey-x86",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2023-09-11T23:03:25.893033534Z",
            "history": [
                {
                    "created": "2021-04-01T17:59:37.09884046Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-20T10:46:14.111891363Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-04T18:22:42.383186833Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:3242aba4f770b24f6433fa19e51c222acf5a33d2268b82c7ec43874258838970 in / "
                },
                {
                    "created": "2023-08-04T18:22:43.038358583Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T03:59:08.044755432Z",
                    "created_by": "LABEL io.balena.architecture=amd64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T03:59:08.044755432Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T03:59:08.444875601Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T03:59:08.444875601Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T03:59:08.456878787Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T03:59:08.464404941Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T03:59:08.470905987Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T03:59:08.470905987Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T03:59:08.778387992Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T03:59:08.973104388Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: Intel 64-bit (x86-64) \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-11T23:03:25.832214295Z",
                    "created_by": "LABEL io.balena.device-type=odyssey-x86",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-11T23:03:25.832214295Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-11T23:03:25.893033534Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: Intel 64-bit (x86-64) \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:8a5c91bcb42954a1d542cf1243b349f4d83fdd74d2ddc71ccaf63ffb7b661793",
                    "sha256:7e137976dd3d65e1b7be54fc9701bd78bf00b6ee978ad81280b8bd275035d3a7",
                    "sha256:42ee78234deac018bf727039dafccfb78c9d756f1ec8903cef7eb85190ead930",
                    "sha256:7dc9005f3e3ce1987ea49d7c2df24a1cc02afb441b95cfff9caf872819ab4dfc",
                    "sha256:23e486a49ac227803e0c85abb4c0cd9fd2aa05725dbba3f37eb1a3aeb1d7bd57",
                    "sha256:96cfa030f844607e078e22e5b7761f3ce499394317ad0af4d4db456fb31aa74d",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:1ea1e3eb686efc3c91616ea714b0a283b6173e34d5506b3b624d37b1ed0064ed",
                    "sha256:6477848327ef7344548c3706925e3c386ce207ba8f85bbff0604d9577f437ea0",
                    "sha256:b3d950f5dc5c037e537892b19270392fa69428eab347e4e7de50f9c4a58efada"
                ]
            }
        },
        "20231103": {
            "architecture": "amd64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "amd64",
                    "io.balena.device-type": "odyssey-x86",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2023-11-04T20:35:38.577134772Z",
            "history": [
                {
                    "created": "2021-04-01T17:59:37.09884046Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-20T10:46:14.111891363Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-06T18:22:29.551043544Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:395273c1903fb6b62f46bbf72259ef76c6eb16f475d22abd47b7633b2b77a847 in / "
                },
                {
                    "created": "2023-10-06T18:22:30.235678845Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-04T20:25:11.729328966Z",
                    "created_by": "LABEL io.balena.architecture=amd64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-04T20:25:11.729328966Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T20:25:11.994255514Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T20:25:11.994255514Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-04T20:25:12.004780927Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T20:25:12.01526574Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T20:25:12.040162507Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T20:25:12.040162507Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-04T20:25:12.188765905Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T20:25:12.273025011Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: Intel 64-bit (x86-64) \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T20:35:38.486556692Z",
                    "created_by": "LABEL io.balena.device-type=odyssey-x86",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-04T20:35:38.486556692Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T20:35:38.577134772Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: Intel 64-bit (x86-64) \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:9b5a2675a1f8f633773bcb6f6dbade49054173b4bfd1599e2bbe64e975812329",
                    "sha256:dd03ffd46e3f50f2600532b8ee5aec2d2f39ac877d18df277fab563fbcf38866",
                    "sha256:c9a4ad29326980cdeb327278fabacfbfdaaee16234b8faae944634318f9efbd7",
                    "sha256:708ae14cfa0655c8947eda92d1111c7a0d097106e05cc443000b4958c60b7183",
                    "sha256:5b6c9e19c5b005401f4d5869255f3c70112a4551073cec3bd2bd57252289d958",
                    "sha256:1e3bb05f1b5995053bcd278a3b2764e0251dd367c7d5c8de4df7e5aa9241c8dc",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:4ba5a8faabeb7bb0b84e3bd972b6407bce7d138c7b9b56524725593ee8255157",
                    "sha256:b2bd3f62d35c5fa7aa62762c707241f33f2d83849733c03010880cdb7e60c672",
                    "sha256:40dd8b05a56defef78b6ae818a0d7a251be5a0d6d761cb72301827229442f673"
                ]
            }
        },
        "20231204": {
            "architecture": "amd64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "amd64",
                    "io.balena.device-type": "odyssey-x86",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2023-12-06T18:39:53.083327891Z",
            "history": [
                {
                    "created": "2021-04-01T17:59:37.09884046Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-20T10:46:14.111891363Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-29T00:26:01.517560423Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:533e3405b5c87c5a7239c02ef2d954b1072df5afeee2139a9e2dd133dd4612b6 in / "
                },
                {
                    "created": "2023-11-29T00:26:02.196411879Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T17:56:03.747827155Z",
                    "created_by": "LABEL io.balena.architecture=amd64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T17:56:03.747827155Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T17:56:03.951248076Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T17:56:03.951248076Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T17:56:03.960836387Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T17:56:03.971888675Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T17:56:03.980766309Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T17:56:03.980766309Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T17:56:04.083929145Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T17:56:04.173103482Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: Intel 64-bit (x86-64) \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T18:39:53.001839298Z",
                    "created_by": "LABEL io.balena.device-type=odyssey-x86",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T18:39:53.001839298Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T18:39:53.083327891Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: Intel 64-bit (x86-64) \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:e89a2dafe59a58dee0fcdc4620c1e36ef34357d92655da13e1f656c33031c0b5",
                    "sha256:cf2ae2bdb9183af3f824b7e4c29fbd606e47799a97d6096d8f7e00ef5f490439",
                    "sha256:3d570902edb01a6b3632c26a6cef287f60fe5fda67ce2135a06f978c2ab4434a",
                    "sha256:21bdf36a029e5507f6b24f0ca8f4bc91bd5e55441b51ec0aeb0d61ddee34e8f7",
                    "sha256:6b13b5a03307c5608826145c3387a6fe156cfdf40f04965b7aaf32e06f80524d",
                    "sha256:8dee186546bb8954265c9c4b824dcc5702b7e5ae89c0cb055cf77b4b65228265",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:0b741073e9307f7b66244c8c4785863940367e83335ae78a22c374573878a558",
                    "sha256:cf7e1f853ea83becf842239b01452fb6d0e55296dbe10521d4d1253f626b0e61",
                    "sha256:843eaaba86419ec2d0b89eab4993af43674615156e09620c041bcd82c5a5f075"
                ]
            }
        },
        "20240105": {
            "architecture": "amd64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "amd64",
                    "io.balena.device-type": "odyssey-x86",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2024-01-05T14:09:49.038173762Z",
            "history": [
                {
                    "created": "2021-04-01T17:59:37.09884046Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-20T10:46:14.111891363Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-29T00:26:01.517560423Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:533e3405b5c87c5a7239c02ef2d954b1072df5afeee2139a9e2dd133dd4612b6 in / "
                },
                {
                    "created": "2023-11-29T00:26:02.196411879Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-05T13:59:54.18041825Z",
                    "created_by": "LABEL io.balena.architecture=amd64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-05T13:59:54.18041825Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-05T13:59:54.417070806Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-05T13:59:54.417070806Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-05T13:59:54.427392984Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-05T13:59:54.459082685Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-05T13:59:54.48704776Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-05T13:59:54.48704776Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-05T13:59:54.701706892Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-05T13:59:54.764168187Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: Intel 64-bit (x86-64) \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-05T14:09:48.9753273Z",
                    "created_by": "LABEL io.balena.device-type=odyssey-x86",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-05T14:09:48.9753273Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-05T14:09:49.038173762Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: Intel 64-bit (x86-64) \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:e89a2dafe59a58dee0fcdc4620c1e36ef34357d92655da13e1f656c33031c0b5",
                    "sha256:be5ea942547e5f184cf40a284eeb82005dd573a75ec6da220bef84440c21799d",
                    "sha256:d93e9aba12c58fab57e3c93789ec071228282082e33691ff6db4af403c20c546",
                    "sha256:276623a2256a9b65bf5b724299227e40e352268a9527768edc0f5ce9f25058c2",
                    "sha256:54f349630e0de220734a865fd92a68af438bb762181ba71ce2e8f341d0a5c3f2",
                    "sha256:e0bd5807f9bff81e6d1440c396316bc46e684344b539d3c9a81edca0d1cf9ee4",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:bf359b349ecedfa1d9b00bd125627393917dc1d0d10f21d8655da275098f2e36",
                    "sha256:767d954a0e028119754e55f59fa017135398f7fcddf1acdae3e7365a2a86de9b",
                    "sha256:86f86251a137a57e059ea97ef596b7deb170ff38b1b036e3de423a2a1e3347f5"
                ]
            }
        },
        "20240201": {
            "architecture": "amd64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "amd64",
                    "io.balena.device-type": "odyssey-x86",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2024-02-03T22:43:46.779088827Z",
            "history": [
                {
                    "created": "2021-04-01T17:59:37.09884046Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-20T10:46:14.111891363Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-29T00:26:01.517560423Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:533e3405b5c87c5a7239c02ef2d954b1072df5afeee2139a9e2dd133dd4612b6 in / "
                },
                {
                    "created": "2023-11-29T00:26:02.196411879Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-03T22:35:36.898952913Z",
                    "created_by": "LABEL io.balena.architecture=amd64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-03T22:35:36.898952913Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-03T22:35:37.498519547Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-03T22:35:37.498519547Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-03T22:35:37.511124291Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-03T22:35:37.542159925Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-03T22:35:37.554209496Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-03T22:35:37.554209496Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-03T22:35:37.769174671Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-03T22:35:37.829518486Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: Intel 64-bit (x86-64) \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-03T22:43:46.723150432Z",
                    "created_by": "LABEL io.balena.device-type=odyssey-x86",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-03T22:43:46.723150432Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-03T22:43:46.779088827Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: Intel 64-bit (x86-64) \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:e89a2dafe59a58dee0fcdc4620c1e36ef34357d92655da13e1f656c33031c0b5",
                    "sha256:4b96f1f532259574bf845e53bf75f5f3c0299925937fe263f5045f9062bd4dfe",
                    "sha256:e6abbbab6c0809ea1bea86f38e82aa33b1ebd78e9b5551e84cf93ab2a8e6f803",
                    "sha256:c6814fba19589c2e0583da7054121dc8142a4edfb259908aff631683e577f45d",
                    "sha256:2ec60fba1a4b3f73515c6c0f9db1371238b0da15c73d84aae9ef3f7275ec0741",
                    "sha256:cc0a116e7685f797625a84b4f73221e08d0a2e20e03846223e7f97e2560504a6",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:b756dc667e503ba7bfc9bb0a3f53c4ce4a81a520e4c09c358b11abf71c0f44cf",
                    "sha256:f35bc912ff63f7a1e6c6b9de29bd060e334b1c20fd4bffd0699d356c5834ae06",
                    "sha256:072c1fd16e6189864737ee5eab67766af26d77e9596f123c1897e655867ed416"
                ]
            }
        },
        "20240304": {
            "architecture": "amd64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "amd64",
                    "io.balena.device-type": "odyssey-x86",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2024-03-05T18:48:10.26260045Z",
            "history": [
                {
                    "created": "2021-04-01T17:59:37.09884046Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-20T10:46:14.111891363Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-29T00:26:01.517560423Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:533e3405b5c87c5a7239c02ef2d954b1072df5afeee2139a9e2dd133dd4612b6 in / "
                },
                {
                    "created": "2023-11-29T00:26:02.196411879Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T18:27:17.052466666Z",
                    "created_by": "LABEL io.balena.architecture=amd64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T18:27:17.052466666Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T18:27:17.680717512Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T18:27:17.680717512Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T18:27:17.690105177Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T18:27:17.729671857Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T18:27:17.738614063Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T18:27:17.738614063Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T18:27:18.038006148Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T18:27:18.09950217Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: Intel 64-bit (x86-64) \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T18:48:10.184741148Z",
                    "created_by": "LABEL io.balena.device-type=odyssey-x86",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T18:48:10.184741148Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T18:48:10.26260045Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: Intel 64-bit (x86-64) \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:e89a2dafe59a58dee0fcdc4620c1e36ef34357d92655da13e1f656c33031c0b5",
                    "sha256:407784ce233d07c91716b195ba5fdadca2c77276758f618b3bf474704c07c93c",
                    "sha256:6790dcb3bf20873f21627079dd24a2d23da7d970b8a3fcb2e3e11d209531497d",
                    "sha256:1ca6aa489d1fe12bc5b9e9e9b286d3564777218362d06f08f07e262eccdeba52",
                    "sha256:ee7b099673a169cff2d986c726d47ef4ffb274e162056718e9ffe10f5db8d2b0",
                    "sha256:8949d553ef226f0d0474c9ab28f49bfd35c6aa44a4ee31ec5ea952e48c0d67c2",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:f5a5aad7ca1b65f289777c165b7d8e29d5078483491ada457a5b0bbf9c4fe705",
                    "sha256:a61f4a1f3c828639cef685f003c1b96631c29ca987fcc18c7ec9d20b7376c742",
                    "sha256:c4a01c429f2990290158ecb52c4beacba0eacf2b78d0742636b3ad881f713f81"
                ]
            }
        },
        "20240401": {
            "architecture": "amd64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "amd64",
                    "io.balena.device-type": "odyssey-x86",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                }
            },
            "created": "2024-04-02T02:40:06.736289083Z",
            "history": [
                {
                    "created": "2021-04-01T17:59:37.09884046Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-20T10:46:14.111891363Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-29T00:26:01.517560423Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:533e3405b5c87c5a7239c02ef2d954b1072df5afeee2139a9e2dd133dd4612b6 in / "
                },
                {
                    "created": "2023-11-29T00:26:02.196411879Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T02:31:15.961600503Z",
                    "created_by": "LABEL io.balena.architecture=amd64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T02:31:15.961600503Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T02:31:16.301448773Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T02:31:16.301448773Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T02:31:16.310908864Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T02:31:16.32003679Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T02:31:16.353434347Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T02:31:16.353434347Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T02:31:16.471928657Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T02:31:16.525879007Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: Intel 64-bit (x86-64) \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T02:40:06.672943671Z",
                    "created_by": "LABEL io.balena.device-type=odyssey-x86",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T02:40:06.672943671Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T02:40:06.736289083Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: Intel 64-bit (x86-64) \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:e89a2dafe59a58dee0fcdc4620c1e36ef34357d92655da13e1f656c33031c0b5",
                    "sha256:ff8ed929feef33ec1c1f39c6b4f80cc3764a80f0e5629ec44a97462d096a8a67",
                    "sha256:140f598fedc50aebac7be5f429b0d1d1430326387767f769f8d75d71fafe67ce",
                    "sha256:a331ae444751612061e818b34079766a4799bf04d670910014b918e5a7f2aa98",
                    "sha256:af8973f6bb2e5a32c405b2a69629d63fe1968302e74a80caf44fc5b30def8c6f",
                    "sha256:28f34c8df9f98ec114938494ca7ed4bc600d4757531280b157b6268cdd7049db",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:b87f537d1904201dba89c59292d231a7b6310b37c6372c2650a11e3101d075c4",
                    "sha256:f71fb883b9f491b773f1bdd93386c88d7888e4f89612d99ca5eb498fa9e462f8",
                    "sha256:2711cd49e15e728d8336758cdf52285826a23f57012eeade73151b6c11bd7b49"
                ]
            }
        },
        "20240408": {
            "architecture": "amd64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "amd64",
                    "io.balena.device-type": "odyssey-x86",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                }
            },
            "created": "2024-04-09T13:46:07.607574782Z",
            "history": [
                {
                    "created": "2021-04-01T17:59:37.09884046Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-20T10:46:14.111891363Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-29T00:26:01.517560423Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:533e3405b5c87c5a7239c02ef2d954b1072df5afeee2139a9e2dd133dd4612b6 in / "
                },
                {
                    "created": "2023-11-29T00:26:02.196411879Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:35:49.166636872Z",
                    "created_by": "LABEL io.balena.architecture=amd64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:35:49.166636872Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:35:49.353720115Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:35:49.353720115Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:35:49.363434466Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:35:49.373123647Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:35:49.403773106Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:35:49.403773106Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:35:49.523623495Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:35:49.603887285Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: Intel 64-bit (x86-64) \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:46:07.542279168Z",
                    "created_by": "LABEL io.balena.device-type=odyssey-x86",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:46:07.542279168Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:46:07.607574782Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: Intel 64-bit (x86-64) \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:e89a2dafe59a58dee0fcdc4620c1e36ef34357d92655da13e1f656c33031c0b5",
                    "sha256:5be4da3e11c12f8a7f04187b011613695c861dbfaa34600788e52b7a72d0fe20",
                    "sha256:77f26d83150120b739b5d8d75ad033761be477817d6c19e6a1dd8c375f42f8ef",
                    "sha256:d08beaf06efe313a283e864e75d9d0b4f53e9d5eae6a09aa7b5daa44b1bf2b12",
                    "sha256:2c842f6d58dfaa63098a6f68b838e8d1da81eb6a08832146d6b6f7379029d6e6",
                    "sha256:813ccd1d89aa81b3808b9f051f610516cd417b28eec1a286ca48a7b4574d4fb0",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:816dbe0c347dcba570fbf323572692f25fe5a89905ce0078708fd342430a2da8",
                    "sha256:9e5b74d2708d287243141cf8004976c99f1538dd32f790d927246da496da7e05",
                    "sha256:43f48a9c6b65bf6ad77cfd22bb9151ac2bd7a0bb3615c8ae854635e8c5065939"
                ]
            }
        },
        "20240429": {
            "architecture": "amd64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "amd64",
                    "io.balena.device-type": "odyssey-x86",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                }
            },
            "created": "2024-05-02T12:18:12.985891796Z",
            "history": [
                {
                    "created": "2021-04-01T17:59:37.09884046Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-20T10:46:14.111891363Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-29T00:26:01.517560423Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:533e3405b5c87c5a7239c02ef2d954b1072df5afeee2139a9e2dd133dd4612b6 in / "
                },
                {
                    "created": "2023-11-29T00:26:02.196411879Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-02T12:11:35.787518344Z",
                    "created_by": "LABEL io.balena.architecture=amd64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-02T12:11:35.787518344Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T12:11:36.155885234Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T12:11:36.155885234Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-02T12:11:36.166220512Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T12:11:36.201352732Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T12:11:36.229371253Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T12:11:36.229371253Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-02T12:11:36.489410396Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T12:11:36.547751991Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: Intel 64-bit (x86-64) \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T12:18:12.910718736Z",
                    "created_by": "LABEL io.balena.device-type=odyssey-x86",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-02T12:18:12.910718736Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T12:18:12.985891796Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: Intel 64-bit (x86-64) \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:e89a2dafe59a58dee0fcdc4620c1e36ef34357d92655da13e1f656c33031c0b5",
                    "sha256:0a648d9cc45ccee05b7dda5c00174ff854e8f08899edb49b4b9ea8c61b058805",
                    "sha256:473314ea19844329bd2910bee3a05e7fd8996962d93719e1c3837927325ce390",
                    "sha256:1a8b3c1e1273d38aa2a3915c1cc142013ca3810eabdbad9eebc5997adc885bc2",
                    "sha256:ecc646eb7ee27032fc4faf92282b9e1d4176e672e63e5859c956e3b9b81e3777",
                    "sha256:dcaa3246209255ba81e531a54247f2762caac0def1a733005d0f168a69d14815",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:b537c15fb5e1acaa06a911b4b340ad545722901d3c792694a6cf8441f4bd8739",
                    "sha256:2738d555c5ce0d58e21ca1d22b99000d3deac89174240ba1bde438476ef3fdc4",
                    "sha256:5be83af9977c7d94e3c47abf63914eb6b1faed6b1bdc37a84b60c687ad11330a"
                ]
            }
        },
        "36": {
            "architecture": "amd64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f36container",
                    "FGC=f36",
                    "FBR=f36",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "amd64",
                    "io.balena.device-type": "odyssey-x86",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                }
            },
            "created": "2024-04-09T13:46:07.002499314Z",
            "history": [
                {
                    "created": "2021-04-01T17:59:37.09884046Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-20T10:46:00.581476476Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f36container FGC=f36 FBR=f36",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-04T19:22:41.732470197Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:935572949f59249cefbfc9d7f8cde48d7f2869fd16cb81212a9ea8e1aa533138 in / "
                },
                {
                    "created": "2023-05-04T19:22:42.49515285Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:35:20.180521101Z",
                    "created_by": "LABEL io.balena.architecture=amd64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:35:20.180521101Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:35:20.340094609Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:35:20.340094609Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:35:20.348501123Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:35:20.356510095Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:35:20.394137756Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:35:20.394137756Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:35:20.498556183Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 36   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:35:20.564051368Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: Intel 64-bit (x86-64) \\nOS: Fedora 36 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:46:06.944563849Z",
                    "created_by": "LABEL io.balena.device-type=odyssey-x86",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:46:06.944563849Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:46:07.002499314Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: Intel 64-bit (x86-64) \\nOS: Fedora 36 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:e63f436d1b7b86e487a841c1484f6afa2e77547972b57eb87bad3df87751775e",
                    "sha256:a1e4494c87eab4bb954c0c2fe1ab1d8394c07ca387c2768d6d2a99fb5800a07a",
                    "sha256:97a3e54d0e2b6c22b51e1c6a4f61125bc2eee7f3db03851cc7b34b38c56326e1",
                    "sha256:bc6639b4b526fa26b3c0c904960c0e05251638eb28cb40663cbe3a2172d66373",
                    "sha256:becb5686853002f8f2d232ff808620ed14d64b8c937d2c894fc496667278af0d",
                    "sha256:71788e7183f7018b43b290e7ad4d05338917252ab32618b96b5c132281458082",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:71085217296dd1ade5a2d196ee04ebc1e7e7b854c9f0cbd6bc92a1d1891bd62f",
                    "sha256:3754a3df9a8f04e2dde35d8e6d3975c4087b63cfb6a5320278deba2af522581b",
                    "sha256:8c9d0171d54e787be06e210db28b8fe3dbce4af0ea5c9b533ed4d9ebe537d7fa"
                ]
            }
        },
        "36-20230811": {
            "architecture": "amd64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f36container",
                    "FGC=f36",
                    "FBR=f36",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "amd64",
                    "io.balena.device-type": "intel-nuc",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2023-08-21T20:04:41.357141299Z",
            "history": [
                {
                    "created": "2021-04-01T17:59:37.09884046Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-20T10:46:00.581476476Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f36container FGC=f36 FBR=f36",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-04T19:22:41.732470197Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:935572949f59249cefbfc9d7f8cde48d7f2869fd16cb81212a9ea8e1aa533138 in / "
                },
                {
                    "created": "2023-05-04T19:22:42.49515285Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-21T19:48:16.32977585Z",
                    "created_by": "LABEL io.balena.architecture=amd64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-21T19:48:16.32977585Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-21T19:51:07.589317712Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-21T19:51:07.589317712Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-21T19:51:07.628931297Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-21T19:51:07.640460793Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-21T19:51:07.665595384Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-21T19:51:07.665595384Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-21T19:51:08.08119413Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 36   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-21T19:51:08.412159108Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: Intel 64-bit (x86-64) \\nOS: Fedora 36 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-21T20:04:41.064403436Z",
                    "created_by": "LABEL io.balena.device-type=intel-nuc",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-21T20:04:41.064403436Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-21T20:04:41.357141299Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: Intel 64-bit (x86-64) \\nOS: Fedora 36 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "moby.buildkit.buildinfo.v1": "eyJmcm9udGVuZCI6ImRvY2tlcmZpbGUudjAiLCJhdHRycyI6eyJmaWxlbmFtZSI6IkRvY2tlcmZpbGUifSwic291cmNlcyI6W3sidHlwZSI6ImRvY2tlci1pbWFnZSIsInJlZiI6ImRvY2tlci5pby9iYWxlbmFsaWIvYW1kNjQtZmVkb3JhOjM2LXJ1biIsInBpbiI6InNoYTI1Njo2ZDYwOWExYzQ1NGJiYzVkOTA4ZWViODkzZjJjYWMzOGU5ZWU1YjY2NWYzNGVjOTZhYWYwODU1MjNmMTMwYjVkIn1dfQ==",
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:e63f436d1b7b86e487a841c1484f6afa2e77547972b57eb87bad3df87751775e",
                    "sha256:097376a3036f06ae95cb494ed708f3d4822b5e92e9df47e5b2d167c6b1a54b73",
                    "sha256:d7e2a1925743eeae2b2373ae6b417646b37388bae96142f3bae15b3c701dbceb",
                    "sha256:ace1bbc881761ae4eed452b4527f3430b613b177cfb743de76a935eba118e661",
                    "sha256:bac1e8b5aed7448b131bffe5ebe8a080e0db87a169d828e85691f3e9521b04a3",
                    "sha256:611a38a995e2a62c467ee13bf8c81f58444ec39d8c96959deb766d73f1fbc21f",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:ba412297a6d6ecff54ce82499788407c6cdfdd725c2e3b9753dc83fee18495cb",
                    "sha256:ae6d0eb313078f1005a1069497f130c92a656ee90f99269cc31bf5a0094c1555",
                    "sha256:6ad26fb31d33e1d11d6878544784066dad0310145b97a58b23341b3fc25fd7a1"
                ]
            }
        },
        "36-20230829": {
            "architecture": "amd64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f36container",
                    "FGC=f36",
                    "FBR=f36",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "amd64",
                    "io.balena.device-type": "intel-nuc",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2023-09-02T04:11:17.240427952Z",
            "history": [
                {
                    "created": "2021-04-01T17:59:37.09884046Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-20T10:46:00.581476476Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f36container FGC=f36 FBR=f36",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-04T19:22:41.732470197Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:935572949f59249cefbfc9d7f8cde48d7f2869fd16cb81212a9ea8e1aa533138 in / "
                },
                {
                    "created": "2023-05-04T19:22:42.49515285Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-02T03:51:56.026211928Z",
                    "created_by": "LABEL io.balena.architecture=amd64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-02T03:51:56.026211928Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T03:51:56.625842353Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T03:51:56.625842353Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-02T03:51:56.644245589Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T03:51:56.680317245Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T03:51:56.705271737Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T03:51:56.705271737Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-02T03:51:56.988073973Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 36   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T03:51:57.308034303Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: Intel 64-bit (x86-64) \\nOS: Fedora 36 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T04:11:16.904493942Z",
                    "created_by": "LABEL io.balena.device-type=intel-nuc",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-02T04:11:16.904493942Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T04:11:17.240427952Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: Intel 64-bit (x86-64) \\nOS: Fedora 36 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:e63f436d1b7b86e487a841c1484f6afa2e77547972b57eb87bad3df87751775e",
                    "sha256:9cfbb29b6679aaf915ef9638d4225ced66daeb4726a1a3a3d5a94b2d0419b387",
                    "sha256:4c409c45528796b0a5aa65fceaa36777216c8bd6bc7584784d92a7f9e20caaf9",
                    "sha256:f0da70f56dfa450ede081e0885d54f26eec72a95fbc5716950bf5e930f33b635",
                    "sha256:527ba13f8abe7ec149b8a42958463509ee5dc67cd37f4304fa7cdbe216d4717a",
                    "sha256:0b5221f210edba02746cbb301991f169f65c9eed48470eb1cfcef81d8313f0c7",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:20d70eda1abe399e069e938cd7ed7897d0ad4675dcad8fb70168bbc7ab6f6407",
                    "sha256:51d30c30fab8e3e51a577f4d54b863c386e80be9485745059f451d04efbb9feb",
                    "sha256:11e6079582779be89beb29741ac884e8df959a27cd29250a92ddd3ef778bacc3"
                ]
            }
        },
        "36-20230904": {
            "architecture": "amd64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f36container",
                    "FGC=f36",
                    "FBR=f36",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "amd64",
                    "io.balena.device-type": "intel-nuc",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2023-09-09T04:07:15.295046608Z",
            "history": [
                {
                    "created": "2021-04-01T17:59:37.09884046Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-20T10:46:00.581476476Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f36container FGC=f36 FBR=f36",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-04T19:22:41.732470197Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:935572949f59249cefbfc9d7f8cde48d7f2869fd16cb81212a9ea8e1aa533138 in / "
                },
                {
                    "created": "2023-05-04T19:22:42.49515285Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T03:51:27.956630204Z",
                    "created_by": "LABEL io.balena.architecture=amd64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T03:51:27.956630204Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T03:51:28.412912686Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T03:51:28.412912686Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T03:51:28.434947912Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T03:51:28.475148125Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T03:51:28.487700154Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T03:51:28.487700154Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T03:51:28.76406999Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 36   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T03:51:29.100593843Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: Intel 64-bit (x86-64) \\nOS: Fedora 36 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:07:15.07241905Z",
                    "created_by": "LABEL io.balena.device-type=intel-nuc",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T04:07:15.07241905Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:07:15.295046608Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: Intel 64-bit (x86-64) \\nOS: Fedora 36 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:e63f436d1b7b86e487a841c1484f6afa2e77547972b57eb87bad3df87751775e",
                    "sha256:61ff7e7f0e9e748aee32a6b75c2dffb0b7224477a3572a3805caa366d1aa6c98",
                    "sha256:31823cbb37a56511b16bc7e956944cd5db90de3a283fcc1b511a354446aea18d",
                    "sha256:f7c387e0d979dbdfcb4e8ae4e460c5a7742cc1b2120041f469458400f80eba4d",
                    "sha256:deb1f36c490309944641af6faa604fcf16ea8203c3a586d43272cfdc3d341bee",
                    "sha256:358d2dc0df52e7df7769611173da083951765d1a8b54aea0a98bc4c18dea62d7",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:c43ffc0bf4f2fd4564319aeaa6b598f6122684db2da0cb7be8e5c14d52e3dbbd",
                    "sha256:ed3ce86bd6808e13da1cb7bcd840fdc8059222eba56de8931fe3e5856884f30d",
                    "sha256:5f2510255fdd57eea80bb2b0e23e80902d1d725e3716a3bbf77f95be5a205c5d"
                ]
            }
        },
        "36-20230911": {
            "architecture": "amd64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f36container",
                    "FGC=f36",
                    "FBR=f36",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "amd64",
                    "io.balena.device-type": "odyssey-x86",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2023-09-11T23:03:13.24947849Z",
            "history": [
                {
                    "created": "2021-04-01T17:59:37.09884046Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-20T10:46:00.581476476Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f36container FGC=f36 FBR=f36",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-04T19:22:41.732470197Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:935572949f59249cefbfc9d7f8cde48d7f2869fd16cb81212a9ea8e1aa533138 in / "
                },
                {
                    "created": "2023-05-04T19:22:42.49515285Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T03:51:27.956630204Z",
                    "created_by": "LABEL io.balena.architecture=amd64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T03:51:27.956630204Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T03:51:28.412912686Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T03:51:28.412912686Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T03:51:28.434947912Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T03:51:28.475148125Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T03:51:28.487700154Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T03:51:28.487700154Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T03:51:28.76406999Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 36   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T03:51:29.100593843Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: Intel 64-bit (x86-64) \\nOS: Fedora 36 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-11T23:03:13.199304069Z",
                    "created_by": "LABEL io.balena.device-type=odyssey-x86",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-11T23:03:13.199304069Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-11T23:03:13.24947849Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: Intel 64-bit (x86-64) \\nOS: Fedora 36 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:e63f436d1b7b86e487a841c1484f6afa2e77547972b57eb87bad3df87751775e",
                    "sha256:61ff7e7f0e9e748aee32a6b75c2dffb0b7224477a3572a3805caa366d1aa6c98",
                    "sha256:31823cbb37a56511b16bc7e956944cd5db90de3a283fcc1b511a354446aea18d",
                    "sha256:f7c387e0d979dbdfcb4e8ae4e460c5a7742cc1b2120041f469458400f80eba4d",
                    "sha256:deb1f36c490309944641af6faa604fcf16ea8203c3a586d43272cfdc3d341bee",
                    "sha256:358d2dc0df52e7df7769611173da083951765d1a8b54aea0a98bc4c18dea62d7",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:c43ffc0bf4f2fd4564319aeaa6b598f6122684db2da0cb7be8e5c14d52e3dbbd",
                    "sha256:46bd88b852f8b90093457e453eef0d83ae2a23eaf8a9f3c65151764087c5cf6f",
                    "sha256:9ab3d3cb46e72abe3615a26740868d9dd96549a244dc6bb2154d574ec83e29cf"
                ]
            }
        },
        "36-20231103": {
            "architecture": "amd64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f36container",
                    "FGC=f36",
                    "FBR=f36",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "amd64",
                    "io.balena.device-type": "odyssey-x86",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2023-11-04T20:35:37.82019945Z",
            "history": [
                {
                    "created": "2021-04-01T17:59:37.09884046Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-20T10:46:00.581476476Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f36container FGC=f36 FBR=f36",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-04T19:22:41.732470197Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:935572949f59249cefbfc9d7f8cde48d7f2869fd16cb81212a9ea8e1aa533138 in / "
                },
                {
                    "created": "2023-05-04T19:22:42.49515285Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-04T20:25:29.243577205Z",
                    "created_by": "LABEL io.balena.architecture=amd64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-04T20:25:29.243577205Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T20:25:29.903665566Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T20:25:29.903665566Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-04T20:25:29.916324691Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T20:25:29.928306776Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T20:25:29.956223873Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T20:25:29.956223873Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-04T20:25:30.220530293Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 36   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T20:25:30.304554Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: Intel 64-bit (x86-64) \\nOS: Fedora 36 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T20:35:37.730381242Z",
                    "created_by": "LABEL io.balena.device-type=odyssey-x86",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-04T20:35:37.730381242Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T20:35:37.82019945Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: Intel 64-bit (x86-64) \\nOS: Fedora 36 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:e63f436d1b7b86e487a841c1484f6afa2e77547972b57eb87bad3df87751775e",
                    "sha256:6a8d43eea5dc0da7e8d64e80e1b5a4f0a3ade4c2d84a60d38534c4f4fb2194a6",
                    "sha256:c39ba9bb224dcd35cd8cd76ce23a9b3fe2ac3fac47e55eb2cbaeb754459a5286",
                    "sha256:1b72dcbbca9c8c6684f4eec9b0c9cd229ba5db846839d320f1edd5ade075f354",
                    "sha256:0ea05890bbfcbd66f79777f864ae395f6002895200a79056cff751b8df52d79e",
                    "sha256:453749ce4ead478b4340819bbff2f63380e92ef83ffed48e1fd76f27c92bcef0",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:a9c0bce52a048c214159b2ca3498be7b2780855180acd87c59b47a22b88fc3cf",
                    "sha256:1309a6806ad68cea5deb02a95d2d65f0577449f29373d63a711adcd5f5f590aa",
                    "sha256:18380e654f267ad9f9daed95de0bc6d8e6e1d7ce1a8121c04d2241e61f614137"
                ]
            }
        },
        "36-20231204": {
            "architecture": "amd64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f36container",
                    "FGC=f36",
                    "FBR=f36",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "amd64",
                    "io.balena.device-type": "odyssey-x86",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2023-12-06T18:39:40.908609143Z",
            "history": [
                {
                    "created": "2021-04-01T17:59:37.09884046Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-20T10:46:00.581476476Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f36container FGC=f36 FBR=f36",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-04T19:22:41.732470197Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:935572949f59249cefbfc9d7f8cde48d7f2869fd16cb81212a9ea8e1aa533138 in / "
                },
                {
                    "created": "2023-05-04T19:22:42.49515285Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T17:56:00.092864065Z",
                    "created_by": "LABEL io.balena.architecture=amd64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T17:56:00.092864065Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T17:56:00.339709485Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T17:56:00.339709485Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T17:56:00.353156615Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T17:56:00.363993245Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T17:56:00.376096805Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T17:56:00.376096805Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T17:56:00.597336299Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 36   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T17:56:00.687286816Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: Intel 64-bit (x86-64) \\nOS: Fedora 36 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T18:39:40.826065533Z",
                    "created_by": "LABEL io.balena.device-type=odyssey-x86",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T18:39:40.826065533Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T18:39:40.908609143Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: Intel 64-bit (x86-64) \\nOS: Fedora 36 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:e63f436d1b7b86e487a841c1484f6afa2e77547972b57eb87bad3df87751775e",
                    "sha256:c6b7e299df96339dbe147e9cb1241a97e1ea0bccdee892757978d69167326ef9",
                    "sha256:8fbb61fbbe12703839291080dc2dcc85af6300ee816876abe435f711c38355d6",
                    "sha256:54d3117f44a9622d2439961192257d38bb0678dc7ed52a515748568ce675d4f9",
                    "sha256:1565526cacd33a5ad5d6dada8881afc328bf8406629553bae9378f33965dde6e",
                    "sha256:64ca6b03557f4db9f1ff84524c824c73ac2306d68a15bb4071666097a397f65e",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:ac3fe088c8e7355f38e8c0d5f00f823002557fede133b5334d1623f6eddacbc1",
                    "sha256:d2220f655393861b1e383df9f1a3e4b87d6527b44afbd2a06fed900f353a742a",
                    "sha256:bec060ba87081fa3373d39d21bdd65e1c572b4a46e0ecfa79aab6b007dbdeb0d"
                ]
            }
        },
        "36-20240105": {
            "architecture": "amd64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f36container",
                    "FGC=f36",
                    "FBR=f36",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "amd64",
                    "io.balena.device-type": "odyssey-x86",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2024-01-05T14:09:48.201175766Z",
            "history": [
                {
                    "created": "2021-04-01T17:59:37.09884046Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-20T10:46:00.581476476Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f36container FGC=f36 FBR=f36",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-04T19:22:41.732470197Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:935572949f59249cefbfc9d7f8cde48d7f2869fd16cb81212a9ea8e1aa533138 in / "
                },
                {
                    "created": "2023-05-04T19:22:42.49515285Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-05T14:00:01.995816866Z",
                    "created_by": "LABEL io.balena.architecture=amd64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-05T14:00:01.995816866Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-05T14:00:02.749112256Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-05T14:00:02.749112256Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-05T14:00:02.760278236Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-05T14:00:02.800354907Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-05T14:00:02.811131558Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-05T14:00:02.811131558Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-05T14:00:03.276265093Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 36   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-05T14:00:03.335501281Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: Intel 64-bit (x86-64) \\nOS: Fedora 36 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-05T14:09:48.135062083Z",
                    "created_by": "LABEL io.balena.device-type=odyssey-x86",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-05T14:09:48.135062083Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-05T14:09:48.201175766Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: Intel 64-bit (x86-64) \\nOS: Fedora 36 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:e63f436d1b7b86e487a841c1484f6afa2e77547972b57eb87bad3df87751775e",
                    "sha256:93742871e2df0b67154b1304e0fa03dd1cb7ee76ca80e976a08de9dc2cf8c253",
                    "sha256:df33fc5db4db2f83d9e78a2eea80186182aadb8528ece679653f39aa1c9832d2",
                    "sha256:4f86cb348073d9b8b7492a0788d18d6420d86736b42eb55da1c4428069338ee0",
                    "sha256:7af35db9344ddb98b091d49569892330f48e4c7c47eddb3305637d7115cef747",
                    "sha256:373888fc7701ce7f9df88452289c2c919252ccaeafc2237e0f3c7d9fcba8be5d",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:36b2c9693ead3419bf7c9e4fa046365e54cc924e4efd64264770b1b6cfbb1ab2",
                    "sha256:1612dc2ae65f05dad4609c13f81cba34c59c31d6f35e3dd158484f8e60815cea",
                    "sha256:2ed2f53bca613474132b388b4b56c913b93560d71564f54e6768eeba7d783f49"
                ]
            }
        },
        "36-20240201": {
            "architecture": "amd64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f36container",
                    "FGC=f36",
                    "FBR=f36",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "amd64",
                    "io.balena.device-type": "odyssey-x86",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2024-02-03T22:43:45.987677853Z",
            "history": [
                {
                    "created": "2021-04-01T17:59:37.09884046Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-20T10:46:00.581476476Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f36container FGC=f36 FBR=f36",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-04T19:22:41.732470197Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:935572949f59249cefbfc9d7f8cde48d7f2869fd16cb81212a9ea8e1aa533138 in / "
                },
                {
                    "created": "2023-05-04T19:22:42.49515285Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-03T22:35:30.050189817Z",
                    "created_by": "LABEL io.balena.architecture=amd64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-03T22:35:30.050189817Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-03T22:35:30.331874639Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-03T22:35:30.331874639Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-03T22:35:30.370443125Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-03T22:35:30.38244096Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-03T22:35:30.393235446Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-03T22:35:30.393235446Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-03T22:35:30.626421914Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 36   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-03T22:35:30.701521767Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: Intel 64-bit (x86-64) \\nOS: Fedora 36 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-03T22:43:45.916145897Z",
                    "created_by": "LABEL io.balena.device-type=odyssey-x86",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-03T22:43:45.916145897Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-03T22:43:45.987677853Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: Intel 64-bit (x86-64) \\nOS: Fedora 36 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:e63f436d1b7b86e487a841c1484f6afa2e77547972b57eb87bad3df87751775e",
                    "sha256:13f7c1a59932a94a4a500cc0b04eece9b57d6415a0f0ad62d474cb8aac976a2b",
                    "sha256:25ff1a16d2d6830bb4d1114bad96d3a647b1d54cfcbf885803609c33e8becb0e",
                    "sha256:bd1a451ea94141bfed8256cf2d545d3bea15148c8d388ae48cd7944673c7b31a",
                    "sha256:4d572b765ccdeaae28c956e98eb1a8609ffa6cb14d5f30b7c5af4367abf74442",
                    "sha256:c1ba4af5061c4d8bdb8ce875c6495a8626390f7acf4565e77e726f5ed926ec32",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:76a27707bb60a4396ccc2407a5a44e6d4872a4ddafe4c894f15fcfdd4d538b3a",
                    "sha256:2f391ac23a2ba69535af58466aeb48b4805d3d9e5529a8807d21040737b1329b",
                    "sha256:f14365f4414712a05c065e47c21fd9e97c6f68d69c6b6c42f421ebbcfca95efa"
                ]
            }
        },
        "36-20240304": {
            "architecture": "amd64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f36container",
                    "FGC=f36",
                    "FBR=f36",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "amd64",
                    "io.balena.device-type": "odyssey-x86",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2024-03-05T18:48:20.395218437Z",
            "history": [
                {
                    "created": "2021-04-01T17:59:37.09884046Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-20T10:46:00.581476476Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f36container FGC=f36 FBR=f36",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-04T19:22:41.732470197Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:935572949f59249cefbfc9d7f8cde48d7f2869fd16cb81212a9ea8e1aa533138 in / "
                },
                {
                    "created": "2023-05-04T19:22:42.49515285Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T18:27:09.029199072Z",
                    "created_by": "LABEL io.balena.architecture=amd64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T18:27:09.029199072Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T18:27:09.241416174Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T18:27:09.241416174Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T18:27:09.250370415Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T18:27:09.298983678Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T18:27:09.308297491Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T18:27:09.308297491Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T18:27:09.422728237Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 36   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T18:27:09.484299453Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: Intel 64-bit (x86-64) \\nOS: Fedora 36 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T18:48:20.328422209Z",
                    "created_by": "LABEL io.balena.device-type=odyssey-x86",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T18:48:20.328422209Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T18:48:20.395218437Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: Intel 64-bit (x86-64) \\nOS: Fedora 36 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:e63f436d1b7b86e487a841c1484f6afa2e77547972b57eb87bad3df87751775e",
                    "sha256:ce54e3e078d86f07642a2f98c4283fa3ee54275498a8d0e44139827be4e116bd",
                    "sha256:eca18536853ba6b0d6ddcad2d04244f25725ffd718763f052d94f73099cba481",
                    "sha256:59b16cf1a50288d5ed31b0fa420a41994bfacb5ec942f09f01b341e59735638f",
                    "sha256:dbf1591bb9fb8fd0008c59d21ce3dc59f5005878923668f35fb895c01777f5a3",
                    "sha256:d651f6249b32e520521357f0a04be6b7d4c4905f27bd0df247b76deda8f05866",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:8d66b4408e78d5d6903d5622aae75e848246eee5993b80bff06bf8c67c00efb4",
                    "sha256:10b8e817b78b3687b317058ccb568cf779c9fde103e386657e83a721b129b9bd",
                    "sha256:410282af087101e3c4c3cf3141930af42c4caa1afce08131acf0dbedd9193306"
                ]
            }
        },
        "36-20240401": {
            "architecture": "amd64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f36container",
                    "FGC=f36",
                    "FBR=f36",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "amd64",
                    "io.balena.device-type": "odyssey-x86",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                }
            },
            "created": "2024-04-02T02:40:04.060725788Z",
            "history": [
                {
                    "created": "2021-04-01T17:59:37.09884046Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-20T10:46:00.581476476Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f36container FGC=f36 FBR=f36",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-04T19:22:41.732470197Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:935572949f59249cefbfc9d7f8cde48d7f2869fd16cb81212a9ea8e1aa533138 in / "
                },
                {
                    "created": "2023-05-04T19:22:42.49515285Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T02:31:15.397973417Z",
                    "created_by": "LABEL io.balena.architecture=amd64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T02:31:15.397973417Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T02:31:15.740989076Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T02:31:15.740989076Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T02:31:15.749772478Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T02:31:15.757476594Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T02:31:15.791841802Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T02:31:15.791841802Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T02:31:15.910090487Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 36   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T02:31:15.991321046Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: Intel 64-bit (x86-64) \\nOS: Fedora 36 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T02:40:03.995398087Z",
                    "created_by": "LABEL io.balena.device-type=odyssey-x86",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T02:40:03.995398087Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T02:40:04.060725788Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: Intel 64-bit (x86-64) \\nOS: Fedora 36 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:e63f436d1b7b86e487a841c1484f6afa2e77547972b57eb87bad3df87751775e",
                    "sha256:00dabc9ea18394fb5e65e02a251a8fd216364f0a4ea218e115f860665e4f0d7a",
                    "sha256:2a13f3b3f03d2c50a940b000d8e03747912806f5ab96cb5b5be8b9096ec0da79",
                    "sha256:fd16ce1e6945d549f979a053db92cd0c9012347d648099c591f327e944af99fe",
                    "sha256:9c83215f2f7c5a47fa440474dda27dc090e67019ff8f9efa21eb62f1e0fbb2cc",
                    "sha256:f8879047bb1e836a4f1f262074eca7ead622e0f15f539a205295a0e3ec465a34",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:74a5564fcd888d7d87ccf1a0a9c5f94dd828866b1aa26036a9d3cc121223c269",
                    "sha256:078a13af5e9b4466b4da119a5d41945ef772741e981ccd398a2bd402e9aeed27",
                    "sha256:62d51db88370e56afdc404d6a77455597ff1ebeb70d9b580a7ab85abe0d9768a"
                ]
            }
        },
        "36-20240408": {
            "architecture": "amd64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f36container",
                    "FGC=f36",
                    "FBR=f36",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "amd64",
                    "io.balena.device-type": "odyssey-x86",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                }
            },
            "created": "2024-04-09T13:46:07.002499314Z",
            "history": [
                {
                    "created": "2021-04-01T17:59:37.09884046Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-20T10:46:00.581476476Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f36container FGC=f36 FBR=f36",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-04T19:22:41.732470197Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:935572949f59249cefbfc9d7f8cde48d7f2869fd16cb81212a9ea8e1aa533138 in / "
                },
                {
                    "created": "2023-05-04T19:22:42.49515285Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:35:20.180521101Z",
                    "created_by": "LABEL io.balena.architecture=amd64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:35:20.180521101Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:35:20.340094609Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:35:20.340094609Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:35:20.348501123Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:35:20.356510095Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:35:20.394137756Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:35:20.394137756Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:35:20.498556183Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 36   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:35:20.564051368Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: Intel 64-bit (x86-64) \\nOS: Fedora 36 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:46:06.944563849Z",
                    "created_by": "LABEL io.balena.device-type=odyssey-x86",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:46:06.944563849Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:46:07.002499314Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: Intel 64-bit (x86-64) \\nOS: Fedora 36 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:e63f436d1b7b86e487a841c1484f6afa2e77547972b57eb87bad3df87751775e",
                    "sha256:a1e4494c87eab4bb954c0c2fe1ab1d8394c07ca387c2768d6d2a99fb5800a07a",
                    "sha256:97a3e54d0e2b6c22b51e1c6a4f61125bc2eee7f3db03851cc7b34b38c56326e1",
                    "sha256:bc6639b4b526fa26b3c0c904960c0e05251638eb28cb40663cbe3a2172d66373",
                    "sha256:becb5686853002f8f2d232ff808620ed14d64b8c937d2c894fc496667278af0d",
                    "sha256:71788e7183f7018b43b290e7ad4d05338917252ab32618b96b5c132281458082",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:71085217296dd1ade5a2d196ee04ebc1e7e7b854c9f0cbd6bc92a1d1891bd62f",
                    "sha256:3754a3df9a8f04e2dde35d8e6d3975c4087b63cfb6a5320278deba2af522581b",
                    "sha256:8c9d0171d54e787be06e210db28b8fe3dbce4af0ea5c9b533ed4d9ebe537d7fa"
                ]
            }
        },
        "36-build": {
            "architecture": "amd64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f36container",
                    "FGC=f36",
                    "FBR=f36",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "amd64",
                    "io.balena.device-type": "odyssey-x86",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                }
            },
            "created": "2024-04-09T13:46:17.757210494Z",
            "history": [
                {
                    "created": "2021-04-01T17:59:37.09884046Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-20T10:46:00.581476476Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f36container FGC=f36 FBR=f36",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-04T19:22:41.732470197Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:935572949f59249cefbfc9d7f8cde48d7f2869fd16cb81212a9ea8e1aa533138 in / "
                },
                {
                    "created": "2023-05-04T19:22:42.49515285Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:35:25.059537917Z",
                    "created_by": "LABEL io.balena.architecture=amd64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:35:25.059537917Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:36:45.367245302Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-clients \t\tsubversion \t\tautoconf \t\tautomake \t\tbzip2-devel \t\tglib2-devel \t\tgcc \t\tgcc-c++ \t\tImageMagick \t\tImageMagick-devel \t\tkernel-devel \t\tlibcurl-devel \t\tlibevent-devel \t\tlibffi-devel \t\tlibjpeg-devel \t\tlibsqlite3x-devel \t\tlibxml2-devel \t\tlibxslt-devel \t\tlibyaml-devel \t\tmysql-devel \t\tmake \t\tncurses-devel \t\topenssl-devel \t\tpostgresql-devel \t\treadline-devel \t\tsqlite-devel \t\tzlib-devel \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:36:46.132253589Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:36:46.132253589Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:36:46.143835773Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:36:46.175891493Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:36:46.186412677Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:36:46.186412677Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:36:46.32263324Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 36   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:36:46.385302441Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: Intel 64-bit (x86-64) \\nOS: Fedora 36 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:46:17.695271116Z",
                    "created_by": "LABEL io.balena.device-type=odyssey-x86",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:46:17.695271116Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:46:17.757210494Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: Intel 64-bit (x86-64) \\nOS: Fedora 36 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:e63f436d1b7b86e487a841c1484f6afa2e77547972b57eb87bad3df87751775e",
                    "sha256:731d08e83f785eb5d568d6e344a6525a39383b2248bdb10d195216d9c4d23947",
                    "sha256:5c9721ba8ffc7add01331bb680e596df0c7ae64e7b8fb2f8402b096294cf263f",
                    "sha256:a6f76098d59e6cc9f9551c625f313bce340689a68486f5d2ef2ea40dbba98272",
                    "sha256:881505826e2f9e32be4f50b410c1458858fbe1dec7045130a3991554c558fb69",
                    "sha256:d004bacebbbbbbfb5ee01d17e25ece904a47897d4b9ab383ad785cb05395bb68",
                    "sha256:a25182892fdc19d3c53103d26e59eb216febb275a18b65486d3705e254e89c54",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:fe4b914556f13c7219d5766ab0401d48407d5c91f6bd225c6148a21348d6e03e",
                    "sha256:46f5361257b3041d6a6c4d88e2ad874cf7a6ebf5fb7d263296db91f2393017bf",
                    "sha256:49e163fd3ca473c7ae7f57d29154a9769832207cdce46b8971a0454452838093"
                ]
            }
        },
        "36-build-20230811": {
            "architecture": "amd64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f36container",
                    "FGC=f36",
                    "FBR=f36",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "amd64",
                    "io.balena.device-type": "intel-nuc",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2023-08-21T20:08:21.280536936Z",
            "history": [
                {
                    "created": "2021-04-01T17:59:37.09884046Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-20T10:46:00.581476476Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f36container FGC=f36 FBR=f36",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-04T19:22:41.732470197Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:935572949f59249cefbfc9d7f8cde48d7f2869fd16cb81212a9ea8e1aa533138 in / "
                },
                {
                    "created": "2023-05-04T19:22:42.49515285Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-21T19:48:16.32977585Z",
                    "created_by": "LABEL io.balena.architecture=amd64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-21T19:48:16.32977585Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-21T19:50:09.002924455Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-clients \t\tsubversion \t\tautoconf \t\tautomake \t\tbzip2-devel \t\tglib2-devel \t\tgcc \t\tgcc-c++ \t\tImageMagick \t\tImageMagick-devel \t\tkernel-devel \t\tlibcurl-devel \t\tlibevent-devel \t\tlibffi-devel \t\tlibjpeg-devel \t\tlibsqlite3x-devel \t\tlibxml2-devel \t\tlibxslt-devel \t\tlibyaml-devel \t\tmysql-devel \t\tmake \t\tncurses-devel \t\topenssl-devel \t\tpostgresql-devel \t\treadline-devel \t\tsqlite-devel \t\tzlib-devel \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-21T19:50:09.543745882Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-21T19:50:09.543745882Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-21T19:50:09.58103895Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-21T19:50:09.594252538Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-21T19:50:09.623376513Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-21T19:50:09.623376513Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-21T19:50:10.012170973Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 36   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-21T19:50:11.600944684Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: Intel 64-bit (x86-64) \\nOS: Fedora 36 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-21T20:08:20.972529114Z",
                    "created_by": "LABEL io.balena.device-type=intel-nuc",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-21T20:08:20.972529114Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-21T20:08:21.280536936Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: Intel 64-bit (x86-64) \\nOS: Fedora 36 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "moby.buildkit.buildinfo.v1": "eyJmcm9udGVuZCI6ImRvY2tlcmZpbGUudjAiLCJhdHRycyI6eyJmaWxlbmFtZSI6IkRvY2tlcmZpbGUifSwic291cmNlcyI6W3sidHlwZSI6ImRvY2tlci1pbWFnZSIsInJlZiI6ImRvY2tlci5pby9iYWxlbmFsaWIvYW1kNjQtZmVkb3JhOjM2LWJ1aWxkIiwicGluIjoic2hhMjU2OjM2MjFmZWVlYzUyYzFmYTdlMGM1MmQyYzU5MjVkYjZhNzE2Nzc3MDViNDcxMmJhM2Y3NDZhNzQzNjk2NTczYjEifV19",
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:e63f436d1b7b86e487a841c1484f6afa2e77547972b57eb87bad3df87751775e",
                    "sha256:097376a3036f06ae95cb494ed708f3d4822b5e92e9df47e5b2d167c6b1a54b73",
                    "sha256:1b1c5dd38ecd04c7846e13c7f37aefdcef89e09c75526c3aa357156d0918ec36",
                    "sha256:888c668f4ee04c8539ff01e4937adc920b5d0e60efd9475902a9ba48a9191ad3",
                    "sha256:c8a5f087690d6944a6e26fbd123e6a89c8fa2c90de3a3c1ed1fcb79c7b1a9164",
                    "sha256:055c1ee13bf1b56316205ed13e6caa5a02554fb55c295353cd7ec03ffb1d88ac",
                    "sha256:08c26eac81f2fcbde7535088e88876f14e92a22501bdb974623a2cbf1d16c605",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:93003bf4db5f72512114e7e3d05a5dbd583afc616cdaceddaedb34978538c797",
                    "sha256:6bbe7099f50db428c6ff72f2553646fa1bab3c617b3a69ed858d9817e35e4ae0",
                    "sha256:7f8712fd8cb559ddff503988b67c9109ccaaa6ef0a4c4049dcf2e383f05fe970"
                ]
            }
        },
        "36-build-20230829": {
            "architecture": "amd64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f36container",
                    "FGC=f36",
                    "FBR=f36",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "amd64",
                    "io.balena.device-type": "intel-nuc",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2023-09-02T04:09:03.104883577Z",
            "history": [
                {
                    "created": "2021-04-01T17:59:37.09884046Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-20T10:46:00.581476476Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f36container FGC=f36 FBR=f36",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-04T19:22:41.732470197Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:935572949f59249cefbfc9d7f8cde48d7f2869fd16cb81212a9ea8e1aa533138 in / "
                },
                {
                    "created": "2023-05-04T19:22:42.49515285Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-02T03:51:56.026211928Z",
                    "created_by": "LABEL io.balena.architecture=amd64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-02T03:51:56.026211928Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T03:58:28.557725412Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-clients \t\tsubversion \t\tautoconf \t\tautomake \t\tbzip2-devel \t\tglib2-devel \t\tgcc \t\tgcc-c++ \t\tImageMagick \t\tImageMagick-devel \t\tkernel-devel \t\tlibcurl-devel \t\tlibevent-devel \t\tlibffi-devel \t\tlibjpeg-devel \t\tlibsqlite3x-devel \t\tlibxml2-devel \t\tlibxslt-devel \t\tlibyaml-devel \t\tmysql-devel \t\tmake \t\tncurses-devel \t\topenssl-devel \t\tpostgresql-devel \t\treadline-devel \t\tsqlite-devel \t\tzlib-devel \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T03:58:29.233101725Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T03:58:29.233101725Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-02T03:58:29.267946977Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T03:58:29.281259202Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T03:58:29.301384694Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T03:58:29.301384694Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-02T03:58:29.655579532Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 36   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T03:58:29.955177447Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: Intel 64-bit (x86-64) \\nOS: Fedora 36 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T04:09:02.829646419Z",
                    "created_by": "LABEL io.balena.device-type=intel-nuc",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-02T04:09:02.829646419Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T04:09:03.104883577Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: Intel 64-bit (x86-64) \\nOS: Fedora 36 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:e63f436d1b7b86e487a841c1484f6afa2e77547972b57eb87bad3df87751775e",
                    "sha256:9cfbb29b6679aaf915ef9638d4225ced66daeb4726a1a3a3d5a94b2d0419b387",
                    "sha256:80da32171f947043ee0e82c83a23ac4d69577d6adb9409b227f1df0f16cc70ca",
                    "sha256:984fe9d76d53884e50612eea43295236bfabbb00dc5151ff9049a28d93c94298",
                    "sha256:ba0a90b909f71b51d8c5d3cc7fbce8ce68e2b90fb5629f9dda80fb462f6f627f",
                    "sha256:a01542bc266447bb4ad0720dbba5a37bf6783c67c71e8e567ffabe35be52de4c",
                    "sha256:70cb28762891c320f65928af2361da45aeeb16076a92eeb5bc7bb70da3cc25ec",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:4674fb5f7853a48e8209ba2479aa9bd9229e3f7a6d25497f9dc70364d4f97882",
                    "sha256:c669dfb7c0b099eefe344ab6eb05ff0cea0d580a3caf31cf96c9d85f54c326c6",
                    "sha256:10fd7699b021c954aea0688f56ea077c81c8e47773965db973b2b073b0996303"
                ]
            }
        },
        "36-build-20230904": {
            "architecture": "amd64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f36container",
                    "FGC=f36",
                    "FBR=f36",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "amd64",
                    "io.balena.device-type": "intel-nuc",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2023-09-09T04:05:04.166593899Z",
            "history": [
                {
                    "created": "2021-04-01T17:59:37.09884046Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-20T10:46:00.581476476Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f36container FGC=f36 FBR=f36",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-04T19:22:41.732470197Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:935572949f59249cefbfc9d7f8cde48d7f2869fd16cb81212a9ea8e1aa533138 in / "
                },
                {
                    "created": "2023-05-04T19:22:42.49515285Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T03:51:27.956630204Z",
                    "created_by": "LABEL io.balena.architecture=amd64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T03:51:27.956630204Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T03:53:18.101792088Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-clients \t\tsubversion \t\tautoconf \t\tautomake \t\tbzip2-devel \t\tglib2-devel \t\tgcc \t\tgcc-c++ \t\tImageMagick \t\tImageMagick-devel \t\tkernel-devel \t\tlibcurl-devel \t\tlibevent-devel \t\tlibffi-devel \t\tlibjpeg-devel \t\tlibsqlite3x-devel \t\tlibxml2-devel \t\tlibxslt-devel \t\tlibyaml-devel \t\tmysql-devel \t\tmake \t\tncurses-devel \t\topenssl-devel \t\tpostgresql-devel \t\treadline-devel \t\tsqlite-devel \t\tzlib-devel \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T03:53:18.55019428Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T03:53:18.55019428Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T03:53:18.585892245Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T03:53:18.593334521Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T03:53:18.600869399Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T03:53:18.600869399Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T03:53:18.852336974Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 36   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T03:53:19.108357695Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: Intel 64-bit (x86-64) \\nOS: Fedora 36 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:05:03.828220392Z",
                    "created_by": "LABEL io.balena.device-type=intel-nuc",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T04:05:03.828220392Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:05:04.166593899Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: Intel 64-bit (x86-64) \\nOS: Fedora 36 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:e63f436d1b7b86e487a841c1484f6afa2e77547972b57eb87bad3df87751775e",
                    "sha256:61ff7e7f0e9e748aee32a6b75c2dffb0b7224477a3572a3805caa366d1aa6c98",
                    "sha256:9e9910802fd2b4fbdb330d6c7fa796e6cd79b58425423d7d4b1b517632cce26d",
                    "sha256:3c11545044e086a19670289c1125eb1d0e9ba35859a6ca0fe97a22968f5e09bf",
                    "sha256:ec65499c3fa81da7484d70eb613ab56d0295bbeb9b0879471867fbd808cc234c",
                    "sha256:5144780921f9939419b1557abcb2eee76fc473b9d1668444642679a1548f51ea",
                    "sha256:5428a768bacd19b6344049fc949a742e67b3e705ef38f26db1fc83033db510ab",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:17b39ba8bfa4b6886a32c188eb00cdb493963c75895a72e14e7b28bd9cdef973",
                    "sha256:47018730b8bd6cece255f07ce7c1d60cc98c16e88b94bbf390d694e871a32db6",
                    "sha256:0f521da7d753866bd07593d410b3173f6f6e76fcc1a247765cb509a226741ddd"
                ]
            }
        },
        "36-build-20230911": {
            "architecture": "amd64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f36container",
                    "FGC=f36",
                    "FBR=f36",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "amd64",
                    "io.balena.device-type": "odyssey-x86",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2023-09-11T23:03:15.318871825Z",
            "history": [
                {
                    "created": "2021-04-01T17:59:37.09884046Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-20T10:46:00.581476476Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f36container FGC=f36 FBR=f36",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-04T19:22:41.732470197Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:935572949f59249cefbfc9d7f8cde48d7f2869fd16cb81212a9ea8e1aa533138 in / "
                },
                {
                    "created": "2023-05-04T19:22:42.49515285Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T03:51:27.956630204Z",
                    "created_by": "LABEL io.balena.architecture=amd64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T03:51:27.956630204Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T03:53:18.101792088Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-clients \t\tsubversion \t\tautoconf \t\tautomake \t\tbzip2-devel \t\tglib2-devel \t\tgcc \t\tgcc-c++ \t\tImageMagick \t\tImageMagick-devel \t\tkernel-devel \t\tlibcurl-devel \t\tlibevent-devel \t\tlibffi-devel \t\tlibjpeg-devel \t\tlibsqlite3x-devel \t\tlibxml2-devel \t\tlibxslt-devel \t\tlibyaml-devel \t\tmysql-devel \t\tmake \t\tncurses-devel \t\topenssl-devel \t\tpostgresql-devel \t\treadline-devel \t\tsqlite-devel \t\tzlib-devel \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T03:53:18.55019428Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T03:53:18.55019428Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T03:53:18.585892245Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T03:53:18.593334521Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T03:53:18.600869399Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T03:53:18.600869399Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T03:53:18.852336974Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 36   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T03:53:19.108357695Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: Intel 64-bit (x86-64) \\nOS: Fedora 36 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-11T23:03:15.269507464Z",
                    "created_by": "LABEL io.balena.device-type=odyssey-x86",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-11T23:03:15.269507464Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-11T23:03:15.318871825Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: Intel 64-bit (x86-64) \\nOS: Fedora 36 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:e63f436d1b7b86e487a841c1484f6afa2e77547972b57eb87bad3df87751775e",
                    "sha256:61ff7e7f0e9e748aee32a6b75c2dffb0b7224477a3572a3805caa366d1aa6c98",
                    "sha256:9e9910802fd2b4fbdb330d6c7fa796e6cd79b58425423d7d4b1b517632cce26d",
                    "sha256:3c11545044e086a19670289c1125eb1d0e9ba35859a6ca0fe97a22968f5e09bf",
                    "sha256:ec65499c3fa81da7484d70eb613ab56d0295bbeb9b0879471867fbd808cc234c",
                    "sha256:5144780921f9939419b1557abcb2eee76fc473b9d1668444642679a1548f51ea",
                    "sha256:5428a768bacd19b6344049fc949a742e67b3e705ef38f26db1fc83033db510ab",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:17b39ba8bfa4b6886a32c188eb00cdb493963c75895a72e14e7b28bd9cdef973",
                    "sha256:4aaca3bfd607e0713f625f50fd4d2ebc3a782de05b9c0929b1046c381a4a2afd",
                    "sha256:5a18fc2e4d655a34861b42b7c0b3dcd589ac3dbb531f9d17d49c2b9bcc6ace65"
                ]
            }
        },
        "36-build-20231103": {
            "architecture": "amd64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f36container",
                    "FGC=f36",
                    "FBR=f36",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "amd64",
                    "io.balena.device-type": "odyssey-x86",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2023-11-04T20:45:43.679209237Z",
            "history": [
                {
                    "created": "2021-04-01T17:59:37.09884046Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-20T10:46:00.581476476Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f36container FGC=f36 FBR=f36",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-04T19:22:41.732470197Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:935572949f59249cefbfc9d7f8cde48d7f2869fd16cb81212a9ea8e1aa533138 in / "
                },
                {
                    "created": "2023-05-04T19:22:42.49515285Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-04T20:25:27.657179984Z",
                    "created_by": "LABEL io.balena.architecture=amd64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-04T20:25:27.657179984Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T20:27:28.672350673Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-clients \t\tsubversion \t\tautoconf \t\tautomake \t\tbzip2-devel \t\tglib2-devel \t\tgcc \t\tgcc-c++ \t\tImageMagick \t\tImageMagick-devel \t\tkernel-devel \t\tlibcurl-devel \t\tlibevent-devel \t\tlibffi-devel \t\tlibjpeg-devel \t\tlibsqlite3x-devel \t\tlibxml2-devel \t\tlibxslt-devel \t\tlibyaml-devel \t\tmysql-devel \t\tmake \t\tncurses-devel \t\topenssl-devel \t\tpostgresql-devel \t\treadline-devel \t\tsqlite-devel \t\tzlib-devel \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T20:27:29.433696766Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T20:27:29.433696766Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-04T20:27:29.451393913Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T20:27:29.486917408Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T20:27:29.503932837Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T20:27:29.503932837Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-04T20:27:29.798568965Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 36   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T20:27:29.897924965Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: Intel 64-bit (x86-64) \\nOS: Fedora 36 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T20:45:43.576657319Z",
                    "created_by": "LABEL io.balena.device-type=odyssey-x86",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-04T20:45:43.576657319Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T20:45:43.679209237Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: Intel 64-bit (x86-64) \\nOS: Fedora 36 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:e63f436d1b7b86e487a841c1484f6afa2e77547972b57eb87bad3df87751775e",
                    "sha256:ae5376ad8df04cdd7c383d10df2a8bfd7e99e3b20301da7b5d4c11fa31edba55",
                    "sha256:7ff0c5666243af0ad951edc77189d5f031243f595c1d2f33123f18ce60cb6525",
                    "sha256:7d96a0f4652d8d19fdfd160b8516c81437b560318a211adac960248c1656d27c",
                    "sha256:e867210dc14cb3ed55503cbb2a3b8ba5981184bb70623770a480bb9102379ee3",
                    "sha256:9b57a8d001a524155a5dd1b3070ae96f7950ada650ad27291c6124eef305c2d5",
                    "sha256:8c0228fddc1fb83051757984cb6ac88566c083af60be94eea90e4f3585dbd4db",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:1c1fdaddd0aaac422c329a30dc93797082cb5caf57487d1fba6ecef156d8bb93",
                    "sha256:11981d3e08f132c152fd2099816593b05e4a6c9a3b137013463041e980e647b7",
                    "sha256:39c0b9ff8e7956e9bb03b2f2ab9db91412f7ce0837ed87e52b0bde99a920bd9e"
                ]
            }
        },
        "36-build-20231204": {
            "architecture": "amd64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f36container",
                    "FGC=f36",
                    "FBR=f36",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "amd64",
                    "io.balena.device-type": "odyssey-x86",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2023-12-06T18:39:49.818699609Z",
            "history": [
                {
                    "created": "2021-04-01T17:59:37.09884046Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-20T10:46:00.581476476Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f36container FGC=f36 FBR=f36",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-04T19:22:41.732470197Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:935572949f59249cefbfc9d7f8cde48d7f2869fd16cb81212a9ea8e1aa533138 in / "
                },
                {
                    "created": "2023-05-04T19:22:42.49515285Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T17:56:04.121110536Z",
                    "created_by": "LABEL io.balena.architecture=amd64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T17:56:04.121110536Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T17:57:18.761971765Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-clients \t\tsubversion \t\tautoconf \t\tautomake \t\tbzip2-devel \t\tglib2-devel \t\tgcc \t\tgcc-c++ \t\tImageMagick \t\tImageMagick-devel \t\tkernel-devel \t\tlibcurl-devel \t\tlibevent-devel \t\tlibffi-devel \t\tlibjpeg-devel \t\tlibsqlite3x-devel \t\tlibxml2-devel \t\tlibxslt-devel \t\tlibyaml-devel \t\tmysql-devel \t\tmake \t\tncurses-devel \t\topenssl-devel \t\tpostgresql-devel \t\treadline-devel \t\tsqlite-devel \t\tzlib-devel \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T17:57:19.338725361Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T17:57:19.338725361Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T17:57:19.348485112Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T17:57:19.357641234Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T17:57:19.36684974Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T17:57:19.36684974Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T17:57:19.705365419Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 36   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T17:57:19.785481922Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: Intel 64-bit (x86-64) \\nOS: Fedora 36 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T18:39:49.723336768Z",
                    "created_by": "LABEL io.balena.device-type=odyssey-x86",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T18:39:49.723336768Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T18:39:49.818699609Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: Intel 64-bit (x86-64) \\nOS: Fedora 36 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:e63f436d1b7b86e487a841c1484f6afa2e77547972b57eb87bad3df87751775e",
                    "sha256:e9fb7bac2f40ecf80a3320ad17299cb082c0f960d4b9fb70b1e67163300217fe",
                    "sha256:ec88ddcb7efbc4508c359692fd02b158ee62c2b9dc67b135d52160362214b7db",
                    "sha256:d2027b66d999d5d48fd26f9a81b38b93b7d9e632bedec90c49c47f7ec27fc181",
                    "sha256:d5f6e2989c8365d723c89976d607cf732a86fe4c18f2ba5eaf412a8fe295787a",
                    "sha256:78a0bb784f888ef5330f5b66e75e0cd1d205d17bc0ea46cdcb50a8e5d7db51fd",
                    "sha256:8689d71efb13094fe394ce459c62e890e5503e1669195ba1d8b5615f63296290",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:1d6c5c8db6eca140c771083e42ab1b913b4af372501153168a8bec74b7002ee5",
                    "sha256:589aa6bfff78a82c638837156b33ad8c026ffe08c9301485e84749d14e5c2b0c",
                    "sha256:39724d05dacdb14e30b637d0bc92c3085c8d70c25ad91a4d2289b6475dbbc90b"
                ]
            }
        },
        "36-build-20240105": {
            "architecture": "amd64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f36container",
                    "FGC=f36",
                    "FBR=f36",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "amd64",
                    "io.balena.device-type": "odyssey-x86",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2024-01-05T14:09:58.642380138Z",
            "history": [
                {
                    "created": "2021-04-01T17:59:37.09884046Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-20T10:46:00.581476476Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f36container FGC=f36 FBR=f36",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-04T19:22:41.732470197Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:935572949f59249cefbfc9d7f8cde48d7f2869fd16cb81212a9ea8e1aa533138 in / "
                },
                {
                    "created": "2023-05-04T19:22:42.49515285Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-05T13:59:53.496705428Z",
                    "created_by": "LABEL io.balena.architecture=amd64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-05T13:59:53.496705428Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-05T14:01:14.399665317Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-clients \t\tsubversion \t\tautoconf \t\tautomake \t\tbzip2-devel \t\tglib2-devel \t\tgcc \t\tgcc-c++ \t\tImageMagick \t\tImageMagick-devel \t\tkernel-devel \t\tlibcurl-devel \t\tlibevent-devel \t\tlibffi-devel \t\tlibjpeg-devel \t\tlibsqlite3x-devel \t\tlibxml2-devel \t\tlibxslt-devel \t\tlibyaml-devel \t\tmysql-devel \t\tmake \t\tncurses-devel \t\topenssl-devel \t\tpostgresql-devel \t\treadline-devel \t\tsqlite-devel \t\tzlib-devel \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-05T14:01:14.81904122Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-05T14:01:14.81904122Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-05T14:01:14.828045293Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-05T14:01:14.856146192Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-05T14:01:14.866286973Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-05T14:01:14.866286973Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-05T14:01:15.005030748Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 36   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-05T14:01:15.063661997Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: Intel 64-bit (x86-64) \\nOS: Fedora 36 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-05T14:09:58.58064757Z",
                    "created_by": "LABEL io.balena.device-type=odyssey-x86",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-05T14:09:58.58064757Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-05T14:09:58.642380138Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: Intel 64-bit (x86-64) \\nOS: Fedora 36 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:e63f436d1b7b86e487a841c1484f6afa2e77547972b57eb87bad3df87751775e",
                    "sha256:29b46a88b73abb4193b27d2ebe2789674c335acdc5f32aa86ef52cdd0c5aacd4",
                    "sha256:518e5ac8131fab412317e8b1c76a73a5e4d0cbd618a57d5cfda50c437e272540",
                    "sha256:10e7bfc3d2ecd3496c064881c21d74d3b8b21b893663004ed474dab2eda58856",
                    "sha256:4fd2b335745f74fe40fecba212f40bb8f231abfd54b1e875b5e3b343ad91c3fc",
                    "sha256:00ee60ada642e085943f3b95aea21b5c742665b3e83beadd44670263eb42da8f",
                    "sha256:62d55abd3738006a8219cb470ed91f3107ff33dec8fbe72e1298f13667ac41e2",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:14732ba72115065f3bd1bd1e324765397ee35a4cc7d3ec4928a6dfb24c9ab82d",
                    "sha256:4c83d39fb7007b98d2889b2c710edd075c825956c0d0c8d125e70309703b11e6",
                    "sha256:5fae3dd81af9c989a171e806f44349de6b302acc10c6b3e36353c111074b45c2"
                ]
            }
        },
        "36-build-20240201": {
            "architecture": "amd64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f36container",
                    "FGC=f36",
                    "FBR=f36",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "amd64",
                    "io.balena.device-type": "odyssey-x86",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2024-02-03T22:43:59.503165909Z",
            "history": [
                {
                    "created": "2021-04-01T17:59:37.09884046Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-20T10:46:00.581476476Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f36container FGC=f36 FBR=f36",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-04T19:22:41.732470197Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:935572949f59249cefbfc9d7f8cde48d7f2869fd16cb81212a9ea8e1aa533138 in / "
                },
                {
                    "created": "2023-05-04T19:22:42.49515285Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-03T22:35:24.165148042Z",
                    "created_by": "LABEL io.balena.architecture=amd64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-03T22:35:24.165148042Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-03T22:36:40.290997588Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-clients \t\tsubversion \t\tautoconf \t\tautomake \t\tbzip2-devel \t\tglib2-devel \t\tgcc \t\tgcc-c++ \t\tImageMagick \t\tImageMagick-devel \t\tkernel-devel \t\tlibcurl-devel \t\tlibevent-devel \t\tlibffi-devel \t\tlibjpeg-devel \t\tlibsqlite3x-devel \t\tlibxml2-devel \t\tlibxslt-devel \t\tlibyaml-devel \t\tmysql-devel \t\tmake \t\tncurses-devel \t\topenssl-devel \t\tpostgresql-devel \t\treadline-devel \t\tsqlite-devel \t\tzlib-devel \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-03T22:36:40.707876522Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-03T22:36:40.707876522Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-03T22:36:40.720401282Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-03T22:36:40.748341486Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-03T22:36:40.760106355Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-03T22:36:40.760106355Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-03T22:36:40.876529473Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 36   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-03T22:36:40.945390219Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: Intel 64-bit (x86-64) \\nOS: Fedora 36 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-03T22:43:59.433631896Z",
                    "created_by": "LABEL io.balena.device-type=odyssey-x86",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-03T22:43:59.433631896Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-03T22:43:59.503165909Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: Intel 64-bit (x86-64) \\nOS: Fedora 36 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:e63f436d1b7b86e487a841c1484f6afa2e77547972b57eb87bad3df87751775e",
                    "sha256:6d61ff92f8813f7ece6175e9494a22459403dd568af24655855afca0d13f0a4c",
                    "sha256:9d704562b79cf910cfb0dea327318775e2b2849d9c56ba4a36c35c152df236aa",
                    "sha256:ee482063bf506e8cefd16a1488ea3bb2df11f59a47c648ec5b3274869836f0ad",
                    "sha256:f589ce416f5f161b8a8dd1817df180eae813c9fcc5912dbba6bc6ddb51f15dc0",
                    "sha256:b8b5c6f1cb010b3ee0448eac47d0c3159007ce4fc2733c7776c52e29550df91b",
                    "sha256:22a7d915cfdb29511f0c1ab6a4ba7887fa725b39072316427e845799ef5ddf7b",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:234ce88b733ef23fa3f5cc8561818189bb655ceb3ae69bcdd2e919280c7746e9",
                    "sha256:48c9acd06388c883c7cb18dc196792e38ae1980b056f7e8bf2092cf227f14627",
                    "sha256:9aa9c244a0d0d501ce5ab810c8946b43986b9d038ee2af4a5bcd5c3fdcd1de9c"
                ]
            }
        },
        "36-build-20240304": {
            "architecture": "amd64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f36container",
                    "FGC=f36",
                    "FBR=f36",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "amd64",
                    "io.balena.device-type": "odyssey-x86",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2024-03-05T18:48:09.906482036Z",
            "history": [
                {
                    "created": "2021-04-01T17:59:37.09884046Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-20T10:46:00.581476476Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f36container FGC=f36 FBR=f36",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-04T19:22:41.732470197Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:935572949f59249cefbfc9d7f8cde48d7f2869fd16cb81212a9ea8e1aa533138 in / "
                },
                {
                    "created": "2023-05-04T19:22:42.49515285Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T18:27:20.847440204Z",
                    "created_by": "LABEL io.balena.architecture=amd64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T18:27:20.847440204Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T18:29:22.798548801Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-clients \t\tsubversion \t\tautoconf \t\tautomake \t\tbzip2-devel \t\tglib2-devel \t\tgcc \t\tgcc-c++ \t\tImageMagick \t\tImageMagick-devel \t\tkernel-devel \t\tlibcurl-devel \t\tlibevent-devel \t\tlibffi-devel \t\tlibjpeg-devel \t\tlibsqlite3x-devel \t\tlibxml2-devel \t\tlibxslt-devel \t\tlibyaml-devel \t\tmysql-devel \t\tmake \t\tncurses-devel \t\topenssl-devel \t\tpostgresql-devel \t\treadline-devel \t\tsqlite-devel \t\tzlib-devel \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T18:29:23.684467906Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T18:29:23.684467906Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T18:29:23.695092348Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T18:29:23.705489484Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T18:29:23.737827506Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T18:29:23.737827506Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T18:29:23.852643418Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 36   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T18:29:23.913595533Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: Intel 64-bit (x86-64) \\nOS: Fedora 36 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T18:48:09.83870697Z",
                    "created_by": "LABEL io.balena.device-type=odyssey-x86",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T18:48:09.83870697Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T18:48:09.906482036Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: Intel 64-bit (x86-64) \\nOS: Fedora 36 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:e63f436d1b7b86e487a841c1484f6afa2e77547972b57eb87bad3df87751775e",
                    "sha256:1cab316e8d9d904f8ad64f8b57e2c75054e3bd305cf283c7866a45c64c2a4826",
                    "sha256:3de024d96698f696fb83089cca9b66940ee3eba7757cc07bd6a668be19558cce",
                    "sha256:6d269c287aa591bc731c143e61750096e8d927af6a5962ba471468a000f1ca58",
                    "sha256:e651f9b0737b7ac9d5b98fc9fb75522a0b3c31fb35addb641249aa6d939ebdc0",
                    "sha256:a3b7f3f47c49c2b73e6d438d04ff551243ac6082f152e7f5347202401a942692",
                    "sha256:f2ff4d73269de68f85e6e42f11db0c442b934b19cc77efaa2f0bc8b90d83caf8",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:a2a9fb94deba9c986a13643dda9ee1756a1805f3ef5d807a01b84c889c8b4bbc",
                    "sha256:d1ef2eb228577f955839a793857afcc71edb99e0d8723d483cc1a005d96359b1",
                    "sha256:cd63bf0c4846a4a0af2f969f8ec3a93cd9fb80d2a8bca5c1cc46e23701f571c8"
                ]
            }
        },
        "36-build-20240401": {
            "architecture": "amd64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f36container",
                    "FGC=f36",
                    "FBR=f36",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "amd64",
                    "io.balena.device-type": "odyssey-x86",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                }
            },
            "created": "2024-04-02T02:40:12.18674636Z",
            "history": [
                {
                    "created": "2021-04-01T17:59:37.09884046Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-20T10:46:00.581476476Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f36container FGC=f36 FBR=f36",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-04T19:22:41.732470197Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:935572949f59249cefbfc9d7f8cde48d7f2869fd16cb81212a9ea8e1aa533138 in / "
                },
                {
                    "created": "2023-05-04T19:22:42.49515285Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T02:31:11.870895941Z",
                    "created_by": "LABEL io.balena.architecture=amd64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T02:31:11.870895941Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T02:32:34.764521149Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-clients \t\tsubversion \t\tautoconf \t\tautomake \t\tbzip2-devel \t\tglib2-devel \t\tgcc \t\tgcc-c++ \t\tImageMagick \t\tImageMagick-devel \t\tkernel-devel \t\tlibcurl-devel \t\tlibevent-devel \t\tlibffi-devel \t\tlibjpeg-devel \t\tlibsqlite3x-devel \t\tlibxml2-devel \t\tlibxslt-devel \t\tlibyaml-devel \t\tmysql-devel \t\tmake \t\tncurses-devel \t\topenssl-devel \t\tpostgresql-devel \t\treadline-devel \t\tsqlite-devel \t\tzlib-devel \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T02:32:35.68557599Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T02:32:35.68557599Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T02:32:35.696789931Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T02:32:35.707602672Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T02:32:35.721195075Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T02:32:35.721195075Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T02:32:35.851609973Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 36   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T02:32:35.918729662Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: Intel 64-bit (x86-64) \\nOS: Fedora 36 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T02:40:12.125900157Z",
                    "created_by": "LABEL io.balena.device-type=odyssey-x86",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T02:40:12.125900157Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T02:40:12.18674636Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: Intel 64-bit (x86-64) \\nOS: Fedora 36 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:e63f436d1b7b86e487a841c1484f6afa2e77547972b57eb87bad3df87751775e",
                    "sha256:f4bb4c190a93159cf9ec41ea5f7d19572324db8c71764a88f27faed49eab7a9d",
                    "sha256:c48e59458f8b3d8b8f54a30fa7be2f578f79d0d69c8a186eeac9f2abe5056da0",
                    "sha256:548d3e235340f59c5eead1c5e99c61a9ef4e94c9d40a803535efb1423102f46a",
                    "sha256:94b0497859f7d8be9993f6bfd1211a554dc37396bd42ec335f1961d34afdf7cf",
                    "sha256:53bdb38cc935d6eb9c6b7273d2b08eccedc130f737311f86857ea0fb0f5eaf7c",
                    "sha256:da566b36b087d553bc82f0d791373df24ad84aa1ec67f71c47f3130c65c07e25",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:93c579bcd4567197ae52452e538bd0ec89f0569f092e7891157173feb67bd0fd",
                    "sha256:04e434e0f104a830dac5d4ac7ab737f177957ae13320d9100d1d589377bd23b2",
                    "sha256:b7be3b9006b5ce4f176aadc361491fc0c7394eb2af34d4aac0b14ab70de414e8"
                ]
            }
        },
        "36-build-20240408": {
            "architecture": "amd64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f36container",
                    "FGC=f36",
                    "FBR=f36",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "amd64",
                    "io.balena.device-type": "odyssey-x86",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                }
            },
            "created": "2024-04-09T13:46:17.757210494Z",
            "history": [
                {
                    "created": "2021-04-01T17:59:37.09884046Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-20T10:46:00.581476476Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f36container FGC=f36 FBR=f36",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-04T19:22:41.732470197Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:935572949f59249cefbfc9d7f8cde48d7f2869fd16cb81212a9ea8e1aa533138 in / "
                },
                {
                    "created": "2023-05-04T19:22:42.49515285Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:35:25.059537917Z",
                    "created_by": "LABEL io.balena.architecture=amd64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:35:25.059537917Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:36:45.367245302Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-clients \t\tsubversion \t\tautoconf \t\tautomake \t\tbzip2-devel \t\tglib2-devel \t\tgcc \t\tgcc-c++ \t\tImageMagick \t\tImageMagick-devel \t\tkernel-devel \t\tlibcurl-devel \t\tlibevent-devel \t\tlibffi-devel \t\tlibjpeg-devel \t\tlibsqlite3x-devel \t\tlibxml2-devel \t\tlibxslt-devel \t\tlibyaml-devel \t\tmysql-devel \t\tmake \t\tncurses-devel \t\topenssl-devel \t\tpostgresql-devel \t\treadline-devel \t\tsqlite-devel \t\tzlib-devel \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:36:46.132253589Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:36:46.132253589Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:36:46.143835773Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:36:46.175891493Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:36:46.186412677Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:36:46.186412677Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:36:46.32263324Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 36   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:36:46.385302441Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: Intel 64-bit (x86-64) \\nOS: Fedora 36 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:46:17.695271116Z",
                    "created_by": "LABEL io.balena.device-type=odyssey-x86",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:46:17.695271116Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:46:17.757210494Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: Intel 64-bit (x86-64) \\nOS: Fedora 36 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:e63f436d1b7b86e487a841c1484f6afa2e77547972b57eb87bad3df87751775e",
                    "sha256:731d08e83f785eb5d568d6e344a6525a39383b2248bdb10d195216d9c4d23947",
                    "sha256:5c9721ba8ffc7add01331bb680e596df0c7ae64e7b8fb2f8402b096294cf263f",
                    "sha256:a6f76098d59e6cc9f9551c625f313bce340689a68486f5d2ef2ea40dbba98272",
                    "sha256:881505826e2f9e32be4f50b410c1458858fbe1dec7045130a3991554c558fb69",
                    "sha256:d004bacebbbbbbfb5ee01d17e25ece904a47897d4b9ab383ad785cb05395bb68",
                    "sha256:a25182892fdc19d3c53103d26e59eb216febb275a18b65486d3705e254e89c54",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:fe4b914556f13c7219d5766ab0401d48407d5c91f6bd225c6148a21348d6e03e",
                    "sha256:46f5361257b3041d6a6c4d88e2ad874cf7a6ebf5fb7d263296db91f2393017bf",
                    "sha256:49e163fd3ca473c7ae7f57d29154a9769832207cdce46b8971a0454452838093"
                ]
            }
        },
        "36-run": {
            "architecture": "amd64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f36container",
                    "FGC=f36",
                    "FBR=f36",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "amd64",
                    "io.balena.device-type": "odyssey-x86",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                }
            },
            "created": "2024-04-09T13:46:07.002499314Z",
            "history": [
                {
                    "created": "2021-04-01T17:59:37.09884046Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-20T10:46:00.581476476Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f36container FGC=f36 FBR=f36",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-04T19:22:41.732470197Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:935572949f59249cefbfc9d7f8cde48d7f2869fd16cb81212a9ea8e1aa533138 in / "
                },
                {
                    "created": "2023-05-04T19:22:42.49515285Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:35:20.180521101Z",
                    "created_by": "LABEL io.balena.architecture=amd64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:35:20.180521101Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:35:20.340094609Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:35:20.340094609Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:35:20.348501123Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:35:20.356510095Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:35:20.394137756Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:35:20.394137756Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:35:20.498556183Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 36   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:35:20.564051368Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: Intel 64-bit (x86-64) \\nOS: Fedora 36 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:46:06.944563849Z",
                    "created_by": "LABEL io.balena.device-type=odyssey-x86",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:46:06.944563849Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:46:07.002499314Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: Intel 64-bit (x86-64) \\nOS: Fedora 36 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:e63f436d1b7b86e487a841c1484f6afa2e77547972b57eb87bad3df87751775e",
                    "sha256:a1e4494c87eab4bb954c0c2fe1ab1d8394c07ca387c2768d6d2a99fb5800a07a",
                    "sha256:97a3e54d0e2b6c22b51e1c6a4f61125bc2eee7f3db03851cc7b34b38c56326e1",
                    "sha256:bc6639b4b526fa26b3c0c904960c0e05251638eb28cb40663cbe3a2172d66373",
                    "sha256:becb5686853002f8f2d232ff808620ed14d64b8c937d2c894fc496667278af0d",
                    "sha256:71788e7183f7018b43b290e7ad4d05338917252ab32618b96b5c132281458082",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:71085217296dd1ade5a2d196ee04ebc1e7e7b854c9f0cbd6bc92a1d1891bd62f",
                    "sha256:3754a3df9a8f04e2dde35d8e6d3975c4087b63cfb6a5320278deba2af522581b",
                    "sha256:8c9d0171d54e787be06e210db28b8fe3dbce4af0ea5c9b533ed4d9ebe537d7fa"
                ]
            }
        },
        "36-run-20230811": {
            "architecture": "amd64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f36container",
                    "FGC=f36",
                    "FBR=f36",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "amd64",
                    "io.balena.device-type": "intel-nuc",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2023-08-21T20:04:41.357141299Z",
            "history": [
                {
                    "created": "2021-04-01T17:59:37.09884046Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-20T10:46:00.581476476Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f36container FGC=f36 FBR=f36",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-04T19:22:41.732470197Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:935572949f59249cefbfc9d7f8cde48d7f2869fd16cb81212a9ea8e1aa533138 in / "
                },
                {
                    "created": "2023-05-04T19:22:42.49515285Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-21T19:48:16.32977585Z",
                    "created_by": "LABEL io.balena.architecture=amd64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-21T19:48:16.32977585Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-21T19:51:07.589317712Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-21T19:51:07.589317712Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-21T19:51:07.628931297Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-21T19:51:07.640460793Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-21T19:51:07.665595384Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-21T19:51:07.665595384Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-21T19:51:08.08119413Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 36   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-21T19:51:08.412159108Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: Intel 64-bit (x86-64) \\nOS: Fedora 36 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-21T20:04:41.064403436Z",
                    "created_by": "LABEL io.balena.device-type=intel-nuc",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-21T20:04:41.064403436Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-21T20:04:41.357141299Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: Intel 64-bit (x86-64) \\nOS: Fedora 36 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "moby.buildkit.buildinfo.v1": "eyJmcm9udGVuZCI6ImRvY2tlcmZpbGUudjAiLCJhdHRycyI6eyJmaWxlbmFtZSI6IkRvY2tlcmZpbGUifSwic291cmNlcyI6W3sidHlwZSI6ImRvY2tlci1pbWFnZSIsInJlZiI6ImRvY2tlci5pby9iYWxlbmFsaWIvYW1kNjQtZmVkb3JhOjM2LXJ1biIsInBpbiI6InNoYTI1Njo2ZDYwOWExYzQ1NGJiYzVkOTA4ZWViODkzZjJjYWMzOGU5ZWU1YjY2NWYzNGVjOTZhYWYwODU1MjNmMTMwYjVkIn1dfQ==",
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:e63f436d1b7b86e487a841c1484f6afa2e77547972b57eb87bad3df87751775e",
                    "sha256:097376a3036f06ae95cb494ed708f3d4822b5e92e9df47e5b2d167c6b1a54b73",
                    "sha256:d7e2a1925743eeae2b2373ae6b417646b37388bae96142f3bae15b3c701dbceb",
                    "sha256:ace1bbc881761ae4eed452b4527f3430b613b177cfb743de76a935eba118e661",
                    "sha256:bac1e8b5aed7448b131bffe5ebe8a080e0db87a169d828e85691f3e9521b04a3",
                    "sha256:611a38a995e2a62c467ee13bf8c81f58444ec39d8c96959deb766d73f1fbc21f",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:ba412297a6d6ecff54ce82499788407c6cdfdd725c2e3b9753dc83fee18495cb",
                    "sha256:ae6d0eb313078f1005a1069497f130c92a656ee90f99269cc31bf5a0094c1555",
                    "sha256:6ad26fb31d33e1d11d6878544784066dad0310145b97a58b23341b3fc25fd7a1"
                ]
            }
        },
        "36-run-20230829": {
            "architecture": "amd64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f36container",
                    "FGC=f36",
                    "FBR=f36",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "amd64",
                    "io.balena.device-type": "intel-nuc",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2023-09-02T04:11:17.240427952Z",
            "history": [
                {
                    "created": "2021-04-01T17:59:37.09884046Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-20T10:46:00.581476476Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f36container FGC=f36 FBR=f36",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-04T19:22:41.732470197Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:935572949f59249cefbfc9d7f8cde48d7f2869fd16cb81212a9ea8e1aa533138 in / "
                },
                {
                    "created": "2023-05-04T19:22:42.49515285Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-02T03:51:56.026211928Z",
                    "created_by": "LABEL io.balena.architecture=amd64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-02T03:51:56.026211928Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T03:51:56.625842353Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T03:51:56.625842353Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-02T03:51:56.644245589Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T03:51:56.680317245Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T03:51:56.705271737Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T03:51:56.705271737Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-02T03:51:56.988073973Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 36   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T03:51:57.308034303Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: Intel 64-bit (x86-64) \\nOS: Fedora 36 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T04:11:16.904493942Z",
                    "created_by": "LABEL io.balena.device-type=intel-nuc",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-02T04:11:16.904493942Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T04:11:17.240427952Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: Intel 64-bit (x86-64) \\nOS: Fedora 36 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:e63f436d1b7b86e487a841c1484f6afa2e77547972b57eb87bad3df87751775e",
                    "sha256:9cfbb29b6679aaf915ef9638d4225ced66daeb4726a1a3a3d5a94b2d0419b387",
                    "sha256:4c409c45528796b0a5aa65fceaa36777216c8bd6bc7584784d92a7f9e20caaf9",
                    "sha256:f0da70f56dfa450ede081e0885d54f26eec72a95fbc5716950bf5e930f33b635",
                    "sha256:527ba13f8abe7ec149b8a42958463509ee5dc67cd37f4304fa7cdbe216d4717a",
                    "sha256:0b5221f210edba02746cbb301991f169f65c9eed48470eb1cfcef81d8313f0c7",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:20d70eda1abe399e069e938cd7ed7897d0ad4675dcad8fb70168bbc7ab6f6407",
                    "sha256:51d30c30fab8e3e51a577f4d54b863c386e80be9485745059f451d04efbb9feb",
                    "sha256:11e6079582779be89beb29741ac884e8df959a27cd29250a92ddd3ef778bacc3"
                ]
            }
        },
        "36-run-20230904": {
            "architecture": "amd64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f36container",
                    "FGC=f36",
                    "FBR=f36",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "amd64",
                    "io.balena.device-type": "intel-nuc",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2023-09-09T04:07:15.295046608Z",
            "history": [
                {
                    "created": "2021-04-01T17:59:37.09884046Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-20T10:46:00.581476476Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f36container FGC=f36 FBR=f36",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-04T19:22:41.732470197Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:935572949f59249cefbfc9d7f8cde48d7f2869fd16cb81212a9ea8e1aa533138 in / "
                },
                {
                    "created": "2023-05-04T19:22:42.49515285Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T03:51:27.956630204Z",
                    "created_by": "LABEL io.balena.architecture=amd64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T03:51:27.956630204Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T03:51:28.412912686Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T03:51:28.412912686Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T03:51:28.434947912Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T03:51:28.475148125Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T03:51:28.487700154Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T03:51:28.487700154Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T03:51:28.76406999Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 36   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T03:51:29.100593843Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: Intel 64-bit (x86-64) \\nOS: Fedora 36 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:07:15.07241905Z",
                    "created_by": "LABEL io.balena.device-type=intel-nuc",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T04:07:15.07241905Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:07:15.295046608Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: Intel 64-bit (x86-64) \\nOS: Fedora 36 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:e63f436d1b7b86e487a841c1484f6afa2e77547972b57eb87bad3df87751775e",
                    "sha256:61ff7e7f0e9e748aee32a6b75c2dffb0b7224477a3572a3805caa366d1aa6c98",
                    "sha256:31823cbb37a56511b16bc7e956944cd5db90de3a283fcc1b511a354446aea18d",
                    "sha256:f7c387e0d979dbdfcb4e8ae4e460c5a7742cc1b2120041f469458400f80eba4d",
                    "sha256:deb1f36c490309944641af6faa604fcf16ea8203c3a586d43272cfdc3d341bee",
                    "sha256:358d2dc0df52e7df7769611173da083951765d1a8b54aea0a98bc4c18dea62d7",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:c43ffc0bf4f2fd4564319aeaa6b598f6122684db2da0cb7be8e5c14d52e3dbbd",
                    "sha256:ed3ce86bd6808e13da1cb7bcd840fdc8059222eba56de8931fe3e5856884f30d",
                    "sha256:5f2510255fdd57eea80bb2b0e23e80902d1d725e3716a3bbf77f95be5a205c5d"
                ]
            }
        },
        "36-run-20230911": {
            "architecture": "amd64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f36container",
                    "FGC=f36",
                    "FBR=f36",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "amd64",
                    "io.balena.device-type": "odyssey-x86",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2023-09-11T23:03:13.24947849Z",
            "history": [
                {
                    "created": "2021-04-01T17:59:37.09884046Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-20T10:46:00.581476476Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f36container FGC=f36 FBR=f36",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-04T19:22:41.732470197Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:935572949f59249cefbfc9d7f8cde48d7f2869fd16cb81212a9ea8e1aa533138 in / "
                },
                {
                    "created": "2023-05-04T19:22:42.49515285Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T03:51:27.956630204Z",
                    "created_by": "LABEL io.balena.architecture=amd64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T03:51:27.956630204Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T03:51:28.412912686Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T03:51:28.412912686Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T03:51:28.434947912Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T03:51:28.475148125Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T03:51:28.487700154Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T03:51:28.487700154Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T03:51:28.76406999Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 36   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T03:51:29.100593843Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: Intel 64-bit (x86-64) \\nOS: Fedora 36 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-11T23:03:13.199304069Z",
                    "created_by": "LABEL io.balena.device-type=odyssey-x86",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-11T23:03:13.199304069Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-11T23:03:13.24947849Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: Intel 64-bit (x86-64) \\nOS: Fedora 36 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:e63f436d1b7b86e487a841c1484f6afa2e77547972b57eb87bad3df87751775e",
                    "sha256:61ff7e7f0e9e748aee32a6b75c2dffb0b7224477a3572a3805caa366d1aa6c98",
                    "sha256:31823cbb37a56511b16bc7e956944cd5db90de3a283fcc1b511a354446aea18d",
                    "sha256:f7c387e0d979dbdfcb4e8ae4e460c5a7742cc1b2120041f469458400f80eba4d",
                    "sha256:deb1f36c490309944641af6faa604fcf16ea8203c3a586d43272cfdc3d341bee",
                    "sha256:358d2dc0df52e7df7769611173da083951765d1a8b54aea0a98bc4c18dea62d7",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:c43ffc0bf4f2fd4564319aeaa6b598f6122684db2da0cb7be8e5c14d52e3dbbd",
                    "sha256:46bd88b852f8b90093457e453eef0d83ae2a23eaf8a9f3c65151764087c5cf6f",
                    "sha256:9ab3d3cb46e72abe3615a26740868d9dd96549a244dc6bb2154d574ec83e29cf"
                ]
            }
        },
        "36-run-20231103": {
            "architecture": "amd64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f36container",
                    "FGC=f36",
                    "FBR=f36",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "amd64",
                    "io.balena.device-type": "odyssey-x86",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2023-11-04T20:35:37.82019945Z",
            "history": [
                {
                    "created": "2021-04-01T17:59:37.09884046Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-20T10:46:00.581476476Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f36container FGC=f36 FBR=f36",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-04T19:22:41.732470197Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:935572949f59249cefbfc9d7f8cde48d7f2869fd16cb81212a9ea8e1aa533138 in / "
                },
                {
                    "created": "2023-05-04T19:22:42.49515285Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-04T20:25:29.243577205Z",
                    "created_by": "LABEL io.balena.architecture=amd64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-04T20:25:29.243577205Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T20:25:29.903665566Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T20:25:29.903665566Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-04T20:25:29.916324691Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T20:25:29.928306776Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T20:25:29.956223873Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T20:25:29.956223873Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-04T20:25:30.220530293Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 36   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T20:25:30.304554Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: Intel 64-bit (x86-64) \\nOS: Fedora 36 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T20:35:37.730381242Z",
                    "created_by": "LABEL io.balena.device-type=odyssey-x86",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-04T20:35:37.730381242Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T20:35:37.82019945Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: Intel 64-bit (x86-64) \\nOS: Fedora 36 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:e63f436d1b7b86e487a841c1484f6afa2e77547972b57eb87bad3df87751775e",
                    "sha256:6a8d43eea5dc0da7e8d64e80e1b5a4f0a3ade4c2d84a60d38534c4f4fb2194a6",
                    "sha256:c39ba9bb224dcd35cd8cd76ce23a9b3fe2ac3fac47e55eb2cbaeb754459a5286",
                    "sha256:1b72dcbbca9c8c6684f4eec9b0c9cd229ba5db846839d320f1edd5ade075f354",
                    "sha256:0ea05890bbfcbd66f79777f864ae395f6002895200a79056cff751b8df52d79e",
                    "sha256:453749ce4ead478b4340819bbff2f63380e92ef83ffed48e1fd76f27c92bcef0",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:a9c0bce52a048c214159b2ca3498be7b2780855180acd87c59b47a22b88fc3cf",
                    "sha256:1309a6806ad68cea5deb02a95d2d65f0577449f29373d63a711adcd5f5f590aa",
                    "sha256:18380e654f267ad9f9daed95de0bc6d8e6e1d7ce1a8121c04d2241e61f614137"
                ]
            }
        },
        "36-run-20231204": {
            "architecture": "amd64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f36container",
                    "FGC=f36",
                    "FBR=f36",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "amd64",
                    "io.balena.device-type": "odyssey-x86",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2023-12-06T18:39:40.908609143Z",
            "history": [
                {
                    "created": "2021-04-01T17:59:37.09884046Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-20T10:46:00.581476476Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f36container FGC=f36 FBR=f36",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-04T19:22:41.732470197Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:935572949f59249cefbfc9d7f8cde48d7f2869fd16cb81212a9ea8e1aa533138 in / "
                },
                {
                    "created": "2023-05-04T19:22:42.49515285Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T17:56:00.092864065Z",
                    "created_by": "LABEL io.balena.architecture=amd64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T17:56:00.092864065Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T17:56:00.339709485Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T17:56:00.339709485Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T17:56:00.353156615Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T17:56:00.363993245Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T17:56:00.376096805Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T17:56:00.376096805Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T17:56:00.597336299Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 36   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T17:56:00.687286816Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: Intel 64-bit (x86-64) \\nOS: Fedora 36 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T18:39:40.826065533Z",
                    "created_by": "LABEL io.balena.device-type=odyssey-x86",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T18:39:40.826065533Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T18:39:40.908609143Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: Intel 64-bit (x86-64) \\nOS: Fedora 36 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:e63f436d1b7b86e487a841c1484f6afa2e77547972b57eb87bad3df87751775e",
                    "sha256:c6b7e299df96339dbe147e9cb1241a97e1ea0bccdee892757978d69167326ef9",
                    "sha256:8fbb61fbbe12703839291080dc2dcc85af6300ee816876abe435f711c38355d6",
                    "sha256:54d3117f44a9622d2439961192257d38bb0678dc7ed52a515748568ce675d4f9",
                    "sha256:1565526cacd33a5ad5d6dada8881afc328bf8406629553bae9378f33965dde6e",
                    "sha256:64ca6b03557f4db9f1ff84524c824c73ac2306d68a15bb4071666097a397f65e",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:ac3fe088c8e7355f38e8c0d5f00f823002557fede133b5334d1623f6eddacbc1",
                    "sha256:d2220f655393861b1e383df9f1a3e4b87d6527b44afbd2a06fed900f353a742a",
                    "sha256:bec060ba87081fa3373d39d21bdd65e1c572b4a46e0ecfa79aab6b007dbdeb0d"
                ]
            }
        },
        "36-run-20240105": {
            "architecture": "amd64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f36container",
                    "FGC=f36",
                    "FBR=f36",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "amd64",
                    "io.balena.device-type": "odyssey-x86",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2024-01-05T14:09:48.201175766Z",
            "history": [
                {
                    "created": "2021-04-01T17:59:37.09884046Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-20T10:46:00.581476476Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f36container FGC=f36 FBR=f36",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-04T19:22:41.732470197Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:935572949f59249cefbfc9d7f8cde48d7f2869fd16cb81212a9ea8e1aa533138 in / "
                },
                {
                    "created": "2023-05-04T19:22:42.49515285Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-05T14:00:01.995816866Z",
                    "created_by": "LABEL io.balena.architecture=amd64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-05T14:00:01.995816866Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-05T14:00:02.749112256Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-05T14:00:02.749112256Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-05T14:00:02.760278236Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-05T14:00:02.800354907Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-05T14:00:02.811131558Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-05T14:00:02.811131558Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-05T14:00:03.276265093Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 36   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-05T14:00:03.335501281Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: Intel 64-bit (x86-64) \\nOS: Fedora 36 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-05T14:09:48.135062083Z",
                    "created_by": "LABEL io.balena.device-type=odyssey-x86",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-05T14:09:48.135062083Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-05T14:09:48.201175766Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: Intel 64-bit (x86-64) \\nOS: Fedora 36 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:e63f436d1b7b86e487a841c1484f6afa2e77547972b57eb87bad3df87751775e",
                    "sha256:93742871e2df0b67154b1304e0fa03dd1cb7ee76ca80e976a08de9dc2cf8c253",
                    "sha256:df33fc5db4db2f83d9e78a2eea80186182aadb8528ece679653f39aa1c9832d2",
                    "sha256:4f86cb348073d9b8b7492a0788d18d6420d86736b42eb55da1c4428069338ee0",
                    "sha256:7af35db9344ddb98b091d49569892330f48e4c7c47eddb3305637d7115cef747",
                    "sha256:373888fc7701ce7f9df88452289c2c919252ccaeafc2237e0f3c7d9fcba8be5d",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:36b2c9693ead3419bf7c9e4fa046365e54cc924e4efd64264770b1b6cfbb1ab2",
                    "sha256:1612dc2ae65f05dad4609c13f81cba34c59c31d6f35e3dd158484f8e60815cea",
                    "sha256:2ed2f53bca613474132b388b4b56c913b93560d71564f54e6768eeba7d783f49"
                ]
            }
        },
        "36-run-20240201": {
            "architecture": "amd64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f36container",
                    "FGC=f36",
                    "FBR=f36",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "amd64",
                    "io.balena.device-type": "odyssey-x86",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2024-02-03T22:43:45.987677853Z",
            "history": [
                {
                    "created": "2021-04-01T17:59:37.09884046Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-20T10:46:00.581476476Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f36container FGC=f36 FBR=f36",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-04T19:22:41.732470197Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:935572949f59249cefbfc9d7f8cde48d7f2869fd16cb81212a9ea8e1aa533138 in / "
                },
                {
                    "created": "2023-05-04T19:22:42.49515285Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-03T22:35:30.050189817Z",
                    "created_by": "LABEL io.balena.architecture=amd64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-03T22:35:30.050189817Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-03T22:35:30.331874639Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-03T22:35:30.331874639Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-03T22:35:30.370443125Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-03T22:35:30.38244096Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-03T22:35:30.393235446Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-03T22:35:30.393235446Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-03T22:35:30.626421914Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 36   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-03T22:35:30.701521767Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: Intel 64-bit (x86-64) \\nOS: Fedora 36 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-03T22:43:45.916145897Z",
                    "created_by": "LABEL io.balena.device-type=odyssey-x86",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-03T22:43:45.916145897Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-03T22:43:45.987677853Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: Intel 64-bit (x86-64) \\nOS: Fedora 36 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:e63f436d1b7b86e487a841c1484f6afa2e77547972b57eb87bad3df87751775e",
                    "sha256:13f7c1a59932a94a4a500cc0b04eece9b57d6415a0f0ad62d474cb8aac976a2b",
                    "sha256:25ff1a16d2d6830bb4d1114bad96d3a647b1d54cfcbf885803609c33e8becb0e",
                    "sha256:bd1a451ea94141bfed8256cf2d545d3bea15148c8d388ae48cd7944673c7b31a",
                    "sha256:4d572b765ccdeaae28c956e98eb1a8609ffa6cb14d5f30b7c5af4367abf74442",
                    "sha256:c1ba4af5061c4d8bdb8ce875c6495a8626390f7acf4565e77e726f5ed926ec32",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:76a27707bb60a4396ccc2407a5a44e6d4872a4ddafe4c894f15fcfdd4d538b3a",
                    "sha256:2f391ac23a2ba69535af58466aeb48b4805d3d9e5529a8807d21040737b1329b",
                    "sha256:f14365f4414712a05c065e47c21fd9e97c6f68d69c6b6c42f421ebbcfca95efa"
                ]
            }
        },
        "36-run-20240304": {
            "architecture": "amd64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f36container",
                    "FGC=f36",
                    "FBR=f36",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "amd64",
                    "io.balena.device-type": "odyssey-x86",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2024-03-05T18:48:20.395218437Z",
            "history": [
                {
                    "created": "2021-04-01T17:59:37.09884046Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-20T10:46:00.581476476Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f36container FGC=f36 FBR=f36",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-04T19:22:41.732470197Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:935572949f59249cefbfc9d7f8cde48d7f2869fd16cb81212a9ea8e1aa533138 in / "
                },
                {
                    "created": "2023-05-04T19:22:42.49515285Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T18:27:09.029199072Z",
                    "created_by": "LABEL io.balena.architecture=amd64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T18:27:09.029199072Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T18:27:09.241416174Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T18:27:09.241416174Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T18:27:09.250370415Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T18:27:09.298983678Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T18:27:09.308297491Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T18:27:09.308297491Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T18:27:09.422728237Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 36   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T18:27:09.484299453Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: Intel 64-bit (x86-64) \\nOS: Fedora 36 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T18:48:20.328422209Z",
                    "created_by": "LABEL io.balena.device-type=odyssey-x86",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T18:48:20.328422209Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T18:48:20.395218437Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: Intel 64-bit (x86-64) \\nOS: Fedora 36 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:e63f436d1b7b86e487a841c1484f6afa2e77547972b57eb87bad3df87751775e",
                    "sha256:ce54e3e078d86f07642a2f98c4283fa3ee54275498a8d0e44139827be4e116bd",
                    "sha256:eca18536853ba6b0d6ddcad2d04244f25725ffd718763f052d94f73099cba481",
                    "sha256:59b16cf1a50288d5ed31b0fa420a41994bfacb5ec942f09f01b341e59735638f",
                    "sha256:dbf1591bb9fb8fd0008c59d21ce3dc59f5005878923668f35fb895c01777f5a3",
                    "sha256:d651f6249b32e520521357f0a04be6b7d4c4905f27bd0df247b76deda8f05866",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:8d66b4408e78d5d6903d5622aae75e848246eee5993b80bff06bf8c67c00efb4",
                    "sha256:10b8e817b78b3687b317058ccb568cf779c9fde103e386657e83a721b129b9bd",
                    "sha256:410282af087101e3c4c3cf3141930af42c4caa1afce08131acf0dbedd9193306"
                ]
            }
        },
        "36-run-20240401": {
            "architecture": "amd64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f36container",
                    "FGC=f36",
                    "FBR=f36",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "amd64",
                    "io.balena.device-type": "odyssey-x86",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                }
            },
            "created": "2024-04-02T02:40:04.060725788Z",
            "history": [
                {
                    "created": "2021-04-01T17:59:37.09884046Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-20T10:46:00.581476476Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f36container FGC=f36 FBR=f36",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-04T19:22:41.732470197Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:935572949f59249cefbfc9d7f8cde48d7f2869fd16cb81212a9ea8e1aa533138 in / "
                },
                {
                    "created": "2023-05-04T19:22:42.49515285Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T02:31:15.397973417Z",
                    "created_by": "LABEL io.balena.architecture=amd64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T02:31:15.397973417Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T02:31:15.740989076Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T02:31:15.740989076Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T02:31:15.749772478Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T02:31:15.757476594Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T02:31:15.791841802Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T02:31:15.791841802Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T02:31:15.910090487Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 36   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T02:31:15.991321046Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: Intel 64-bit (x86-64) \\nOS: Fedora 36 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T02:40:03.995398087Z",
                    "created_by": "LABEL io.balena.device-type=odyssey-x86",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T02:40:03.995398087Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T02:40:04.060725788Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: Intel 64-bit (x86-64) \\nOS: Fedora 36 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:e63f436d1b7b86e487a841c1484f6afa2e77547972b57eb87bad3df87751775e",
                    "sha256:00dabc9ea18394fb5e65e02a251a8fd216364f0a4ea218e115f860665e4f0d7a",
                    "sha256:2a13f3b3f03d2c50a940b000d8e03747912806f5ab96cb5b5be8b9096ec0da79",
                    "sha256:fd16ce1e6945d549f979a053db92cd0c9012347d648099c591f327e944af99fe",
                    "sha256:9c83215f2f7c5a47fa440474dda27dc090e67019ff8f9efa21eb62f1e0fbb2cc",
                    "sha256:f8879047bb1e836a4f1f262074eca7ead622e0f15f539a205295a0e3ec465a34",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:74a5564fcd888d7d87ccf1a0a9c5f94dd828866b1aa26036a9d3cc121223c269",
                    "sha256:078a13af5e9b4466b4da119a5d41945ef772741e981ccd398a2bd402e9aeed27",
                    "sha256:62d51db88370e56afdc404d6a77455597ff1ebeb70d9b580a7ab85abe0d9768a"
                ]
            }
        },
        "36-run-20240408": {
            "architecture": "amd64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f36container",
                    "FGC=f36",
                    "FBR=f36",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "amd64",
                    "io.balena.device-type": "odyssey-x86",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                }
            },
            "created": "2024-04-09T13:46:07.002499314Z",
            "history": [
                {
                    "created": "2021-04-01T17:59:37.09884046Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-20T10:46:00.581476476Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f36container FGC=f36 FBR=f36",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-04T19:22:41.732470197Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:935572949f59249cefbfc9d7f8cde48d7f2869fd16cb81212a9ea8e1aa533138 in / "
                },
                {
                    "created": "2023-05-04T19:22:42.49515285Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:35:20.180521101Z",
                    "created_by": "LABEL io.balena.architecture=amd64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:35:20.180521101Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:35:20.340094609Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:35:20.340094609Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:35:20.348501123Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:35:20.356510095Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:35:20.394137756Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:35:20.394137756Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:35:20.498556183Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 36   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:35:20.564051368Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: Intel 64-bit (x86-64) \\nOS: Fedora 36 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:46:06.944563849Z",
                    "created_by": "LABEL io.balena.device-type=odyssey-x86",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:46:06.944563849Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:46:07.002499314Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: Intel 64-bit (x86-64) \\nOS: Fedora 36 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:e63f436d1b7b86e487a841c1484f6afa2e77547972b57eb87bad3df87751775e",
                    "sha256:a1e4494c87eab4bb954c0c2fe1ab1d8394c07ca387c2768d6d2a99fb5800a07a",
                    "sha256:97a3e54d0e2b6c22b51e1c6a4f61125bc2eee7f3db03851cc7b34b38c56326e1",
                    "sha256:bc6639b4b526fa26b3c0c904960c0e05251638eb28cb40663cbe3a2172d66373",
                    "sha256:becb5686853002f8f2d232ff808620ed14d64b8c937d2c894fc496667278af0d",
                    "sha256:71788e7183f7018b43b290e7ad4d05338917252ab32618b96b5c132281458082",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:71085217296dd1ade5a2d196ee04ebc1e7e7b854c9f0cbd6bc92a1d1891bd62f",
                    "sha256:3754a3df9a8f04e2dde35d8e6d3975c4087b63cfb6a5320278deba2af522581b",
                    "sha256:8c9d0171d54e787be06e210db28b8fe3dbce4af0ea5c9b533ed4d9ebe537d7fa"
                ]
            }
        },
        "37": {
            "architecture": "amd64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "amd64",
                    "io.balena.device-type": "odyssey-x86",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                }
            },
            "created": "2024-05-02T12:18:12.985891796Z",
            "history": [
                {
                    "created": "2021-04-01T17:59:37.09884046Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-20T10:46:14.111891363Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-29T00:26:01.517560423Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:533e3405b5c87c5a7239c02ef2d954b1072df5afeee2139a9e2dd133dd4612b6 in / "
                },
                {
                    "created": "2023-11-29T00:26:02.196411879Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-02T12:11:35.787518344Z",
                    "created_by": "LABEL io.balena.architecture=amd64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-02T12:11:35.787518344Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T12:11:36.155885234Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T12:11:36.155885234Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-02T12:11:36.166220512Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T12:11:36.201352732Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T12:11:36.229371253Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T12:11:36.229371253Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-02T12:11:36.489410396Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T12:11:36.547751991Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: Intel 64-bit (x86-64) \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T12:18:12.910718736Z",
                    "created_by": "LABEL io.balena.device-type=odyssey-x86",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-02T12:18:12.910718736Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T12:18:12.985891796Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: Intel 64-bit (x86-64) \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:e89a2dafe59a58dee0fcdc4620c1e36ef34357d92655da13e1f656c33031c0b5",
                    "sha256:0a648d9cc45ccee05b7dda5c00174ff854e8f08899edb49b4b9ea8c61b058805",
                    "sha256:473314ea19844329bd2910bee3a05e7fd8996962d93719e1c3837927325ce390",
                    "sha256:1a8b3c1e1273d38aa2a3915c1cc142013ca3810eabdbad9eebc5997adc885bc2",
                    "sha256:ecc646eb7ee27032fc4faf92282b9e1d4176e672e63e5859c956e3b9b81e3777",
                    "sha256:dcaa3246209255ba81e531a54247f2762caac0def1a733005d0f168a69d14815",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:b537c15fb5e1acaa06a911b4b340ad545722901d3c792694a6cf8441f4bd8739",
                    "sha256:2738d555c5ce0d58e21ca1d22b99000d3deac89174240ba1bde438476ef3fdc4",
                    "sha256:5be83af9977c7d94e3c47abf63914eb6b1faed6b1bdc37a84b60c687ad11330a"
                ]
            }
        },
        "37-20230811": {
            "architecture": "amd64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "amd64",
                    "io.balena.device-type": "intel-nuc",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2023-08-21T20:15:55.822498992Z",
            "history": [
                {
                    "created": "2021-04-01T17:59:37.09884046Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-20T10:46:14.111891363Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-04T18:22:42.383186833Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:3242aba4f770b24f6433fa19e51c222acf5a33d2268b82c7ec43874258838970 in / "
                },
                {
                    "created": "2023-08-04T18:22:43.038358583Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-21T19:52:26.839667108Z",
                    "created_by": "LABEL io.balena.architecture=amd64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-21T19:52:26.839667108Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-21T19:59:43.225911138Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-21T19:59:43.225911138Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-21T19:59:43.265017408Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-21T19:59:43.278822397Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-21T19:59:43.31418837Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-21T19:59:43.31418837Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-21T19:59:43.649629911Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-21T19:59:44.091734469Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: Intel 64-bit (x86-64) \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-21T20:15:55.528470281Z",
                    "created_by": "LABEL io.balena.device-type=intel-nuc",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-21T20:15:55.528470281Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-21T20:15:55.822498992Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: Intel 64-bit (x86-64) \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "moby.buildkit.buildinfo.v1": "eyJmcm9udGVuZCI6ImRvY2tlcmZpbGUudjAiLCJhdHRycyI6eyJmaWxlbmFtZSI6IkRvY2tlcmZpbGUifSwic291cmNlcyI6W3sidHlwZSI6ImRvY2tlci1pbWFnZSIsInJlZiI6ImRvY2tlci5pby9iYWxlbmFsaWIvYW1kNjQtZmVkb3JhOjM3LXJ1biIsInBpbiI6InNoYTI1Njo0ZDZkZjdlMzYzZTNiZmE5ZWZkNDVjODIxMjk2ZTE3MmMwOTAzMmE3OTU0MTkyZjczMDQxMWM4OTlmZWYyNGI3In1dfQ==",
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:8a5c91bcb42954a1d542cf1243b349f4d83fdd74d2ddc71ccaf63ffb7b661793",
                    "sha256:fca50d5c7997910a204bc6cee98bca6e25e11762221da2784c6d3645566f0ddb",
                    "sha256:3480908bbabedafa2f826ca9f403cb09eecf0383304b8bbe14e68de7beca1ddf",
                    "sha256:0dd58378b6f4109aefd89403151fb2cbfb7b5b5a829252b6828dd74ac3d4197f",
                    "sha256:597c7f0663815a1c3890fa212a75c9d37ecdc09d52d9952fd5b53e5d9caf6212",
                    "sha256:dbf5739d78d524aac1abdba9884c01b35edc636d914b379819738a3ef75648d7",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:21f04c3046c703b1a27343fba484e8a1bcdb988c7d8555b059c066ef4f0220d9",
                    "sha256:ce2118ba52ad3ebcbc8cbd5810227ff666d0cd51fad51fc828f171d92af3d74d",
                    "sha256:d111ea2ab348ba7c188e6a0c3aac986f1b5b2009b38e7416bf4ff012d1666f45"
                ]
            }
        },
        "37-20230829": {
            "architecture": "amd64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "amd64",
                    "io.balena.device-type": "intel-nuc",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2023-09-02T04:17:48.735207793Z",
            "history": [
                {
                    "created": "2021-04-01T17:59:37.09884046Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-20T10:46:14.111891363Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-04T18:22:42.383186833Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:3242aba4f770b24f6433fa19e51c222acf5a33d2268b82c7ec43874258838970 in / "
                },
                {
                    "created": "2023-08-04T18:22:43.038358583Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-02T03:53:27.833103705Z",
                    "created_by": "LABEL io.balena.architecture=amd64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-02T03:53:27.833103705Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T03:59:29.487734532Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T03:59:29.487734532Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-02T03:59:29.506051361Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T03:59:29.527922573Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T03:59:29.557992178Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T03:59:29.557992178Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-02T03:59:29.842622847Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T03:59:30.225039407Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: Intel 64-bit (x86-64) \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T04:17:48.484867648Z",
                    "created_by": "LABEL io.balena.device-type=intel-nuc",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-02T04:17:48.484867648Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T04:17:48.735207793Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: Intel 64-bit (x86-64) \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:8a5c91bcb42954a1d542cf1243b349f4d83fdd74d2ddc71ccaf63ffb7b661793",
                    "sha256:380419ecfa744daae3d1681c557d6abf8c91c0c5fc86a2969a8ed77e9709baa4",
                    "sha256:58c1f2554a6401c303a1ee84178afc50a8b06dab7b87655f31d30c850c487334",
                    "sha256:c3f7ce1d467d976dfa04264cd86521d73064a1ed6e9fb71dc3410e477ae870ae",
                    "sha256:6f5c6abfd2b62955e4a3b682bb44712ef50b0fd3543e11c7d4fc17f1b82f6907",
                    "sha256:56469bde0dc559a1839e14d976f279c90e21acf0ed0b000c6a72d55ee8220876",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:8e90a20b4674cca48347191b933581e0ed4da241493cbfdf5a194bae7e5f8292",
                    "sha256:95a838d8cef27239aa14c47871c7b64b3b90b793856807b90df22d3881fd91b0",
                    "sha256:ec1d9080493cb8830eb541d3ffd2142141dc02d8e2e41bccd274018f0267e682"
                ]
            }
        },
        "37-20230904": {
            "architecture": "amd64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "amd64",
                    "io.balena.device-type": "intel-nuc",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2023-09-09T04:14:00.317904233Z",
            "history": [
                {
                    "created": "2021-04-01T17:59:37.09884046Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-20T10:46:14.111891363Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-04T18:22:42.383186833Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:3242aba4f770b24f6433fa19e51c222acf5a33d2268b82c7ec43874258838970 in / "
                },
                {
                    "created": "2023-08-04T18:22:43.038358583Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T03:59:08.044755432Z",
                    "created_by": "LABEL io.balena.architecture=amd64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T03:59:08.044755432Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T03:59:08.444875601Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T03:59:08.444875601Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T03:59:08.456878787Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T03:59:08.464404941Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T03:59:08.470905987Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T03:59:08.470905987Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T03:59:08.778387992Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T03:59:08.973104388Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: Intel 64-bit (x86-64) \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:14:00.107701171Z",
                    "created_by": "LABEL io.balena.device-type=intel-nuc",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T04:14:00.107701171Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:14:00.317904233Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: Intel 64-bit (x86-64) \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:8a5c91bcb42954a1d542cf1243b349f4d83fdd74d2ddc71ccaf63ffb7b661793",
                    "sha256:7e137976dd3d65e1b7be54fc9701bd78bf00b6ee978ad81280b8bd275035d3a7",
                    "sha256:42ee78234deac018bf727039dafccfb78c9d756f1ec8903cef7eb85190ead930",
                    "sha256:7dc9005f3e3ce1987ea49d7c2df24a1cc02afb441b95cfff9caf872819ab4dfc",
                    "sha256:23e486a49ac227803e0c85abb4c0cd9fd2aa05725dbba3f37eb1a3aeb1d7bd57",
                    "sha256:96cfa030f844607e078e22e5b7761f3ce499394317ad0af4d4db456fb31aa74d",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:1ea1e3eb686efc3c91616ea714b0a283b6173e34d5506b3b624d37b1ed0064ed",
                    "sha256:542b978ffd01f251026ec67db609ce53d689b901747e6febcc4f908c46e731a6",
                    "sha256:ab7da43fc40a18bd1103ac844b2245b9dc80a8c437d638c05f5d64d746e937d2"
                ]
            }
        },
        "37-20230911": {
            "architecture": "amd64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "amd64",
                    "io.balena.device-type": "odyssey-x86",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2023-09-11T23:03:25.893033534Z",
            "history": [
                {
                    "created": "2021-04-01T17:59:37.09884046Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-20T10:46:14.111891363Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-04T18:22:42.383186833Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:3242aba4f770b24f6433fa19e51c222acf5a33d2268b82c7ec43874258838970 in / "
                },
                {
                    "created": "2023-08-04T18:22:43.038358583Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T03:59:08.044755432Z",
                    "created_by": "LABEL io.balena.architecture=amd64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T03:59:08.044755432Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T03:59:08.444875601Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T03:59:08.444875601Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T03:59:08.456878787Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T03:59:08.464404941Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T03:59:08.470905987Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T03:59:08.470905987Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T03:59:08.778387992Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T03:59:08.973104388Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: Intel 64-bit (x86-64) \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-11T23:03:25.832214295Z",
                    "created_by": "LABEL io.balena.device-type=odyssey-x86",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-11T23:03:25.832214295Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-11T23:03:25.893033534Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: Intel 64-bit (x86-64) \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:8a5c91bcb42954a1d542cf1243b349f4d83fdd74d2ddc71ccaf63ffb7b661793",
                    "sha256:7e137976dd3d65e1b7be54fc9701bd78bf00b6ee978ad81280b8bd275035d3a7",
                    "sha256:42ee78234deac018bf727039dafccfb78c9d756f1ec8903cef7eb85190ead930",
                    "sha256:7dc9005f3e3ce1987ea49d7c2df24a1cc02afb441b95cfff9caf872819ab4dfc",
                    "sha256:23e486a49ac227803e0c85abb4c0cd9fd2aa05725dbba3f37eb1a3aeb1d7bd57",
                    "sha256:96cfa030f844607e078e22e5b7761f3ce499394317ad0af4d4db456fb31aa74d",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:1ea1e3eb686efc3c91616ea714b0a283b6173e34d5506b3b624d37b1ed0064ed",
                    "sha256:6477848327ef7344548c3706925e3c386ce207ba8f85bbff0604d9577f437ea0",
                    "sha256:b3d950f5dc5c037e537892b19270392fa69428eab347e4e7de50f9c4a58efada"
                ]
            }
        },
        "37-20231103": {
            "architecture": "amd64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "amd64",
                    "io.balena.device-type": "odyssey-x86",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2023-11-04T20:35:38.577134772Z",
            "history": [
                {
                    "created": "2021-04-01T17:59:37.09884046Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-20T10:46:14.111891363Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-06T18:22:29.551043544Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:395273c1903fb6b62f46bbf72259ef76c6eb16f475d22abd47b7633b2b77a847 in / "
                },
                {
                    "created": "2023-10-06T18:22:30.235678845Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-04T20:25:11.729328966Z",
                    "created_by": "LABEL io.balena.architecture=amd64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-04T20:25:11.729328966Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T20:25:11.994255514Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T20:25:11.994255514Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-04T20:25:12.004780927Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T20:25:12.01526574Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T20:25:12.040162507Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T20:25:12.040162507Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-04T20:25:12.188765905Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T20:25:12.273025011Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: Intel 64-bit (x86-64) \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T20:35:38.486556692Z",
                    "created_by": "LABEL io.balena.device-type=odyssey-x86",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-04T20:35:38.486556692Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T20:35:38.577134772Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: Intel 64-bit (x86-64) \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:9b5a2675a1f8f633773bcb6f6dbade49054173b4bfd1599e2bbe64e975812329",
                    "sha256:dd03ffd46e3f50f2600532b8ee5aec2d2f39ac877d18df277fab563fbcf38866",
                    "sha256:c9a4ad29326980cdeb327278fabacfbfdaaee16234b8faae944634318f9efbd7",
                    "sha256:708ae14cfa0655c8947eda92d1111c7a0d097106e05cc443000b4958c60b7183",
                    "sha256:5b6c9e19c5b005401f4d5869255f3c70112a4551073cec3bd2bd57252289d958",
                    "sha256:1e3bb05f1b5995053bcd278a3b2764e0251dd367c7d5c8de4df7e5aa9241c8dc",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:4ba5a8faabeb7bb0b84e3bd972b6407bce7d138c7b9b56524725593ee8255157",
                    "sha256:b2bd3f62d35c5fa7aa62762c707241f33f2d83849733c03010880cdb7e60c672",
                    "sha256:40dd8b05a56defef78b6ae818a0d7a251be5a0d6d761cb72301827229442f673"
                ]
            }
        },
        "37-20231204": {
            "architecture": "amd64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "amd64",
                    "io.balena.device-type": "odyssey-x86",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2023-12-06T18:39:53.083327891Z",
            "history": [
                {
                    "created": "2021-04-01T17:59:37.09884046Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-20T10:46:14.111891363Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-29T00:26:01.517560423Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:533e3405b5c87c5a7239c02ef2d954b1072df5afeee2139a9e2dd133dd4612b6 in / "
                },
                {
                    "created": "2023-11-29T00:26:02.196411879Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T17:56:03.747827155Z",
                    "created_by": "LABEL io.balena.architecture=amd64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T17:56:03.747827155Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T17:56:03.951248076Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T17:56:03.951248076Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T17:56:03.960836387Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T17:56:03.971888675Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T17:56:03.980766309Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T17:56:03.980766309Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T17:56:04.083929145Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T17:56:04.173103482Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: Intel 64-bit (x86-64) \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T18:39:53.001839298Z",
                    "created_by": "LABEL io.balena.device-type=odyssey-x86",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T18:39:53.001839298Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T18:39:53.083327891Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: Intel 64-bit (x86-64) \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:e89a2dafe59a58dee0fcdc4620c1e36ef34357d92655da13e1f656c33031c0b5",
                    "sha256:cf2ae2bdb9183af3f824b7e4c29fbd606e47799a97d6096d8f7e00ef5f490439",
                    "sha256:3d570902edb01a6b3632c26a6cef287f60fe5fda67ce2135a06f978c2ab4434a",
                    "sha256:21bdf36a029e5507f6b24f0ca8f4bc91bd5e55441b51ec0aeb0d61ddee34e8f7",
                    "sha256:6b13b5a03307c5608826145c3387a6fe156cfdf40f04965b7aaf32e06f80524d",
                    "sha256:8dee186546bb8954265c9c4b824dcc5702b7e5ae89c0cb055cf77b4b65228265",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:0b741073e9307f7b66244c8c4785863940367e83335ae78a22c374573878a558",
                    "sha256:cf7e1f853ea83becf842239b01452fb6d0e55296dbe10521d4d1253f626b0e61",
                    "sha256:843eaaba86419ec2d0b89eab4993af43674615156e09620c041bcd82c5a5f075"
                ]
            }
        },
        "37-20240105": {
            "architecture": "amd64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "amd64",
                    "io.balena.device-type": "odyssey-x86",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2024-01-05T14:09:49.038173762Z",
            "history": [
                {
                    "created": "2021-04-01T17:59:37.09884046Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-20T10:46:14.111891363Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-29T00:26:01.517560423Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:533e3405b5c87c5a7239c02ef2d954b1072df5afeee2139a9e2dd133dd4612b6 in / "
                },
                {
                    "created": "2023-11-29T00:26:02.196411879Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-05T13:59:54.18041825Z",
                    "created_by": "LABEL io.balena.architecture=amd64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-05T13:59:54.18041825Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-05T13:59:54.417070806Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-05T13:59:54.417070806Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-05T13:59:54.427392984Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-05T13:59:54.459082685Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-05T13:59:54.48704776Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-05T13:59:54.48704776Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-05T13:59:54.701706892Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-05T13:59:54.764168187Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: Intel 64-bit (x86-64) \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-05T14:09:48.9753273Z",
                    "created_by": "LABEL io.balena.device-type=odyssey-x86",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-05T14:09:48.9753273Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-05T14:09:49.038173762Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: Intel 64-bit (x86-64) \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:e89a2dafe59a58dee0fcdc4620c1e36ef34357d92655da13e1f656c33031c0b5",
                    "sha256:be5ea942547e5f184cf40a284eeb82005dd573a75ec6da220bef84440c21799d",
                    "sha256:d93e9aba12c58fab57e3c93789ec071228282082e33691ff6db4af403c20c546",
                    "sha256:276623a2256a9b65bf5b724299227e40e352268a9527768edc0f5ce9f25058c2",
                    "sha256:54f349630e0de220734a865fd92a68af438bb762181ba71ce2e8f341d0a5c3f2",
                    "sha256:e0bd5807f9bff81e6d1440c396316bc46e684344b539d3c9a81edca0d1cf9ee4",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:bf359b349ecedfa1d9b00bd125627393917dc1d0d10f21d8655da275098f2e36",
                    "sha256:767d954a0e028119754e55f59fa017135398f7fcddf1acdae3e7365a2a86de9b",
                    "sha256:86f86251a137a57e059ea97ef596b7deb170ff38b1b036e3de423a2a1e3347f5"
                ]
            }
        },
        "37-20240201": {
            "architecture": "amd64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "amd64",
                    "io.balena.device-type": "odyssey-x86",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2024-02-03T22:43:46.779088827Z",
            "history": [
                {
                    "created": "2021-04-01T17:59:37.09884046Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-20T10:46:14.111891363Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-29T00:26:01.517560423Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:533e3405b5c87c5a7239c02ef2d954b1072df5afeee2139a9e2dd133dd4612b6 in / "
                },
                {
                    "created": "2023-11-29T00:26:02.196411879Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-03T22:35:36.898952913Z",
                    "created_by": "LABEL io.balena.architecture=amd64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-03T22:35:36.898952913Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-03T22:35:37.498519547Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-03T22:35:37.498519547Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-03T22:35:37.511124291Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-03T22:35:37.542159925Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-03T22:35:37.554209496Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-03T22:35:37.554209496Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-03T22:35:37.769174671Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-03T22:35:37.829518486Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: Intel 64-bit (x86-64) \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-03T22:43:46.723150432Z",
                    "created_by": "LABEL io.balena.device-type=odyssey-x86",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-03T22:43:46.723150432Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-03T22:43:46.779088827Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: Intel 64-bit (x86-64) \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:e89a2dafe59a58dee0fcdc4620c1e36ef34357d92655da13e1f656c33031c0b5",
                    "sha256:4b96f1f532259574bf845e53bf75f5f3c0299925937fe263f5045f9062bd4dfe",
                    "sha256:e6abbbab6c0809ea1bea86f38e82aa33b1ebd78e9b5551e84cf93ab2a8e6f803",
                    "sha256:c6814fba19589c2e0583da7054121dc8142a4edfb259908aff631683e577f45d",
                    "sha256:2ec60fba1a4b3f73515c6c0f9db1371238b0da15c73d84aae9ef3f7275ec0741",
                    "sha256:cc0a116e7685f797625a84b4f73221e08d0a2e20e03846223e7f97e2560504a6",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:b756dc667e503ba7bfc9bb0a3f53c4ce4a81a520e4c09c358b11abf71c0f44cf",
                    "sha256:f35bc912ff63f7a1e6c6b9de29bd060e334b1c20fd4bffd0699d356c5834ae06",
                    "sha256:072c1fd16e6189864737ee5eab67766af26d77e9596f123c1897e655867ed416"
                ]
            }
        },
        "37-20240304": {
            "architecture": "amd64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "amd64",
                    "io.balena.device-type": "odyssey-x86",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2024-03-05T18:48:10.26260045Z",
            "history": [
                {
                    "created": "2021-04-01T17:59:37.09884046Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-20T10:46:14.111891363Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-29T00:26:01.517560423Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:533e3405b5c87c5a7239c02ef2d954b1072df5afeee2139a9e2dd133dd4612b6 in / "
                },
                {
                    "created": "2023-11-29T00:26:02.196411879Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T18:27:17.052466666Z",
                    "created_by": "LABEL io.balena.architecture=amd64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T18:27:17.052466666Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T18:27:17.680717512Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T18:27:17.680717512Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T18:27:17.690105177Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T18:27:17.729671857Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T18:27:17.738614063Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T18:27:17.738614063Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T18:27:18.038006148Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T18:27:18.09950217Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: Intel 64-bit (x86-64) \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T18:48:10.184741148Z",
                    "created_by": "LABEL io.balena.device-type=odyssey-x86",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T18:48:10.184741148Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T18:48:10.26260045Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: Intel 64-bit (x86-64) \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:e89a2dafe59a58dee0fcdc4620c1e36ef34357d92655da13e1f656c33031c0b5",
                    "sha256:407784ce233d07c91716b195ba5fdadca2c77276758f618b3bf474704c07c93c",
                    "sha256:6790dcb3bf20873f21627079dd24a2d23da7d970b8a3fcb2e3e11d209531497d",
                    "sha256:1ca6aa489d1fe12bc5b9e9e9b286d3564777218362d06f08f07e262eccdeba52",
                    "sha256:ee7b099673a169cff2d986c726d47ef4ffb274e162056718e9ffe10f5db8d2b0",
                    "sha256:8949d553ef226f0d0474c9ab28f49bfd35c6aa44a4ee31ec5ea952e48c0d67c2",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:f5a5aad7ca1b65f289777c165b7d8e29d5078483491ada457a5b0bbf9c4fe705",
                    "sha256:a61f4a1f3c828639cef685f003c1b96631c29ca987fcc18c7ec9d20b7376c742",
                    "sha256:c4a01c429f2990290158ecb52c4beacba0eacf2b78d0742636b3ad881f713f81"
                ]
            }
        },
        "37-20240401": {
            "architecture": "amd64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "amd64",
                    "io.balena.device-type": "odyssey-x86",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                }
            },
            "created": "2024-04-02T02:40:06.736289083Z",
            "history": [
                {
                    "created": "2021-04-01T17:59:37.09884046Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-20T10:46:14.111891363Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-29T00:26:01.517560423Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:533e3405b5c87c5a7239c02ef2d954b1072df5afeee2139a9e2dd133dd4612b6 in / "
                },
                {
                    "created": "2023-11-29T00:26:02.196411879Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T02:31:15.961600503Z",
                    "created_by": "LABEL io.balena.architecture=amd64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T02:31:15.961600503Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T02:31:16.301448773Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T02:31:16.301448773Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T02:31:16.310908864Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T02:31:16.32003679Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T02:31:16.353434347Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T02:31:16.353434347Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T02:31:16.471928657Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T02:31:16.525879007Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: Intel 64-bit (x86-64) \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T02:40:06.672943671Z",
                    "created_by": "LABEL io.balena.device-type=odyssey-x86",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T02:40:06.672943671Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T02:40:06.736289083Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: Intel 64-bit (x86-64) \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:e89a2dafe59a58dee0fcdc4620c1e36ef34357d92655da13e1f656c33031c0b5",
                    "sha256:ff8ed929feef33ec1c1f39c6b4f80cc3764a80f0e5629ec44a97462d096a8a67",
                    "sha256:140f598fedc50aebac7be5f429b0d1d1430326387767f769f8d75d71fafe67ce",
                    "sha256:a331ae444751612061e818b34079766a4799bf04d670910014b918e5a7f2aa98",
                    "sha256:af8973f6bb2e5a32c405b2a69629d63fe1968302e74a80caf44fc5b30def8c6f",
                    "sha256:28f34c8df9f98ec114938494ca7ed4bc600d4757531280b157b6268cdd7049db",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:b87f537d1904201dba89c59292d231a7b6310b37c6372c2650a11e3101d075c4",
                    "sha256:f71fb883b9f491b773f1bdd93386c88d7888e4f89612d99ca5eb498fa9e462f8",
                    "sha256:2711cd49e15e728d8336758cdf52285826a23f57012eeade73151b6c11bd7b49"
                ]
            }
        },
        "37-20240408": {
            "architecture": "amd64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "amd64",
                    "io.balena.device-type": "odyssey-x86",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                }
            },
            "created": "2024-04-09T13:46:07.607574782Z",
            "history": [
                {
                    "created": "2021-04-01T17:59:37.09884046Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-20T10:46:14.111891363Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-29T00:26:01.517560423Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:533e3405b5c87c5a7239c02ef2d954b1072df5afeee2139a9e2dd133dd4612b6 in / "
                },
                {
                    "created": "2023-11-29T00:26:02.196411879Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:35:49.166636872Z",
                    "created_by": "LABEL io.balena.architecture=amd64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:35:49.166636872Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:35:49.353720115Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:35:49.353720115Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:35:49.363434466Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:35:49.373123647Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:35:49.403773106Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:35:49.403773106Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:35:49.523623495Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:35:49.603887285Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: Intel 64-bit (x86-64) \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:46:07.542279168Z",
                    "created_by": "LABEL io.balena.device-type=odyssey-x86",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:46:07.542279168Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:46:07.607574782Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: Intel 64-bit (x86-64) \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:e89a2dafe59a58dee0fcdc4620c1e36ef34357d92655da13e1f656c33031c0b5",
                    "sha256:5be4da3e11c12f8a7f04187b011613695c861dbfaa34600788e52b7a72d0fe20",
                    "sha256:77f26d83150120b739b5d8d75ad033761be477817d6c19e6a1dd8c375f42f8ef",
                    "sha256:d08beaf06efe313a283e864e75d9d0b4f53e9d5eae6a09aa7b5daa44b1bf2b12",
                    "sha256:2c842f6d58dfaa63098a6f68b838e8d1da81eb6a08832146d6b6f7379029d6e6",
                    "sha256:813ccd1d89aa81b3808b9f051f610516cd417b28eec1a286ca48a7b4574d4fb0",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:816dbe0c347dcba570fbf323572692f25fe5a89905ce0078708fd342430a2da8",
                    "sha256:9e5b74d2708d287243141cf8004976c99f1538dd32f790d927246da496da7e05",
                    "sha256:43f48a9c6b65bf6ad77cfd22bb9151ac2bd7a0bb3615c8ae854635e8c5065939"
                ]
            }
        },
        "37-20240429": {
            "architecture": "amd64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "amd64",
                    "io.balena.device-type": "odyssey-x86",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                }
            },
            "created": "2024-05-02T12:18:12.985891796Z",
            "history": [
                {
                    "created": "2021-04-01T17:59:37.09884046Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-20T10:46:14.111891363Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-29T00:26:01.517560423Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:533e3405b5c87c5a7239c02ef2d954b1072df5afeee2139a9e2dd133dd4612b6 in / "
                },
                {
                    "created": "2023-11-29T00:26:02.196411879Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-02T12:11:35.787518344Z",
                    "created_by": "LABEL io.balena.architecture=amd64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-02T12:11:35.787518344Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T12:11:36.155885234Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T12:11:36.155885234Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-02T12:11:36.166220512Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T12:11:36.201352732Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T12:11:36.229371253Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T12:11:36.229371253Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-02T12:11:36.489410396Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T12:11:36.547751991Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: Intel 64-bit (x86-64) \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T12:18:12.910718736Z",
                    "created_by": "LABEL io.balena.device-type=odyssey-x86",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-02T12:18:12.910718736Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T12:18:12.985891796Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: Intel 64-bit (x86-64) \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:e89a2dafe59a58dee0fcdc4620c1e36ef34357d92655da13e1f656c33031c0b5",
                    "sha256:0a648d9cc45ccee05b7dda5c00174ff854e8f08899edb49b4b9ea8c61b058805",
                    "sha256:473314ea19844329bd2910bee3a05e7fd8996962d93719e1c3837927325ce390",
                    "sha256:1a8b3c1e1273d38aa2a3915c1cc142013ca3810eabdbad9eebc5997adc885bc2",
                    "sha256:ecc646eb7ee27032fc4faf92282b9e1d4176e672e63e5859c956e3b9b81e3777",
                    "sha256:dcaa3246209255ba81e531a54247f2762caac0def1a733005d0f168a69d14815",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:b537c15fb5e1acaa06a911b4b340ad545722901d3c792694a6cf8441f4bd8739",
                    "sha256:2738d555c5ce0d58e21ca1d22b99000d3deac89174240ba1bde438476ef3fdc4",
                    "sha256:5be83af9977c7d94e3c47abf63914eb6b1faed6b1bdc37a84b60c687ad11330a"
                ]
            }
        },
        "37-build": {
            "architecture": "amd64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "amd64",
                    "io.balena.device-type": "odyssey-x86",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                }
            },
            "created": "2024-05-02T12:18:25.316859173Z",
            "history": [
                {
                    "created": "2021-04-01T17:59:37.09884046Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-20T10:46:14.111891363Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-29T00:26:01.517560423Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:533e3405b5c87c5a7239c02ef2d954b1072df5afeee2139a9e2dd133dd4612b6 in / "
                },
                {
                    "created": "2023-11-29T00:26:02.196411879Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-02T12:11:17.879557284Z",
                    "created_by": "LABEL io.balena.architecture=amd64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-02T12:11:17.879557284Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T12:12:42.641900869Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-clients \t\tsubversion \t\tautoconf \t\tautomake \t\tbzip2-devel \t\tglib2-devel \t\tgcc \t\tgcc-c++ \t\tImageMagick \t\tImageMagick-devel \t\tkernel-devel \t\tlibcurl-devel \t\tlibevent-devel \t\tlibffi-devel \t\tlibjpeg-devel \t\tlibsqlite3x-devel \t\tlibxml2-devel \t\tlibxslt-devel \t\tlibyaml-devel \t\tmysql-devel \t\tmake \t\tncurses-devel \t\topenssl-devel \t\tpostgresql-devel \t\treadline-devel \t\tsqlite-devel \t\tzlib-devel \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T12:12:43.102550992Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T12:12:43.102550992Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-02T12:12:43.113767499Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T12:12:43.152579927Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T12:12:43.164024901Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T12:12:43.164024901Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-02T12:12:43.287186632Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T12:12:43.340830362Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: Intel 64-bit (x86-64) \\nOS: Fedora 37 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T12:18:25.256627336Z",
                    "created_by": "LABEL io.balena.device-type=odyssey-x86",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-02T12:18:25.256627336Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T12:18:25.316859173Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: Intel 64-bit (x86-64) \\nOS: Fedora 37 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:e89a2dafe59a58dee0fcdc4620c1e36ef34357d92655da13e1f656c33031c0b5",
                    "sha256:69aca497cb556a67ac50c1b5a13b0b871991163be5ba5fe38edcba052f8101d7",
                    "sha256:c8e99a432af543f09f782a2ed7a06ebaf935caab86c88abcd86df364a0491feb",
                    "sha256:ea6031a54383b7350fe210e7be054eeeb58f56fc6ab91f80befca8c9f9dc23f9",
                    "sha256:c79ad587f89a7cf70aeb333fa90c49ebcdda05a9ad40d078fc2594db8b33808b",
                    "sha256:687a39c8eaf68f59b3a3ebb8d4f8e47c5e1c328640c7e6e5f79de9a12fdc4717",
                    "sha256:fd4f1a77214f560e5460e645895ace4494625265cce67f2fd9d252b37b953f54",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:7407744290b4667e01e846a53491363c6a6840d38aab7fb65b2e86bbf4404f53",
                    "sha256:4e25336ffc1cdcc59619d02ee439302775d8c82da08ce4ccb59eabd07daa4388",
                    "sha256:e767cf0c4419ff5f520564c8e8325256b271d87ad22f6a3d5a45fd89adde0f8e"
                ]
            }
        },
        "37-build-20230811": {
            "architecture": "amd64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "amd64",
                    "io.balena.device-type": "intel-nuc",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2023-08-21T20:11:27.550050185Z",
            "history": [
                {
                    "created": "2021-04-01T17:59:37.09884046Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-20T10:46:14.111891363Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-04T18:22:42.383186833Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:3242aba4f770b24f6433fa19e51c222acf5a33d2268b82c7ec43874258838970 in / "
                },
                {
                    "created": "2023-08-04T18:22:43.038358583Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-21T19:52:26.839667108Z",
                    "created_by": "LABEL io.balena.architecture=amd64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-21T19:52:26.839667108Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-21T19:54:22.723795157Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-clients \t\tsubversion \t\tautoconf \t\tautomake \t\tbzip2-devel \t\tglib2-devel \t\tgcc \t\tgcc-c++ \t\tImageMagick \t\tImageMagick-devel \t\tkernel-devel \t\tlibcurl-devel \t\tlibevent-devel \t\tlibffi-devel \t\tlibjpeg-devel \t\tlibsqlite3x-devel \t\tlibxml2-devel \t\tlibxslt-devel \t\tlibyaml-devel \t\tmysql-devel \t\tmake \t\tncurses-devel \t\topenssl-devel \t\tpostgresql-devel \t\treadline-devel \t\tsqlite-devel \t\tzlib-devel \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-21T19:54:23.176375965Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-21T19:54:23.176375965Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-21T19:54:23.201202355Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-21T19:54:23.23712854Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-21T19:54:23.26131333Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-21T19:54:23.26131333Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-21T19:54:23.59116069Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-21T19:54:24.022279917Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: Intel 64-bit (x86-64) \\nOS: Fedora 37 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-21T20:11:27.223774107Z",
                    "created_by": "LABEL io.balena.device-type=intel-nuc",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-21T20:11:27.223774107Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-21T20:11:27.550050185Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: Intel 64-bit (x86-64) \\nOS: Fedora 37 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "moby.buildkit.buildinfo.v1": "eyJmcm9udGVuZCI6ImRvY2tlcmZpbGUudjAiLCJhdHRycyI6eyJmaWxlbmFtZSI6IkRvY2tlcmZpbGUifSwic291cmNlcyI6W3sidHlwZSI6ImRvY2tlci1pbWFnZSIsInJlZiI6ImRvY2tlci5pby9iYWxlbmFsaWIvYW1kNjQtZmVkb3JhOjM3LWJ1aWxkIiwicGluIjoic2hhMjU2OmI4Y2EwZTFhMjI4MDg5NGIxYTAyYThkY2QzNGFlYWQxODZkOWUzZDc2ZGE5YmVmYzgzNWI5NGZkYjliOGIyMTAifV19",
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:8a5c91bcb42954a1d542cf1243b349f4d83fdd74d2ddc71ccaf63ffb7b661793",
                    "sha256:fca50d5c7997910a204bc6cee98bca6e25e11762221da2784c6d3645566f0ddb",
                    "sha256:4be64fe096297543948eb2a7c876c47d02169f28dabd65c560170e08bee966e3",
                    "sha256:65f4400ced043778df1b5bb4626f17a257df0ae35120bb423640d62c1439a3f1",
                    "sha256:caff34ccc40cdda8a68ae0297c4d151b5bbca631da25af2549911be90e1ef3c2",
                    "sha256:6ea724cdc64a0b9e240f959ba2d165ef41ff80d432f6f8d3975d3707c5e22f14",
                    "sha256:de27dc4d90a28555a851f898e8c56fc77d55e3376b6cc61599b7bb3d062d9b39",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:78279af2d98b856c7e3eb8299823042c3f04590533e3de29dd235f624bba1774",
                    "sha256:a0e3ac019abde8e14928fda2211c34a0f6e4eca60fc39a5e08bb7288edb1350e",
                    "sha256:154cc2927c1fbb4cd7aebd9217781a86dbc797ea500ffb63be07af775d0c3fc1"
                ]
            }
        },
        "37-build-20230829": {
            "architecture": "amd64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "amd64",
                    "io.balena.device-type": "intel-nuc",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2023-09-02T04:14:33.049284708Z",
            "history": [
                {
                    "created": "2021-04-01T17:59:37.09884046Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-20T10:46:14.111891363Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-04T18:22:42.383186833Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:3242aba4f770b24f6433fa19e51c222acf5a33d2268b82c7ec43874258838970 in / "
                },
                {
                    "created": "2023-08-04T18:22:43.038358583Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-02T03:53:27.833103705Z",
                    "created_by": "LABEL io.balena.architecture=amd64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-02T03:53:27.833103705Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T03:55:23.544595845Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-clients \t\tsubversion \t\tautoconf \t\tautomake \t\tbzip2-devel \t\tglib2-devel \t\tgcc \t\tgcc-c++ \t\tImageMagick \t\tImageMagick-devel \t\tkernel-devel \t\tlibcurl-devel \t\tlibevent-devel \t\tlibffi-devel \t\tlibjpeg-devel \t\tlibsqlite3x-devel \t\tlibxml2-devel \t\tlibxslt-devel \t\tlibyaml-devel \t\tmysql-devel \t\tmake \t\tncurses-devel \t\topenssl-devel \t\tpostgresql-devel \t\treadline-devel \t\tsqlite-devel \t\tzlib-devel \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T03:55:24.291233821Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T03:55:24.291233821Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-02T03:55:24.311293998Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T03:55:24.348070374Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T03:55:24.367347433Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T03:55:24.367347433Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-02T03:55:24.665994243Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T03:55:25.033334288Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: Intel 64-bit (x86-64) \\nOS: Fedora 37 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T04:14:32.699603066Z",
                    "created_by": "LABEL io.balena.device-type=intel-nuc",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-02T04:14:32.699603066Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T04:14:33.049284708Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: Intel 64-bit (x86-64) \\nOS: Fedora 37 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:8a5c91bcb42954a1d542cf1243b349f4d83fdd74d2ddc71ccaf63ffb7b661793",
                    "sha256:380419ecfa744daae3d1681c557d6abf8c91c0c5fc86a2969a8ed77e9709baa4",
                    "sha256:45d9048ef9e65fcf6e4da4efc96299d353e27eee9f5ef3defb10f8d7095c8c56",
                    "sha256:481891acae181c14fa3fbd6138eb51cd8d574c7faeea79ba665a1477c191fcfb",
                    "sha256:4d11897a6210b78d28e4a33da8b405a42a3c3199c12a9203c196ded7f32f7c52",
                    "sha256:fd6fa4324a5446fc6a9f74c9637c8bf8ef74cad16394e0b576fbf7f083bde078",
                    "sha256:e872cd9e8b19b0a1ff4c22e9d9aaa97fcb9e919dd67d71bba1a2af0bbcfde817",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:c8aa81fc5a0ef29028f81a3700d9082a8202fea749f9077ac965ebed986faaff",
                    "sha256:c4ab66bffa28eba1dec89fbbb24ccd52b50f992be76db3967939d588841caf70",
                    "sha256:f139f960ec8ad33a39863647b4acf956f04cbfc91403cc1f00a3ac7f9cf662c8"
                ]
            }
        },
        "37-build-20230904": {
            "architecture": "amd64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "amd64",
                    "io.balena.device-type": "intel-nuc",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2023-09-09T04:10:06.175134321Z",
            "history": [
                {
                    "created": "2021-04-01T17:59:37.09884046Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-20T10:46:14.111891363Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-04T18:22:42.383186833Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:3242aba4f770b24f6433fa19e51c222acf5a33d2268b82c7ec43874258838970 in / "
                },
                {
                    "created": "2023-08-04T18:22:43.038358583Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T03:59:08.044755432Z",
                    "created_by": "LABEL io.balena.architecture=amd64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T03:59:08.044755432Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:01:03.762699262Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-clients \t\tsubversion \t\tautoconf \t\tautomake \t\tbzip2-devel \t\tglib2-devel \t\tgcc \t\tgcc-c++ \t\tImageMagick \t\tImageMagick-devel \t\tkernel-devel \t\tlibcurl-devel \t\tlibevent-devel \t\tlibffi-devel \t\tlibjpeg-devel \t\tlibsqlite3x-devel \t\tlibxml2-devel \t\tlibxslt-devel \t\tlibyaml-devel \t\tmysql-devel \t\tmake \t\tncurses-devel \t\topenssl-devel \t\tpostgresql-devel \t\treadline-devel \t\tsqlite-devel \t\tzlib-devel \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:01:04.206597884Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:01:04.206597884Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T04:01:04.222130076Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:01:04.229575164Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:01:04.270324895Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:01:04.270324895Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T04:01:04.552952939Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:01:04.768119479Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: Intel 64-bit (x86-64) \\nOS: Fedora 37 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:10:05.847721624Z",
                    "created_by": "LABEL io.balena.device-type=intel-nuc",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T04:10:05.847721624Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:10:06.175134321Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: Intel 64-bit (x86-64) \\nOS: Fedora 37 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:8a5c91bcb42954a1d542cf1243b349f4d83fdd74d2ddc71ccaf63ffb7b661793",
                    "sha256:7e137976dd3d65e1b7be54fc9701bd78bf00b6ee978ad81280b8bd275035d3a7",
                    "sha256:d731929dc50e1508b3da4a251cc5fce79452b733659ea85ab3bde8f093af9bf5",
                    "sha256:4b3ff1f4636fe0d304548a3ccd700b1ecc4ba1ec39a6deb8da2d0dbc6c113c38",
                    "sha256:f2b6f5a3ccb64e90278fd1cc7a829d3a1605bee1feb2d70b74cf510874920ce9",
                    "sha256:57b8dcaca48985fd0a6f32974c3f7061ca0bd95e7cc5678332d353ca671d4f4d",
                    "sha256:12382a969406127893595f87e10aa73f289decb5c9faceafaa395c967f378bf1",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:a54198a4f6973b4d2f87e98c928f6e533cffb9e4735af1def0a82b564af8d056",
                    "sha256:79b19829481ccbe4a19e650ba36bd16d720c94e05d8032496bdd74911c809423",
                    "sha256:be5adffc9f6673871c251d385c74a582a6418370ec621ddd497c3c2575b9d025"
                ]
            }
        },
        "37-build-20230911": {
            "architecture": "amd64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "amd64",
                    "io.balena.device-type": "odyssey-x86",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2023-09-11T23:03:18.07533094Z",
            "history": [
                {
                    "created": "2021-04-01T17:59:37.09884046Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-20T10:46:14.111891363Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-04T18:22:42.383186833Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:3242aba4f770b24f6433fa19e51c222acf5a33d2268b82c7ec43874258838970 in / "
                },
                {
                    "created": "2023-08-04T18:22:43.038358583Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T03:59:08.044755432Z",
                    "created_by": "LABEL io.balena.architecture=amd64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T03:59:08.044755432Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:01:03.762699262Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-clients \t\tsubversion \t\tautoconf \t\tautomake \t\tbzip2-devel \t\tglib2-devel \t\tgcc \t\tgcc-c++ \t\tImageMagick \t\tImageMagick-devel \t\tkernel-devel \t\tlibcurl-devel \t\tlibevent-devel \t\tlibffi-devel \t\tlibjpeg-devel \t\tlibsqlite3x-devel \t\tlibxml2-devel \t\tlibxslt-devel \t\tlibyaml-devel \t\tmysql-devel \t\tmake \t\tncurses-devel \t\topenssl-devel \t\tpostgresql-devel \t\treadline-devel \t\tsqlite-devel \t\tzlib-devel \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:01:04.206597884Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:01:04.206597884Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T04:01:04.222130076Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:01:04.229575164Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:01:04.270324895Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:01:04.270324895Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T04:01:04.552952939Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:01:04.768119479Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: Intel 64-bit (x86-64) \\nOS: Fedora 37 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-11T23:03:18.023731172Z",
                    "created_by": "LABEL io.balena.device-type=odyssey-x86",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-11T23:03:18.023731172Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-11T23:03:18.07533094Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: Intel 64-bit (x86-64) \\nOS: Fedora 37 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:8a5c91bcb42954a1d542cf1243b349f4d83fdd74d2ddc71ccaf63ffb7b661793",
                    "sha256:7e137976dd3d65e1b7be54fc9701bd78bf00b6ee978ad81280b8bd275035d3a7",
                    "sha256:d731929dc50e1508b3da4a251cc5fce79452b733659ea85ab3bde8f093af9bf5",
                    "sha256:4b3ff1f4636fe0d304548a3ccd700b1ecc4ba1ec39a6deb8da2d0dbc6c113c38",
                    "sha256:f2b6f5a3ccb64e90278fd1cc7a829d3a1605bee1feb2d70b74cf510874920ce9",
                    "sha256:57b8dcaca48985fd0a6f32974c3f7061ca0bd95e7cc5678332d353ca671d4f4d",
                    "sha256:12382a969406127893595f87e10aa73f289decb5c9faceafaa395c967f378bf1",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:a54198a4f6973b4d2f87e98c928f6e533cffb9e4735af1def0a82b564af8d056",
                    "sha256:bb40f82ef3d173e295885cb7e546855f8c4d6e0389e290bbd759abeaa7fc35c2",
                    "sha256:52b09e99e8ef8c3d692b83f0f30eb481c911d97486c5511104564e4e2c74933c"
                ]
            }
        },
        "37-build-20231103": {
            "architecture": "amd64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "amd64",
                    "io.balena.device-type": "odyssey-x86",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2023-11-04T20:35:20.583832402Z",
            "history": [
                {
                    "created": "2021-04-01T17:59:37.09884046Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-20T10:46:14.111891363Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-06T18:22:29.551043544Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:395273c1903fb6b62f46bbf72259ef76c6eb16f475d22abd47b7633b2b77a847 in / "
                },
                {
                    "created": "2023-10-06T18:22:30.235678845Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-04T20:25:21.407334619Z",
                    "created_by": "LABEL io.balena.architecture=amd64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-04T20:25:21.407334619Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T20:27:17.892115039Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-clients \t\tsubversion \t\tautoconf \t\tautomake \t\tbzip2-devel \t\tglib2-devel \t\tgcc \t\tgcc-c++ \t\tImageMagick \t\tImageMagick-devel \t\tkernel-devel \t\tlibcurl-devel \t\tlibevent-devel \t\tlibffi-devel \t\tlibjpeg-devel \t\tlibsqlite3x-devel \t\tlibxml2-devel \t\tlibxslt-devel \t\tlibyaml-devel \t\tmysql-devel \t\tmake \t\tncurses-devel \t\topenssl-devel \t\tpostgresql-devel \t\treadline-devel \t\tsqlite-devel \t\tzlib-devel \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T20:27:18.439454634Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T20:27:18.439454634Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-04T20:27:18.454973368Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T20:27:18.470340301Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T20:27:18.487471539Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T20:27:18.487471539Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-04T20:27:18.680851861Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T20:27:18.773652164Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: Intel 64-bit (x86-64) \\nOS: Fedora 37 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T20:35:20.48410019Z",
                    "created_by": "LABEL io.balena.device-type=odyssey-x86",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-04T20:35:20.48410019Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T20:35:20.583832402Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: Intel 64-bit (x86-64) \\nOS: Fedora 37 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:9b5a2675a1f8f633773bcb6f6dbade49054173b4bfd1599e2bbe64e975812329",
                    "sha256:fcb6fe73c1ef90bf51dd605419a7631f779162e59e7f05ae3b53221df48a43d8",
                    "sha256:962746f70f1d6e5a3e3168d70e500e915bedb07d8152d62899a9da3e9c94e790",
                    "sha256:2862fc443800750ff8488291956b775afd75216be276cc511dda6bbf03d8de12",
                    "sha256:d01eadb15f6285e638745bc495d75bdb9182744f77f7ae8587545a05d7d566d5",
                    "sha256:c2e14895ce1e2f89fb1bce52cb26e6d6cb3c810559d5a38e9d54d9524c660cc2",
                    "sha256:fad82e414fb32cf2575eafc67ecf1cd732bf7e572cca9049c237b73f270708c2",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:7bcefa9d8f8292e9c0c82b19ebba1cb5a8e2c499fbe7adb3de47fbf5b81fc2a0",
                    "sha256:538899c8434243ecb6a760a03b6942cf5c621a5d8e9b828f726b27c9e82473a1",
                    "sha256:da72d708db0029f206e3d7febe246bfc173619448141b2fda9c91c27310bcbf9"
                ]
            }
        },
        "37-build-20231204": {
            "architecture": "amd64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "amd64",
                    "io.balena.device-type": "odyssey-x86",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2023-12-06T18:39:50.48066709Z",
            "history": [
                {
                    "created": "2021-04-01T17:59:37.09884046Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-20T10:46:14.111891363Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-29T00:26:01.517560423Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:533e3405b5c87c5a7239c02ef2d954b1072df5afeee2139a9e2dd133dd4612b6 in / "
                },
                {
                    "created": "2023-11-29T00:26:02.196411879Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T17:56:20.722691923Z",
                    "created_by": "LABEL io.balena.architecture=amd64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T17:56:20.722691923Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T17:57:56.524009334Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-clients \t\tsubversion \t\tautoconf \t\tautomake \t\tbzip2-devel \t\tglib2-devel \t\tgcc \t\tgcc-c++ \t\tImageMagick \t\tImageMagick-devel \t\tkernel-devel \t\tlibcurl-devel \t\tlibevent-devel \t\tlibffi-devel \t\tlibjpeg-devel \t\tlibsqlite3x-devel \t\tlibxml2-devel \t\tlibxslt-devel \t\tlibyaml-devel \t\tmysql-devel \t\tmake \t\tncurses-devel \t\topenssl-devel \t\tpostgresql-devel \t\treadline-devel \t\tsqlite-devel \t\tzlib-devel \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T17:57:57.379527234Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T17:57:57.379527234Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T17:57:57.389732057Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T17:57:57.423561452Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T17:57:57.433722035Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T17:57:57.433722035Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T17:57:57.545086844Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T17:57:57.602122598Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: Intel 64-bit (x86-64) \\nOS: Fedora 37 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T18:39:50.397682613Z",
                    "created_by": "LABEL io.balena.device-type=odyssey-x86",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T18:39:50.397682613Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T18:39:50.48066709Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: Intel 64-bit (x86-64) \\nOS: Fedora 37 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:e89a2dafe59a58dee0fcdc4620c1e36ef34357d92655da13e1f656c33031c0b5",
                    "sha256:3842ca05c6d6e63c2a499998a21f9e8fe0a8c5b17a196f1afa8c9b1d890237ef",
                    "sha256:6d1a5962fca1e170856c102276a8c2a0746037e047b15c07e3b05d0481f8cfc5",
                    "sha256:1e4c76b6157009b212c579ab2f6ff4beb320ea317783e890191e2ae5a236d56b",
                    "sha256:053fbadfb0bacdce1c5e0f950f6b186a8af7534a581ac45fb3086f5e116cb1e3",
                    "sha256:e774d478e2a8b593f281347cdc94a7bad960536f7d3e33618efc775213676c1e",
                    "sha256:033f50077f04b58e9bf1a8976908f2f4c4171040479df8cf0ece2274da1917f5",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:923da2b8a15a5b69f23ad282728f5163b99f449b783abab05b0e718e08cd322b",
                    "sha256:0e9d3865461f16cfbc44d5c8319fceffe05a448abd4373b584ed418691ced2fe",
                    "sha256:6e83982c719d46234ff40152425579247b6fe9722ed6c4f49c7d65d6c8e59dde"
                ]
            }
        },
        "37-build-20240105": {
            "architecture": "amd64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "amd64",
                    "io.balena.device-type": "odyssey-x86",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2024-01-05T14:10:06.297576096Z",
            "history": [
                {
                    "created": "2021-04-01T17:59:37.09884046Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-20T10:46:14.111891363Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-29T00:26:01.517560423Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:533e3405b5c87c5a7239c02ef2d954b1072df5afeee2139a9e2dd133dd4612b6 in / "
                },
                {
                    "created": "2023-11-29T00:26:02.196411879Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-05T13:59:49.214004522Z",
                    "created_by": "LABEL io.balena.architecture=amd64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-05T13:59:49.214004522Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-05T14:01:12.249688157Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-clients \t\tsubversion \t\tautoconf \t\tautomake \t\tbzip2-devel \t\tglib2-devel \t\tgcc \t\tgcc-c++ \t\tImageMagick \t\tImageMagick-devel \t\tkernel-devel \t\tlibcurl-devel \t\tlibevent-devel \t\tlibffi-devel \t\tlibjpeg-devel \t\tlibsqlite3x-devel \t\tlibxml2-devel \t\tlibxslt-devel \t\tlibyaml-devel \t\tmysql-devel \t\tmake \t\tncurses-devel \t\topenssl-devel \t\tpostgresql-devel \t\treadline-devel \t\tsqlite-devel \t\tzlib-devel \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-05T14:01:12.707158106Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-05T14:01:12.707158106Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-05T14:01:12.716964591Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-05T14:01:12.751264858Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-05T14:01:12.761390183Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-05T14:01:12.761390183Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-05T14:01:12.874874682Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-05T14:01:12.929920306Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: Intel 64-bit (x86-64) \\nOS: Fedora 37 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-05T14:10:06.229865491Z",
                    "created_by": "LABEL io.balena.device-type=odyssey-x86",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-05T14:10:06.229865491Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-05T14:10:06.297576096Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: Intel 64-bit (x86-64) \\nOS: Fedora 37 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:e89a2dafe59a58dee0fcdc4620c1e36ef34357d92655da13e1f656c33031c0b5",
                    "sha256:c2b0bfda8e0222fe49c405f41cdeb903bc8db94e7f545187c394fc568ac12020",
                    "sha256:f5c6b692cb88e999d1cbb46d0f2da2f0a37f144ab3e0166f230bb66516bb5f95",
                    "sha256:d137905e5f91de2ac0fb4c5d3f763020de20469d0d46eb07a028b8cfed57a6e3",
                    "sha256:42a2981ff5d920ced544c33d3bec7468962d88c17284d4fe2811980952a35f48",
                    "sha256:1d6896688dae1e6ba3625fc4e907e343e7da67fa5024bb250005da4f0b9ef4df",
                    "sha256:1eaab1e94f855c44a6147d9a7aa71837abc423b55156998d85c09e9849c104a4",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:89eb9eb1f0f77805dc2f2e3cada700fdd9e8faacc94e139145a5f1974c8b6c5f",
                    "sha256:cfdec5a3da8a78adc20ca1063a036436c23a678bac19b92030229b8ae7fcb2db",
                    "sha256:7c36af6f508feebaeffb0ce9041f79727c5397dd8ad7758ab69810a314b7bda4"
                ]
            }
        },
        "37-build-20240201": {
            "architecture": "amd64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "amd64",
                    "io.balena.device-type": "odyssey-x86",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2024-02-03T22:43:55.87440241Z",
            "history": [
                {
                    "created": "2021-04-01T17:59:37.09884046Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-20T10:46:14.111891363Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-29T00:26:01.517560423Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:533e3405b5c87c5a7239c02ef2d954b1072df5afeee2139a9e2dd133dd4612b6 in / "
                },
                {
                    "created": "2023-11-29T00:26:02.196411879Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-03T22:35:40.064848811Z",
                    "created_by": "LABEL io.balena.architecture=amd64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-03T22:35:40.064848811Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-03T22:37:17.384372627Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-clients \t\tsubversion \t\tautoconf \t\tautomake \t\tbzip2-devel \t\tglib2-devel \t\tgcc \t\tgcc-c++ \t\tImageMagick \t\tImageMagick-devel \t\tkernel-devel \t\tlibcurl-devel \t\tlibevent-devel \t\tlibffi-devel \t\tlibjpeg-devel \t\tlibsqlite3x-devel \t\tlibxml2-devel \t\tlibxslt-devel \t\tlibyaml-devel \t\tmysql-devel \t\tmake \t\tncurses-devel \t\topenssl-devel \t\tpostgresql-devel \t\treadline-devel \t\tsqlite-devel \t\tzlib-devel \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-03T22:37:17.935653796Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-03T22:37:17.935653796Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-03T22:37:17.944726096Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-03T22:37:17.953324557Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-03T22:37:17.977874773Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-03T22:37:17.977874773Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-03T22:37:18.094121056Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-03T22:37:18.156112032Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: Intel 64-bit (x86-64) \\nOS: Fedora 37 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-03T22:43:55.810318896Z",
                    "created_by": "LABEL io.balena.device-type=odyssey-x86",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-03T22:43:55.810318896Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-03T22:43:55.87440241Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: Intel 64-bit (x86-64) \\nOS: Fedora 37 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:e89a2dafe59a58dee0fcdc4620c1e36ef34357d92655da13e1f656c33031c0b5",
                    "sha256:5c6855906a6763f5ad3b5d5b4a9d9a0bce223062e0688a647e947320483b006b",
                    "sha256:f9f29f11fe2e98df34fab0ae39c9a61232ef36ea5f5603974f2ab314f6050eeb",
                    "sha256:d6a862f0a1187dfe9aaf487a1ce7cd50229d6cab12379a0a2a84e97da8608923",
                    "sha256:8aaee800dd20c2e29fdaaf85cae06bafe51333a8c1da7e449339fc2080434088",
                    "sha256:3263c0eab72120171008588fdc84227c2a13e15b4244b361821878df67940005",
                    "sha256:09a8a100dff40d87c1e109a260d5a3b55912a360d06594203c999991c248b2ab",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:8b8bb4b6826d6982f8ca09042e3cac6ce658b7b70115e35a948c1cf787a5f00a",
                    "sha256:926ee46536a161cca25e51c8b4d37c9e2665540da5035cbf506dbe6ebb7e1129",
                    "sha256:2e6ba2e1f97f8a00f21fb4260cf77cbcb93c6c653537530dddc080df37136070"
                ]
            }
        },
        "37-build-20240304": {
            "architecture": "amd64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "amd64",
                    "io.balena.device-type": "odyssey-x86",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2024-03-05T18:48:36.537836424Z",
            "history": [
                {
                    "created": "2021-04-01T17:59:37.09884046Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-20T10:46:14.111891363Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-29T00:26:01.517560423Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:533e3405b5c87c5a7239c02ef2d954b1072df5afeee2139a9e2dd133dd4612b6 in / "
                },
                {
                    "created": "2023-11-29T00:26:02.196411879Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T18:27:05.923489385Z",
                    "created_by": "LABEL io.balena.architecture=amd64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T18:27:05.923489385Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T18:28:33.175113465Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-clients \t\tsubversion \t\tautoconf \t\tautomake \t\tbzip2-devel \t\tglib2-devel \t\tgcc \t\tgcc-c++ \t\tImageMagick \t\tImageMagick-devel \t\tkernel-devel \t\tlibcurl-devel \t\tlibevent-devel \t\tlibffi-devel \t\tlibjpeg-devel \t\tlibsqlite3x-devel \t\tlibxml2-devel \t\tlibxslt-devel \t\tlibyaml-devel \t\tmysql-devel \t\tmake \t\tncurses-devel \t\topenssl-devel \t\tpostgresql-devel \t\treadline-devel \t\tsqlite-devel \t\tzlib-devel \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T18:28:33.632877025Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T18:28:33.632877025Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T18:28:33.644452588Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T18:28:33.680550543Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T18:28:33.690272042Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T18:28:33.690272042Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T18:28:33.809877255Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T18:28:33.868215984Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: Intel 64-bit (x86-64) \\nOS: Fedora 37 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T18:48:36.482470886Z",
                    "created_by": "LABEL io.balena.device-type=odyssey-x86",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T18:48:36.482470886Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T18:48:36.537836424Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: Intel 64-bit (x86-64) \\nOS: Fedora 37 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:e89a2dafe59a58dee0fcdc4620c1e36ef34357d92655da13e1f656c33031c0b5",
                    "sha256:4c5901fe19b69519020c62b8dc6bf7d254f2d69f8287d8422ddc2bd803643b8d",
                    "sha256:07a772ab26c9756e7bf90b4b4f4ca0372e3f67f7ec2dea6a25b440f3db5b9e73",
                    "sha256:612ba352fe190d5c4c2ba405d6ee1f67eba5d8e50bfb44744f254ecd81860eeb",
                    "sha256:961a6c13cbef5948a4df659d3a8ff2fb0f6f1d125e19da8c84936e63db6ad0e6",
                    "sha256:b50cabcd7ebd1753b2e8fc37b3a333eb2e22ecd7cff5704bbb32bcb3b30dab27",
                    "sha256:02beef5ad9e76eeed930af8b873a9b42e8dfff62ff49a003de7fab25578f7919",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:3d8d7a509761c546acaa570e9197540b81153699c0fb92ba41208b3d41c2a3aa",
                    "sha256:113c3fc4f393f3cbfcc72a5d5a4494f8cbfb46474fbc6b81875aef88ef7c1d59",
                    "sha256:b0c1a5c8e3c85b8731d4defab67a7bf68fabfba958f54ff5d35f5f19d4f346d6"
                ]
            }
        },
        "37-build-20240401": {
            "architecture": "amd64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "amd64",
                    "io.balena.device-type": "odyssey-x86",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                }
            },
            "created": "2024-04-02T02:40:24.807277799Z",
            "history": [
                {
                    "created": "2021-04-01T17:59:37.09884046Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-20T10:46:14.111891363Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-29T00:26:01.517560423Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:533e3405b5c87c5a7239c02ef2d954b1072df5afeee2139a9e2dd133dd4612b6 in / "
                },
                {
                    "created": "2023-11-29T00:26:02.196411879Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T02:31:15.826913675Z",
                    "created_by": "LABEL io.balena.architecture=amd64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T02:31:15.826913675Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T02:32:52.774190105Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-clients \t\tsubversion \t\tautoconf \t\tautomake \t\tbzip2-devel \t\tglib2-devel \t\tgcc \t\tgcc-c++ \t\tImageMagick \t\tImageMagick-devel \t\tkernel-devel \t\tlibcurl-devel \t\tlibevent-devel \t\tlibffi-devel \t\tlibjpeg-devel \t\tlibsqlite3x-devel \t\tlibxml2-devel \t\tlibxslt-devel \t\tlibyaml-devel \t\tmysql-devel \t\tmake \t\tncurses-devel \t\topenssl-devel \t\tpostgresql-devel \t\treadline-devel \t\tsqlite-devel \t\tzlib-devel \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T02:32:53.38868582Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T02:32:53.38868582Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T02:32:53.39888877Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T02:32:53.432372402Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T02:32:53.44641212Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T02:32:53.44641212Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T02:32:53.561322731Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T02:32:53.621444489Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: Intel 64-bit (x86-64) \\nOS: Fedora 37 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T02:40:24.741977883Z",
                    "created_by": "LABEL io.balena.device-type=odyssey-x86",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T02:40:24.741977883Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T02:40:24.807277799Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: Intel 64-bit (x86-64) \\nOS: Fedora 37 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:e89a2dafe59a58dee0fcdc4620c1e36ef34357d92655da13e1f656c33031c0b5",
                    "sha256:3b4a14f643484648a592483c6db333ff705c90f2df7537999c385a84e2f2a09d",
                    "sha256:2e68944bc9e69d0f84209aa4260facaf9274521f006aaacb762f3bbc6a769279",
                    "sha256:9ae269c28a0f741cc31822e336b2f07b225518d7767091bab803a9d607be13e9",
                    "sha256:ae0fb47eb6b0032050ca4b6ee6a97b52cee74de5157fe3e5642017c7067facec",
                    "sha256:679c7bfd1235e63fd9a0cd516851f3887aa2d711addadbdaaf3aade010c1dfd2",
                    "sha256:c196a8b7949dcdebecfda50b75380c60c2db6399510c124ff734d82c4830442d",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:52598cc0d230104cefdf66e01d81a6f2a0a74f25e046faba9f79db9a1748f788",
                    "sha256:95f6c15da05e86492519edd38c311812c6eb410ec34a829182583608a4bfb7a8",
                    "sha256:40e9c018003815646e25de094c2f50fd3a5c980715887ffafe4beadbd4da10b5"
                ]
            }
        },
        "37-build-20240408": {
            "architecture": "amd64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "amd64",
                    "io.balena.device-type": "odyssey-x86",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                }
            },
            "created": "2024-04-09T13:46:36.534732858Z",
            "history": [
                {
                    "created": "2021-04-01T17:59:37.09884046Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-20T10:46:14.111891363Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-29T00:26:01.517560423Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:533e3405b5c87c5a7239c02ef2d954b1072df5afeee2139a9e2dd133dd4612b6 in / "
                },
                {
                    "created": "2023-11-29T00:26:02.196411879Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:35:32.311936072Z",
                    "created_by": "LABEL io.balena.architecture=amd64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:35:32.311936072Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:37:09.989098571Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-clients \t\tsubversion \t\tautoconf \t\tautomake \t\tbzip2-devel \t\tglib2-devel \t\tgcc \t\tgcc-c++ \t\tImageMagick \t\tImageMagick-devel \t\tkernel-devel \t\tlibcurl-devel \t\tlibevent-devel \t\tlibffi-devel \t\tlibjpeg-devel \t\tlibsqlite3x-devel \t\tlibxml2-devel \t\tlibxslt-devel \t\tlibyaml-devel \t\tmysql-devel \t\tmake \t\tncurses-devel \t\topenssl-devel \t\tpostgresql-devel \t\treadline-devel \t\tsqlite-devel \t\tzlib-devel \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:37:10.564395945Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:37:10.564395945Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:37:10.574556465Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:37:10.584642061Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:37:10.631213109Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:37:10.631213109Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:37:10.748260236Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:37:10.811715724Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: Intel 64-bit (x86-64) \\nOS: Fedora 37 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:46:36.475994426Z",
                    "created_by": "LABEL io.balena.device-type=odyssey-x86",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:46:36.475994426Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:46:36.534732858Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: Intel 64-bit (x86-64) \\nOS: Fedora 37 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:e89a2dafe59a58dee0fcdc4620c1e36ef34357d92655da13e1f656c33031c0b5",
                    "sha256:bb34a8980d43cf2f520e0436ab654bb9957a13ad2d9646ceda0678e767a91200",
                    "sha256:8d4f726150dc4bef55a136be112ae788dc1aa16102f0b8607c8e83aa48dd15c1",
                    "sha256:73dcc22213100073b3b1d4c24734bf4a5d1b34499ea9d80b428d940fe7b11283",
                    "sha256:9806effe4f43e07e7459013cb5d58812da53acda1562880af84005a22abac2f0",
                    "sha256:223c15d31d789ff55bdeec8d049c6732f65a685e17aa79f9b0aed12db10e4adc",
                    "sha256:051c24887f6281518e5a145879a67605ae9cc70a1c9d713e232e3f3c61dae253",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:c23c80b84860623b2ce218c703824110ba04099cc2c2122f7f57f05db3580136",
                    "sha256:6a9ca3074ec3849e36d4ca6daf9cc3591d4a4273d6c10d2b4366bf0ee546fd9b",
                    "sha256:dd38f759eb27e5e3dbd3aa234c63396c7e9485296012512c8e16594330bb2160"
                ]
            }
        },
        "37-build-20240429": {
            "architecture": "amd64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "amd64",
                    "io.balena.device-type": "odyssey-x86",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                }
            },
            "created": "2024-05-02T12:18:25.316859173Z",
            "history": [
                {
                    "created": "2021-04-01T17:59:37.09884046Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-20T10:46:14.111891363Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-29T00:26:01.517560423Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:533e3405b5c87c5a7239c02ef2d954b1072df5afeee2139a9e2dd133dd4612b6 in / "
                },
                {
                    "created": "2023-11-29T00:26:02.196411879Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-02T12:11:17.879557284Z",
                    "created_by": "LABEL io.balena.architecture=amd64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-02T12:11:17.879557284Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T12:12:42.641900869Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-clients \t\tsubversion \t\tautoconf \t\tautomake \t\tbzip2-devel \t\tglib2-devel \t\tgcc \t\tgcc-c++ \t\tImageMagick \t\tImageMagick-devel \t\tkernel-devel \t\tlibcurl-devel \t\tlibevent-devel \t\tlibffi-devel \t\tlibjpeg-devel \t\tlibsqlite3x-devel \t\tlibxml2-devel \t\tlibxslt-devel \t\tlibyaml-devel \t\tmysql-devel \t\tmake \t\tncurses-devel \t\topenssl-devel \t\tpostgresql-devel \t\treadline-devel \t\tsqlite-devel \t\tzlib-devel \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T12:12:43.102550992Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T12:12:43.102550992Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-02T12:12:43.113767499Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T12:12:43.152579927Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T12:12:43.164024901Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T12:12:43.164024901Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-02T12:12:43.287186632Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T12:12:43.340830362Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: Intel 64-bit (x86-64) \\nOS: Fedora 37 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T12:18:25.256627336Z",
                    "created_by": "LABEL io.balena.device-type=odyssey-x86",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-02T12:18:25.256627336Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T12:18:25.316859173Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: Intel 64-bit (x86-64) \\nOS: Fedora 37 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:e89a2dafe59a58dee0fcdc4620c1e36ef34357d92655da13e1f656c33031c0b5",
                    "sha256:69aca497cb556a67ac50c1b5a13b0b871991163be5ba5fe38edcba052f8101d7",
                    "sha256:c8e99a432af543f09f782a2ed7a06ebaf935caab86c88abcd86df364a0491feb",
                    "sha256:ea6031a54383b7350fe210e7be054eeeb58f56fc6ab91f80befca8c9f9dc23f9",
                    "sha256:c79ad587f89a7cf70aeb333fa90c49ebcdda05a9ad40d078fc2594db8b33808b",
                    "sha256:687a39c8eaf68f59b3a3ebb8d4f8e47c5e1c328640c7e6e5f79de9a12fdc4717",
                    "sha256:fd4f1a77214f560e5460e645895ace4494625265cce67f2fd9d252b37b953f54",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:7407744290b4667e01e846a53491363c6a6840d38aab7fb65b2e86bbf4404f53",
                    "sha256:4e25336ffc1cdcc59619d02ee439302775d8c82da08ce4ccb59eabd07daa4388",
                    "sha256:e767cf0c4419ff5f520564c8e8325256b271d87ad22f6a3d5a45fd89adde0f8e"
                ]
            }
        },
        "37-run": {
            "architecture": "amd64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "amd64",
                    "io.balena.device-type": "odyssey-x86",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                }
            },
            "created": "2024-05-02T12:18:12.985891796Z",
            "history": [
                {
                    "created": "2021-04-01T17:59:37.09884046Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-20T10:46:14.111891363Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-29T00:26:01.517560423Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:533e3405b5c87c5a7239c02ef2d954b1072df5afeee2139a9e2dd133dd4612b6 in / "
                },
                {
                    "created": "2023-11-29T00:26:02.196411879Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-02T12:11:35.787518344Z",
                    "created_by": "LABEL io.balena.architecture=amd64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-02T12:11:35.787518344Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T12:11:36.155885234Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T12:11:36.155885234Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-02T12:11:36.166220512Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T12:11:36.201352732Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T12:11:36.229371253Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T12:11:36.229371253Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-02T12:11:36.489410396Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T12:11:36.547751991Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: Intel 64-bit (x86-64) \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T12:18:12.910718736Z",
                    "created_by": "LABEL io.balena.device-type=odyssey-x86",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-02T12:18:12.910718736Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T12:18:12.985891796Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: Intel 64-bit (x86-64) \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:e89a2dafe59a58dee0fcdc4620c1e36ef34357d92655da13e1f656c33031c0b5",
                    "sha256:0a648d9cc45ccee05b7dda5c00174ff854e8f08899edb49b4b9ea8c61b058805",
                    "sha256:473314ea19844329bd2910bee3a05e7fd8996962d93719e1c3837927325ce390",
                    "sha256:1a8b3c1e1273d38aa2a3915c1cc142013ca3810eabdbad9eebc5997adc885bc2",
                    "sha256:ecc646eb7ee27032fc4faf92282b9e1d4176e672e63e5859c956e3b9b81e3777",
                    "sha256:dcaa3246209255ba81e531a54247f2762caac0def1a733005d0f168a69d14815",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:b537c15fb5e1acaa06a911b4b340ad545722901d3c792694a6cf8441f4bd8739",
                    "sha256:2738d555c5ce0d58e21ca1d22b99000d3deac89174240ba1bde438476ef3fdc4",
                    "sha256:5be83af9977c7d94e3c47abf63914eb6b1faed6b1bdc37a84b60c687ad11330a"
                ]
            }
        },
        "37-run-20230811": {
            "architecture": "amd64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "amd64",
                    "io.balena.device-type": "intel-nuc",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2023-08-21T20:15:55.822498992Z",
            "history": [
                {
                    "created": "2021-04-01T17:59:37.09884046Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-20T10:46:14.111891363Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-04T18:22:42.383186833Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:3242aba4f770b24f6433fa19e51c222acf5a33d2268b82c7ec43874258838970 in / "
                },
                {
                    "created": "2023-08-04T18:22:43.038358583Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-21T19:52:26.839667108Z",
                    "created_by": "LABEL io.balena.architecture=amd64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-21T19:52:26.839667108Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-21T19:59:43.225911138Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-21T19:59:43.225911138Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-21T19:59:43.265017408Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-21T19:59:43.278822397Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-21T19:59:43.31418837Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-21T19:59:43.31418837Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-21T19:59:43.649629911Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-21T19:59:44.091734469Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: Intel 64-bit (x86-64) \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-21T20:15:55.528470281Z",
                    "created_by": "LABEL io.balena.device-type=intel-nuc",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-21T20:15:55.528470281Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-21T20:15:55.822498992Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: Intel 64-bit (x86-64) \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "moby.buildkit.buildinfo.v1": "eyJmcm9udGVuZCI6ImRvY2tlcmZpbGUudjAiLCJhdHRycyI6eyJmaWxlbmFtZSI6IkRvY2tlcmZpbGUifSwic291cmNlcyI6W3sidHlwZSI6ImRvY2tlci1pbWFnZSIsInJlZiI6ImRvY2tlci5pby9iYWxlbmFsaWIvYW1kNjQtZmVkb3JhOjM3LXJ1biIsInBpbiI6InNoYTI1Njo0ZDZkZjdlMzYzZTNiZmE5ZWZkNDVjODIxMjk2ZTE3MmMwOTAzMmE3OTU0MTkyZjczMDQxMWM4OTlmZWYyNGI3In1dfQ==",
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:8a5c91bcb42954a1d542cf1243b349f4d83fdd74d2ddc71ccaf63ffb7b661793",
                    "sha256:fca50d5c7997910a204bc6cee98bca6e25e11762221da2784c6d3645566f0ddb",
                    "sha256:3480908bbabedafa2f826ca9f403cb09eecf0383304b8bbe14e68de7beca1ddf",
                    "sha256:0dd58378b6f4109aefd89403151fb2cbfb7b5b5a829252b6828dd74ac3d4197f",
                    "sha256:597c7f0663815a1c3890fa212a75c9d37ecdc09d52d9952fd5b53e5d9caf6212",
                    "sha256:dbf5739d78d524aac1abdba9884c01b35edc636d914b379819738a3ef75648d7",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:21f04c3046c703b1a27343fba484e8a1bcdb988c7d8555b059c066ef4f0220d9",
                    "sha256:ce2118ba52ad3ebcbc8cbd5810227ff666d0cd51fad51fc828f171d92af3d74d",
                    "sha256:d111ea2ab348ba7c188e6a0c3aac986f1b5b2009b38e7416bf4ff012d1666f45"
                ]
            }
        },
        "37-run-20230829": {
            "architecture": "amd64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "amd64",
                    "io.balena.device-type": "intel-nuc",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2023-09-02T04:17:48.735207793Z",
            "history": [
                {
                    "created": "2021-04-01T17:59:37.09884046Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-20T10:46:14.111891363Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-04T18:22:42.383186833Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:3242aba4f770b24f6433fa19e51c222acf5a33d2268b82c7ec43874258838970 in / "
                },
                {
                    "created": "2023-08-04T18:22:43.038358583Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-02T03:53:27.833103705Z",
                    "created_by": "LABEL io.balena.architecture=amd64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-02T03:53:27.833103705Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T03:59:29.487734532Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T03:59:29.487734532Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-02T03:59:29.506051361Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T03:59:29.527922573Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T03:59:29.557992178Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T03:59:29.557992178Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-02T03:59:29.842622847Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T03:59:30.225039407Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: Intel 64-bit (x86-64) \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T04:17:48.484867648Z",
                    "created_by": "LABEL io.balena.device-type=intel-nuc",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-02T04:17:48.484867648Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T04:17:48.735207793Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: Intel 64-bit (x86-64) \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:8a5c91bcb42954a1d542cf1243b349f4d83fdd74d2ddc71ccaf63ffb7b661793",
                    "sha256:380419ecfa744daae3d1681c557d6abf8c91c0c5fc86a2969a8ed77e9709baa4",
                    "sha256:58c1f2554a6401c303a1ee84178afc50a8b06dab7b87655f31d30c850c487334",
                    "sha256:c3f7ce1d467d976dfa04264cd86521d73064a1ed6e9fb71dc3410e477ae870ae",
                    "sha256:6f5c6abfd2b62955e4a3b682bb44712ef50b0fd3543e11c7d4fc17f1b82f6907",
                    "sha256:56469bde0dc559a1839e14d976f279c90e21acf0ed0b000c6a72d55ee8220876",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:8e90a20b4674cca48347191b933581e0ed4da241493cbfdf5a194bae7e5f8292",
                    "sha256:95a838d8cef27239aa14c47871c7b64b3b90b793856807b90df22d3881fd91b0",
                    "sha256:ec1d9080493cb8830eb541d3ffd2142141dc02d8e2e41bccd274018f0267e682"
                ]
            }
        },
        "37-run-20230904": {
            "architecture": "amd64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "amd64",
                    "io.balena.device-type": "intel-nuc",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2023-09-09T04:14:00.317904233Z",
            "history": [
                {
                    "created": "2021-04-01T17:59:37.09884046Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-20T10:46:14.111891363Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-04T18:22:42.383186833Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:3242aba4f770b24f6433fa19e51c222acf5a33d2268b82c7ec43874258838970 in / "
                },
                {
                    "created": "2023-08-04T18:22:43.038358583Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T03:59:08.044755432Z",
                    "created_by": "LABEL io.balena.architecture=amd64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T03:59:08.044755432Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T03:59:08.444875601Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T03:59:08.444875601Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T03:59:08.456878787Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T03:59:08.464404941Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T03:59:08.470905987Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T03:59:08.470905987Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T03:59:08.778387992Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T03:59:08.973104388Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: Intel 64-bit (x86-64) \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:14:00.107701171Z",
                    "created_by": "LABEL io.balena.device-type=intel-nuc",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T04:14:00.107701171Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:14:00.317904233Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: Intel 64-bit (x86-64) \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:8a5c91bcb42954a1d542cf1243b349f4d83fdd74d2ddc71ccaf63ffb7b661793",
                    "sha256:7e137976dd3d65e1b7be54fc9701bd78bf00b6ee978ad81280b8bd275035d3a7",
                    "sha256:42ee78234deac018bf727039dafccfb78c9d756f1ec8903cef7eb85190ead930",
                    "sha256:7dc9005f3e3ce1987ea49d7c2df24a1cc02afb441b95cfff9caf872819ab4dfc",
                    "sha256:23e486a49ac227803e0c85abb4c0cd9fd2aa05725dbba3f37eb1a3aeb1d7bd57",
                    "sha256:96cfa030f844607e078e22e5b7761f3ce499394317ad0af4d4db456fb31aa74d",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:1ea1e3eb686efc3c91616ea714b0a283b6173e34d5506b3b624d37b1ed0064ed",
                    "sha256:542b978ffd01f251026ec67db609ce53d689b901747e6febcc4f908c46e731a6",
                    "sha256:ab7da43fc40a18bd1103ac844b2245b9dc80a8c437d638c05f5d64d746e937d2"
                ]
            }
        },
        "37-run-20230911": {
            "architecture": "amd64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "amd64",
                    "io.balena.device-type": "odyssey-x86",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2023-09-11T23:03:25.893033534Z",
            "history": [
                {
                    "created": "2021-04-01T17:59:37.09884046Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-20T10:46:14.111891363Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-04T18:22:42.383186833Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:3242aba4f770b24f6433fa19e51c222acf5a33d2268b82c7ec43874258838970 in / "
                },
                {
                    "created": "2023-08-04T18:22:43.038358583Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T03:59:08.044755432Z",
                    "created_by": "LABEL io.balena.architecture=amd64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T03:59:08.044755432Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T03:59:08.444875601Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T03:59:08.444875601Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T03:59:08.456878787Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T03:59:08.464404941Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T03:59:08.470905987Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T03:59:08.470905987Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T03:59:08.778387992Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T03:59:08.973104388Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: Intel 64-bit (x86-64) \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-11T23:03:25.832214295Z",
                    "created_by": "LABEL io.balena.device-type=odyssey-x86",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-11T23:03:25.832214295Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-11T23:03:25.893033534Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: Intel 64-bit (x86-64) \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:8a5c91bcb42954a1d542cf1243b349f4d83fdd74d2ddc71ccaf63ffb7b661793",
                    "sha256:7e137976dd3d65e1b7be54fc9701bd78bf00b6ee978ad81280b8bd275035d3a7",
                    "sha256:42ee78234deac018bf727039dafccfb78c9d756f1ec8903cef7eb85190ead930",
                    "sha256:7dc9005f3e3ce1987ea49d7c2df24a1cc02afb441b95cfff9caf872819ab4dfc",
                    "sha256:23e486a49ac227803e0c85abb4c0cd9fd2aa05725dbba3f37eb1a3aeb1d7bd57",
                    "sha256:96cfa030f844607e078e22e5b7761f3ce499394317ad0af4d4db456fb31aa74d",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:1ea1e3eb686efc3c91616ea714b0a283b6173e34d5506b3b624d37b1ed0064ed",
                    "sha256:6477848327ef7344548c3706925e3c386ce207ba8f85bbff0604d9577f437ea0",
                    "sha256:b3d950f5dc5c037e537892b19270392fa69428eab347e4e7de50f9c4a58efada"
                ]
            }
        },
        "37-run-20231103": {
            "architecture": "amd64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "amd64",
                    "io.balena.device-type": "odyssey-x86",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2023-11-04T20:35:38.577134772Z",
            "history": [
                {
                    "created": "2021-04-01T17:59:37.09884046Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-20T10:46:14.111891363Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-06T18:22:29.551043544Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:395273c1903fb6b62f46bbf72259ef76c6eb16f475d22abd47b7633b2b77a847 in / "
                },
                {
                    "created": "2023-10-06T18:22:30.235678845Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-04T20:25:11.729328966Z",
                    "created_by": "LABEL io.balena.architecture=amd64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-04T20:25:11.729328966Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T20:25:11.994255514Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T20:25:11.994255514Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-04T20:25:12.004780927Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T20:25:12.01526574Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T20:25:12.040162507Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T20:25:12.040162507Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-04T20:25:12.188765905Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T20:25:12.273025011Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: Intel 64-bit (x86-64) \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T20:35:38.486556692Z",
                    "created_by": "LABEL io.balena.device-type=odyssey-x86",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-04T20:35:38.486556692Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T20:35:38.577134772Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: Intel 64-bit (x86-64) \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:9b5a2675a1f8f633773bcb6f6dbade49054173b4bfd1599e2bbe64e975812329",
                    "sha256:dd03ffd46e3f50f2600532b8ee5aec2d2f39ac877d18df277fab563fbcf38866",
                    "sha256:c9a4ad29326980cdeb327278fabacfbfdaaee16234b8faae944634318f9efbd7",
                    "sha256:708ae14cfa0655c8947eda92d1111c7a0d097106e05cc443000b4958c60b7183",
                    "sha256:5b6c9e19c5b005401f4d5869255f3c70112a4551073cec3bd2bd57252289d958",
                    "sha256:1e3bb05f1b5995053bcd278a3b2764e0251dd367c7d5c8de4df7e5aa9241c8dc",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:4ba5a8faabeb7bb0b84e3bd972b6407bce7d138c7b9b56524725593ee8255157",
                    "sha256:b2bd3f62d35c5fa7aa62762c707241f33f2d83849733c03010880cdb7e60c672",
                    "sha256:40dd8b05a56defef78b6ae818a0d7a251be5a0d6d761cb72301827229442f673"
                ]
            }
        },
        "37-run-20231204": {
            "architecture": "amd64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "amd64",
                    "io.balena.device-type": "odyssey-x86",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2023-12-06T18:39:53.083327891Z",
            "history": [
                {
                    "created": "2021-04-01T17:59:37.09884046Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-20T10:46:14.111891363Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-29T00:26:01.517560423Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:533e3405b5c87c5a7239c02ef2d954b1072df5afeee2139a9e2dd133dd4612b6 in / "
                },
                {
                    "created": "2023-11-29T00:26:02.196411879Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T17:56:03.747827155Z",
                    "created_by": "LABEL io.balena.architecture=amd64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T17:56:03.747827155Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T17:56:03.951248076Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T17:56:03.951248076Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T17:56:03.960836387Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T17:56:03.971888675Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T17:56:03.980766309Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T17:56:03.980766309Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T17:56:04.083929145Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T17:56:04.173103482Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: Intel 64-bit (x86-64) \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T18:39:53.001839298Z",
                    "created_by": "LABEL io.balena.device-type=odyssey-x86",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T18:39:53.001839298Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T18:39:53.083327891Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: Intel 64-bit (x86-64) \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:e89a2dafe59a58dee0fcdc4620c1e36ef34357d92655da13e1f656c33031c0b5",
                    "sha256:cf2ae2bdb9183af3f824b7e4c29fbd606e47799a97d6096d8f7e00ef5f490439",
                    "sha256:3d570902edb01a6b3632c26a6cef287f60fe5fda67ce2135a06f978c2ab4434a",
                    "sha256:21bdf36a029e5507f6b24f0ca8f4bc91bd5e55441b51ec0aeb0d61ddee34e8f7",
                    "sha256:6b13b5a03307c5608826145c3387a6fe156cfdf40f04965b7aaf32e06f80524d",
                    "sha256:8dee186546bb8954265c9c4b824dcc5702b7e5ae89c0cb055cf77b4b65228265",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:0b741073e9307f7b66244c8c4785863940367e83335ae78a22c374573878a558",
                    "sha256:cf7e1f853ea83becf842239b01452fb6d0e55296dbe10521d4d1253f626b0e61",
                    "sha256:843eaaba86419ec2d0b89eab4993af43674615156e09620c041bcd82c5a5f075"
                ]
            }
        },
        "37-run-20240105": {
            "architecture": "amd64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "amd64",
                    "io.balena.device-type": "odyssey-x86",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2024-01-05T14:09:49.038173762Z",
            "history": [
                {
                    "created": "2021-04-01T17:59:37.09884046Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-20T10:46:14.111891363Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-29T00:26:01.517560423Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:533e3405b5c87c5a7239c02ef2d954b1072df5afeee2139a9e2dd133dd4612b6 in / "
                },
                {
                    "created": "2023-11-29T00:26:02.196411879Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-05T13:59:54.18041825Z",
                    "created_by": "LABEL io.balena.architecture=amd64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-05T13:59:54.18041825Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-05T13:59:54.417070806Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-05T13:59:54.417070806Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-05T13:59:54.427392984Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-05T13:59:54.459082685Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-05T13:59:54.48704776Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-05T13:59:54.48704776Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-05T13:59:54.701706892Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-05T13:59:54.764168187Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: Intel 64-bit (x86-64) \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-05T14:09:48.9753273Z",
                    "created_by": "LABEL io.balena.device-type=odyssey-x86",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-05T14:09:48.9753273Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-05T14:09:49.038173762Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: Intel 64-bit (x86-64) \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:e89a2dafe59a58dee0fcdc4620c1e36ef34357d92655da13e1f656c33031c0b5",
                    "sha256:be5ea942547e5f184cf40a284eeb82005dd573a75ec6da220bef84440c21799d",
                    "sha256:d93e9aba12c58fab57e3c93789ec071228282082e33691ff6db4af403c20c546",
                    "sha256:276623a2256a9b65bf5b724299227e40e352268a9527768edc0f5ce9f25058c2",
                    "sha256:54f349630e0de220734a865fd92a68af438bb762181ba71ce2e8f341d0a5c3f2",
                    "sha256:e0bd5807f9bff81e6d1440c396316bc46e684344b539d3c9a81edca0d1cf9ee4",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:bf359b349ecedfa1d9b00bd125627393917dc1d0d10f21d8655da275098f2e36",
                    "sha256:767d954a0e028119754e55f59fa017135398f7fcddf1acdae3e7365a2a86de9b",
                    "sha256:86f86251a137a57e059ea97ef596b7deb170ff38b1b036e3de423a2a1e3347f5"
                ]
            }
        },
        "37-run-20240201": {
            "architecture": "amd64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "amd64",
                    "io.balena.device-type": "odyssey-x86",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2024-02-03T22:43:46.779088827Z",
            "history": [
                {
                    "created": "2021-04-01T17:59:37.09884046Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-20T10:46:14.111891363Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-29T00:26:01.517560423Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:533e3405b5c87c5a7239c02ef2d954b1072df5afeee2139a9e2dd133dd4612b6 in / "
                },
                {
                    "created": "2023-11-29T00:26:02.196411879Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-03T22:35:36.898952913Z",
                    "created_by": "LABEL io.balena.architecture=amd64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-03T22:35:36.898952913Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-03T22:35:37.498519547Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-03T22:35:37.498519547Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-03T22:35:37.511124291Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-03T22:35:37.542159925Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-03T22:35:37.554209496Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-03T22:35:37.554209496Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-03T22:35:37.769174671Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-03T22:35:37.829518486Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: Intel 64-bit (x86-64) \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-03T22:43:46.723150432Z",
                    "created_by": "LABEL io.balena.device-type=odyssey-x86",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-03T22:43:46.723150432Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-03T22:43:46.779088827Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: Intel 64-bit (x86-64) \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:e89a2dafe59a58dee0fcdc4620c1e36ef34357d92655da13e1f656c33031c0b5",
                    "sha256:4b96f1f532259574bf845e53bf75f5f3c0299925937fe263f5045f9062bd4dfe",
                    "sha256:e6abbbab6c0809ea1bea86f38e82aa33b1ebd78e9b5551e84cf93ab2a8e6f803",
                    "sha256:c6814fba19589c2e0583da7054121dc8142a4edfb259908aff631683e577f45d",
                    "sha256:2ec60fba1a4b3f73515c6c0f9db1371238b0da15c73d84aae9ef3f7275ec0741",
                    "sha256:cc0a116e7685f797625a84b4f73221e08d0a2e20e03846223e7f97e2560504a6",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:b756dc667e503ba7bfc9bb0a3f53c4ce4a81a520e4c09c358b11abf71c0f44cf",
                    "sha256:f35bc912ff63f7a1e6c6b9de29bd060e334b1c20fd4bffd0699d356c5834ae06",
                    "sha256:072c1fd16e6189864737ee5eab67766af26d77e9596f123c1897e655867ed416"
                ]
            }
        },
        "37-run-20240304": {
            "architecture": "amd64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "amd64",
                    "io.balena.device-type": "odyssey-x86",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2024-03-05T18:48:10.26260045Z",
            "history": [
                {
                    "created": "2021-04-01T17:59:37.09884046Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-20T10:46:14.111891363Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-29T00:26:01.517560423Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:533e3405b5c87c5a7239c02ef2d954b1072df5afeee2139a9e2dd133dd4612b6 in / "
                },
                {
                    "created": "2023-11-29T00:26:02.196411879Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T18:27:17.052466666Z",
                    "created_by": "LABEL io.balena.architecture=amd64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T18:27:17.052466666Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T18:27:17.680717512Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T18:27:17.680717512Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T18:27:17.690105177Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T18:27:17.729671857Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T18:27:17.738614063Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T18:27:17.738614063Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T18:27:18.038006148Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T18:27:18.09950217Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: Intel 64-bit (x86-64) \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T18:48:10.184741148Z",
                    "created_by": "LABEL io.balena.device-type=odyssey-x86",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T18:48:10.184741148Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T18:48:10.26260045Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: Intel 64-bit (x86-64) \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:e89a2dafe59a58dee0fcdc4620c1e36ef34357d92655da13e1f656c33031c0b5",
                    "sha256:407784ce233d07c91716b195ba5fdadca2c77276758f618b3bf474704c07c93c",
                    "sha256:6790dcb3bf20873f21627079dd24a2d23da7d970b8a3fcb2e3e11d209531497d",
                    "sha256:1ca6aa489d1fe12bc5b9e9e9b286d3564777218362d06f08f07e262eccdeba52",
                    "sha256:ee7b099673a169cff2d986c726d47ef4ffb274e162056718e9ffe10f5db8d2b0",
                    "sha256:8949d553ef226f0d0474c9ab28f49bfd35c6aa44a4ee31ec5ea952e48c0d67c2",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:f5a5aad7ca1b65f289777c165b7d8e29d5078483491ada457a5b0bbf9c4fe705",
                    "sha256:a61f4a1f3c828639cef685f003c1b96631c29ca987fcc18c7ec9d20b7376c742",
                    "sha256:c4a01c429f2990290158ecb52c4beacba0eacf2b78d0742636b3ad881f713f81"
                ]
            }
        },
        "37-run-20240401": {
            "architecture": "amd64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "amd64",
                    "io.balena.device-type": "odyssey-x86",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                }
            },
            "created": "2024-04-02T02:40:06.736289083Z",
            "history": [
                {
                    "created": "2021-04-01T17:59:37.09884046Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-20T10:46:14.111891363Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-29T00:26:01.517560423Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:533e3405b5c87c5a7239c02ef2d954b1072df5afeee2139a9e2dd133dd4612b6 in / "
                },
                {
                    "created": "2023-11-29T00:26:02.196411879Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T02:31:15.961600503Z",
                    "created_by": "LABEL io.balena.architecture=amd64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T02:31:15.961600503Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T02:31:16.301448773Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T02:31:16.301448773Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T02:31:16.310908864Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T02:31:16.32003679Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T02:31:16.353434347Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T02:31:16.353434347Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T02:31:16.471928657Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T02:31:16.525879007Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: Intel 64-bit (x86-64) \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T02:40:06.672943671Z",
                    "created_by": "LABEL io.balena.device-type=odyssey-x86",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T02:40:06.672943671Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T02:40:06.736289083Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: Intel 64-bit (x86-64) \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:e89a2dafe59a58dee0fcdc4620c1e36ef34357d92655da13e1f656c33031c0b5",
                    "sha256:ff8ed929feef33ec1c1f39c6b4f80cc3764a80f0e5629ec44a97462d096a8a67",
                    "sha256:140f598fedc50aebac7be5f429b0d1d1430326387767f769f8d75d71fafe67ce",
                    "sha256:a331ae444751612061e818b34079766a4799bf04d670910014b918e5a7f2aa98",
                    "sha256:af8973f6bb2e5a32c405b2a69629d63fe1968302e74a80caf44fc5b30def8c6f",
                    "sha256:28f34c8df9f98ec114938494ca7ed4bc600d4757531280b157b6268cdd7049db",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:b87f537d1904201dba89c59292d231a7b6310b37c6372c2650a11e3101d075c4",
                    "sha256:f71fb883b9f491b773f1bdd93386c88d7888e4f89612d99ca5eb498fa9e462f8",
                    "sha256:2711cd49e15e728d8336758cdf52285826a23f57012eeade73151b6c11bd7b49"
                ]
            }
        },
        "37-run-20240408": {
            "architecture": "amd64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "amd64",
                    "io.balena.device-type": "odyssey-x86",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                }
            },
            "created": "2024-04-09T13:46:07.607574782Z",
            "history": [
                {
                    "created": "2021-04-01T17:59:37.09884046Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-20T10:46:14.111891363Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-29T00:26:01.517560423Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:533e3405b5c87c5a7239c02ef2d954b1072df5afeee2139a9e2dd133dd4612b6 in / "
                },
                {
                    "created": "2023-11-29T00:26:02.196411879Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:35:49.166636872Z",
                    "created_by": "LABEL io.balena.architecture=amd64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:35:49.166636872Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:35:49.353720115Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:35:49.353720115Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:35:49.363434466Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:35:49.373123647Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:35:49.403773106Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:35:49.403773106Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:35:49.523623495Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:35:49.603887285Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: Intel 64-bit (x86-64) \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:46:07.542279168Z",
                    "created_by": "LABEL io.balena.device-type=odyssey-x86",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:46:07.542279168Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:46:07.607574782Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: Intel 64-bit (x86-64) \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:e89a2dafe59a58dee0fcdc4620c1e36ef34357d92655da13e1f656c33031c0b5",
                    "sha256:5be4da3e11c12f8a7f04187b011613695c861dbfaa34600788e52b7a72d0fe20",
                    "sha256:77f26d83150120b739b5d8d75ad033761be477817d6c19e6a1dd8c375f42f8ef",
                    "sha256:d08beaf06efe313a283e864e75d9d0b4f53e9d5eae6a09aa7b5daa44b1bf2b12",
                    "sha256:2c842f6d58dfaa63098a6f68b838e8d1da81eb6a08832146d6b6f7379029d6e6",
                    "sha256:813ccd1d89aa81b3808b9f051f610516cd417b28eec1a286ca48a7b4574d4fb0",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:816dbe0c347dcba570fbf323572692f25fe5a89905ce0078708fd342430a2da8",
                    "sha256:9e5b74d2708d287243141cf8004976c99f1538dd32f790d927246da496da7e05",
                    "sha256:43f48a9c6b65bf6ad77cfd22bb9151ac2bd7a0bb3615c8ae854635e8c5065939"
                ]
            }
        },
        "37-run-20240429": {
            "architecture": "amd64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "amd64",
                    "io.balena.device-type": "odyssey-x86",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                }
            },
            "created": "2024-05-02T12:18:12.985891796Z",
            "history": [
                {
                    "created": "2021-04-01T17:59:37.09884046Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-20T10:46:14.111891363Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-29T00:26:01.517560423Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:533e3405b5c87c5a7239c02ef2d954b1072df5afeee2139a9e2dd133dd4612b6 in / "
                },
                {
                    "created": "2023-11-29T00:26:02.196411879Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-02T12:11:35.787518344Z",
                    "created_by": "LABEL io.balena.architecture=amd64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-02T12:11:35.787518344Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T12:11:36.155885234Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T12:11:36.155885234Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-02T12:11:36.166220512Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T12:11:36.201352732Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T12:11:36.229371253Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T12:11:36.229371253Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-02T12:11:36.489410396Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T12:11:36.547751991Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: Intel 64-bit (x86-64) \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T12:18:12.910718736Z",
                    "created_by": "LABEL io.balena.device-type=odyssey-x86",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-02T12:18:12.910718736Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T12:18:12.985891796Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: Intel 64-bit (x86-64) \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:e89a2dafe59a58dee0fcdc4620c1e36ef34357d92655da13e1f656c33031c0b5",
                    "sha256:0a648d9cc45ccee05b7dda5c00174ff854e8f08899edb49b4b9ea8c61b058805",
                    "sha256:473314ea19844329bd2910bee3a05e7fd8996962d93719e1c3837927325ce390",
                    "sha256:1a8b3c1e1273d38aa2a3915c1cc142013ca3810eabdbad9eebc5997adc885bc2",
                    "sha256:ecc646eb7ee27032fc4faf92282b9e1d4176e672e63e5859c956e3b9b81e3777",
                    "sha256:dcaa3246209255ba81e531a54247f2762caac0def1a733005d0f168a69d14815",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:b537c15fb5e1acaa06a911b4b340ad545722901d3c792694a6cf8441f4bd8739",
                    "sha256:2738d555c5ce0d58e21ca1d22b99000d3deac89174240ba1bde438476ef3fdc4",
                    "sha256:5be83af9977c7d94e3c47abf63914eb6b1faed6b1bdc37a84b60c687ad11330a"
                ]
            }
        },
        "38": {
            "architecture": "amd64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f38container",
                    "FGC=f38",
                    "FBR=f38",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "amd64",
                    "io.balena.device-type": "odyssey-x86",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                }
            },
            "created": "2024-05-02T12:18:03.998922114Z",
            "history": [
                {
                    "created": "2021-04-01T17:59:37.09884046Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T20:41:02.790840917Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f38container FGC=f38 FBR=f38",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-22T18:25:57.210308321Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:55ad0d0dfdaa079e875e516a84579926c32c32f2872c0f1d93171026c2d70363 in / "
                },
                {
                    "created": "2024-04-22T18:25:57.747106388Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-02T12:11:12.475123291Z",
                    "created_by": "LABEL io.balena.architecture=amd64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-02T12:11:12.475123291Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T12:11:12.763036808Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T12:11:12.763036808Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-02T12:11:12.774563162Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T12:11:12.784672282Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T12:11:12.813077009Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T12:11:12.813077009Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-02T12:11:13.066910678Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 38   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T12:11:13.122621763Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: Intel 64-bit (x86-64) \\nOS: Fedora 38 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T12:18:03.932122872Z",
                    "created_by": "LABEL io.balena.device-type=odyssey-x86",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-02T12:18:03.932122872Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T12:18:03.998922114Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: Intel 64-bit (x86-64) \\nOS: Fedora 38 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:6fe0a25272d5935a0eb252bd54023bac5967553a8fd2b339c04d3239b5cc6287",
                    "sha256:a6c5b310aab21171a85d2706b74891ac140f5993c3018242bd2d2d3e94a6810c",
                    "sha256:fa7ff378cd7be45088eacc5a81c49ec8fec73bd0129250f9a4100a431f6b625d",
                    "sha256:5d12bbd54324020a9a712b23c2f9e0fef28402677b5e279595c68ccdcfb9f6fc",
                    "sha256:98eef63270e13ad62768ce43dce1c96aae68bc0752bd4390213d7fa6b4931f4a",
                    "sha256:de22a754d9d18bff74c2f4c2de3575cb4a6098c1f16cfa1a8f5c0ec267609523",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:582552034b29c24ad9764cea0410b1b759c1fc098034b602a1503799468bd02a",
                    "sha256:1f5f667c5f86ca126c39f60b7a2f2da71f3ef9129842bfcf8bebd28f6c13193c",
                    "sha256:9ea8b0c65f2f245e002a2f8ec31d5ba2de7623d01fcbea7e844124c2541ab550"
                ]
            }
        },
        "38-20230811": {
            "architecture": "amd64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f38container",
                    "FGC=f38",
                    "FBR=f38",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "amd64",
                    "io.balena.device-type": "intel-nuc",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2023-08-21T20:21:35.711188766Z",
            "history": [
                {
                    "created": "2021-04-01T17:59:37.09884046Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T20:41:02.790840917Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f38container FGC=f38 FBR=f38",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-04T18:22:55.330992588Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:0ab93a3201ace45c039c7e7bad9808c9010f7a67de777fac6f141c98c9bbf73c in / "
                },
                {
                    "created": "2023-08-04T18:22:56.009697173Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-21T19:56:35.594248281Z",
                    "created_by": "LABEL io.balena.architecture=amd64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-21T19:56:35.594248281Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-21T19:56:36.052907428Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-21T19:56:36.052907428Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-21T19:56:36.069738318Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-21T19:56:36.082914511Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-21T19:56:36.122967289Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-21T19:56:36.122967289Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-21T19:56:36.507596676Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 38   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-21T19:56:36.953097929Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: Intel 64-bit (x86-64) \\nOS: Fedora 38 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-21T20:21:35.321240756Z",
                    "created_by": "LABEL io.balena.device-type=intel-nuc",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-21T20:21:35.321240756Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-21T20:21:35.711188766Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: Intel 64-bit (x86-64) \\nOS: Fedora 38 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "moby.buildkit.buildinfo.v1": "eyJmcm9udGVuZCI6ImRvY2tlcmZpbGUudjAiLCJhdHRycyI6eyJmaWxlbmFtZSI6IkRvY2tlcmZpbGUifSwic291cmNlcyI6W3sidHlwZSI6ImRvY2tlci1pbWFnZSIsInJlZiI6ImRvY2tlci5pby9iYWxlbmFsaWIvYW1kNjQtZmVkb3JhOjM4LXJ1biIsInBpbiI6InNoYTI1Njo0ZjI1Mjg1ODNmNGFkYWEyZGMyMGE3ZjYzNmU3NjgwYjljY2M0NTIwZGVmNzBmMzZhM2E4YTIwNWI4OWRlMzgzIn1dfQ==",
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:b8815a42e9cd10a76a1f3351d73d8a649afb94f51109b62489c05ed010f325ab",
                    "sha256:a15d7590d0e275524c6bd6edc4c8e0ed65208821427af46644978233c9d9654b",
                    "sha256:2b973cab5fae08d01b4fe2b5c218421adfe8a325ae5e5c96cc255a338272ace0",
                    "sha256:8b3c220364ebf5e2dab1c41b4ec1879fa0ba6ffd0374f721d74bf4b5b85284f9",
                    "sha256:987b0ba928b67c696e42dfad1deecc3146613743adb1ec02a105dd6d1c414cb2",
                    "sha256:1e3179cc633f8307bac5260b2b7262d8eef80d88f77ad5fd77109bf761b6e912",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:7b436be353c2a9a011e18d698c32a9853805d4f4cb078f7b047d278bdb3bd5b0",
                    "sha256:b51d3c96967fc4d64e7f4c6dcf288c3a45835039b28765cd3d631302361ecea3",
                    "sha256:acaf8c436b0faab31950a8decbd100d752876919c83f119152e1652af1d582b6"
                ]
            }
        },
        "38-20230829": {
            "architecture": "amd64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f38container",
                    "FGC=f38",
                    "FBR=f38",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "amd64",
                    "io.balena.device-type": "intel-nuc",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2023-09-02T04:22:36.24437588Z",
            "history": [
                {
                    "created": "2021-04-01T17:59:37.09884046Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T20:41:02.790840917Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f38container FGC=f38 FBR=f38",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-04T18:22:55.330992588Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:0ab93a3201ace45c039c7e7bad9808c9010f7a67de777fac6f141c98c9bbf73c in / "
                },
                {
                    "created": "2023-08-04T18:22:56.009697173Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-02T04:01:00.7526166Z",
                    "created_by": "LABEL io.balena.architecture=amd64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-02T04:01:00.7526166Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T04:01:01.366573188Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T04:01:01.366573188Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-02T04:01:01.403945176Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T04:01:01.417013486Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T04:01:01.434619504Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T04:01:01.434619504Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-02T04:01:01.732831228Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 38   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T04:01:02.070842822Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: Intel 64-bit (x86-64) \\nOS: Fedora 38 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T04:22:35.879707002Z",
                    "created_by": "LABEL io.balena.device-type=intel-nuc",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-02T04:22:35.879707002Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T04:22:36.24437588Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: Intel 64-bit (x86-64) \\nOS: Fedora 38 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:b8815a42e9cd10a76a1f3351d73d8a649afb94f51109b62489c05ed010f325ab",
                    "sha256:343693ea658285c7ae201746bca6357b92d558d04c0edbbd55f6917028663e72",
                    "sha256:0599331d6ccd65d7cd246a6e3a089880ade08b2bb9bdf6069739472162b615bd",
                    "sha256:254e66a5c7e35f42e678dbb58efc1ad11d9baa5f2ad5758c0baabb00d5598cd8",
                    "sha256:5bd43ba567671e3fe1b947a935fb71e7dff3d0e465cb41c5f429db661c78ed4a",
                    "sha256:0ceb679692343e855352944cdcd7e8f1af5415ba663197ccdbae9a69326b02d4",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:0e269bd85e6663d04904b368beb8975c4220db545a4a53542ef05e69acb8e679",
                    "sha256:3e65e1adf5429282906c0870f57e13da937e8d005a1f1776bc081bf2d728cc22",
                    "sha256:f9d8c1ca66ec11e9de82cf6b4a17f90da28e758fc048f38cd42bfd3c8933c2f7"
                ]
            }
        },
        "38-20230904": {
            "architecture": "amd64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f38container",
                    "FGC=f38",
                    "FBR=f38",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "amd64",
                    "io.balena.device-type": "intel-nuc",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2023-09-09T04:21:21.416468881Z",
            "history": [
                {
                    "created": "2021-04-01T17:59:37.09884046Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T20:41:02.790840917Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f38container FGC=f38 FBR=f38",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-04T18:22:55.330992588Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:0ab93a3201ace45c039c7e7bad9808c9010f7a67de777fac6f141c98c9bbf73c in / "
                },
                {
                    "created": "2023-08-04T18:22:56.009697173Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T03:54:59.649272086Z",
                    "created_by": "LABEL io.balena.architecture=amd64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T03:54:59.649272086Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T03:54:59.958128546Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T03:54:59.958128546Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T03:54:59.9661178Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T03:54:59.976089166Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T03:55:00.035288561Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T03:55:00.035288561Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T03:55:00.309840392Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 38   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T03:55:00.515165762Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: Intel 64-bit (x86-64) \\nOS: Fedora 38 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:21:21.174912419Z",
                    "created_by": "LABEL io.balena.device-type=intel-nuc",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T04:21:21.174912419Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:21:21.416468881Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: Intel 64-bit (x86-64) \\nOS: Fedora 38 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:b8815a42e9cd10a76a1f3351d73d8a649afb94f51109b62489c05ed010f325ab",
                    "sha256:512b1fa12255ef8a5153d9b19b88cc713b7120b2f3550d4ec1dc062afd1f47d2",
                    "sha256:2e8f496f8e03419aed20389821e99bd53bfb46bf7ac403981093b70da4c096e0",
                    "sha256:fa6b9b70264ff0a91a26b0ee601e30d9c8f81a17a40435d051cc464eb206c656",
                    "sha256:cadf0582ee81b1febacf046b2fabc6de66e79ab3a0dbd52da795e5127c7d8838",
                    "sha256:c6b25614225f30274f08b1ee0007fa2017f7acfb994e33493ad35e32d1d6c4e3",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:29a93d16e0152c3ab3d4c4197be0d56afda077c65f8f910f4ea052780b14a774",
                    "sha256:0a0e0dd4c14ed39c0035ba2eade4de30ab87c7b539559e86bdd17ff08e8694fe",
                    "sha256:741672e8f9f446e3ece8a2c0ddd584a67968977cd0104905332f03b13aee1a7e"
                ]
            }
        },
        "38-20230911": {
            "architecture": "amd64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f38container",
                    "FGC=f38",
                    "FBR=f38",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "amd64",
                    "io.balena.device-type": "odyssey-x86",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2023-09-11T23:03:06.040453841Z",
            "history": [
                {
                    "created": "2021-04-01T17:59:37.09884046Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T20:41:02.790840917Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f38container FGC=f38 FBR=f38",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-04T18:22:55.330992588Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:0ab93a3201ace45c039c7e7bad9808c9010f7a67de777fac6f141c98c9bbf73c in / "
                },
                {
                    "created": "2023-08-04T18:22:56.009697173Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T03:54:59.649272086Z",
                    "created_by": "LABEL io.balena.architecture=amd64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T03:54:59.649272086Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T03:54:59.958128546Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T03:54:59.958128546Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T03:54:59.9661178Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T03:54:59.976089166Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T03:55:00.035288561Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T03:55:00.035288561Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T03:55:00.309840392Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 38   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T03:55:00.515165762Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: Intel 64-bit (x86-64) \\nOS: Fedora 38 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-11T23:03:05.992836781Z",
                    "created_by": "LABEL io.balena.device-type=odyssey-x86",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-11T23:03:05.992836781Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-11T23:03:06.040453841Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: Intel 64-bit (x86-64) \\nOS: Fedora 38 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:b8815a42e9cd10a76a1f3351d73d8a649afb94f51109b62489c05ed010f325ab",
                    "sha256:512b1fa12255ef8a5153d9b19b88cc713b7120b2f3550d4ec1dc062afd1f47d2",
                    "sha256:2e8f496f8e03419aed20389821e99bd53bfb46bf7ac403981093b70da4c096e0",
                    "sha256:fa6b9b70264ff0a91a26b0ee601e30d9c8f81a17a40435d051cc464eb206c656",
                    "sha256:cadf0582ee81b1febacf046b2fabc6de66e79ab3a0dbd52da795e5127c7d8838",
                    "sha256:c6b25614225f30274f08b1ee0007fa2017f7acfb994e33493ad35e32d1d6c4e3",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:29a93d16e0152c3ab3d4c4197be0d56afda077c65f8f910f4ea052780b14a774",
                    "sha256:882b931c9b9baa041237b0756a7079fa701e32fafb169ddf3cc1ba41bdd7a41b",
                    "sha256:41e8332a3ea092f3f637c2d4c2e0951d7e6555f97c4696f66faa412624d277e1"
                ]
            }
        },
        "38-20231103": {
            "architecture": "amd64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f38container",
                    "FGC=f38",
                    "FBR=f38",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "amd64",
                    "io.balena.device-type": "odyssey-x86",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2023-11-04T20:35:45.236983139Z",
            "history": [
                {
                    "created": "2021-04-01T17:59:37.09884046Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T20:41:02.790840917Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f38container FGC=f38 FBR=f38",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-06T18:22:41.971393632Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:86d740c804b04f47a13a75b739763fe4c07ec0072e3493e593c605eb86234d35 in / "
                },
                {
                    "created": "2023-10-06T18:22:42.634065896Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-04T20:24:54.243151401Z",
                    "created_by": "LABEL io.balena.architecture=amd64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-04T20:24:54.243151401Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T20:24:54.517641984Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T20:24:54.517641984Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-04T20:24:54.526121874Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T20:24:54.534314508Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T20:24:54.542869079Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T20:24:54.542869079Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-04T20:24:54.758892153Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 38   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T20:24:54.816795368Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: Intel 64-bit (x86-64) \\nOS: Fedora 38 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T20:35:45.165484934Z",
                    "created_by": "LABEL io.balena.device-type=odyssey-x86",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-04T20:35:45.165484934Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T20:35:45.236983139Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: Intel 64-bit (x86-64) \\nOS: Fedora 38 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:fdc6e90d218ce752383b418a061d823f1dd876cab4514aa86ca02811498f60f4",
                    "sha256:0d4411b6d5ef9ec016df88a6785f1cbb37fe6d3314d7b4bf5b3bedf7101f47c9",
                    "sha256:05bb42c4140e22b991980a58860cc5dc95021c51a2aa4e4424da51eb9b0f947e",
                    "sha256:7f5ce623e7c05f8e5c88bd2c7f26da4ec8bd0f545647f1bd67ac7d6bc4ef985a",
                    "sha256:40eab3572dcf42ce21cabf6102a057e0d6037ae805d7c7ad0c31d14efc518e25",
                    "sha256:2f5329a1e2e47a12ed2c90a6e7be526c301940a519511143da220c440d4a2c23",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:e0865face54d1a88fb671c46e6416dc6163c11d6b85cf34fc5104cdecaec120b",
                    "sha256:590fa16d8d32c52e27c227e7f909f37d4e411c95923f38190ea171d9005d9c62",
                    "sha256:3874462a597edeb30154b90a278d1722be735a100f71793e31d68e2a69b90496"
                ]
            }
        },
        "38-20231204": {
            "architecture": "amd64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f38container",
                    "FGC=f38",
                    "FBR=f38",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "amd64",
                    "io.balena.device-type": "odyssey-x86",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2023-12-06T18:39:37.882715698Z",
            "history": [
                {
                    "created": "2021-04-01T17:59:37.09884046Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T20:41:02.790840917Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f38container FGC=f38 FBR=f38",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-29T00:26:13.797270224Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:2c116a92c33f8f24e1105dcb11a8c9dfcc77aa807e67ce2d75796e743899d323 in / "
                },
                {
                    "created": "2023-11-29T00:26:14.452774572Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T17:56:43.475645904Z",
                    "created_by": "LABEL io.balena.architecture=amd64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T17:56:43.475645904Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T17:56:44.106159746Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T17:56:44.106159746Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T17:56:44.115213304Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T17:56:44.12347709Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T17:56:44.132454834Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T17:56:44.132454834Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T17:56:44.430332545Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 38   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T17:56:44.496034197Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: Intel 64-bit (x86-64) \\nOS: Fedora 38 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T18:39:37.796519644Z",
                    "created_by": "LABEL io.balena.device-type=odyssey-x86",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T18:39:37.796519644Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T18:39:37.882715698Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: Intel 64-bit (x86-64) \\nOS: Fedora 38 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:aa52139411d10d22d51011e4f33b6d7e587b6f953bd22d7caec914622d2bd838",
                    "sha256:7ac94cbef621fd74a9e89d7a0b64c28db80e91a14f863ef2f18a10ff45c14e7a",
                    "sha256:b1188f7afe8443c149d2844748951e97c9bb6b87c10adc06042706f2ea1fe39c",
                    "sha256:4df4e7564b1ef4231cd25b4698fdfcaf371f181ddcd9590393fc2d36ac3fe862",
                    "sha256:1a8f9fe4da7bde030e3861c6cf2852b1d6fa1c134e1c7e8866bf9cf5ef2373e5",
                    "sha256:893ae05e7c89ae9192f4685484b230fcd97d770cc84553972ebd933bce500910",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:520c5d915606f566c8afaeb4247c802013ccea5af07aac79064eb5f78a171b16",
                    "sha256:acd07ed7af8c1e0310c97c5665ab860be51bd6095c7b78e06fe5fe7a09ead65f",
                    "sha256:4c5a058dc955f6558db5aeae3f979ee13462d40996c8c369ee3b0e9570832451"
                ]
            }
        },
        "38-20240105": {
            "architecture": "amd64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f38container",
                    "FGC=f38",
                    "FBR=f38",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "amd64",
                    "io.balena.device-type": "odyssey-x86",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2024-01-05T14:09:49.745843359Z",
            "history": [
                {
                    "created": "2021-04-01T17:59:37.09884046Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T20:41:02.790840917Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f38container FGC=f38 FBR=f38",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-29T00:26:13.797270224Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:2c116a92c33f8f24e1105dcb11a8c9dfcc77aa807e67ce2d75796e743899d323 in / "
                },
                {
                    "created": "2023-11-29T00:26:14.452774572Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-05T14:00:04.40627495Z",
                    "created_by": "LABEL io.balena.architecture=amd64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-05T14:00:04.40627495Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-05T14:00:04.737902686Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-05T14:00:04.737902686Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-05T14:00:04.748863665Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-05T14:00:04.757048426Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-05T14:00:04.792804683Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-05T14:00:04.792804683Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-05T14:00:04.915471077Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 38   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-05T14:00:04.985957411Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: Intel 64-bit (x86-64) \\nOS: Fedora 38 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-05T14:09:49.687148301Z",
                    "created_by": "LABEL io.balena.device-type=odyssey-x86",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-05T14:09:49.687148301Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-05T14:09:49.745843359Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: Intel 64-bit (x86-64) \\nOS: Fedora 38 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:aa52139411d10d22d51011e4f33b6d7e587b6f953bd22d7caec914622d2bd838",
                    "sha256:df1d406cbfa5c4ab909efee23f16c1cafa61441a54ba08adc10fbaf2a5a86dd4",
                    "sha256:f30065dd8264ee31b6677f28b2df1be4f9ed06b83cee9595f4a36a96d66bc4d6",
                    "sha256:9e931401c6518e02cdaeaca572f1e726834e53d6f116512bb9631df6a5ee3324",
                    "sha256:188e45adb9476822fe4816cf4be37995088996d28c6f138161f84442c93c2c10",
                    "sha256:bf0c99075b6cbf41ea01bd1e816b90dcbd67b5165804d310f97be1838737f1f4",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:819395bf81cfceb5f44314da0e6c34ae0bf008e302cd5e1adb2aac11bbffced1",
                    "sha256:ab6e40d620dec47ebef3e334d1a616fa92a53f4fa429480361f5ddf451de137b",
                    "sha256:32a4267a5c5c686a2ef0bcd24cdfe01538f4ee32bd0d37cdf9f1be842f883d62"
                ]
            }
        },
        "38-20240201": {
            "architecture": "amd64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f38container",
                    "FGC=f38",
                    "FBR=f38",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "amd64",
                    "io.balena.device-type": "odyssey-x86",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2024-02-03T22:43:49.525974867Z",
            "history": [
                {
                    "created": "2021-04-01T17:59:37.09884046Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T20:41:02.790840917Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f38container FGC=f38 FBR=f38",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-29T00:26:13.797270224Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:2c116a92c33f8f24e1105dcb11a8c9dfcc77aa807e67ce2d75796e743899d323 in / "
                },
                {
                    "created": "2023-11-29T00:26:14.452774572Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-03T22:35:40.182717088Z",
                    "created_by": "LABEL io.balena.architecture=amd64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-03T22:35:40.182717088Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-03T22:35:40.538212094Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-03T22:35:40.538212094Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-03T22:35:40.548490608Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-03T22:35:40.588457466Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-03T22:35:40.612448071Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-03T22:35:40.612448071Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-03T22:35:40.729779677Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 38   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-03T22:35:40.785372847Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: Intel 64-bit (x86-64) \\nOS: Fedora 38 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-03T22:43:49.449256401Z",
                    "created_by": "LABEL io.balena.device-type=odyssey-x86",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-03T22:43:49.449256401Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-03T22:43:49.525974867Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: Intel 64-bit (x86-64) \\nOS: Fedora 38 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:aa52139411d10d22d51011e4f33b6d7e587b6f953bd22d7caec914622d2bd838",
                    "sha256:e9fb11562a52382b2be811cdd55dbb7cf7c4146e76b98ca228f4a7633bfc225e",
                    "sha256:cea884572d7cb2082b31867e4f5b7a3e5d1710a6a88f82b577f15ff3e9eccc69",
                    "sha256:2a0ee01d03cbf8d17285b4c351898b5496297561904173e4f2779b66043a84ed",
                    "sha256:6259cdba72d222c0126cf05adc55e699ac710d26b46e5fa5badb5be5c7320e7b",
                    "sha256:eb4f785437ec478463cd8c98a5d67dde1404f6f1622a5e0a46cec462fca0408d",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:d208a618ca6ebf8f5fe1f960c4f645d60ec760a2a0cd602b21386fdf6fee3505",
                    "sha256:557572d58401151d6314aeff64158ca99280677b17cb3f9e8aadb426691dca35",
                    "sha256:f91c0b370c003b9ace33172ad1fac6611626b62a4914fbc87f0755ea492b15b8"
                ]
            }
        },
        "38-20240304": {
            "architecture": "amd64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f38container",
                    "FGC=f38",
                    "FBR=f38",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "amd64",
                    "io.balena.device-type": "odyssey-x86",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2024-03-05T18:48:18.993295404Z",
            "history": [
                {
                    "created": "2021-04-01T17:59:37.09884046Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T20:41:02.790840917Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f38container FGC=f38 FBR=f38",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-20T23:20:52.364023738Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:b7b87f9fa75ef4767a5910c18d86a631edf96a6657af1fb6e0ab5c5c7aa98d8f in / "
                },
                {
                    "created": "2024-02-20T23:20:53.239282645Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T18:27:07.997341402Z",
                    "created_by": "LABEL io.balena.architecture=amd64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T18:27:07.997341402Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T18:27:08.27251229Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T18:27:08.27251229Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T18:27:08.283159951Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T18:27:08.323726989Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T18:27:08.334137232Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T18:27:08.334137232Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T18:27:08.545434999Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 38   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T18:27:08.607566633Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: Intel 64-bit (x86-64) \\nOS: Fedora 38 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T18:48:18.933664676Z",
                    "created_by": "LABEL io.balena.device-type=odyssey-x86",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T18:48:18.933664676Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T18:48:18.993295404Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: Intel 64-bit (x86-64) \\nOS: Fedora 38 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:79be4bbc583c9e736bf4ba99236381a084e512b5b2a9d5e10abe41a34fc65078",
                    "sha256:3128da9568e485b5841f4ec4f5c36135de198e7d13fd598a315df1510aaf262c",
                    "sha256:95ef269dbb0bf125fcb2ef2b3b9c13b459c06aa4a23a88e0c90f942766fab7b8",
                    "sha256:b86ea66c045b79f80323b56a80246bc635ad7ea415ecbf0f271f49f4f18b0054",
                    "sha256:1a2c98885aab2d89620a08743f9b4a187942afc5e123a479aaa0fd3cd36bbaee",
                    "sha256:471fff70b124a232ed7f22894852386e28f2ef497bb23699c478ea6c3866c393",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:7e4d57b6fe9ad06bdd85db67fe0f880435697fe28380b6275bd92b24eb97eaba",
                    "sha256:b9c6c8d45d16d949734a728707a4d77b3f2b131c4dc4b1b631ae587e162bc28d",
                    "sha256:e06285d8e0b285f37b49cff2645108bb8ffbd97b584c34b21d73f7e5b38201ca"
                ]
            }
        },
        "38-20240401": {
            "architecture": "amd64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f38container",
                    "FGC=f38",
                    "FBR=f38",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "amd64",
                    "io.balena.device-type": "odyssey-x86",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                }
            },
            "created": "2024-04-02T02:40:04.808192529Z",
            "history": [
                {
                    "created": "2021-04-01T17:59:37.09884046Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T20:41:02.790840917Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f38container FGC=f38 FBR=f38",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-20T23:20:52.364023738Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:b7b87f9fa75ef4767a5910c18d86a631edf96a6657af1fb6e0ab5c5c7aa98d8f in / "
                },
                {
                    "created": "2024-02-20T23:20:53.239282645Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T02:31:29.108819899Z",
                    "created_by": "LABEL io.balena.architecture=amd64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T02:31:29.108819899Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T02:31:29.728493677Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T02:31:29.728493677Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T02:31:29.736580663Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T02:31:29.78656631Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T02:31:29.794593582Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T02:31:29.794593582Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T02:31:30.069199425Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 38   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T02:31:30.154548711Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: Intel 64-bit (x86-64) \\nOS: Fedora 38 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T02:40:04.741023328Z",
                    "created_by": "LABEL io.balena.device-type=odyssey-x86",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T02:40:04.741023328Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T02:40:04.808192529Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: Intel 64-bit (x86-64) \\nOS: Fedora 38 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:79be4bbc583c9e736bf4ba99236381a084e512b5b2a9d5e10abe41a34fc65078",
                    "sha256:5c9d913579eacd5eadcd2cd3c0e80f7891ee07a5905cec2c54ac6e8fb4513c0f",
                    "sha256:13b7ec5d376a64a3d7376677f09b883d5ce875ddbba1967c504a33f9ddb89ef7",
                    "sha256:5b89d8652472bc4434ff0b492ed7ff048485731abe444c05fc7f734697f3673a",
                    "sha256:0f0338cb7f08a9525766470a1ff925ac86d156a16e839864fc1a4ac509e808f5",
                    "sha256:b54337e685d35bb93e09aef14b7439fcc8b77df4a80506d5417319d57168a534",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:f6d0ea781555056b4c02174c200b0e6510bf835a1b337fa1fe87c817dfbf451e",
                    "sha256:b3a8862e36a9958dbc3bcd254819ed675243bb863f7b03eee5b1b29c0e78cb55",
                    "sha256:6728d60d97b9526be0180aa5b58279f915a66078c576b261e0e568f418d86be8"
                ]
            }
        },
        "38-20240408": {
            "architecture": "amd64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f38container",
                    "FGC=f38",
                    "FBR=f38",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "amd64",
                    "io.balena.device-type": "odyssey-x86",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                }
            },
            "created": "2024-04-09T13:46:02.917693625Z",
            "history": [
                {
                    "created": "2021-04-01T17:59:37.09884046Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T20:41:02.790840917Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f38container FGC=f38 FBR=f38",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-20T23:20:52.364023738Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:b7b87f9fa75ef4767a5910c18d86a631edf96a6657af1fb6e0ab5c5c7aa98d8f in / "
                },
                {
                    "created": "2024-02-20T23:20:53.239282645Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:35:22.127806968Z",
                    "created_by": "LABEL io.balena.architecture=amd64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:35:22.127806968Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:35:22.328841693Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:35:22.328841693Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:35:22.342548597Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:35:22.373677031Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:35:22.384184591Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:35:22.384184591Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:35:22.48700534Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 38   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:35:22.550014065Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: Intel 64-bit (x86-64) \\nOS: Fedora 38 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:46:02.851050757Z",
                    "created_by": "LABEL io.balena.device-type=odyssey-x86",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:46:02.851050757Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:46:02.917693625Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: Intel 64-bit (x86-64) \\nOS: Fedora 38 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:79be4bbc583c9e736bf4ba99236381a084e512b5b2a9d5e10abe41a34fc65078",
                    "sha256:456e17f71cd6447285a196dbc6b947aed565378918b6f51884ec475526f7db65",
                    "sha256:afd78ace79dc2b67f9077930d6b5efedb156e3529bc426c3cc0955e47b7fccf4",
                    "sha256:b1481d65b8108651ba1575f5b256d3df15873906f171c8d0ed7bfabbf34bd03a",
                    "sha256:85af315d33c3e3fdb06b05dd41abbf43b927e9f6e402a481b369998e907183c4",
                    "sha256:5cd61b23e281132e2f3c9a394afdabedafa90bba30ae5f39a4e7f73eed2a2086",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:295caeb2292bf60aa82e17637bca2dd7764cc3cb9f713a8948792ae60ba9fd53",
                    "sha256:53dccbf818cda5cebefadb49537b245c3eb180ebf44539cf18800362486712c7",
                    "sha256:15a05e497926c98988a8eca3fb88de29d9a7aef1c5fa9bfabf84063c84c554dc"
                ]
            }
        },
        "38-20240429": {
            "architecture": "amd64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f38container",
                    "FGC=f38",
                    "FBR=f38",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "amd64",
                    "io.balena.device-type": "odyssey-x86",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                }
            },
            "created": "2024-05-02T12:18:03.998922114Z",
            "history": [
                {
                    "created": "2021-04-01T17:59:37.09884046Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T20:41:02.790840917Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f38container FGC=f38 FBR=f38",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-22T18:25:57.210308321Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:55ad0d0dfdaa079e875e516a84579926c32c32f2872c0f1d93171026c2d70363 in / "
                },
                {
                    "created": "2024-04-22T18:25:57.747106388Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-02T12:11:12.475123291Z",
                    "created_by": "LABEL io.balena.architecture=amd64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-02T12:11:12.475123291Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T12:11:12.763036808Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T12:11:12.763036808Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-02T12:11:12.774563162Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T12:11:12.784672282Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T12:11:12.813077009Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T12:11:12.813077009Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-02T12:11:13.066910678Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 38   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T12:11:13.122621763Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: Intel 64-bit (x86-64) \\nOS: Fedora 38 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T12:18:03.932122872Z",
                    "created_by": "LABEL io.balena.device-type=odyssey-x86",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-02T12:18:03.932122872Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T12:18:03.998922114Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: Intel 64-bit (x86-64) \\nOS: Fedora 38 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:6fe0a25272d5935a0eb252bd54023bac5967553a8fd2b339c04d3239b5cc6287",
                    "sha256:a6c5b310aab21171a85d2706b74891ac140f5993c3018242bd2d2d3e94a6810c",
                    "sha256:fa7ff378cd7be45088eacc5a81c49ec8fec73bd0129250f9a4100a431f6b625d",
                    "sha256:5d12bbd54324020a9a712b23c2f9e0fef28402677b5e279595c68ccdcfb9f6fc",
                    "sha256:98eef63270e13ad62768ce43dce1c96aae68bc0752bd4390213d7fa6b4931f4a",
                    "sha256:de22a754d9d18bff74c2f4c2de3575cb4a6098c1f16cfa1a8f5c0ec267609523",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:582552034b29c24ad9764cea0410b1b759c1fc098034b602a1503799468bd02a",
                    "sha256:1f5f667c5f86ca126c39f60b7a2f2da71f3ef9129842bfcf8bebd28f6c13193c",
                    "sha256:9ea8b0c65f2f245e002a2f8ec31d5ba2de7623d01fcbea7e844124c2541ab550"
                ]
            }
        },
        "38-build": {
            "architecture": "amd64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f38container",
                    "FGC=f38",
                    "FBR=f38",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "amd64",
                    "io.balena.device-type": "odyssey-x86",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                }
            },
            "created": "2024-05-02T12:18:07.740796213Z",
            "history": [
                {
                    "created": "2021-04-01T17:59:37.09884046Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T20:41:02.790840917Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f38container FGC=f38 FBR=f38",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-22T18:25:57.210308321Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:55ad0d0dfdaa079e875e516a84579926c32c32f2872c0f1d93171026c2d70363 in / "
                },
                {
                    "created": "2024-04-22T18:25:57.747106388Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-02T12:11:07.073282537Z",
                    "created_by": "LABEL io.balena.architecture=amd64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-02T12:11:07.073282537Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T12:12:31.76188619Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-clients \t\tsubversion \t\tautoconf \t\tautomake \t\tbzip2-devel \t\tglib2-devel \t\tgcc \t\tgcc-c++ \t\tImageMagick \t\tImageMagick-devel \t\tkernel-devel \t\tlibcurl-devel \t\tlibevent-devel \t\tlibffi-devel \t\tlibjpeg-devel \t\tlibsqlite3x-devel \t\tlibxml2-devel \t\tlibxslt-devel \t\tlibyaml-devel \t\tmysql-devel \t\tmake \t\tncurses-devel \t\topenssl-devel \t\tpostgresql-devel \t\treadline-devel \t\tsqlite-devel \t\tzlib-devel \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T12:12:32.223183634Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T12:12:32.223183634Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-02T12:12:32.233735282Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T12:12:32.264260796Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T12:12:32.2750742Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T12:12:32.2750742Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-02T12:12:32.392117983Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 38   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T12:12:32.456121416Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: Intel 64-bit (x86-64) \\nOS: Fedora 38 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T12:18:07.680666128Z",
                    "created_by": "LABEL io.balena.device-type=odyssey-x86",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-02T12:18:07.680666128Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T12:18:07.740796213Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: Intel 64-bit (x86-64) \\nOS: Fedora 38 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:6fe0a25272d5935a0eb252bd54023bac5967553a8fd2b339c04d3239b5cc6287",
                    "sha256:c4ea37e61c02eeeb10d7218e1c8e20ec33344ff492b8069b9ae3f38dbf1e9ecd",
                    "sha256:00a9ad0f9a51f128f44d86702d312cb9e6d8f06ae48413f1f233043062d5c19a",
                    "sha256:9a449a11d980335a2b020b304b3ad9eec740abffee1eb39ac2fa6425ba86a75b",
                    "sha256:7ce2e02f662a3334d7a5ae2981c7ee6a6d3ae543763e02051e0640e38a73119d",
                    "sha256:f81e6fdbe4101a92250a70db7803a75649dd7586ca53ef7df7e83c6a39853c7f",
                    "sha256:1f4349bf3a794cd68073c0a5b5b13249a3cf549e65137f91e07a7918beb34797",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:22bbc5a38b7ee2b4e20f74d0d00548b6def3950237d7334c32481fee54e63bd6",
                    "sha256:6b4bb6a91c4975f2aff3734150f63cd3a211693017cfe939a67d2bb262f70e4d",
                    "sha256:e2993e1eecb9ad0e13c5024030d6ae033778772020f83720d8301d9308b21225"
                ]
            }
        },
        "38-build-20230811": {
            "architecture": "amd64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f38container",
                    "FGC=f38",
                    "FBR=f38",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "amd64",
                    "io.balena.device-type": "intel-nuc",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2023-08-21T20:25:21.541737922Z",
            "history": [
                {
                    "created": "2021-04-01T17:59:37.09884046Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T20:41:02.790840917Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f38container FGC=f38 FBR=f38",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-04T18:22:55.330992588Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:0ab93a3201ace45c039c7e7bad9808c9010f7a67de777fac6f141c98c9bbf73c in / "
                },
                {
                    "created": "2023-08-04T18:22:56.009697173Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-21T19:56:35.594248281Z",
                    "created_by": "LABEL io.balena.architecture=amd64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-21T19:56:35.594248281Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-21T19:58:40.266762901Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-clients \t\tsubversion \t\tautoconf \t\tautomake \t\tbzip2-devel \t\tglib2-devel \t\tgcc \t\tgcc-c++ \t\tImageMagick \t\tImageMagick-devel \t\tkernel-devel \t\tlibcurl-devel \t\tlibevent-devel \t\tlibffi-devel \t\tlibjpeg-devel \t\tlibsqlite3x-devel \t\tlibxml2-devel \t\tlibxslt-devel \t\tlibyaml-devel \t\tmysql-devel \t\tmake \t\tncurses-devel \t\topenssl-devel \t\tpostgresql-devel \t\treadline-devel \t\tsqlite-devel \t\tzlib-devel \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-21T19:58:40.800907282Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-21T19:58:40.800907282Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-21T19:58:40.819651068Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-21T19:58:40.861011435Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-21T19:58:40.883954617Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-21T19:58:40.883954617Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-21T19:58:41.203788966Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 38   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-21T19:58:41.510354426Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: Intel 64-bit (x86-64) \\nOS: Fedora 38 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-21T20:25:21.116239798Z",
                    "created_by": "LABEL io.balena.device-type=intel-nuc",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-21T20:25:21.116239798Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-21T20:25:21.541737922Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: Intel 64-bit (x86-64) \\nOS: Fedora 38 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "moby.buildkit.buildinfo.v1": "eyJmcm9udGVuZCI6ImRvY2tlcmZpbGUudjAiLCJhdHRycyI6eyJmaWxlbmFtZSI6IkRvY2tlcmZpbGUifSwic291cmNlcyI6W3sidHlwZSI6ImRvY2tlci1pbWFnZSIsInJlZiI6ImRvY2tlci5pby9iYWxlbmFsaWIvYW1kNjQtZmVkb3JhOjM4LWJ1aWxkIiwicGluIjoic2hhMjU2OmZjYTUzODkwMzJmNWEzMWNhYTk0MTU0OTU5OTM4ZjkzZWQzOGIzMGQ1YjRiNjU2N2MyMzJkZmE2ZDU3OGIyMWEifV19",
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:b8815a42e9cd10a76a1f3351d73d8a649afb94f51109b62489c05ed010f325ab",
                    "sha256:a15d7590d0e275524c6bd6edc4c8e0ed65208821427af46644978233c9d9654b",
                    "sha256:5aa338e2b3bc1722ee86eccde65412d01ac417b60bfa6ce4cbcc3273613f15f7",
                    "sha256:60403c04de1d700fc4f4449a31d73745716f64181a7b6dfda57d4b22e2fb16e8",
                    "sha256:3576b36e88429185eb5a507f60c65b871b2ce5b263a4395db9668973ed077395",
                    "sha256:20df56768f5d1628db63e451f6156731491f22c244a3b921f211c08e1ec44e85",
                    "sha256:2e138f08b92840d894a75c8f5e044337db709d19d5118b1e561a905af5c28ccb",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:9beb63e23fc6b82887b6e3924d54f991a4c0900cf1ec331fa887646d1555c398",
                    "sha256:7fe9105a7596a0978b40325f80fa0bf74cb77e0d17d3c3a800cbb9e89ee8c251",
                    "sha256:4f94447799343fd9bdd5aabd187de87faa13cb4e98e695490ada31547f34924f"
                ]
            }
        },
        "38-build-20230829": {
            "architecture": "amd64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f38container",
                    "FGC=f38",
                    "FBR=f38",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "amd64",
                    "io.balena.device-type": "intel-nuc",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2023-09-02T04:25:43.899038577Z",
            "history": [
                {
                    "created": "2021-04-01T17:59:37.09884046Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T20:41:02.790840917Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f38container FGC=f38 FBR=f38",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-04T18:22:55.330992588Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:0ab93a3201ace45c039c7e7bad9808c9010f7a67de777fac6f141c98c9bbf73c in / "
                },
                {
                    "created": "2023-08-04T18:22:56.009697173Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-02T04:01:00.7526166Z",
                    "created_by": "LABEL io.balena.architecture=amd64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-02T04:01:00.7526166Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T04:03:39.24764376Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-clients \t\tsubversion \t\tautoconf \t\tautomake \t\tbzip2-devel \t\tglib2-devel \t\tgcc \t\tgcc-c++ \t\tImageMagick \t\tImageMagick-devel \t\tkernel-devel \t\tlibcurl-devel \t\tlibevent-devel \t\tlibffi-devel \t\tlibjpeg-devel \t\tlibsqlite3x-devel \t\tlibxml2-devel \t\tlibxslt-devel \t\tlibyaml-devel \t\tmysql-devel \t\tmake \t\tncurses-devel \t\topenssl-devel \t\tpostgresql-devel \t\treadline-devel \t\tsqlite-devel \t\tzlib-devel \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T04:03:40.02702939Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T04:03:40.02702939Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-02T04:03:40.046857361Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T04:03:40.073587197Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T04:03:40.159170331Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T04:03:40.159170331Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-02T04:03:40.45019105Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 38   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T04:03:40.673721265Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: Intel 64-bit (x86-64) \\nOS: Fedora 38 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T04:25:43.557969593Z",
                    "created_by": "LABEL io.balena.device-type=intel-nuc",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-02T04:25:43.557969593Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T04:25:43.899038577Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: Intel 64-bit (x86-64) \\nOS: Fedora 38 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:b8815a42e9cd10a76a1f3351d73d8a649afb94f51109b62489c05ed010f325ab",
                    "sha256:343693ea658285c7ae201746bca6357b92d558d04c0edbbd55f6917028663e72",
                    "sha256:9dd3671a990ffa4d6c6a8eceddf957ac9b8b70c926e61b34324453032348506a",
                    "sha256:d7ca6b82331b1a2f4e7c1a4ccc111a3654b7cfba5a432c7a39910bfc287cfb6f",
                    "sha256:40f5de29b6afe41a35c4717ba666de83c00898840e48ae16d10e6fcb84f1654e",
                    "sha256:4d1760d54cf854a965436b5350f866de8bd370a804fc4e6a67e3a08db3147afa",
                    "sha256:554dd06626ae4a99a2032c5d9281f2f59aa58dac29a2ff4ebf71da43877faaac",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:95a563ca4c1843f904ada6424e864a9969395f646cc519b6a5bcb715690b11f4",
                    "sha256:db247517ee28703afc4e86f9d3b8a7b85aa12207d1aa026b86543a51fbb040d1",
                    "sha256:082e2106b3d4a77cb5f4f8ebaa0aded82ef9c1e4a6c24037554e9d052aa22427"
                ]
            }
        },
        "38-build-20230904": {
            "architecture": "amd64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f38container",
                    "FGC=f38",
                    "FBR=f38",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "amd64",
                    "io.balena.device-type": "intel-nuc",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2023-09-09T04:19:15.765212125Z",
            "history": [
                {
                    "created": "2021-04-01T17:59:37.09884046Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T20:41:02.790840917Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f38container FGC=f38 FBR=f38",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-04T18:22:55.330992588Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:0ab93a3201ace45c039c7e7bad9808c9010f7a67de777fac6f141c98c9bbf73c in / "
                },
                {
                    "created": "2023-08-04T18:22:56.009697173Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T03:54:59.649272086Z",
                    "created_by": "LABEL io.balena.architecture=amd64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T03:54:59.649272086Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T03:57:18.1368572Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-clients \t\tsubversion \t\tautoconf \t\tautomake \t\tbzip2-devel \t\tglib2-devel \t\tgcc \t\tgcc-c++ \t\tImageMagick \t\tImageMagick-devel \t\tkernel-devel \t\tlibcurl-devel \t\tlibevent-devel \t\tlibffi-devel \t\tlibjpeg-devel \t\tlibsqlite3x-devel \t\tlibxml2-devel \t\tlibxslt-devel \t\tlibyaml-devel \t\tmysql-devel \t\tmake \t\tncurses-devel \t\topenssl-devel \t\tpostgresql-devel \t\treadline-devel \t\tsqlite-devel \t\tzlib-devel \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T03:57:18.533713783Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T03:57:18.533713783Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T03:57:18.54873553Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T03:57:18.586727502Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T03:57:18.599152223Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T03:57:18.599152223Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T03:57:18.879274364Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 38   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T03:57:19.128833406Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: Intel 64-bit (x86-64) \\nOS: Fedora 38 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:19:15.559082071Z",
                    "created_by": "LABEL io.balena.device-type=intel-nuc",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T04:19:15.559082071Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:19:15.765212125Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: Intel 64-bit (x86-64) \\nOS: Fedora 38 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:b8815a42e9cd10a76a1f3351d73d8a649afb94f51109b62489c05ed010f325ab",
                    "sha256:512b1fa12255ef8a5153d9b19b88cc713b7120b2f3550d4ec1dc062afd1f47d2",
                    "sha256:bfe0451c24c49aead010b71a50348162669f4343fde3b8f9110ffeb331e878e1",
                    "sha256:970ac16bb760e854aa69bbd06e6b56701513ec0966bf276668fffef6053c76b8",
                    "sha256:881566206db9447acdc7da018cc1f10a1a4a427fd7dcb57626f9f8e4af922993",
                    "sha256:a5adaa79b16d98583d7e15dbe067aab36dbac8e84abff179a3fa6ec66ed8feb5",
                    "sha256:e5cc2456696118c51f4b60c5a5f65248a02bddc3d19e2673b025b8a826faf21f",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:c2756b9ba81f06847cb70f76f4bfb455e02a27509973694895c2c14de7b1e884",
                    "sha256:894aaf9b6dcba7b0db6ba2e33a88330b81fc0d4b39ee001e9c106a8ede3428f6",
                    "sha256:67f7c47bfc056b3dd7da1583c6137a2a4499eabc961ff2b4e5985a803f303645"
                ]
            }
        },
        "38-build-20230911": {
            "architecture": "amd64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f38container",
                    "FGC=f38",
                    "FBR=f38",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "amd64",
                    "io.balena.device-type": "odyssey-x86",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2023-09-11T23:03:37.340512062Z",
            "history": [
                {
                    "created": "2021-04-01T17:59:37.09884046Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T20:41:02.790840917Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f38container FGC=f38 FBR=f38",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-04T18:22:55.330992588Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:0ab93a3201ace45c039c7e7bad9808c9010f7a67de777fac6f141c98c9bbf73c in / "
                },
                {
                    "created": "2023-08-04T18:22:56.009697173Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T03:54:59.649272086Z",
                    "created_by": "LABEL io.balena.architecture=amd64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T03:54:59.649272086Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T03:57:18.1368572Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-clients \t\tsubversion \t\tautoconf \t\tautomake \t\tbzip2-devel \t\tglib2-devel \t\tgcc \t\tgcc-c++ \t\tImageMagick \t\tImageMagick-devel \t\tkernel-devel \t\tlibcurl-devel \t\tlibevent-devel \t\tlibffi-devel \t\tlibjpeg-devel \t\tlibsqlite3x-devel \t\tlibxml2-devel \t\tlibxslt-devel \t\tlibyaml-devel \t\tmysql-devel \t\tmake \t\tncurses-devel \t\topenssl-devel \t\tpostgresql-devel \t\treadline-devel \t\tsqlite-devel \t\tzlib-devel \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T03:57:18.533713783Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T03:57:18.533713783Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T03:57:18.54873553Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T03:57:18.586727502Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T03:57:18.599152223Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T03:57:18.599152223Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T03:57:18.879274364Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 38   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T03:57:19.128833406Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: Intel 64-bit (x86-64) \\nOS: Fedora 38 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-11T23:03:37.275165677Z",
                    "created_by": "LABEL io.balena.device-type=odyssey-x86",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-11T23:03:37.275165677Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-11T23:03:37.340512062Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: Intel 64-bit (x86-64) \\nOS: Fedora 38 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:b8815a42e9cd10a76a1f3351d73d8a649afb94f51109b62489c05ed010f325ab",
                    "sha256:512b1fa12255ef8a5153d9b19b88cc713b7120b2f3550d4ec1dc062afd1f47d2",
                    "sha256:bfe0451c24c49aead010b71a50348162669f4343fde3b8f9110ffeb331e878e1",
                    "sha256:970ac16bb760e854aa69bbd06e6b56701513ec0966bf276668fffef6053c76b8",
                    "sha256:881566206db9447acdc7da018cc1f10a1a4a427fd7dcb57626f9f8e4af922993",
                    "sha256:a5adaa79b16d98583d7e15dbe067aab36dbac8e84abff179a3fa6ec66ed8feb5",
                    "sha256:e5cc2456696118c51f4b60c5a5f65248a02bddc3d19e2673b025b8a826faf21f",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:c2756b9ba81f06847cb70f76f4bfb455e02a27509973694895c2c14de7b1e884",
                    "sha256:8c018f922ab7d9c0b4c7314f5334d6c61f36c5a76aaa996c0c0eed93fdbffa97",
                    "sha256:4d934c35a822878afa592137a0101d925be4692cf60ee330e621c6e3544e85ac"
                ]
            }
        },
        "38-build-20231103": {
            "architecture": "amd64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f38container",
                    "FGC=f38",
                    "FBR=f38",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "amd64",
                    "io.balena.device-type": "odyssey-x86",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2023-11-04T20:35:47.260312775Z",
            "history": [
                {
                    "created": "2021-04-01T17:59:37.09884046Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T20:41:02.790840917Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f38container FGC=f38 FBR=f38",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-06T18:22:41.971393632Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:86d740c804b04f47a13a75b739763fe4c07ec0072e3493e593c605eb86234d35 in / "
                },
                {
                    "created": "2023-10-06T18:22:42.634065896Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-04T20:25:26.29840949Z",
                    "created_by": "LABEL io.balena.architecture=amd64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-04T20:25:26.29840949Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T20:27:35.779089619Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-clients \t\tsubversion \t\tautoconf \t\tautomake \t\tbzip2-devel \t\tglib2-devel \t\tgcc \t\tgcc-c++ \t\tImageMagick \t\tImageMagick-devel \t\tkernel-devel \t\tlibcurl-devel \t\tlibevent-devel \t\tlibffi-devel \t\tlibjpeg-devel \t\tlibsqlite3x-devel \t\tlibxml2-devel \t\tlibxslt-devel \t\tlibyaml-devel \t\tmysql-devel \t\tmake \t\tncurses-devel \t\topenssl-devel \t\tpostgresql-devel \t\treadline-devel \t\tsqlite-devel \t\tzlib-devel \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T20:27:36.322311659Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T20:27:36.322311659Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-04T20:27:36.351729438Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T20:27:36.376815475Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T20:27:36.396614062Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T20:27:36.396614062Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-04T20:27:36.578646585Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 38   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T20:27:36.667719428Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: Intel 64-bit (x86-64) \\nOS: Fedora 38 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T20:35:47.168722216Z",
                    "created_by": "LABEL io.balena.device-type=odyssey-x86",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-04T20:35:47.168722216Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T20:35:47.260312775Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: Intel 64-bit (x86-64) \\nOS: Fedora 38 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:fdc6e90d218ce752383b418a061d823f1dd876cab4514aa86ca02811498f60f4",
                    "sha256:96ae277f5520f2a6679ede2f62c52f84a702e3833fb996eeaf75ed243e1a7e45",
                    "sha256:a8c78d92cd4ffd340d2c4d195fa3d13d1208f14f2fb2b0a5233fc503e0053335",
                    "sha256:e31055c78ffd6f2e3d6d6c227a97353948f6ddf675550e79e97810bc65c011ab",
                    "sha256:de8371b3c03ba55ba6004aa8e0e0e8df4c25a881191ed7fa6b96b7ee0146e708",
                    "sha256:a0e386a2d99b9872f0944f8377c747ee91c4cdcda0f2a1d6478387acdd3a11aa",
                    "sha256:958314bad76ee426fd1fecdfc69e0adeefd9ac0ec2252fd557ecf5d4cbf3f5d9",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:430a6d12a5cad311f95faff9f06a7448de69a301bfb5fe20996fce5e94dece46",
                    "sha256:881c534ff20c2b3a2f04ddf71c979e886aaf65106742ca8218dab328c8ffb2d3",
                    "sha256:d5f877c9c2c0d519e29fbcfd424c78f4da02c9fd88933ede84cc854702173642"
                ]
            }
        },
        "38-build-20231204": {
            "architecture": "amd64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f38container",
                    "FGC=f38",
                    "FBR=f38",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "amd64",
                    "io.balena.device-type": "odyssey-x86",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2023-12-06T18:39:45.39229005Z",
            "history": [
                {
                    "created": "2021-04-01T17:59:37.09884046Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T20:41:02.790840917Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f38container FGC=f38 FBR=f38",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-29T00:26:13.797270224Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:2c116a92c33f8f24e1105dcb11a8c9dfcc77aa807e67ce2d75796e743899d323 in / "
                },
                {
                    "created": "2023-11-29T00:26:14.452774572Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T17:56:10.24798772Z",
                    "created_by": "LABEL io.balena.architecture=amd64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T17:56:10.24798772Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T17:57:29.694670849Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-clients \t\tsubversion \t\tautoconf \t\tautomake \t\tbzip2-devel \t\tglib2-devel \t\tgcc \t\tgcc-c++ \t\tImageMagick \t\tImageMagick-devel \t\tkernel-devel \t\tlibcurl-devel \t\tlibevent-devel \t\tlibffi-devel \t\tlibjpeg-devel \t\tlibsqlite3x-devel \t\tlibxml2-devel \t\tlibxslt-devel \t\tlibyaml-devel \t\tmysql-devel \t\tmake \t\tncurses-devel \t\topenssl-devel \t\tpostgresql-devel \t\treadline-devel \t\tsqlite-devel \t\tzlib-devel \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T17:57:30.62972173Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T17:57:30.62972173Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T17:57:30.640370814Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T17:57:30.64888114Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T17:57:30.657971643Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T17:57:30.657971643Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T17:57:30.861999203Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 38   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T17:57:30.939224167Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: Intel 64-bit (x86-64) \\nOS: Fedora 38 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T18:39:45.31392506Z",
                    "created_by": "LABEL io.balena.device-type=odyssey-x86",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T18:39:45.31392506Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T18:39:45.39229005Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: Intel 64-bit (x86-64) \\nOS: Fedora 38 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:aa52139411d10d22d51011e4f33b6d7e587b6f953bd22d7caec914622d2bd838",
                    "sha256:f129c0ee7bd9588be4aa89d984da6506057c5a53532d6155bcaedebfe9b70319",
                    "sha256:b1e836746918e470f55977cd986cd98c63d4c9223aaada302c7b333be3a64d43",
                    "sha256:f65e525b5d0b182479d46cd0deb7da423f573279c2a88b43005a8789a9853268",
                    "sha256:789f00b005d681041b9eeb8ae249f4e31aa1e899079ce24b11c755e45e10f940",
                    "sha256:5af5dffd66333c4b721334834205f7849fc174ae1015c5ba6ead7beec16cc446",
                    "sha256:0728e087c0fe4771d0204471bb331c7239f0c10254778ea08c9c99378efd0563",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:d21cb56c7f0bf821fbffb7b2320c2f54c5b3c9aab9d27b042bfd73ceb551d3e5",
                    "sha256:5c07cdf41ab30959d855a8c4c3603ce5a9635d63169e6f656f74919407c40942",
                    "sha256:3ba5726614f7d30b4625e93b76d810b5957f2acfaf6efdf65a794774ba4c748f"
                ]
            }
        },
        "38-build-20240105": {
            "architecture": "amd64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f38container",
                    "FGC=f38",
                    "FBR=f38",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "amd64",
                    "io.balena.device-type": "odyssey-x86",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2024-01-05T14:10:07.561882922Z",
            "history": [
                {
                    "created": "2021-04-01T17:59:37.09884046Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T20:41:02.790840917Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f38container FGC=f38 FBR=f38",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-29T00:26:13.797270224Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:2c116a92c33f8f24e1105dcb11a8c9dfcc77aa807e67ce2d75796e743899d323 in / "
                },
                {
                    "created": "2023-11-29T00:26:14.452774572Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-05T13:59:59.429019519Z",
                    "created_by": "LABEL io.balena.architecture=amd64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-05T13:59:59.429019519Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-05T14:01:24.401936073Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-clients \t\tsubversion \t\tautoconf \t\tautomake \t\tbzip2-devel \t\tglib2-devel \t\tgcc \t\tgcc-c++ \t\tImageMagick \t\tImageMagick-devel \t\tkernel-devel \t\tlibcurl-devel \t\tlibevent-devel \t\tlibffi-devel \t\tlibjpeg-devel \t\tlibsqlite3x-devel \t\tlibxml2-devel \t\tlibxslt-devel \t\tlibyaml-devel \t\tmysql-devel \t\tmake \t\tncurses-devel \t\topenssl-devel \t\tpostgresql-devel \t\treadline-devel \t\tsqlite-devel \t\tzlib-devel \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-05T14:01:25.199648691Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-05T14:01:25.199648691Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-05T14:01:25.207956048Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-05T14:01:25.240428753Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-05T14:01:25.248578437Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-05T14:01:25.248578437Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-05T14:01:25.361569516Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 38   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-05T14:01:25.428550571Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: Intel 64-bit (x86-64) \\nOS: Fedora 38 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-05T14:10:07.497548038Z",
                    "created_by": "LABEL io.balena.device-type=odyssey-x86",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-05T14:10:07.497548038Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-05T14:10:07.561882922Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: Intel 64-bit (x86-64) \\nOS: Fedora 38 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:aa52139411d10d22d51011e4f33b6d7e587b6f953bd22d7caec914622d2bd838",
                    "sha256:0a5654bc169fe83d1dab654f14bf3f78f266cb1d9f3f6e25430c5c15812de3aa",
                    "sha256:6d6914dd1faca53403c399ad4f9db40f04b3a140c29239b97cf11fdf3a2e010e",
                    "sha256:8937a9f97dd762b9f6d241a06f98c4085a88e5f72cc3063d7ecd4f2efb268696",
                    "sha256:5ffdf90fa4bd995bc1309a649e80c7b0663a388832b63fc0bcd68aaa6fd41888",
                    "sha256:f58f1c240584845a5cc72103379d2aad287e9b518472c54f6bdcaf29d3186283",
                    "sha256:8b02a2719212d7657bfe0a6eb76485479863d95538bb9ebb5ad0318eb32d8ac6",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:f7a11bdcd12b0bd2b976f14ab1970ff95561431ffedcfb9b4c4d84edacbca069",
                    "sha256:d864380b35f42f17eaa9522fa0cf617e9eaff84c0d06e67c1a1ba12af0b7b55d",
                    "sha256:feed4f22d1a43d2f3f0623469f10281ee3dd406d75799e8b92024bdd3abbede4"
                ]
            }
        },
        "38-build-20240201": {
            "architecture": "amd64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f38container",
                    "FGC=f38",
                    "FBR=f38",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "amd64",
                    "io.balena.device-type": "odyssey-x86",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2024-02-03T22:44:04.993659733Z",
            "history": [
                {
                    "created": "2021-04-01T17:59:37.09884046Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T20:41:02.790840917Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f38container FGC=f38 FBR=f38",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-29T00:26:13.797270224Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:2c116a92c33f8f24e1105dcb11a8c9dfcc77aa807e67ce2d75796e743899d323 in / "
                },
                {
                    "created": "2023-11-29T00:26:14.452774572Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-03T22:35:37.641484489Z",
                    "created_by": "LABEL io.balena.architecture=amd64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-03T22:35:37.641484489Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-03T22:37:01.141234804Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-clients \t\tsubversion \t\tautoconf \t\tautomake \t\tbzip2-devel \t\tglib2-devel \t\tgcc \t\tgcc-c++ \t\tImageMagick \t\tImageMagick-devel \t\tkernel-devel \t\tlibcurl-devel \t\tlibevent-devel \t\tlibffi-devel \t\tlibjpeg-devel \t\tlibsqlite3x-devel \t\tlibxml2-devel \t\tlibxslt-devel \t\tlibyaml-devel \t\tmysql-devel \t\tmake \t\tncurses-devel \t\topenssl-devel \t\tpostgresql-devel \t\treadline-devel \t\tsqlite-devel \t\tzlib-devel \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-03T22:37:02.071273319Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-03T22:37:02.071273319Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-03T22:37:02.080165265Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-03T22:37:02.113687707Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-03T22:37:02.123096806Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-03T22:37:02.123096806Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-03T22:37:02.371232989Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 38   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-03T22:37:02.429057593Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: Intel 64-bit (x86-64) \\nOS: Fedora 38 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-03T22:44:04.92435092Z",
                    "created_by": "LABEL io.balena.device-type=odyssey-x86",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-03T22:44:04.92435092Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-03T22:44:04.993659733Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: Intel 64-bit (x86-64) \\nOS: Fedora 38 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:aa52139411d10d22d51011e4f33b6d7e587b6f953bd22d7caec914622d2bd838",
                    "sha256:d08557285b814f7c6e7eb95dcff06c2090c02d51d7254b25807b6b2637ed50b6",
                    "sha256:da7ad5138cfdc1cb4e177f67d7d8d75ff9acdca7db2c4c40a0213100e04a09f5",
                    "sha256:5e322f4fe79b910d53c5687e5dcf05b50750c86be8bb381580d7476146f02213",
                    "sha256:a35ecdc1ed3173aad9b64547a3e9956730b0d5cf059e0f09bf13cc3d9edea3c3",
                    "sha256:a6e4f3aa4af2b76fcf5961c2252d34214c53a9d702b2cdf3b5b8f52df6288599",
                    "sha256:fead2cd0eb544d800cb9b202f792ba9ba290d06304de72277064a49545a97fcf",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:154965b8db9a2467f5c31500021916be375696132039607c60e9d9c85a74d850",
                    "sha256:4ee6eb697c318629c6e8954ebea89bbb2638a8a7839596ebb42d8cd384a16419",
                    "sha256:16bdf28242800cf49ba00bb8621d9be2821c08b8640d83927bef0bd98589f4ae"
                ]
            }
        },
        "38-build-20240304": {
            "architecture": "amd64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f38container",
                    "FGC=f38",
                    "FBR=f38",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "amd64",
                    "io.balena.device-type": "odyssey-x86",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2024-03-05T18:52:23.025542949Z",
            "history": [
                {
                    "created": "2021-04-01T17:59:37.09884046Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T20:41:02.790840917Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f38container FGC=f38 FBR=f38",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-20T23:20:52.364023738Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:b7b87f9fa75ef4767a5910c18d86a631edf96a6657af1fb6e0ab5c5c7aa98d8f in / "
                },
                {
                    "created": "2024-02-20T23:20:53.239282645Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T18:33:27.89159046Z",
                    "created_by": "LABEL io.balena.architecture=amd64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T18:33:27.89159046Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T18:40:15.185961406Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-clients \t\tsubversion \t\tautoconf \t\tautomake \t\tbzip2-devel \t\tglib2-devel \t\tgcc \t\tgcc-c++ \t\tImageMagick \t\tImageMagick-devel \t\tkernel-devel \t\tlibcurl-devel \t\tlibevent-devel \t\tlibffi-devel \t\tlibjpeg-devel \t\tlibsqlite3x-devel \t\tlibxml2-devel \t\tlibxslt-devel \t\tlibyaml-devel \t\tmysql-devel \t\tmake \t\tncurses-devel \t\topenssl-devel \t\tpostgresql-devel \t\treadline-devel \t\tsqlite-devel \t\tzlib-devel \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T18:40:16.092339062Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T18:40:16.092339062Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T18:40:16.101580982Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T18:40:16.133574391Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T18:40:16.143427537Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T18:40:16.143427537Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T18:40:16.401162994Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 38   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T18:40:16.477292314Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: Intel 64-bit (x86-64) \\nOS: Fedora 38 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T18:52:22.966723995Z",
                    "created_by": "LABEL io.balena.device-type=odyssey-x86",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T18:52:22.966723995Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T18:52:23.025542949Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: Intel 64-bit (x86-64) \\nOS: Fedora 38 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:79be4bbc583c9e736bf4ba99236381a084e512b5b2a9d5e10abe41a34fc65078",
                    "sha256:f88c447060e347ed70273d648098034a218b9cbdd6e371d36956b4c748f67c72",
                    "sha256:b4a1c2435070514461bf0197307bdbf8f2a1ce31ea550833c0f83a89a0ddb7e7",
                    "sha256:d5c1c591ad2eb5152c9ac5dad6c7a6801bbec6c3872b2a38e89dfc23ae68d3c5",
                    "sha256:cbd6a6fcf9b550e6a058e5a2e0947ec069e2749b246b077d0ddccc8de1585f8f",
                    "sha256:93a32e56a4a20467dee986c4eee625505e8414cf09213e53d00cbf8b768df6cb",
                    "sha256:be31460852136829216c6b85fd126e93a4d06ad74863371ac82c757067d4bc4e",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:e4c34c48c0a99316eece03c363eac25b2874404f0963b9fe28328b3fd6446fa1",
                    "sha256:1c084c0a344ff695435388597d4d005ea833192bd0dda3636b710c50e4886b6b",
                    "sha256:fadd70e4703ee6c4f829445c187f743c5bf0cf4f1c1134c6af5238923bfcfca1"
                ]
            }
        },
        "38-build-20240401": {
            "architecture": "amd64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f38container",
                    "FGC=f38",
                    "FBR=f38",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "amd64",
                    "io.balena.device-type": "odyssey-x86",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                }
            },
            "created": "2024-04-02T02:40:15.731969161Z",
            "history": [
                {
                    "created": "2021-04-01T17:59:37.09884046Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T20:41:02.790840917Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f38container FGC=f38 FBR=f38",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-20T23:20:52.364023738Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:b7b87f9fa75ef4767a5910c18d86a631edf96a6657af1fb6e0ab5c5c7aa98d8f in / "
                },
                {
                    "created": "2024-02-20T23:20:53.239282645Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T02:31:20.189595431Z",
                    "created_by": "LABEL io.balena.architecture=amd64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T02:31:20.189595431Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T02:33:03.17197532Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-clients \t\tsubversion \t\tautoconf \t\tautomake \t\tbzip2-devel \t\tglib2-devel \t\tgcc \t\tgcc-c++ \t\tImageMagick \t\tImageMagick-devel \t\tkernel-devel \t\tlibcurl-devel \t\tlibevent-devel \t\tlibffi-devel \t\tlibjpeg-devel \t\tlibsqlite3x-devel \t\tlibxml2-devel \t\tlibxslt-devel \t\tlibyaml-devel \t\tmysql-devel \t\tmake \t\tncurses-devel \t\topenssl-devel \t\tpostgresql-devel \t\treadline-devel \t\tsqlite-devel \t\tzlib-devel \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T02:33:03.736385574Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T02:33:03.736385574Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T02:33:03.745901901Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T02:33:03.781337892Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T02:33:03.789352362Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T02:33:03.789352362Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T02:33:03.895633268Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 38   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T02:33:03.95415187Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: Intel 64-bit (x86-64) \\nOS: Fedora 38 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T02:40:15.668449916Z",
                    "created_by": "LABEL io.balena.device-type=odyssey-x86",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T02:40:15.668449916Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T02:40:15.731969161Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: Intel 64-bit (x86-64) \\nOS: Fedora 38 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:79be4bbc583c9e736bf4ba99236381a084e512b5b2a9d5e10abe41a34fc65078",
                    "sha256:20dd8fce2348c08a63a0b24e783dbccfccccfd03fca0fb4873827f6c323af973",
                    "sha256:4215205bb151414e02d29e17d7f8deae1de05145e651d8be8965293c50961fe2",
                    "sha256:ed2cac75f074eb506869d876303819c0b147219edfda0d2dc1b632d19f59670d",
                    "sha256:2a9296f493b6e97b3e646cf81e46534363b359263b3c8c1cb34bc3fbb0f549bf",
                    "sha256:76efb995219501e7951adac76a949bcc91be9b3b2ec21998ecfebbeff7f0c72e",
                    "sha256:edeaf69f71b2da68127f22aa2a958cbac66bad10b7f28b08c93b224492031322",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:1ebf3c15fd256c354087275659191cb00fd74211060112ff93186696517cf44d",
                    "sha256:2e6936e0cdde1d4779a97c526f30abc4093c7eb36c00e959dc01b44eb682750b",
                    "sha256:4bc1728af9a8059dc45eac1cfd65e667e3334b40cf31ec95553b04709e52e1da"
                ]
            }
        },
        "38-build-20240408": {
            "architecture": "amd64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f38container",
                    "FGC=f38",
                    "FBR=f38",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "amd64",
                    "io.balena.device-type": "odyssey-x86",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                }
            },
            "created": "2024-04-09T13:46:14.503696324Z",
            "history": [
                {
                    "created": "2021-04-01T17:59:37.09884046Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T20:41:02.790840917Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f38container FGC=f38 FBR=f38",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-20T23:20:52.364023738Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:b7b87f9fa75ef4767a5910c18d86a631edf96a6657af1fb6e0ab5c5c7aa98d8f in / "
                },
                {
                    "created": "2024-02-20T23:20:53.239282645Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:35:20.182996652Z",
                    "created_by": "LABEL io.balena.architecture=amd64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:35:20.182996652Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:36:42.193036246Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-clients \t\tsubversion \t\tautoconf \t\tautomake \t\tbzip2-devel \t\tglib2-devel \t\tgcc \t\tgcc-c++ \t\tImageMagick \t\tImageMagick-devel \t\tkernel-devel \t\tlibcurl-devel \t\tlibevent-devel \t\tlibffi-devel \t\tlibjpeg-devel \t\tlibsqlite3x-devel \t\tlibxml2-devel \t\tlibxslt-devel \t\tlibyaml-devel \t\tmysql-devel \t\tmake \t\tncurses-devel \t\topenssl-devel \t\tpostgresql-devel \t\treadline-devel \t\tsqlite-devel \t\tzlib-devel \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:36:42.663024947Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:36:42.663024947Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:36:42.675807251Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:36:42.871830234Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:36:42.905529543Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:36:42.905529543Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:36:43.027693517Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 38   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:36:43.095257949Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: Intel 64-bit (x86-64) \\nOS: Fedora 38 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:46:14.440617835Z",
                    "created_by": "LABEL io.balena.device-type=odyssey-x86",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:46:14.440617835Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:46:14.503696324Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: Intel 64-bit (x86-64) \\nOS: Fedora 38 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:79be4bbc583c9e736bf4ba99236381a084e512b5b2a9d5e10abe41a34fc65078",
                    "sha256:90fc6387f685e299ece70047fd8683316097e1a35ea777156859dc982bcddd7d",
                    "sha256:aecab473733ecbc01fee0e43139fa2fd173103cdcc1c8a381f648ca041377800",
                    "sha256:eed99babc948b12ec1a215c20761dc86a15cc4298a3363e4dc69564b03c5f770",
                    "sha256:6ac7f0fee72ce2a61a4da3b52a7e6a8afc5d24a9e74d78290212a27efee67b98",
                    "sha256:010f760abe5d4a4274fd82fff5cf3831ac5bbf2a2966896f79c981829ba6b87a",
                    "sha256:f9a8273493e631100e430ea295148cd1713b44d699ec554620ae92bc3c62c94a",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:6e1ea1d351a16adf5f2c8d8a951e39d0bc2d62e0617754d6c92cc9de28e38cfa",
                    "sha256:a9f2736a90e75c995758e00cf7059623bedcd3cd722962e5028b7d4edeef06f4",
                    "sha256:6ca7f46593193a89fdc7c09e95cc67ea15d994d5e31d8ec066d22e88fb0ea74c"
                ]
            }
        },
        "38-build-20240429": {
            "architecture": "amd64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f38container",
                    "FGC=f38",
                    "FBR=f38",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "amd64",
                    "io.balena.device-type": "odyssey-x86",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                }
            },
            "created": "2024-05-02T12:18:07.740796213Z",
            "history": [
                {
                    "created": "2021-04-01T17:59:37.09884046Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T20:41:02.790840917Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f38container FGC=f38 FBR=f38",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-22T18:25:57.210308321Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:55ad0d0dfdaa079e875e516a84579926c32c32f2872c0f1d93171026c2d70363 in / "
                },
                {
                    "created": "2024-04-22T18:25:57.747106388Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-02T12:11:07.073282537Z",
                    "created_by": "LABEL io.balena.architecture=amd64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-02T12:11:07.073282537Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T12:12:31.76188619Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-clients \t\tsubversion \t\tautoconf \t\tautomake \t\tbzip2-devel \t\tglib2-devel \t\tgcc \t\tgcc-c++ \t\tImageMagick \t\tImageMagick-devel \t\tkernel-devel \t\tlibcurl-devel \t\tlibevent-devel \t\tlibffi-devel \t\tlibjpeg-devel \t\tlibsqlite3x-devel \t\tlibxml2-devel \t\tlibxslt-devel \t\tlibyaml-devel \t\tmysql-devel \t\tmake \t\tncurses-devel \t\topenssl-devel \t\tpostgresql-devel \t\treadline-devel \t\tsqlite-devel \t\tzlib-devel \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T12:12:32.223183634Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T12:12:32.223183634Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-02T12:12:32.233735282Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T12:12:32.264260796Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T12:12:32.2750742Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T12:12:32.2750742Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-02T12:12:32.392117983Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 38   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T12:12:32.456121416Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: Intel 64-bit (x86-64) \\nOS: Fedora 38 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T12:18:07.680666128Z",
                    "created_by": "LABEL io.balena.device-type=odyssey-x86",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-02T12:18:07.680666128Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T12:18:07.740796213Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: Intel 64-bit (x86-64) \\nOS: Fedora 38 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:6fe0a25272d5935a0eb252bd54023bac5967553a8fd2b339c04d3239b5cc6287",
                    "sha256:c4ea37e61c02eeeb10d7218e1c8e20ec33344ff492b8069b9ae3f38dbf1e9ecd",
                    "sha256:00a9ad0f9a51f128f44d86702d312cb9e6d8f06ae48413f1f233043062d5c19a",
                    "sha256:9a449a11d980335a2b020b304b3ad9eec740abffee1eb39ac2fa6425ba86a75b",
                    "sha256:7ce2e02f662a3334d7a5ae2981c7ee6a6d3ae543763e02051e0640e38a73119d",
                    "sha256:f81e6fdbe4101a92250a70db7803a75649dd7586ca53ef7df7e83c6a39853c7f",
                    "sha256:1f4349bf3a794cd68073c0a5b5b13249a3cf549e65137f91e07a7918beb34797",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:22bbc5a38b7ee2b4e20f74d0d00548b6def3950237d7334c32481fee54e63bd6",
                    "sha256:6b4bb6a91c4975f2aff3734150f63cd3a211693017cfe939a67d2bb262f70e4d",
                    "sha256:e2993e1eecb9ad0e13c5024030d6ae033778772020f83720d8301d9308b21225"
                ]
            }
        },
        "38-run": {
            "architecture": "amd64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f38container",
                    "FGC=f38",
                    "FBR=f38",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "amd64",
                    "io.balena.device-type": "odyssey-x86",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                }
            },
            "created": "2024-05-02T12:18:03.998922114Z",
            "history": [
                {
                    "created": "2021-04-01T17:59:37.09884046Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T20:41:02.790840917Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f38container FGC=f38 FBR=f38",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-22T18:25:57.210308321Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:55ad0d0dfdaa079e875e516a84579926c32c32f2872c0f1d93171026c2d70363 in / "
                },
                {
                    "created": "2024-04-22T18:25:57.747106388Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-02T12:11:12.475123291Z",
                    "created_by": "LABEL io.balena.architecture=amd64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-02T12:11:12.475123291Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T12:11:12.763036808Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T12:11:12.763036808Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-02T12:11:12.774563162Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T12:11:12.784672282Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T12:11:12.813077009Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T12:11:12.813077009Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-02T12:11:13.066910678Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 38   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T12:11:13.122621763Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: Intel 64-bit (x86-64) \\nOS: Fedora 38 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T12:18:03.932122872Z",
                    "created_by": "LABEL io.balena.device-type=odyssey-x86",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-02T12:18:03.932122872Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T12:18:03.998922114Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: Intel 64-bit (x86-64) \\nOS: Fedora 38 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:6fe0a25272d5935a0eb252bd54023bac5967553a8fd2b339c04d3239b5cc6287",
                    "sha256:a6c5b310aab21171a85d2706b74891ac140f5993c3018242bd2d2d3e94a6810c",
                    "sha256:fa7ff378cd7be45088eacc5a81c49ec8fec73bd0129250f9a4100a431f6b625d",
                    "sha256:5d12bbd54324020a9a712b23c2f9e0fef28402677b5e279595c68ccdcfb9f6fc",
                    "sha256:98eef63270e13ad62768ce43dce1c96aae68bc0752bd4390213d7fa6b4931f4a",
                    "sha256:de22a754d9d18bff74c2f4c2de3575cb4a6098c1f16cfa1a8f5c0ec267609523",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:582552034b29c24ad9764cea0410b1b759c1fc098034b602a1503799468bd02a",
                    "sha256:1f5f667c5f86ca126c39f60b7a2f2da71f3ef9129842bfcf8bebd28f6c13193c",
                    "sha256:9ea8b0c65f2f245e002a2f8ec31d5ba2de7623d01fcbea7e844124c2541ab550"
                ]
            }
        },
        "38-run-20230811": {
            "architecture": "amd64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f38container",
                    "FGC=f38",
                    "FBR=f38",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "amd64",
                    "io.balena.device-type": "intel-nuc",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2023-08-21T20:21:35.711188766Z",
            "history": [
                {
                    "created": "2021-04-01T17:59:37.09884046Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T20:41:02.790840917Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f38container FGC=f38 FBR=f38",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-04T18:22:55.330992588Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:0ab93a3201ace45c039c7e7bad9808c9010f7a67de777fac6f141c98c9bbf73c in / "
                },
                {
                    "created": "2023-08-04T18:22:56.009697173Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-21T19:56:35.594248281Z",
                    "created_by": "LABEL io.balena.architecture=amd64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-21T19:56:35.594248281Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-21T19:56:36.052907428Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-21T19:56:36.052907428Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-21T19:56:36.069738318Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-21T19:56:36.082914511Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-21T19:56:36.122967289Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-21T19:56:36.122967289Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-21T19:56:36.507596676Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 38   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-21T19:56:36.953097929Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: Intel 64-bit (x86-64) \\nOS: Fedora 38 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-21T20:21:35.321240756Z",
                    "created_by": "LABEL io.balena.device-type=intel-nuc",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-21T20:21:35.321240756Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-21T20:21:35.711188766Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: Intel 64-bit (x86-64) \\nOS: Fedora 38 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "moby.buildkit.buildinfo.v1": "eyJmcm9udGVuZCI6ImRvY2tlcmZpbGUudjAiLCJhdHRycyI6eyJmaWxlbmFtZSI6IkRvY2tlcmZpbGUifSwic291cmNlcyI6W3sidHlwZSI6ImRvY2tlci1pbWFnZSIsInJlZiI6ImRvY2tlci5pby9iYWxlbmFsaWIvYW1kNjQtZmVkb3JhOjM4LXJ1biIsInBpbiI6InNoYTI1Njo0ZjI1Mjg1ODNmNGFkYWEyZGMyMGE3ZjYzNmU3NjgwYjljY2M0NTIwZGVmNzBmMzZhM2E4YTIwNWI4OWRlMzgzIn1dfQ==",
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:b8815a42e9cd10a76a1f3351d73d8a649afb94f51109b62489c05ed010f325ab",
                    "sha256:a15d7590d0e275524c6bd6edc4c8e0ed65208821427af46644978233c9d9654b",
                    "sha256:2b973cab5fae08d01b4fe2b5c218421adfe8a325ae5e5c96cc255a338272ace0",
                    "sha256:8b3c220364ebf5e2dab1c41b4ec1879fa0ba6ffd0374f721d74bf4b5b85284f9",
                    "sha256:987b0ba928b67c696e42dfad1deecc3146613743adb1ec02a105dd6d1c414cb2",
                    "sha256:1e3179cc633f8307bac5260b2b7262d8eef80d88f77ad5fd77109bf761b6e912",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:7b436be353c2a9a011e18d698c32a9853805d4f4cb078f7b047d278bdb3bd5b0",
                    "sha256:b51d3c96967fc4d64e7f4c6dcf288c3a45835039b28765cd3d631302361ecea3",
                    "sha256:acaf8c436b0faab31950a8decbd100d752876919c83f119152e1652af1d582b6"
                ]
            }
        },
        "38-run-20230829": {
            "architecture": "amd64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f38container",
                    "FGC=f38",
                    "FBR=f38",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "amd64",
                    "io.balena.device-type": "intel-nuc",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2023-09-02T04:22:36.24437588Z",
            "history": [
                {
                    "created": "2021-04-01T17:59:37.09884046Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T20:41:02.790840917Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f38container FGC=f38 FBR=f38",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-04T18:22:55.330992588Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:0ab93a3201ace45c039c7e7bad9808c9010f7a67de777fac6f141c98c9bbf73c in / "
                },
                {
                    "created": "2023-08-04T18:22:56.009697173Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-02T04:01:00.7526166Z",
                    "created_by": "LABEL io.balena.architecture=amd64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-02T04:01:00.7526166Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T04:01:01.366573188Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T04:01:01.366573188Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-02T04:01:01.403945176Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T04:01:01.417013486Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T04:01:01.434619504Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T04:01:01.434619504Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-02T04:01:01.732831228Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 38   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T04:01:02.070842822Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: Intel 64-bit (x86-64) \\nOS: Fedora 38 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T04:22:35.879707002Z",
                    "created_by": "LABEL io.balena.device-type=intel-nuc",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-02T04:22:35.879707002Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T04:22:36.24437588Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: Intel 64-bit (x86-64) \\nOS: Fedora 38 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:b8815a42e9cd10a76a1f3351d73d8a649afb94f51109b62489c05ed010f325ab",
                    "sha256:343693ea658285c7ae201746bca6357b92d558d04c0edbbd55f6917028663e72",
                    "sha256:0599331d6ccd65d7cd246a6e3a089880ade08b2bb9bdf6069739472162b615bd",
                    "sha256:254e66a5c7e35f42e678dbb58efc1ad11d9baa5f2ad5758c0baabb00d5598cd8",
                    "sha256:5bd43ba567671e3fe1b947a935fb71e7dff3d0e465cb41c5f429db661c78ed4a",
                    "sha256:0ceb679692343e855352944cdcd7e8f1af5415ba663197ccdbae9a69326b02d4",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:0e269bd85e6663d04904b368beb8975c4220db545a4a53542ef05e69acb8e679",
                    "sha256:3e65e1adf5429282906c0870f57e13da937e8d005a1f1776bc081bf2d728cc22",
                    "sha256:f9d8c1ca66ec11e9de82cf6b4a17f90da28e758fc048f38cd42bfd3c8933c2f7"
                ]
            }
        },
        "38-run-20230904": {
            "architecture": "amd64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f38container",
                    "FGC=f38",
                    "FBR=f38",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "amd64",
                    "io.balena.device-type": "intel-nuc",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2023-09-09T04:21:21.416468881Z",
            "history": [
                {
                    "created": "2021-04-01T17:59:37.09884046Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T20:41:02.790840917Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f38container FGC=f38 FBR=f38",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-04T18:22:55.330992588Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:0ab93a3201ace45c039c7e7bad9808c9010f7a67de777fac6f141c98c9bbf73c in / "
                },
                {
                    "created": "2023-08-04T18:22:56.009697173Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T03:54:59.649272086Z",
                    "created_by": "LABEL io.balena.architecture=amd64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T03:54:59.649272086Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T03:54:59.958128546Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T03:54:59.958128546Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T03:54:59.9661178Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T03:54:59.976089166Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T03:55:00.035288561Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T03:55:00.035288561Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T03:55:00.309840392Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 38   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T03:55:00.515165762Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: Intel 64-bit (x86-64) \\nOS: Fedora 38 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:21:21.174912419Z",
                    "created_by": "LABEL io.balena.device-type=intel-nuc",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T04:21:21.174912419Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:21:21.416468881Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: Intel 64-bit (x86-64) \\nOS: Fedora 38 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:b8815a42e9cd10a76a1f3351d73d8a649afb94f51109b62489c05ed010f325ab",
                    "sha256:512b1fa12255ef8a5153d9b19b88cc713b7120b2f3550d4ec1dc062afd1f47d2",
                    "sha256:2e8f496f8e03419aed20389821e99bd53bfb46bf7ac403981093b70da4c096e0",
                    "sha256:fa6b9b70264ff0a91a26b0ee601e30d9c8f81a17a40435d051cc464eb206c656",
                    "sha256:cadf0582ee81b1febacf046b2fabc6de66e79ab3a0dbd52da795e5127c7d8838",
                    "sha256:c6b25614225f30274f08b1ee0007fa2017f7acfb994e33493ad35e32d1d6c4e3",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:29a93d16e0152c3ab3d4c4197be0d56afda077c65f8f910f4ea052780b14a774",
                    "sha256:0a0e0dd4c14ed39c0035ba2eade4de30ab87c7b539559e86bdd17ff08e8694fe",
                    "sha256:741672e8f9f446e3ece8a2c0ddd584a67968977cd0104905332f03b13aee1a7e"
                ]
            }
        },
        "38-run-20230911": {
            "architecture": "amd64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f38container",
                    "FGC=f38",
                    "FBR=f38",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "amd64",
                    "io.balena.device-type": "odyssey-x86",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2023-09-11T23:03:06.040453841Z",
            "history": [
                {
                    "created": "2021-04-01T17:59:37.09884046Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T20:41:02.790840917Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f38container FGC=f38 FBR=f38",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-04T18:22:55.330992588Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:0ab93a3201ace45c039c7e7bad9808c9010f7a67de777fac6f141c98c9bbf73c in / "
                },
                {
                    "created": "2023-08-04T18:22:56.009697173Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T03:54:59.649272086Z",
                    "created_by": "LABEL io.balena.architecture=amd64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T03:54:59.649272086Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T03:54:59.958128546Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T03:54:59.958128546Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T03:54:59.9661178Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T03:54:59.976089166Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T03:55:00.035288561Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T03:55:00.035288561Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T03:55:00.309840392Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 38   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T03:55:00.515165762Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: Intel 64-bit (x86-64) \\nOS: Fedora 38 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-11T23:03:05.992836781Z",
                    "created_by": "LABEL io.balena.device-type=odyssey-x86",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-11T23:03:05.992836781Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-11T23:03:06.040453841Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: Intel 64-bit (x86-64) \\nOS: Fedora 38 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:b8815a42e9cd10a76a1f3351d73d8a649afb94f51109b62489c05ed010f325ab",
                    "sha256:512b1fa12255ef8a5153d9b19b88cc713b7120b2f3550d4ec1dc062afd1f47d2",
                    "sha256:2e8f496f8e03419aed20389821e99bd53bfb46bf7ac403981093b70da4c096e0",
                    "sha256:fa6b9b70264ff0a91a26b0ee601e30d9c8f81a17a40435d051cc464eb206c656",
                    "sha256:cadf0582ee81b1febacf046b2fabc6de66e79ab3a0dbd52da795e5127c7d8838",
                    "sha256:c6b25614225f30274f08b1ee0007fa2017f7acfb994e33493ad35e32d1d6c4e3",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:29a93d16e0152c3ab3d4c4197be0d56afda077c65f8f910f4ea052780b14a774",
                    "sha256:882b931c9b9baa041237b0756a7079fa701e32fafb169ddf3cc1ba41bdd7a41b",
                    "sha256:41e8332a3ea092f3f637c2d4c2e0951d7e6555f97c4696f66faa412624d277e1"
                ]
            }
        },
        "38-run-20231103": {
            "architecture": "amd64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f38container",
                    "FGC=f38",
                    "FBR=f38",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "amd64",
                    "io.balena.device-type": "odyssey-x86",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2023-11-04T20:35:45.236983139Z",
            "history": [
                {
                    "created": "2021-04-01T17:59:37.09884046Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T20:41:02.790840917Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f38container FGC=f38 FBR=f38",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-06T18:22:41.971393632Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:86d740c804b04f47a13a75b739763fe4c07ec0072e3493e593c605eb86234d35 in / "
                },
                {
                    "created": "2023-10-06T18:22:42.634065896Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-04T20:24:54.243151401Z",
                    "created_by": "LABEL io.balena.architecture=amd64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-04T20:24:54.243151401Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T20:24:54.517641984Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T20:24:54.517641984Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-04T20:24:54.526121874Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T20:24:54.534314508Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T20:24:54.542869079Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T20:24:54.542869079Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-04T20:24:54.758892153Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 38   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T20:24:54.816795368Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: Intel 64-bit (x86-64) \\nOS: Fedora 38 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T20:35:45.165484934Z",
                    "created_by": "LABEL io.balena.device-type=odyssey-x86",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-04T20:35:45.165484934Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T20:35:45.236983139Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: Intel 64-bit (x86-64) \\nOS: Fedora 38 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:fdc6e90d218ce752383b418a061d823f1dd876cab4514aa86ca02811498f60f4",
                    "sha256:0d4411b6d5ef9ec016df88a6785f1cbb37fe6d3314d7b4bf5b3bedf7101f47c9",
                    "sha256:05bb42c4140e22b991980a58860cc5dc95021c51a2aa4e4424da51eb9b0f947e",
                    "sha256:7f5ce623e7c05f8e5c88bd2c7f26da4ec8bd0f545647f1bd67ac7d6bc4ef985a",
                    "sha256:40eab3572dcf42ce21cabf6102a057e0d6037ae805d7c7ad0c31d14efc518e25",
                    "sha256:2f5329a1e2e47a12ed2c90a6e7be526c301940a519511143da220c440d4a2c23",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:e0865face54d1a88fb671c46e6416dc6163c11d6b85cf34fc5104cdecaec120b",
                    "sha256:590fa16d8d32c52e27c227e7f909f37d4e411c95923f38190ea171d9005d9c62",
                    "sha256:3874462a597edeb30154b90a278d1722be735a100f71793e31d68e2a69b90496"
                ]
            }
        },
        "38-run-20231204": {
            "architecture": "amd64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f38container",
                    "FGC=f38",
                    "FBR=f38",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "amd64",
                    "io.balena.device-type": "odyssey-x86",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2023-12-06T18:39:37.882715698Z",
            "history": [
                {
                    "created": "2021-04-01T17:59:37.09884046Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T20:41:02.790840917Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f38container FGC=f38 FBR=f38",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-29T00:26:13.797270224Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:2c116a92c33f8f24e1105dcb11a8c9dfcc77aa807e67ce2d75796e743899d323 in / "
                },
                {
                    "created": "2023-11-29T00:26:14.452774572Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T17:56:43.475645904Z",
                    "created_by": "LABEL io.balena.architecture=amd64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T17:56:43.475645904Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T17:56:44.106159746Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T17:56:44.106159746Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T17:56:44.115213304Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T17:56:44.12347709Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T17:56:44.132454834Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T17:56:44.132454834Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T17:56:44.430332545Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 38   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T17:56:44.496034197Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: Intel 64-bit (x86-64) \\nOS: Fedora 38 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T18:39:37.796519644Z",
                    "created_by": "LABEL io.balena.device-type=odyssey-x86",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T18:39:37.796519644Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T18:39:37.882715698Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: Intel 64-bit (x86-64) \\nOS: Fedora 38 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:aa52139411d10d22d51011e4f33b6d7e587b6f953bd22d7caec914622d2bd838",
                    "sha256:7ac94cbef621fd74a9e89d7a0b64c28db80e91a14f863ef2f18a10ff45c14e7a",
                    "sha256:b1188f7afe8443c149d2844748951e97c9bb6b87c10adc06042706f2ea1fe39c",
                    "sha256:4df4e7564b1ef4231cd25b4698fdfcaf371f181ddcd9590393fc2d36ac3fe862",
                    "sha256:1a8f9fe4da7bde030e3861c6cf2852b1d6fa1c134e1c7e8866bf9cf5ef2373e5",
                    "sha256:893ae05e7c89ae9192f4685484b230fcd97d770cc84553972ebd933bce500910",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:520c5d915606f566c8afaeb4247c802013ccea5af07aac79064eb5f78a171b16",
                    "sha256:acd07ed7af8c1e0310c97c5665ab860be51bd6095c7b78e06fe5fe7a09ead65f",
                    "sha256:4c5a058dc955f6558db5aeae3f979ee13462d40996c8c369ee3b0e9570832451"
                ]
            }
        },
        "38-run-20240105": {
            "architecture": "amd64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f38container",
                    "FGC=f38",
                    "FBR=f38",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "amd64",
                    "io.balena.device-type": "odyssey-x86",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2024-01-05T14:09:49.745843359Z",
            "history": [
                {
                    "created": "2021-04-01T17:59:37.09884046Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T20:41:02.790840917Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f38container FGC=f38 FBR=f38",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-29T00:26:13.797270224Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:2c116a92c33f8f24e1105dcb11a8c9dfcc77aa807e67ce2d75796e743899d323 in / "
                },
                {
                    "created": "2023-11-29T00:26:14.452774572Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-05T14:00:04.40627495Z",
                    "created_by": "LABEL io.balena.architecture=amd64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-05T14:00:04.40627495Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-05T14:00:04.737902686Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-05T14:00:04.737902686Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-05T14:00:04.748863665Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-05T14:00:04.757048426Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-05T14:00:04.792804683Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-05T14:00:04.792804683Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-05T14:00:04.915471077Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 38   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-05T14:00:04.985957411Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: Intel 64-bit (x86-64) \\nOS: Fedora 38 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-05T14:09:49.687148301Z",
                    "created_by": "LABEL io.balena.device-type=odyssey-x86",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-05T14:09:49.687148301Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-05T14:09:49.745843359Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: Intel 64-bit (x86-64) \\nOS: Fedora 38 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:aa52139411d10d22d51011e4f33b6d7e587b6f953bd22d7caec914622d2bd838",
                    "sha256:df1d406cbfa5c4ab909efee23f16c1cafa61441a54ba08adc10fbaf2a5a86dd4",
                    "sha256:f30065dd8264ee31b6677f28b2df1be4f9ed06b83cee9595f4a36a96d66bc4d6",
                    "sha256:9e931401c6518e02cdaeaca572f1e726834e53d6f116512bb9631df6a5ee3324",
                    "sha256:188e45adb9476822fe4816cf4be37995088996d28c6f138161f84442c93c2c10",
                    "sha256:bf0c99075b6cbf41ea01bd1e816b90dcbd67b5165804d310f97be1838737f1f4",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:819395bf81cfceb5f44314da0e6c34ae0bf008e302cd5e1adb2aac11bbffced1",
                    "sha256:ab6e40d620dec47ebef3e334d1a616fa92a53f4fa429480361f5ddf451de137b",
                    "sha256:32a4267a5c5c686a2ef0bcd24cdfe01538f4ee32bd0d37cdf9f1be842f883d62"
                ]
            }
        },
        "38-run-20240201": {
            "architecture": "amd64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f38container",
                    "FGC=f38",
                    "FBR=f38",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "amd64",
                    "io.balena.device-type": "odyssey-x86",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2024-02-03T22:43:49.525974867Z",
            "history": [
                {
                    "created": "2021-04-01T17:59:37.09884046Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T20:41:02.790840917Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f38container FGC=f38 FBR=f38",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-29T00:26:13.797270224Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:2c116a92c33f8f24e1105dcb11a8c9dfcc77aa807e67ce2d75796e743899d323 in / "
                },
                {
                    "created": "2023-11-29T00:26:14.452774572Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-03T22:35:40.182717088Z",
                    "created_by": "LABEL io.balena.architecture=amd64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-03T22:35:40.182717088Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-03T22:35:40.538212094Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-03T22:35:40.538212094Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-03T22:35:40.548490608Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-03T22:35:40.588457466Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-03T22:35:40.612448071Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-03T22:35:40.612448071Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-03T22:35:40.729779677Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 38   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-03T22:35:40.785372847Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: Intel 64-bit (x86-64) \\nOS: Fedora 38 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-03T22:43:49.449256401Z",
                    "created_by": "LABEL io.balena.device-type=odyssey-x86",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-03T22:43:49.449256401Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-03T22:43:49.525974867Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: Intel 64-bit (x86-64) \\nOS: Fedora 38 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:aa52139411d10d22d51011e4f33b6d7e587b6f953bd22d7caec914622d2bd838",
                    "sha256:e9fb11562a52382b2be811cdd55dbb7cf7c4146e76b98ca228f4a7633bfc225e",
                    "sha256:cea884572d7cb2082b31867e4f5b7a3e5d1710a6a88f82b577f15ff3e9eccc69",
                    "sha256:2a0ee01d03cbf8d17285b4c351898b5496297561904173e4f2779b66043a84ed",
                    "sha256:6259cdba72d222c0126cf05adc55e699ac710d26b46e5fa5badb5be5c7320e7b",
                    "sha256:eb4f785437ec478463cd8c98a5d67dde1404f6f1622a5e0a46cec462fca0408d",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:d208a618ca6ebf8f5fe1f960c4f645d60ec760a2a0cd602b21386fdf6fee3505",
                    "sha256:557572d58401151d6314aeff64158ca99280677b17cb3f9e8aadb426691dca35",
                    "sha256:f91c0b370c003b9ace33172ad1fac6611626b62a4914fbc87f0755ea492b15b8"
                ]
            }
        },
        "38-run-20240304": {
            "architecture": "amd64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f38container",
                    "FGC=f38",
                    "FBR=f38",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "amd64",
                    "io.balena.device-type": "odyssey-x86",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2024-03-05T18:48:18.993295404Z",
            "history": [
                {
                    "created": "2021-04-01T17:59:37.09884046Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T20:41:02.790840917Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f38container FGC=f38 FBR=f38",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-20T23:20:52.364023738Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:b7b87f9fa75ef4767a5910c18d86a631edf96a6657af1fb6e0ab5c5c7aa98d8f in / "
                },
                {
                    "created": "2024-02-20T23:20:53.239282645Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T18:27:07.997341402Z",
                    "created_by": "LABEL io.balena.architecture=amd64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T18:27:07.997341402Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T18:27:08.27251229Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T18:27:08.27251229Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T18:27:08.283159951Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T18:27:08.323726989Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T18:27:08.334137232Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T18:27:08.334137232Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T18:27:08.545434999Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 38   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T18:27:08.607566633Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: Intel 64-bit (x86-64) \\nOS: Fedora 38 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T18:48:18.933664676Z",
                    "created_by": "LABEL io.balena.device-type=odyssey-x86",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T18:48:18.933664676Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T18:48:18.993295404Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: Intel 64-bit (x86-64) \\nOS: Fedora 38 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:79be4bbc583c9e736bf4ba99236381a084e512b5b2a9d5e10abe41a34fc65078",
                    "sha256:3128da9568e485b5841f4ec4f5c36135de198e7d13fd598a315df1510aaf262c",
                    "sha256:95ef269dbb0bf125fcb2ef2b3b9c13b459c06aa4a23a88e0c90f942766fab7b8",
                    "sha256:b86ea66c045b79f80323b56a80246bc635ad7ea415ecbf0f271f49f4f18b0054",
                    "sha256:1a2c98885aab2d89620a08743f9b4a187942afc5e123a479aaa0fd3cd36bbaee",
                    "sha256:471fff70b124a232ed7f22894852386e28f2ef497bb23699c478ea6c3866c393",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:7e4d57b6fe9ad06bdd85db67fe0f880435697fe28380b6275bd92b24eb97eaba",
                    "sha256:b9c6c8d45d16d949734a728707a4d77b3f2b131c4dc4b1b631ae587e162bc28d",
                    "sha256:e06285d8e0b285f37b49cff2645108bb8ffbd97b584c34b21d73f7e5b38201ca"
                ]
            }
        },
        "38-run-20240401": {
            "architecture": "amd64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f38container",
                    "FGC=f38",
                    "FBR=f38",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "amd64",
                    "io.balena.device-type": "odyssey-x86",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                }
            },
            "created": "2024-04-02T02:40:04.808192529Z",
            "history": [
                {
                    "created": "2021-04-01T17:59:37.09884046Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T20:41:02.790840917Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f38container FGC=f38 FBR=f38",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-20T23:20:52.364023738Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:b7b87f9fa75ef4767a5910c18d86a631edf96a6657af1fb6e0ab5c5c7aa98d8f in / "
                },
                {
                    "created": "2024-02-20T23:20:53.239282645Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T02:31:29.108819899Z",
                    "created_by": "LABEL io.balena.architecture=amd64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T02:31:29.108819899Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T02:31:29.728493677Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T02:31:29.728493677Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T02:31:29.736580663Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T02:31:29.78656631Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T02:31:29.794593582Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T02:31:29.794593582Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T02:31:30.069199425Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 38   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T02:31:30.154548711Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: Intel 64-bit (x86-64) \\nOS: Fedora 38 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T02:40:04.741023328Z",
                    "created_by": "LABEL io.balena.device-type=odyssey-x86",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T02:40:04.741023328Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T02:40:04.808192529Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: Intel 64-bit (x86-64) \\nOS: Fedora 38 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:79be4bbc583c9e736bf4ba99236381a084e512b5b2a9d5e10abe41a34fc65078",
                    "sha256:5c9d913579eacd5eadcd2cd3c0e80f7891ee07a5905cec2c54ac6e8fb4513c0f",
                    "sha256:13b7ec5d376a64a3d7376677f09b883d5ce875ddbba1967c504a33f9ddb89ef7",
                    "sha256:5b89d8652472bc4434ff0b492ed7ff048485731abe444c05fc7f734697f3673a",
                    "sha256:0f0338cb7f08a9525766470a1ff925ac86d156a16e839864fc1a4ac509e808f5",
                    "sha256:b54337e685d35bb93e09aef14b7439fcc8b77df4a80506d5417319d57168a534",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:f6d0ea781555056b4c02174c200b0e6510bf835a1b337fa1fe87c817dfbf451e",
                    "sha256:b3a8862e36a9958dbc3bcd254819ed675243bb863f7b03eee5b1b29c0e78cb55",
                    "sha256:6728d60d97b9526be0180aa5b58279f915a66078c576b261e0e568f418d86be8"
                ]
            }
        },
        "38-run-20240408": {
            "architecture": "amd64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f38container",
                    "FGC=f38",
                    "FBR=f38",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "amd64",
                    "io.balena.device-type": "odyssey-x86",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                }
            },
            "created": "2024-04-09T13:46:02.917693625Z",
            "history": [
                {
                    "created": "2021-04-01T17:59:37.09884046Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T20:41:02.790840917Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f38container FGC=f38 FBR=f38",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-20T23:20:52.364023738Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:b7b87f9fa75ef4767a5910c18d86a631edf96a6657af1fb6e0ab5c5c7aa98d8f in / "
                },
                {
                    "created": "2024-02-20T23:20:53.239282645Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:35:22.127806968Z",
                    "created_by": "LABEL io.balena.architecture=amd64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:35:22.127806968Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:35:22.328841693Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:35:22.328841693Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:35:22.342548597Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:35:22.373677031Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:35:22.384184591Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:35:22.384184591Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:35:22.48700534Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 38   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:35:22.550014065Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: Intel 64-bit (x86-64) \\nOS: Fedora 38 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:46:02.851050757Z",
                    "created_by": "LABEL io.balena.device-type=odyssey-x86",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:46:02.851050757Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:46:02.917693625Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: Intel 64-bit (x86-64) \\nOS: Fedora 38 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:79be4bbc583c9e736bf4ba99236381a084e512b5b2a9d5e10abe41a34fc65078",
                    "sha256:456e17f71cd6447285a196dbc6b947aed565378918b6f51884ec475526f7db65",
                    "sha256:afd78ace79dc2b67f9077930d6b5efedb156e3529bc426c3cc0955e47b7fccf4",
                    "sha256:b1481d65b8108651ba1575f5b256d3df15873906f171c8d0ed7bfabbf34bd03a",
                    "sha256:85af315d33c3e3fdb06b05dd41abbf43b927e9f6e402a481b369998e907183c4",
                    "sha256:5cd61b23e281132e2f3c9a394afdabedafa90bba30ae5f39a4e7f73eed2a2086",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:295caeb2292bf60aa82e17637bca2dd7764cc3cb9f713a8948792ae60ba9fd53",
                    "sha256:53dccbf818cda5cebefadb49537b245c3eb180ebf44539cf18800362486712c7",
                    "sha256:15a05e497926c98988a8eca3fb88de29d9a7aef1c5fa9bfabf84063c84c554dc"
                ]
            }
        },
        "38-run-20240429": {
            "architecture": "amd64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f38container",
                    "FGC=f38",
                    "FBR=f38",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "amd64",
                    "io.balena.device-type": "odyssey-x86",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                }
            },
            "created": "2024-05-02T12:18:03.998922114Z",
            "history": [
                {
                    "created": "2021-04-01T17:59:37.09884046Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T20:41:02.790840917Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f38container FGC=f38 FBR=f38",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-22T18:25:57.210308321Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:55ad0d0dfdaa079e875e516a84579926c32c32f2872c0f1d93171026c2d70363 in / "
                },
                {
                    "created": "2024-04-22T18:25:57.747106388Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-02T12:11:12.475123291Z",
                    "created_by": "LABEL io.balena.architecture=amd64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-02T12:11:12.475123291Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T12:11:12.763036808Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T12:11:12.763036808Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-02T12:11:12.774563162Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T12:11:12.784672282Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T12:11:12.813077009Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T12:11:12.813077009Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-02T12:11:13.066910678Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 38   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T12:11:13.122621763Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: Intel 64-bit (x86-64) \\nOS: Fedora 38 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T12:18:03.932122872Z",
                    "created_by": "LABEL io.balena.device-type=odyssey-x86",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-02T12:18:03.932122872Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T12:18:03.998922114Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: Intel 64-bit (x86-64) \\nOS: Fedora 38 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:6fe0a25272d5935a0eb252bd54023bac5967553a8fd2b339c04d3239b5cc6287",
                    "sha256:a6c5b310aab21171a85d2706b74891ac140f5993c3018242bd2d2d3e94a6810c",
                    "sha256:fa7ff378cd7be45088eacc5a81c49ec8fec73bd0129250f9a4100a431f6b625d",
                    "sha256:5d12bbd54324020a9a712b23c2f9e0fef28402677b5e279595c68ccdcfb9f6fc",
                    "sha256:98eef63270e13ad62768ce43dce1c96aae68bc0752bd4390213d7fa6b4931f4a",
                    "sha256:de22a754d9d18bff74c2f4c2de3575cb4a6098c1f16cfa1a8f5c0ec267609523",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:582552034b29c24ad9764cea0410b1b759c1fc098034b602a1503799468bd02a",
                    "sha256:1f5f667c5f86ca126c39f60b7a2f2da71f3ef9129842bfcf8bebd28f6c13193c",
                    "sha256:9ea8b0c65f2f245e002a2f8ec31d5ba2de7623d01fcbea7e844124c2541ab550"
                ]
            }
        },
        "build": {
            "architecture": "amd64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "amd64",
                    "io.balena.device-type": "odyssey-x86",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                }
            },
            "created": "2024-05-02T12:18:25.316859173Z",
            "history": [
                {
                    "created": "2021-04-01T17:59:37.09884046Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-20T10:46:14.111891363Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-29T00:26:01.517560423Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:533e3405b5c87c5a7239c02ef2d954b1072df5afeee2139a9e2dd133dd4612b6 in / "
                },
                {
                    "created": "2023-11-29T00:26:02.196411879Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-02T12:11:17.879557284Z",
                    "created_by": "LABEL io.balena.architecture=amd64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-02T12:11:17.879557284Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T12:12:42.641900869Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-clients \t\tsubversion \t\tautoconf \t\tautomake \t\tbzip2-devel \t\tglib2-devel \t\tgcc \t\tgcc-c++ \t\tImageMagick \t\tImageMagick-devel \t\tkernel-devel \t\tlibcurl-devel \t\tlibevent-devel \t\tlibffi-devel \t\tlibjpeg-devel \t\tlibsqlite3x-devel \t\tlibxml2-devel \t\tlibxslt-devel \t\tlibyaml-devel \t\tmysql-devel \t\tmake \t\tncurses-devel \t\topenssl-devel \t\tpostgresql-devel \t\treadline-devel \t\tsqlite-devel \t\tzlib-devel \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T12:12:43.102550992Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T12:12:43.102550992Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-02T12:12:43.113767499Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T12:12:43.152579927Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T12:12:43.164024901Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T12:12:43.164024901Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-02T12:12:43.287186632Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T12:12:43.340830362Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: Intel 64-bit (x86-64) \\nOS: Fedora 37 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T12:18:25.256627336Z",
                    "created_by": "LABEL io.balena.device-type=odyssey-x86",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-02T12:18:25.256627336Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T12:18:25.316859173Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: Intel 64-bit (x86-64) \\nOS: Fedora 37 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:e89a2dafe59a58dee0fcdc4620c1e36ef34357d92655da13e1f656c33031c0b5",
                    "sha256:69aca497cb556a67ac50c1b5a13b0b871991163be5ba5fe38edcba052f8101d7",
                    "sha256:c8e99a432af543f09f782a2ed7a06ebaf935caab86c88abcd86df364a0491feb",
                    "sha256:ea6031a54383b7350fe210e7be054eeeb58f56fc6ab91f80befca8c9f9dc23f9",
                    "sha256:c79ad587f89a7cf70aeb333fa90c49ebcdda05a9ad40d078fc2594db8b33808b",
                    "sha256:687a39c8eaf68f59b3a3ebb8d4f8e47c5e1c328640c7e6e5f79de9a12fdc4717",
                    "sha256:fd4f1a77214f560e5460e645895ace4494625265cce67f2fd9d252b37b953f54",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:7407744290b4667e01e846a53491363c6a6840d38aab7fb65b2e86bbf4404f53",
                    "sha256:4e25336ffc1cdcc59619d02ee439302775d8c82da08ce4ccb59eabd07daa4388",
                    "sha256:e767cf0c4419ff5f520564c8e8325256b271d87ad22f6a3d5a45fd89adde0f8e"
                ]
            }
        },
        "build-20230811": {
            "architecture": "amd64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "amd64",
                    "io.balena.device-type": "intel-nuc",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2023-08-21T20:11:27.550050185Z",
            "history": [
                {
                    "created": "2021-04-01T17:59:37.09884046Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-20T10:46:14.111891363Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-04T18:22:42.383186833Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:3242aba4f770b24f6433fa19e51c222acf5a33d2268b82c7ec43874258838970 in / "
                },
                {
                    "created": "2023-08-04T18:22:43.038358583Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-21T19:52:26.839667108Z",
                    "created_by": "LABEL io.balena.architecture=amd64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-21T19:52:26.839667108Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-21T19:54:22.723795157Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-clients \t\tsubversion \t\tautoconf \t\tautomake \t\tbzip2-devel \t\tglib2-devel \t\tgcc \t\tgcc-c++ \t\tImageMagick \t\tImageMagick-devel \t\tkernel-devel \t\tlibcurl-devel \t\tlibevent-devel \t\tlibffi-devel \t\tlibjpeg-devel \t\tlibsqlite3x-devel \t\tlibxml2-devel \t\tlibxslt-devel \t\tlibyaml-devel \t\tmysql-devel \t\tmake \t\tncurses-devel \t\topenssl-devel \t\tpostgresql-devel \t\treadline-devel \t\tsqlite-devel \t\tzlib-devel \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-21T19:54:23.176375965Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-21T19:54:23.176375965Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-21T19:54:23.201202355Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-21T19:54:23.23712854Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-21T19:54:23.26131333Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-21T19:54:23.26131333Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-21T19:54:23.59116069Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-21T19:54:24.022279917Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: Intel 64-bit (x86-64) \\nOS: Fedora 37 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-21T20:11:27.223774107Z",
                    "created_by": "LABEL io.balena.device-type=intel-nuc",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-21T20:11:27.223774107Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-21T20:11:27.550050185Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: Intel 64-bit (x86-64) \\nOS: Fedora 37 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "moby.buildkit.buildinfo.v1": "eyJmcm9udGVuZCI6ImRvY2tlcmZpbGUudjAiLCJhdHRycyI6eyJmaWxlbmFtZSI6IkRvY2tlcmZpbGUifSwic291cmNlcyI6W3sidHlwZSI6ImRvY2tlci1pbWFnZSIsInJlZiI6ImRvY2tlci5pby9iYWxlbmFsaWIvYW1kNjQtZmVkb3JhOjM3LWJ1aWxkIiwicGluIjoic2hhMjU2OmI4Y2EwZTFhMjI4MDg5NGIxYTAyYThkY2QzNGFlYWQxODZkOWUzZDc2ZGE5YmVmYzgzNWI5NGZkYjliOGIyMTAifV19",
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:8a5c91bcb42954a1d542cf1243b349f4d83fdd74d2ddc71ccaf63ffb7b661793",
                    "sha256:fca50d5c7997910a204bc6cee98bca6e25e11762221da2784c6d3645566f0ddb",
                    "sha256:4be64fe096297543948eb2a7c876c47d02169f28dabd65c560170e08bee966e3",
                    "sha256:65f4400ced043778df1b5bb4626f17a257df0ae35120bb423640d62c1439a3f1",
                    "sha256:caff34ccc40cdda8a68ae0297c4d151b5bbca631da25af2549911be90e1ef3c2",
                    "sha256:6ea724cdc64a0b9e240f959ba2d165ef41ff80d432f6f8d3975d3707c5e22f14",
                    "sha256:de27dc4d90a28555a851f898e8c56fc77d55e3376b6cc61599b7bb3d062d9b39",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:78279af2d98b856c7e3eb8299823042c3f04590533e3de29dd235f624bba1774",
                    "sha256:a0e3ac019abde8e14928fda2211c34a0f6e4eca60fc39a5e08bb7288edb1350e",
                    "sha256:154cc2927c1fbb4cd7aebd9217781a86dbc797ea500ffb63be07af775d0c3fc1"
                ]
            }
        },
        "build-20230829": {
            "architecture": "amd64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "amd64",
                    "io.balena.device-type": "intel-nuc",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2023-09-02T04:14:33.049284708Z",
            "history": [
                {
                    "created": "2021-04-01T17:59:37.09884046Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-20T10:46:14.111891363Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-04T18:22:42.383186833Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:3242aba4f770b24f6433fa19e51c222acf5a33d2268b82c7ec43874258838970 in / "
                },
                {
                    "created": "2023-08-04T18:22:43.038358583Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-02T03:53:27.833103705Z",
                    "created_by": "LABEL io.balena.architecture=amd64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-02T03:53:27.833103705Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T03:55:23.544595845Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-clients \t\tsubversion \t\tautoconf \t\tautomake \t\tbzip2-devel \t\tglib2-devel \t\tgcc \t\tgcc-c++ \t\tImageMagick \t\tImageMagick-devel \t\tkernel-devel \t\tlibcurl-devel \t\tlibevent-devel \t\tlibffi-devel \t\tlibjpeg-devel \t\tlibsqlite3x-devel \t\tlibxml2-devel \t\tlibxslt-devel \t\tlibyaml-devel \t\tmysql-devel \t\tmake \t\tncurses-devel \t\topenssl-devel \t\tpostgresql-devel \t\treadline-devel \t\tsqlite-devel \t\tzlib-devel \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T03:55:24.291233821Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T03:55:24.291233821Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-02T03:55:24.311293998Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T03:55:24.348070374Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T03:55:24.367347433Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T03:55:24.367347433Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-02T03:55:24.665994243Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T03:55:25.033334288Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: Intel 64-bit (x86-64) \\nOS: Fedora 37 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T04:14:32.699603066Z",
                    "created_by": "LABEL io.balena.device-type=intel-nuc",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-02T04:14:32.699603066Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T04:14:33.049284708Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: Intel 64-bit (x86-64) \\nOS: Fedora 37 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:8a5c91bcb42954a1d542cf1243b349f4d83fdd74d2ddc71ccaf63ffb7b661793",
                    "sha256:380419ecfa744daae3d1681c557d6abf8c91c0c5fc86a2969a8ed77e9709baa4",
                    "sha256:45d9048ef9e65fcf6e4da4efc96299d353e27eee9f5ef3defb10f8d7095c8c56",
                    "sha256:481891acae181c14fa3fbd6138eb51cd8d574c7faeea79ba665a1477c191fcfb",
                    "sha256:4d11897a6210b78d28e4a33da8b405a42a3c3199c12a9203c196ded7f32f7c52",
                    "sha256:fd6fa4324a5446fc6a9f74c9637c8bf8ef74cad16394e0b576fbf7f083bde078",
                    "sha256:e872cd9e8b19b0a1ff4c22e9d9aaa97fcb9e919dd67d71bba1a2af0bbcfde817",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:c8aa81fc5a0ef29028f81a3700d9082a8202fea749f9077ac965ebed986faaff",
                    "sha256:c4ab66bffa28eba1dec89fbbb24ccd52b50f992be76db3967939d588841caf70",
                    "sha256:f139f960ec8ad33a39863647b4acf956f04cbfc91403cc1f00a3ac7f9cf662c8"
                ]
            }
        },
        "build-20230904": {
            "architecture": "amd64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "amd64",
                    "io.balena.device-type": "intel-nuc",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2023-09-09T04:10:06.175134321Z",
            "history": [
                {
                    "created": "2021-04-01T17:59:37.09884046Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-20T10:46:14.111891363Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-04T18:22:42.383186833Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:3242aba4f770b24f6433fa19e51c222acf5a33d2268b82c7ec43874258838970 in / "
                },
                {
                    "created": "2023-08-04T18:22:43.038358583Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T03:59:08.044755432Z",
                    "created_by": "LABEL io.balena.architecture=amd64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T03:59:08.044755432Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:01:03.762699262Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-clients \t\tsubversion \t\tautoconf \t\tautomake \t\tbzip2-devel \t\tglib2-devel \t\tgcc \t\tgcc-c++ \t\tImageMagick \t\tImageMagick-devel \t\tkernel-devel \t\tlibcurl-devel \t\tlibevent-devel \t\tlibffi-devel \t\tlibjpeg-devel \t\tlibsqlite3x-devel \t\tlibxml2-devel \t\tlibxslt-devel \t\tlibyaml-devel \t\tmysql-devel \t\tmake \t\tncurses-devel \t\topenssl-devel \t\tpostgresql-devel \t\treadline-devel \t\tsqlite-devel \t\tzlib-devel \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:01:04.206597884Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:01:04.206597884Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T04:01:04.222130076Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:01:04.229575164Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:01:04.270324895Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:01:04.270324895Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T04:01:04.552952939Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:01:04.768119479Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: Intel 64-bit (x86-64) \\nOS: Fedora 37 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:10:05.847721624Z",
                    "created_by": "LABEL io.balena.device-type=intel-nuc",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T04:10:05.847721624Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:10:06.175134321Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: Intel 64-bit (x86-64) \\nOS: Fedora 37 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:8a5c91bcb42954a1d542cf1243b349f4d83fdd74d2ddc71ccaf63ffb7b661793",
                    "sha256:7e137976dd3d65e1b7be54fc9701bd78bf00b6ee978ad81280b8bd275035d3a7",
                    "sha256:d731929dc50e1508b3da4a251cc5fce79452b733659ea85ab3bde8f093af9bf5",
                    "sha256:4b3ff1f4636fe0d304548a3ccd700b1ecc4ba1ec39a6deb8da2d0dbc6c113c38",
                    "sha256:f2b6f5a3ccb64e90278fd1cc7a829d3a1605bee1feb2d70b74cf510874920ce9",
                    "sha256:57b8dcaca48985fd0a6f32974c3f7061ca0bd95e7cc5678332d353ca671d4f4d",
                    "sha256:12382a969406127893595f87e10aa73f289decb5c9faceafaa395c967f378bf1",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:a54198a4f6973b4d2f87e98c928f6e533cffb9e4735af1def0a82b564af8d056",
                    "sha256:79b19829481ccbe4a19e650ba36bd16d720c94e05d8032496bdd74911c809423",
                    "sha256:be5adffc9f6673871c251d385c74a582a6418370ec621ddd497c3c2575b9d025"
                ]
            }
        },
        "build-20230911": {
            "architecture": "amd64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "amd64",
                    "io.balena.device-type": "odyssey-x86",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2023-09-11T23:03:18.07533094Z",
            "history": [
                {
                    "created": "2021-04-01T17:59:37.09884046Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-20T10:46:14.111891363Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-04T18:22:42.383186833Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:3242aba4f770b24f6433fa19e51c222acf5a33d2268b82c7ec43874258838970 in / "
                },
                {
                    "created": "2023-08-04T18:22:43.038358583Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T03:59:08.044755432Z",
                    "created_by": "LABEL io.balena.architecture=amd64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T03:59:08.044755432Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:01:03.762699262Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-clients \t\tsubversion \t\tautoconf \t\tautomake \t\tbzip2-devel \t\tglib2-devel \t\tgcc \t\tgcc-c++ \t\tImageMagick \t\tImageMagick-devel \t\tkernel-devel \t\tlibcurl-devel \t\tlibevent-devel \t\tlibffi-devel \t\tlibjpeg-devel \t\tlibsqlite3x-devel \t\tlibxml2-devel \t\tlibxslt-devel \t\tlibyaml-devel \t\tmysql-devel \t\tmake \t\tncurses-devel \t\topenssl-devel \t\tpostgresql-devel \t\treadline-devel \t\tsqlite-devel \t\tzlib-devel \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:01:04.206597884Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:01:04.206597884Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T04:01:04.222130076Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:01:04.229575164Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:01:04.270324895Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:01:04.270324895Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T04:01:04.552952939Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:01:04.768119479Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: Intel 64-bit (x86-64) \\nOS: Fedora 37 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-11T23:03:18.023731172Z",
                    "created_by": "LABEL io.balena.device-type=odyssey-x86",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-11T23:03:18.023731172Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-11T23:03:18.07533094Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: Intel 64-bit (x86-64) \\nOS: Fedora 37 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:8a5c91bcb42954a1d542cf1243b349f4d83fdd74d2ddc71ccaf63ffb7b661793",
                    "sha256:7e137976dd3d65e1b7be54fc9701bd78bf00b6ee978ad81280b8bd275035d3a7",
                    "sha256:d731929dc50e1508b3da4a251cc5fce79452b733659ea85ab3bde8f093af9bf5",
                    "sha256:4b3ff1f4636fe0d304548a3ccd700b1ecc4ba1ec39a6deb8da2d0dbc6c113c38",
                    "sha256:f2b6f5a3ccb64e90278fd1cc7a829d3a1605bee1feb2d70b74cf510874920ce9",
                    "sha256:57b8dcaca48985fd0a6f32974c3f7061ca0bd95e7cc5678332d353ca671d4f4d",
                    "sha256:12382a969406127893595f87e10aa73f289decb5c9faceafaa395c967f378bf1",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:a54198a4f6973b4d2f87e98c928f6e533cffb9e4735af1def0a82b564af8d056",
                    "sha256:bb40f82ef3d173e295885cb7e546855f8c4d6e0389e290bbd759abeaa7fc35c2",
                    "sha256:52b09e99e8ef8c3d692b83f0f30eb481c911d97486c5511104564e4e2c74933c"
                ]
            }
        },
        "build-20231103": {
            "architecture": "amd64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "amd64",
                    "io.balena.device-type": "odyssey-x86",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2023-11-04T20:35:20.583832402Z",
            "history": [
                {
                    "created": "2021-04-01T17:59:37.09884046Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-20T10:46:14.111891363Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-06T18:22:29.551043544Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:395273c1903fb6b62f46bbf72259ef76c6eb16f475d22abd47b7633b2b77a847 in / "
                },
                {
                    "created": "2023-10-06T18:22:30.235678845Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-04T20:25:21.407334619Z",
                    "created_by": "LABEL io.balena.architecture=amd64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-04T20:25:21.407334619Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T20:27:17.892115039Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-clients \t\tsubversion \t\tautoconf \t\tautomake \t\tbzip2-devel \t\tglib2-devel \t\tgcc \t\tgcc-c++ \t\tImageMagick \t\tImageMagick-devel \t\tkernel-devel \t\tlibcurl-devel \t\tlibevent-devel \t\tlibffi-devel \t\tlibjpeg-devel \t\tlibsqlite3x-devel \t\tlibxml2-devel \t\tlibxslt-devel \t\tlibyaml-devel \t\tmysql-devel \t\tmake \t\tncurses-devel \t\topenssl-devel \t\tpostgresql-devel \t\treadline-devel \t\tsqlite-devel \t\tzlib-devel \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T20:27:18.439454634Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T20:27:18.439454634Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-04T20:27:18.454973368Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T20:27:18.470340301Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T20:27:18.487471539Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T20:27:18.487471539Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-04T20:27:18.680851861Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T20:27:18.773652164Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: Intel 64-bit (x86-64) \\nOS: Fedora 37 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T20:35:20.48410019Z",
                    "created_by": "LABEL io.balena.device-type=odyssey-x86",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-04T20:35:20.48410019Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T20:35:20.583832402Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: Intel 64-bit (x86-64) \\nOS: Fedora 37 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:9b5a2675a1f8f633773bcb6f6dbade49054173b4bfd1599e2bbe64e975812329",
                    "sha256:fcb6fe73c1ef90bf51dd605419a7631f779162e59e7f05ae3b53221df48a43d8",
                    "sha256:962746f70f1d6e5a3e3168d70e500e915bedb07d8152d62899a9da3e9c94e790",
                    "sha256:2862fc443800750ff8488291956b775afd75216be276cc511dda6bbf03d8de12",
                    "sha256:d01eadb15f6285e638745bc495d75bdb9182744f77f7ae8587545a05d7d566d5",
                    "sha256:c2e14895ce1e2f89fb1bce52cb26e6d6cb3c810559d5a38e9d54d9524c660cc2",
                    "sha256:fad82e414fb32cf2575eafc67ecf1cd732bf7e572cca9049c237b73f270708c2",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:7bcefa9d8f8292e9c0c82b19ebba1cb5a8e2c499fbe7adb3de47fbf5b81fc2a0",
                    "sha256:538899c8434243ecb6a760a03b6942cf5c621a5d8e9b828f726b27c9e82473a1",
                    "sha256:da72d708db0029f206e3d7febe246bfc173619448141b2fda9c91c27310bcbf9"
                ]
            }
        },
        "build-20231204": {
            "architecture": "amd64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "amd64",
                    "io.balena.device-type": "odyssey-x86",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2023-12-06T18:39:50.48066709Z",
            "history": [
                {
                    "created": "2021-04-01T17:59:37.09884046Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-20T10:46:14.111891363Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-29T00:26:01.517560423Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:533e3405b5c87c5a7239c02ef2d954b1072df5afeee2139a9e2dd133dd4612b6 in / "
                },
                {
                    "created": "2023-11-29T00:26:02.196411879Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T17:56:20.722691923Z",
                    "created_by": "LABEL io.balena.architecture=amd64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T17:56:20.722691923Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T17:57:56.524009334Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-clients \t\tsubversion \t\tautoconf \t\tautomake \t\tbzip2-devel \t\tglib2-devel \t\tgcc \t\tgcc-c++ \t\tImageMagick \t\tImageMagick-devel \t\tkernel-devel \t\tlibcurl-devel \t\tlibevent-devel \t\tlibffi-devel \t\tlibjpeg-devel \t\tlibsqlite3x-devel \t\tlibxml2-devel \t\tlibxslt-devel \t\tlibyaml-devel \t\tmysql-devel \t\tmake \t\tncurses-devel \t\topenssl-devel \t\tpostgresql-devel \t\treadline-devel \t\tsqlite-devel \t\tzlib-devel \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T17:57:57.379527234Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T17:57:57.379527234Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T17:57:57.389732057Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T17:57:57.423561452Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T17:57:57.433722035Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T17:57:57.433722035Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T17:57:57.545086844Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T17:57:57.602122598Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: Intel 64-bit (x86-64) \\nOS: Fedora 37 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T18:39:50.397682613Z",
                    "created_by": "LABEL io.balena.device-type=odyssey-x86",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T18:39:50.397682613Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T18:39:50.48066709Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: Intel 64-bit (x86-64) \\nOS: Fedora 37 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:e89a2dafe59a58dee0fcdc4620c1e36ef34357d92655da13e1f656c33031c0b5",
                    "sha256:3842ca05c6d6e63c2a499998a21f9e8fe0a8c5b17a196f1afa8c9b1d890237ef",
                    "sha256:6d1a5962fca1e170856c102276a8c2a0746037e047b15c07e3b05d0481f8cfc5",
                    "sha256:1e4c76b6157009b212c579ab2f6ff4beb320ea317783e890191e2ae5a236d56b",
                    "sha256:053fbadfb0bacdce1c5e0f950f6b186a8af7534a581ac45fb3086f5e116cb1e3",
                    "sha256:e774d478e2a8b593f281347cdc94a7bad960536f7d3e33618efc775213676c1e",
                    "sha256:033f50077f04b58e9bf1a8976908f2f4c4171040479df8cf0ece2274da1917f5",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:923da2b8a15a5b69f23ad282728f5163b99f449b783abab05b0e718e08cd322b",
                    "sha256:0e9d3865461f16cfbc44d5c8319fceffe05a448abd4373b584ed418691ced2fe",
                    "sha256:6e83982c719d46234ff40152425579247b6fe9722ed6c4f49c7d65d6c8e59dde"
                ]
            }
        },
        "build-20240105": {
            "architecture": "amd64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "amd64",
                    "io.balena.device-type": "odyssey-x86",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2024-01-05T14:10:06.297576096Z",
            "history": [
                {
                    "created": "2021-04-01T17:59:37.09884046Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-20T10:46:14.111891363Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-29T00:26:01.517560423Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:533e3405b5c87c5a7239c02ef2d954b1072df5afeee2139a9e2dd133dd4612b6 in / "
                },
                {
                    "created": "2023-11-29T00:26:02.196411879Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-05T13:59:49.214004522Z",
                    "created_by": "LABEL io.balena.architecture=amd64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-05T13:59:49.214004522Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-05T14:01:12.249688157Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-clients \t\tsubversion \t\tautoconf \t\tautomake \t\tbzip2-devel \t\tglib2-devel \t\tgcc \t\tgcc-c++ \t\tImageMagick \t\tImageMagick-devel \t\tkernel-devel \t\tlibcurl-devel \t\tlibevent-devel \t\tlibffi-devel \t\tlibjpeg-devel \t\tlibsqlite3x-devel \t\tlibxml2-devel \t\tlibxslt-devel \t\tlibyaml-devel \t\tmysql-devel \t\tmake \t\tncurses-devel \t\topenssl-devel \t\tpostgresql-devel \t\treadline-devel \t\tsqlite-devel \t\tzlib-devel \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-05T14:01:12.707158106Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-05T14:01:12.707158106Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-05T14:01:12.716964591Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-05T14:01:12.751264858Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-05T14:01:12.761390183Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-05T14:01:12.761390183Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-05T14:01:12.874874682Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-05T14:01:12.929920306Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: Intel 64-bit (x86-64) \\nOS: Fedora 37 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-05T14:10:06.229865491Z",
                    "created_by": "LABEL io.balena.device-type=odyssey-x86",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-05T14:10:06.229865491Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-05T14:10:06.297576096Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: Intel 64-bit (x86-64) \\nOS: Fedora 37 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:e89a2dafe59a58dee0fcdc4620c1e36ef34357d92655da13e1f656c33031c0b5",
                    "sha256:c2b0bfda8e0222fe49c405f41cdeb903bc8db94e7f545187c394fc568ac12020",
                    "sha256:f5c6b692cb88e999d1cbb46d0f2da2f0a37f144ab3e0166f230bb66516bb5f95",
                    "sha256:d137905e5f91de2ac0fb4c5d3f763020de20469d0d46eb07a028b8cfed57a6e3",
                    "sha256:42a2981ff5d920ced544c33d3bec7468962d88c17284d4fe2811980952a35f48",
                    "sha256:1d6896688dae1e6ba3625fc4e907e343e7da67fa5024bb250005da4f0b9ef4df",
                    "sha256:1eaab1e94f855c44a6147d9a7aa71837abc423b55156998d85c09e9849c104a4",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:89eb9eb1f0f77805dc2f2e3cada700fdd9e8faacc94e139145a5f1974c8b6c5f",
                    "sha256:cfdec5a3da8a78adc20ca1063a036436c23a678bac19b92030229b8ae7fcb2db",
                    "sha256:7c36af6f508feebaeffb0ce9041f79727c5397dd8ad7758ab69810a314b7bda4"
                ]
            }
        },
        "build-20240201": {
            "architecture": "amd64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "amd64",
                    "io.balena.device-type": "odyssey-x86",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2024-02-03T22:43:55.87440241Z",
            "history": [
                {
                    "created": "2021-04-01T17:59:37.09884046Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-20T10:46:14.111891363Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-29T00:26:01.517560423Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:533e3405b5c87c5a7239c02ef2d954b1072df5afeee2139a9e2dd133dd4612b6 in / "
                },
                {
                    "created": "2023-11-29T00:26:02.196411879Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-03T22:35:40.064848811Z",
                    "created_by": "LABEL io.balena.architecture=amd64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-03T22:35:40.064848811Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-03T22:37:17.384372627Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-clients \t\tsubversion \t\tautoconf \t\tautomake \t\tbzip2-devel \t\tglib2-devel \t\tgcc \t\tgcc-c++ \t\tImageMagick \t\tImageMagick-devel \t\tkernel-devel \t\tlibcurl-devel \t\tlibevent-devel \t\tlibffi-devel \t\tlibjpeg-devel \t\tlibsqlite3x-devel \t\tlibxml2-devel \t\tlibxslt-devel \t\tlibyaml-devel \t\tmysql-devel \t\tmake \t\tncurses-devel \t\topenssl-devel \t\tpostgresql-devel \t\treadline-devel \t\tsqlite-devel \t\tzlib-devel \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-03T22:37:17.935653796Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-03T22:37:17.935653796Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-03T22:37:17.944726096Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-03T22:37:17.953324557Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-03T22:37:17.977874773Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-03T22:37:17.977874773Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-03T22:37:18.094121056Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-03T22:37:18.156112032Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: Intel 64-bit (x86-64) \\nOS: Fedora 37 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-03T22:43:55.810318896Z",
                    "created_by": "LABEL io.balena.device-type=odyssey-x86",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-03T22:43:55.810318896Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-03T22:43:55.87440241Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: Intel 64-bit (x86-64) \\nOS: Fedora 37 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:e89a2dafe59a58dee0fcdc4620c1e36ef34357d92655da13e1f656c33031c0b5",
                    "sha256:5c6855906a6763f5ad3b5d5b4a9d9a0bce223062e0688a647e947320483b006b",
                    "sha256:f9f29f11fe2e98df34fab0ae39c9a61232ef36ea5f5603974f2ab314f6050eeb",
                    "sha256:d6a862f0a1187dfe9aaf487a1ce7cd50229d6cab12379a0a2a84e97da8608923",
                    "sha256:8aaee800dd20c2e29fdaaf85cae06bafe51333a8c1da7e449339fc2080434088",
                    "sha256:3263c0eab72120171008588fdc84227c2a13e15b4244b361821878df67940005",
                    "sha256:09a8a100dff40d87c1e109a260d5a3b55912a360d06594203c999991c248b2ab",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:8b8bb4b6826d6982f8ca09042e3cac6ce658b7b70115e35a948c1cf787a5f00a",
                    "sha256:926ee46536a161cca25e51c8b4d37c9e2665540da5035cbf506dbe6ebb7e1129",
                    "sha256:2e6ba2e1f97f8a00f21fb4260cf77cbcb93c6c653537530dddc080df37136070"
                ]
            }
        },
        "build-20240304": {
            "architecture": "amd64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "amd64",
                    "io.balena.device-type": "odyssey-x86",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2024-03-05T18:48:36.537836424Z",
            "history": [
                {
                    "created": "2021-04-01T17:59:37.09884046Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-20T10:46:14.111891363Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-29T00:26:01.517560423Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:533e3405b5c87c5a7239c02ef2d954b1072df5afeee2139a9e2dd133dd4612b6 in / "
                },
                {
                    "created": "2023-11-29T00:26:02.196411879Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T18:27:05.923489385Z",
                    "created_by": "LABEL io.balena.architecture=amd64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T18:27:05.923489385Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T18:28:33.175113465Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-clients \t\tsubversion \t\tautoconf \t\tautomake \t\tbzip2-devel \t\tglib2-devel \t\tgcc \t\tgcc-c++ \t\tImageMagick \t\tImageMagick-devel \t\tkernel-devel \t\tlibcurl-devel \t\tlibevent-devel \t\tlibffi-devel \t\tlibjpeg-devel \t\tlibsqlite3x-devel \t\tlibxml2-devel \t\tlibxslt-devel \t\tlibyaml-devel \t\tmysql-devel \t\tmake \t\tncurses-devel \t\topenssl-devel \t\tpostgresql-devel \t\treadline-devel \t\tsqlite-devel \t\tzlib-devel \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T18:28:33.632877025Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T18:28:33.632877025Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T18:28:33.644452588Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T18:28:33.680550543Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T18:28:33.690272042Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T18:28:33.690272042Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T18:28:33.809877255Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T18:28:33.868215984Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: Intel 64-bit (x86-64) \\nOS: Fedora 37 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T18:48:36.482470886Z",
                    "created_by": "LABEL io.balena.device-type=odyssey-x86",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T18:48:36.482470886Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T18:48:36.537836424Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: Intel 64-bit (x86-64) \\nOS: Fedora 37 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:e89a2dafe59a58dee0fcdc4620c1e36ef34357d92655da13e1f656c33031c0b5",
                    "sha256:4c5901fe19b69519020c62b8dc6bf7d254f2d69f8287d8422ddc2bd803643b8d",
                    "sha256:07a772ab26c9756e7bf90b4b4f4ca0372e3f67f7ec2dea6a25b440f3db5b9e73",
                    "sha256:612ba352fe190d5c4c2ba405d6ee1f67eba5d8e50bfb44744f254ecd81860eeb",
                    "sha256:961a6c13cbef5948a4df659d3a8ff2fb0f6f1d125e19da8c84936e63db6ad0e6",
                    "sha256:b50cabcd7ebd1753b2e8fc37b3a333eb2e22ecd7cff5704bbb32bcb3b30dab27",
                    "sha256:02beef5ad9e76eeed930af8b873a9b42e8dfff62ff49a003de7fab25578f7919",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:3d8d7a509761c546acaa570e9197540b81153699c0fb92ba41208b3d41c2a3aa",
                    "sha256:113c3fc4f393f3cbfcc72a5d5a4494f8cbfb46474fbc6b81875aef88ef7c1d59",
                    "sha256:b0c1a5c8e3c85b8731d4defab67a7bf68fabfba958f54ff5d35f5f19d4f346d6"
                ]
            }
        },
        "build-20240401": {
            "architecture": "amd64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "amd64",
                    "io.balena.device-type": "odyssey-x86",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                }
            },
            "created": "2024-04-02T02:40:24.807277799Z",
            "history": [
                {
                    "created": "2021-04-01T17:59:37.09884046Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-20T10:46:14.111891363Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-29T00:26:01.517560423Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:533e3405b5c87c5a7239c02ef2d954b1072df5afeee2139a9e2dd133dd4612b6 in / "
                },
                {
                    "created": "2023-11-29T00:26:02.196411879Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T02:31:15.826913675Z",
                    "created_by": "LABEL io.balena.architecture=amd64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T02:31:15.826913675Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T02:32:52.774190105Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-clients \t\tsubversion \t\tautoconf \t\tautomake \t\tbzip2-devel \t\tglib2-devel \t\tgcc \t\tgcc-c++ \t\tImageMagick \t\tImageMagick-devel \t\tkernel-devel \t\tlibcurl-devel \t\tlibevent-devel \t\tlibffi-devel \t\tlibjpeg-devel \t\tlibsqlite3x-devel \t\tlibxml2-devel \t\tlibxslt-devel \t\tlibyaml-devel \t\tmysql-devel \t\tmake \t\tncurses-devel \t\topenssl-devel \t\tpostgresql-devel \t\treadline-devel \t\tsqlite-devel \t\tzlib-devel \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T02:32:53.38868582Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T02:32:53.38868582Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T02:32:53.39888877Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T02:32:53.432372402Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T02:32:53.44641212Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T02:32:53.44641212Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T02:32:53.561322731Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T02:32:53.621444489Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: Intel 64-bit (x86-64) \\nOS: Fedora 37 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T02:40:24.741977883Z",
                    "created_by": "LABEL io.balena.device-type=odyssey-x86",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T02:40:24.741977883Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T02:40:24.807277799Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: Intel 64-bit (x86-64) \\nOS: Fedora 37 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:e89a2dafe59a58dee0fcdc4620c1e36ef34357d92655da13e1f656c33031c0b5",
                    "sha256:3b4a14f643484648a592483c6db333ff705c90f2df7537999c385a84e2f2a09d",
                    "sha256:2e68944bc9e69d0f84209aa4260facaf9274521f006aaacb762f3bbc6a769279",
                    "sha256:9ae269c28a0f741cc31822e336b2f07b225518d7767091bab803a9d607be13e9",
                    "sha256:ae0fb47eb6b0032050ca4b6ee6a97b52cee74de5157fe3e5642017c7067facec",
                    "sha256:679c7bfd1235e63fd9a0cd516851f3887aa2d711addadbdaaf3aade010c1dfd2",
                    "sha256:c196a8b7949dcdebecfda50b75380c60c2db6399510c124ff734d82c4830442d",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:52598cc0d230104cefdf66e01d81a6f2a0a74f25e046faba9f79db9a1748f788",
                    "sha256:95f6c15da05e86492519edd38c311812c6eb410ec34a829182583608a4bfb7a8",
                    "sha256:40e9c018003815646e25de094c2f50fd3a5c980715887ffafe4beadbd4da10b5"
                ]
            }
        },
        "build-20240408": {
            "architecture": "amd64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "amd64",
                    "io.balena.device-type": "odyssey-x86",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                }
            },
            "created": "2024-04-09T13:46:36.534732858Z",
            "history": [
                {
                    "created": "2021-04-01T17:59:37.09884046Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-20T10:46:14.111891363Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-29T00:26:01.517560423Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:533e3405b5c87c5a7239c02ef2d954b1072df5afeee2139a9e2dd133dd4612b6 in / "
                },
                {
                    "created": "2023-11-29T00:26:02.196411879Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:35:32.311936072Z",
                    "created_by": "LABEL io.balena.architecture=amd64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:35:32.311936072Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:37:09.989098571Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-clients \t\tsubversion \t\tautoconf \t\tautomake \t\tbzip2-devel \t\tglib2-devel \t\tgcc \t\tgcc-c++ \t\tImageMagick \t\tImageMagick-devel \t\tkernel-devel \t\tlibcurl-devel \t\tlibevent-devel \t\tlibffi-devel \t\tlibjpeg-devel \t\tlibsqlite3x-devel \t\tlibxml2-devel \t\tlibxslt-devel \t\tlibyaml-devel \t\tmysql-devel \t\tmake \t\tncurses-devel \t\topenssl-devel \t\tpostgresql-devel \t\treadline-devel \t\tsqlite-devel \t\tzlib-devel \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:37:10.564395945Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:37:10.564395945Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:37:10.574556465Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:37:10.584642061Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:37:10.631213109Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:37:10.631213109Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:37:10.748260236Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:37:10.811715724Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: Intel 64-bit (x86-64) \\nOS: Fedora 37 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:46:36.475994426Z",
                    "created_by": "LABEL io.balena.device-type=odyssey-x86",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:46:36.475994426Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:46:36.534732858Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: Intel 64-bit (x86-64) \\nOS: Fedora 37 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:e89a2dafe59a58dee0fcdc4620c1e36ef34357d92655da13e1f656c33031c0b5",
                    "sha256:bb34a8980d43cf2f520e0436ab654bb9957a13ad2d9646ceda0678e767a91200",
                    "sha256:8d4f726150dc4bef55a136be112ae788dc1aa16102f0b8607c8e83aa48dd15c1",
                    "sha256:73dcc22213100073b3b1d4c24734bf4a5d1b34499ea9d80b428d940fe7b11283",
                    "sha256:9806effe4f43e07e7459013cb5d58812da53acda1562880af84005a22abac2f0",
                    "sha256:223c15d31d789ff55bdeec8d049c6732f65a685e17aa79f9b0aed12db10e4adc",
                    "sha256:051c24887f6281518e5a145879a67605ae9cc70a1c9d713e232e3f3c61dae253",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:c23c80b84860623b2ce218c703824110ba04099cc2c2122f7f57f05db3580136",
                    "sha256:6a9ca3074ec3849e36d4ca6daf9cc3591d4a4273d6c10d2b4366bf0ee546fd9b",
                    "sha256:dd38f759eb27e5e3dbd3aa234c63396c7e9485296012512c8e16594330bb2160"
                ]
            }
        },
        "build-20240429": {
            "architecture": "amd64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "amd64",
                    "io.balena.device-type": "odyssey-x86",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                }
            },
            "created": "2024-05-02T12:18:25.316859173Z",
            "history": [
                {
                    "created": "2021-04-01T17:59:37.09884046Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-20T10:46:14.111891363Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-29T00:26:01.517560423Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:533e3405b5c87c5a7239c02ef2d954b1072df5afeee2139a9e2dd133dd4612b6 in / "
                },
                {
                    "created": "2023-11-29T00:26:02.196411879Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-02T12:11:17.879557284Z",
                    "created_by": "LABEL io.balena.architecture=amd64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-02T12:11:17.879557284Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T12:12:42.641900869Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-clients \t\tsubversion \t\tautoconf \t\tautomake \t\tbzip2-devel \t\tglib2-devel \t\tgcc \t\tgcc-c++ \t\tImageMagick \t\tImageMagick-devel \t\tkernel-devel \t\tlibcurl-devel \t\tlibevent-devel \t\tlibffi-devel \t\tlibjpeg-devel \t\tlibsqlite3x-devel \t\tlibxml2-devel \t\tlibxslt-devel \t\tlibyaml-devel \t\tmysql-devel \t\tmake \t\tncurses-devel \t\topenssl-devel \t\tpostgresql-devel \t\treadline-devel \t\tsqlite-devel \t\tzlib-devel \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T12:12:43.102550992Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T12:12:43.102550992Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-02T12:12:43.113767499Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T12:12:43.152579927Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T12:12:43.164024901Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T12:12:43.164024901Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-02T12:12:43.287186632Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T12:12:43.340830362Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: Intel 64-bit (x86-64) \\nOS: Fedora 37 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T12:18:25.256627336Z",
                    "created_by": "LABEL io.balena.device-type=odyssey-x86",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-02T12:18:25.256627336Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T12:18:25.316859173Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: Intel 64-bit (x86-64) \\nOS: Fedora 37 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:e89a2dafe59a58dee0fcdc4620c1e36ef34357d92655da13e1f656c33031c0b5",
                    "sha256:69aca497cb556a67ac50c1b5a13b0b871991163be5ba5fe38edcba052f8101d7",
                    "sha256:c8e99a432af543f09f782a2ed7a06ebaf935caab86c88abcd86df364a0491feb",
                    "sha256:ea6031a54383b7350fe210e7be054eeeb58f56fc6ab91f80befca8c9f9dc23f9",
                    "sha256:c79ad587f89a7cf70aeb333fa90c49ebcdda05a9ad40d078fc2594db8b33808b",
                    "sha256:687a39c8eaf68f59b3a3ebb8d4f8e47c5e1c328640c7e6e5f79de9a12fdc4717",
                    "sha256:fd4f1a77214f560e5460e645895ace4494625265cce67f2fd9d252b37b953f54",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:7407744290b4667e01e846a53491363c6a6840d38aab7fb65b2e86bbf4404f53",
                    "sha256:4e25336ffc1cdcc59619d02ee439302775d8c82da08ce4ccb59eabd07daa4388",
                    "sha256:e767cf0c4419ff5f520564c8e8325256b271d87ad22f6a3d5a45fd89adde0f8e"
                ]
            }
        },
        "latest": {
            "architecture": "amd64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "amd64",
                    "io.balena.device-type": "odyssey-x86",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                }
            },
            "created": "2024-05-02T12:18:12.985891796Z",
            "history": [
                {
                    "created": "2021-04-01T17:59:37.09884046Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-20T10:46:14.111891363Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-29T00:26:01.517560423Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:533e3405b5c87c5a7239c02ef2d954b1072df5afeee2139a9e2dd133dd4612b6 in / "
                },
                {
                    "created": "2023-11-29T00:26:02.196411879Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-02T12:11:35.787518344Z",
                    "created_by": "LABEL io.balena.architecture=amd64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-02T12:11:35.787518344Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T12:11:36.155885234Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T12:11:36.155885234Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-02T12:11:36.166220512Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T12:11:36.201352732Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T12:11:36.229371253Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T12:11:36.229371253Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-02T12:11:36.489410396Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T12:11:36.547751991Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: Intel 64-bit (x86-64) \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T12:18:12.910718736Z",
                    "created_by": "LABEL io.balena.device-type=odyssey-x86",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-02T12:18:12.910718736Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T12:18:12.985891796Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: Intel 64-bit (x86-64) \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:e89a2dafe59a58dee0fcdc4620c1e36ef34357d92655da13e1f656c33031c0b5",
                    "sha256:0a648d9cc45ccee05b7dda5c00174ff854e8f08899edb49b4b9ea8c61b058805",
                    "sha256:473314ea19844329bd2910bee3a05e7fd8996962d93719e1c3837927325ce390",
                    "sha256:1a8b3c1e1273d38aa2a3915c1cc142013ca3810eabdbad9eebc5997adc885bc2",
                    "sha256:ecc646eb7ee27032fc4faf92282b9e1d4176e672e63e5859c956e3b9b81e3777",
                    "sha256:dcaa3246209255ba81e531a54247f2762caac0def1a733005d0f168a69d14815",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:b537c15fb5e1acaa06a911b4b340ad545722901d3c792694a6cf8441f4bd8739",
                    "sha256:2738d555c5ce0d58e21ca1d22b99000d3deac89174240ba1bde438476ef3fdc4",
                    "sha256:5be83af9977c7d94e3c47abf63914eb6b1faed6b1bdc37a84b60c687ad11330a"
                ]
            }
        },
        "latest-20230811": {
            "architecture": "amd64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "amd64",
                    "io.balena.device-type": "intel-nuc",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2023-08-21T20:15:55.822498992Z",
            "history": [
                {
                    "created": "2021-04-01T17:59:37.09884046Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-20T10:46:14.111891363Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-04T18:22:42.383186833Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:3242aba4f770b24f6433fa19e51c222acf5a33d2268b82c7ec43874258838970 in / "
                },
                {
                    "created": "2023-08-04T18:22:43.038358583Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-21T19:52:26.839667108Z",
                    "created_by": "LABEL io.balena.architecture=amd64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-21T19:52:26.839667108Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-21T19:59:43.225911138Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-21T19:59:43.225911138Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-21T19:59:43.265017408Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-21T19:59:43.278822397Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-21T19:59:43.31418837Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-21T19:59:43.31418837Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-21T19:59:43.649629911Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-21T19:59:44.091734469Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: Intel 64-bit (x86-64) \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-21T20:15:55.528470281Z",
                    "created_by": "LABEL io.balena.device-type=intel-nuc",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-21T20:15:55.528470281Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-21T20:15:55.822498992Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: Intel 64-bit (x86-64) \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "moby.buildkit.buildinfo.v1": "eyJmcm9udGVuZCI6ImRvY2tlcmZpbGUudjAiLCJhdHRycyI6eyJmaWxlbmFtZSI6IkRvY2tlcmZpbGUifSwic291cmNlcyI6W3sidHlwZSI6ImRvY2tlci1pbWFnZSIsInJlZiI6ImRvY2tlci5pby9iYWxlbmFsaWIvYW1kNjQtZmVkb3JhOjM3LXJ1biIsInBpbiI6InNoYTI1Njo0ZDZkZjdlMzYzZTNiZmE5ZWZkNDVjODIxMjk2ZTE3MmMwOTAzMmE3OTU0MTkyZjczMDQxMWM4OTlmZWYyNGI3In1dfQ==",
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:8a5c91bcb42954a1d542cf1243b349f4d83fdd74d2ddc71ccaf63ffb7b661793",
                    "sha256:fca50d5c7997910a204bc6cee98bca6e25e11762221da2784c6d3645566f0ddb",
                    "sha256:3480908bbabedafa2f826ca9f403cb09eecf0383304b8bbe14e68de7beca1ddf",
                    "sha256:0dd58378b6f4109aefd89403151fb2cbfb7b5b5a829252b6828dd74ac3d4197f",
                    "sha256:597c7f0663815a1c3890fa212a75c9d37ecdc09d52d9952fd5b53e5d9caf6212",
                    "sha256:dbf5739d78d524aac1abdba9884c01b35edc636d914b379819738a3ef75648d7",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:21f04c3046c703b1a27343fba484e8a1bcdb988c7d8555b059c066ef4f0220d9",
                    "sha256:ce2118ba52ad3ebcbc8cbd5810227ff666d0cd51fad51fc828f171d92af3d74d",
                    "sha256:d111ea2ab348ba7c188e6a0c3aac986f1b5b2009b38e7416bf4ff012d1666f45"
                ]
            }
        },
        "latest-20230829": {
            "architecture": "amd64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "amd64",
                    "io.balena.device-type": "intel-nuc",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2023-09-02T04:17:48.735207793Z",
            "history": [
                {
                    "created": "2021-04-01T17:59:37.09884046Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-20T10:46:14.111891363Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-04T18:22:42.383186833Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:3242aba4f770b24f6433fa19e51c222acf5a33d2268b82c7ec43874258838970 in / "
                },
                {
                    "created": "2023-08-04T18:22:43.038358583Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-02T03:53:27.833103705Z",
                    "created_by": "LABEL io.balena.architecture=amd64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-02T03:53:27.833103705Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T03:59:29.487734532Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T03:59:29.487734532Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-02T03:59:29.506051361Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T03:59:29.527922573Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T03:59:29.557992178Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T03:59:29.557992178Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-02T03:59:29.842622847Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T03:59:30.225039407Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: Intel 64-bit (x86-64) \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T04:17:48.484867648Z",
                    "created_by": "LABEL io.balena.device-type=intel-nuc",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-02T04:17:48.484867648Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T04:17:48.735207793Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: Intel 64-bit (x86-64) \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:8a5c91bcb42954a1d542cf1243b349f4d83fdd74d2ddc71ccaf63ffb7b661793",
                    "sha256:380419ecfa744daae3d1681c557d6abf8c91c0c5fc86a2969a8ed77e9709baa4",
                    "sha256:58c1f2554a6401c303a1ee84178afc50a8b06dab7b87655f31d30c850c487334",
                    "sha256:c3f7ce1d467d976dfa04264cd86521d73064a1ed6e9fb71dc3410e477ae870ae",
                    "sha256:6f5c6abfd2b62955e4a3b682bb44712ef50b0fd3543e11c7d4fc17f1b82f6907",
                    "sha256:56469bde0dc559a1839e14d976f279c90e21acf0ed0b000c6a72d55ee8220876",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:8e90a20b4674cca48347191b933581e0ed4da241493cbfdf5a194bae7e5f8292",
                    "sha256:95a838d8cef27239aa14c47871c7b64b3b90b793856807b90df22d3881fd91b0",
                    "sha256:ec1d9080493cb8830eb541d3ffd2142141dc02d8e2e41bccd274018f0267e682"
                ]
            }
        },
        "latest-20230904": {
            "architecture": "amd64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "amd64",
                    "io.balena.device-type": "intel-nuc",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2023-09-09T04:14:00.317904233Z",
            "history": [
                {
                    "created": "2021-04-01T17:59:37.09884046Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-20T10:46:14.111891363Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-04T18:22:42.383186833Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:3242aba4f770b24f6433fa19e51c222acf5a33d2268b82c7ec43874258838970 in / "
                },
                {
                    "created": "2023-08-04T18:22:43.038358583Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T03:59:08.044755432Z",
                    "created_by": "LABEL io.balena.architecture=amd64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T03:59:08.044755432Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T03:59:08.444875601Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T03:59:08.444875601Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T03:59:08.456878787Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T03:59:08.464404941Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T03:59:08.470905987Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T03:59:08.470905987Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T03:59:08.778387992Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T03:59:08.973104388Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: Intel 64-bit (x86-64) \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:14:00.107701171Z",
                    "created_by": "LABEL io.balena.device-type=intel-nuc",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T04:14:00.107701171Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:14:00.317904233Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: Intel 64-bit (x86-64) \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:8a5c91bcb42954a1d542cf1243b349f4d83fdd74d2ddc71ccaf63ffb7b661793",
                    "sha256:7e137976dd3d65e1b7be54fc9701bd78bf00b6ee978ad81280b8bd275035d3a7",
                    "sha256:42ee78234deac018bf727039dafccfb78c9d756f1ec8903cef7eb85190ead930",
                    "sha256:7dc9005f3e3ce1987ea49d7c2df24a1cc02afb441b95cfff9caf872819ab4dfc",
                    "sha256:23e486a49ac227803e0c85abb4c0cd9fd2aa05725dbba3f37eb1a3aeb1d7bd57",
                    "sha256:96cfa030f844607e078e22e5b7761f3ce499394317ad0af4d4db456fb31aa74d",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:1ea1e3eb686efc3c91616ea714b0a283b6173e34d5506b3b624d37b1ed0064ed",
                    "sha256:542b978ffd01f251026ec67db609ce53d689b901747e6febcc4f908c46e731a6",
                    "sha256:ab7da43fc40a18bd1103ac844b2245b9dc80a8c437d638c05f5d64d746e937d2"
                ]
            }
        },
        "latest-20230911": {
            "architecture": "amd64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "amd64",
                    "io.balena.device-type": "odyssey-x86",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2023-09-11T23:03:25.893033534Z",
            "history": [
                {
                    "created": "2021-04-01T17:59:37.09884046Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-20T10:46:14.111891363Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-04T18:22:42.383186833Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:3242aba4f770b24f6433fa19e51c222acf5a33d2268b82c7ec43874258838970 in / "
                },
                {
                    "created": "2023-08-04T18:22:43.038358583Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T03:59:08.044755432Z",
                    "created_by": "LABEL io.balena.architecture=amd64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T03:59:08.044755432Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T03:59:08.444875601Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T03:59:08.444875601Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T03:59:08.456878787Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T03:59:08.464404941Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T03:59:08.470905987Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T03:59:08.470905987Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T03:59:08.778387992Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T03:59:08.973104388Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: Intel 64-bit (x86-64) \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-11T23:03:25.832214295Z",
                    "created_by": "LABEL io.balena.device-type=odyssey-x86",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-11T23:03:25.832214295Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-11T23:03:25.893033534Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: Intel 64-bit (x86-64) \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:8a5c91bcb42954a1d542cf1243b349f4d83fdd74d2ddc71ccaf63ffb7b661793",
                    "sha256:7e137976dd3d65e1b7be54fc9701bd78bf00b6ee978ad81280b8bd275035d3a7",
                    "sha256:42ee78234deac018bf727039dafccfb78c9d756f1ec8903cef7eb85190ead930",
                    "sha256:7dc9005f3e3ce1987ea49d7c2df24a1cc02afb441b95cfff9caf872819ab4dfc",
                    "sha256:23e486a49ac227803e0c85abb4c0cd9fd2aa05725dbba3f37eb1a3aeb1d7bd57",
                    "sha256:96cfa030f844607e078e22e5b7761f3ce499394317ad0af4d4db456fb31aa74d",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:1ea1e3eb686efc3c91616ea714b0a283b6173e34d5506b3b624d37b1ed0064ed",
                    "sha256:6477848327ef7344548c3706925e3c386ce207ba8f85bbff0604d9577f437ea0",
                    "sha256:b3d950f5dc5c037e537892b19270392fa69428eab347e4e7de50f9c4a58efada"
                ]
            }
        },
        "latest-20231103": {
            "architecture": "amd64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "amd64",
                    "io.balena.device-type": "odyssey-x86",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2023-11-04T20:35:38.577134772Z",
            "history": [
                {
                    "created": "2021-04-01T17:59:37.09884046Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-20T10:46:14.111891363Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-06T18:22:29.551043544Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:395273c1903fb6b62f46bbf72259ef76c6eb16f475d22abd47b7633b2b77a847 in / "
                },
                {
                    "created": "2023-10-06T18:22:30.235678845Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-04T20:25:11.729328966Z",
                    "created_by": "LABEL io.balena.architecture=amd64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-04T20:25:11.729328966Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T20:25:11.994255514Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T20:25:11.994255514Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-04T20:25:12.004780927Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T20:25:12.01526574Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T20:25:12.040162507Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T20:25:12.040162507Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-04T20:25:12.188765905Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T20:25:12.273025011Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: Intel 64-bit (x86-64) \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T20:35:38.486556692Z",
                    "created_by": "LABEL io.balena.device-type=odyssey-x86",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-04T20:35:38.486556692Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T20:35:38.577134772Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: Intel 64-bit (x86-64) \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:9b5a2675a1f8f633773bcb6f6dbade49054173b4bfd1599e2bbe64e975812329",
                    "sha256:dd03ffd46e3f50f2600532b8ee5aec2d2f39ac877d18df277fab563fbcf38866",
                    "sha256:c9a4ad29326980cdeb327278fabacfbfdaaee16234b8faae944634318f9efbd7",
                    "sha256:708ae14cfa0655c8947eda92d1111c7a0d097106e05cc443000b4958c60b7183",
                    "sha256:5b6c9e19c5b005401f4d5869255f3c70112a4551073cec3bd2bd57252289d958",
                    "sha256:1e3bb05f1b5995053bcd278a3b2764e0251dd367c7d5c8de4df7e5aa9241c8dc",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:4ba5a8faabeb7bb0b84e3bd972b6407bce7d138c7b9b56524725593ee8255157",
                    "sha256:b2bd3f62d35c5fa7aa62762c707241f33f2d83849733c03010880cdb7e60c672",
                    "sha256:40dd8b05a56defef78b6ae818a0d7a251be5a0d6d761cb72301827229442f673"
                ]
            }
        },
        "latest-20231204": {
            "architecture": "amd64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "amd64",
                    "io.balena.device-type": "odyssey-x86",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2023-12-06T18:39:53.083327891Z",
            "history": [
                {
                    "created": "2021-04-01T17:59:37.09884046Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-20T10:46:14.111891363Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-29T00:26:01.517560423Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:533e3405b5c87c5a7239c02ef2d954b1072df5afeee2139a9e2dd133dd4612b6 in / "
                },
                {
                    "created": "2023-11-29T00:26:02.196411879Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T17:56:03.747827155Z",
                    "created_by": "LABEL io.balena.architecture=amd64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T17:56:03.747827155Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T17:56:03.951248076Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T17:56:03.951248076Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T17:56:03.960836387Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T17:56:03.971888675Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T17:56:03.980766309Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T17:56:03.980766309Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T17:56:04.083929145Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T17:56:04.173103482Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: Intel 64-bit (x86-64) \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T18:39:53.001839298Z",
                    "created_by": "LABEL io.balena.device-type=odyssey-x86",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T18:39:53.001839298Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T18:39:53.083327891Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: Intel 64-bit (x86-64) \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:e89a2dafe59a58dee0fcdc4620c1e36ef34357d92655da13e1f656c33031c0b5",
                    "sha256:cf2ae2bdb9183af3f824b7e4c29fbd606e47799a97d6096d8f7e00ef5f490439",
                    "sha256:3d570902edb01a6b3632c26a6cef287f60fe5fda67ce2135a06f978c2ab4434a",
                    "sha256:21bdf36a029e5507f6b24f0ca8f4bc91bd5e55441b51ec0aeb0d61ddee34e8f7",
                    "sha256:6b13b5a03307c5608826145c3387a6fe156cfdf40f04965b7aaf32e06f80524d",
                    "sha256:8dee186546bb8954265c9c4b824dcc5702b7e5ae89c0cb055cf77b4b65228265",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:0b741073e9307f7b66244c8c4785863940367e83335ae78a22c374573878a558",
                    "sha256:cf7e1f853ea83becf842239b01452fb6d0e55296dbe10521d4d1253f626b0e61",
                    "sha256:843eaaba86419ec2d0b89eab4993af43674615156e09620c041bcd82c5a5f075"
                ]
            }
        },
        "latest-20240105": {
            "architecture": "amd64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "amd64",
                    "io.balena.device-type": "odyssey-x86",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2024-01-05T14:09:49.038173762Z",
            "history": [
                {
                    "created": "2021-04-01T17:59:37.09884046Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-20T10:46:14.111891363Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-29T00:26:01.517560423Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:533e3405b5c87c5a7239c02ef2d954b1072df5afeee2139a9e2dd133dd4612b6 in / "
                },
                {
                    "created": "2023-11-29T00:26:02.196411879Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-05T13:59:54.18041825Z",
                    "created_by": "LABEL io.balena.architecture=amd64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-05T13:59:54.18041825Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-05T13:59:54.417070806Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-05T13:59:54.417070806Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-05T13:59:54.427392984Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-05T13:59:54.459082685Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-05T13:59:54.48704776Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-05T13:59:54.48704776Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-05T13:59:54.701706892Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-05T13:59:54.764168187Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: Intel 64-bit (x86-64) \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-05T14:09:48.9753273Z",
                    "created_by": "LABEL io.balena.device-type=odyssey-x86",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-05T14:09:48.9753273Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-05T14:09:49.038173762Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: Intel 64-bit (x86-64) \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:e89a2dafe59a58dee0fcdc4620c1e36ef34357d92655da13e1f656c33031c0b5",
                    "sha256:be5ea942547e5f184cf40a284eeb82005dd573a75ec6da220bef84440c21799d",
                    "sha256:d93e9aba12c58fab57e3c93789ec071228282082e33691ff6db4af403c20c546",
                    "sha256:276623a2256a9b65bf5b724299227e40e352268a9527768edc0f5ce9f25058c2",
                    "sha256:54f349630e0de220734a865fd92a68af438bb762181ba71ce2e8f341d0a5c3f2",
                    "sha256:e0bd5807f9bff81e6d1440c396316bc46e684344b539d3c9a81edca0d1cf9ee4",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:bf359b349ecedfa1d9b00bd125627393917dc1d0d10f21d8655da275098f2e36",
                    "sha256:767d954a0e028119754e55f59fa017135398f7fcddf1acdae3e7365a2a86de9b",
                    "sha256:86f86251a137a57e059ea97ef596b7deb170ff38b1b036e3de423a2a1e3347f5"
                ]
            }
        },
        "latest-20240201": {
            "architecture": "amd64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "amd64",
                    "io.balena.device-type": "odyssey-x86",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2024-02-03T22:43:46.779088827Z",
            "history": [
                {
                    "created": "2021-04-01T17:59:37.09884046Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-20T10:46:14.111891363Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-29T00:26:01.517560423Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:533e3405b5c87c5a7239c02ef2d954b1072df5afeee2139a9e2dd133dd4612b6 in / "
                },
                {
                    "created": "2023-11-29T00:26:02.196411879Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-03T22:35:36.898952913Z",
                    "created_by": "LABEL io.balena.architecture=amd64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-03T22:35:36.898952913Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-03T22:35:37.498519547Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-03T22:35:37.498519547Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-03T22:35:37.511124291Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-03T22:35:37.542159925Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-03T22:35:37.554209496Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-03T22:35:37.554209496Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-03T22:35:37.769174671Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-03T22:35:37.829518486Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: Intel 64-bit (x86-64) \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-03T22:43:46.723150432Z",
                    "created_by": "LABEL io.balena.device-type=odyssey-x86",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-03T22:43:46.723150432Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-03T22:43:46.779088827Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: Intel 64-bit (x86-64) \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:e89a2dafe59a58dee0fcdc4620c1e36ef34357d92655da13e1f656c33031c0b5",
                    "sha256:4b96f1f532259574bf845e53bf75f5f3c0299925937fe263f5045f9062bd4dfe",
                    "sha256:e6abbbab6c0809ea1bea86f38e82aa33b1ebd78e9b5551e84cf93ab2a8e6f803",
                    "sha256:c6814fba19589c2e0583da7054121dc8142a4edfb259908aff631683e577f45d",
                    "sha256:2ec60fba1a4b3f73515c6c0f9db1371238b0da15c73d84aae9ef3f7275ec0741",
                    "sha256:cc0a116e7685f797625a84b4f73221e08d0a2e20e03846223e7f97e2560504a6",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:b756dc667e503ba7bfc9bb0a3f53c4ce4a81a520e4c09c358b11abf71c0f44cf",
                    "sha256:f35bc912ff63f7a1e6c6b9de29bd060e334b1c20fd4bffd0699d356c5834ae06",
                    "sha256:072c1fd16e6189864737ee5eab67766af26d77e9596f123c1897e655867ed416"
                ]
            }
        },
        "latest-20240304": {
            "architecture": "amd64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "amd64",
                    "io.balena.device-type": "odyssey-x86",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2024-03-05T18:48:10.26260045Z",
            "history": [
                {
                    "created": "2021-04-01T17:59:37.09884046Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-20T10:46:14.111891363Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-29T00:26:01.517560423Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:533e3405b5c87c5a7239c02ef2d954b1072df5afeee2139a9e2dd133dd4612b6 in / "
                },
                {
                    "created": "2023-11-29T00:26:02.196411879Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T18:27:17.052466666Z",
                    "created_by": "LABEL io.balena.architecture=amd64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T18:27:17.052466666Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T18:27:17.680717512Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T18:27:17.680717512Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T18:27:17.690105177Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T18:27:17.729671857Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T18:27:17.738614063Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T18:27:17.738614063Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T18:27:18.038006148Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T18:27:18.09950217Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: Intel 64-bit (x86-64) \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T18:48:10.184741148Z",
                    "created_by": "LABEL io.balena.device-type=odyssey-x86",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T18:48:10.184741148Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T18:48:10.26260045Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: Intel 64-bit (x86-64) \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:e89a2dafe59a58dee0fcdc4620c1e36ef34357d92655da13e1f656c33031c0b5",
                    "sha256:407784ce233d07c91716b195ba5fdadca2c77276758f618b3bf474704c07c93c",
                    "sha256:6790dcb3bf20873f21627079dd24a2d23da7d970b8a3fcb2e3e11d209531497d",
                    "sha256:1ca6aa489d1fe12bc5b9e9e9b286d3564777218362d06f08f07e262eccdeba52",
                    "sha256:ee7b099673a169cff2d986c726d47ef4ffb274e162056718e9ffe10f5db8d2b0",
                    "sha256:8949d553ef226f0d0474c9ab28f49bfd35c6aa44a4ee31ec5ea952e48c0d67c2",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:f5a5aad7ca1b65f289777c165b7d8e29d5078483491ada457a5b0bbf9c4fe705",
                    "sha256:a61f4a1f3c828639cef685f003c1b96631c29ca987fcc18c7ec9d20b7376c742",
                    "sha256:c4a01c429f2990290158ecb52c4beacba0eacf2b78d0742636b3ad881f713f81"
                ]
            }
        },
        "latest-20240401": {
            "architecture": "amd64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "amd64",
                    "io.balena.device-type": "odyssey-x86",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                }
            },
            "created": "2024-04-02T02:40:06.736289083Z",
            "history": [
                {
                    "created": "2021-04-01T17:59:37.09884046Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-20T10:46:14.111891363Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-29T00:26:01.517560423Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:533e3405b5c87c5a7239c02ef2d954b1072df5afeee2139a9e2dd133dd4612b6 in / "
                },
                {
                    "created": "2023-11-29T00:26:02.196411879Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T02:31:15.961600503Z",
                    "created_by": "LABEL io.balena.architecture=amd64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T02:31:15.961600503Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T02:31:16.301448773Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T02:31:16.301448773Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T02:31:16.310908864Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T02:31:16.32003679Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T02:31:16.353434347Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T02:31:16.353434347Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T02:31:16.471928657Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T02:31:16.525879007Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: Intel 64-bit (x86-64) \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T02:40:06.672943671Z",
                    "created_by": "LABEL io.balena.device-type=odyssey-x86",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T02:40:06.672943671Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T02:40:06.736289083Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: Intel 64-bit (x86-64) \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:e89a2dafe59a58dee0fcdc4620c1e36ef34357d92655da13e1f656c33031c0b5",
                    "sha256:ff8ed929feef33ec1c1f39c6b4f80cc3764a80f0e5629ec44a97462d096a8a67",
                    "sha256:140f598fedc50aebac7be5f429b0d1d1430326387767f769f8d75d71fafe67ce",
                    "sha256:a331ae444751612061e818b34079766a4799bf04d670910014b918e5a7f2aa98",
                    "sha256:af8973f6bb2e5a32c405b2a69629d63fe1968302e74a80caf44fc5b30def8c6f",
                    "sha256:28f34c8df9f98ec114938494ca7ed4bc600d4757531280b157b6268cdd7049db",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:b87f537d1904201dba89c59292d231a7b6310b37c6372c2650a11e3101d075c4",
                    "sha256:f71fb883b9f491b773f1bdd93386c88d7888e4f89612d99ca5eb498fa9e462f8",
                    "sha256:2711cd49e15e728d8336758cdf52285826a23f57012eeade73151b6c11bd7b49"
                ]
            }
        },
        "latest-20240408": {
            "architecture": "amd64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "amd64",
                    "io.balena.device-type": "odyssey-x86",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                }
            },
            "created": "2024-04-09T13:46:07.607574782Z",
            "history": [
                {
                    "created": "2021-04-01T17:59:37.09884046Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-20T10:46:14.111891363Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-29T00:26:01.517560423Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:533e3405b5c87c5a7239c02ef2d954b1072df5afeee2139a9e2dd133dd4612b6 in / "
                },
                {
                    "created": "2023-11-29T00:26:02.196411879Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:35:49.166636872Z",
                    "created_by": "LABEL io.balena.architecture=amd64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:35:49.166636872Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:35:49.353720115Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:35:49.353720115Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:35:49.363434466Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:35:49.373123647Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:35:49.403773106Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:35:49.403773106Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:35:49.523623495Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:35:49.603887285Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: Intel 64-bit (x86-64) \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:46:07.542279168Z",
                    "created_by": "LABEL io.balena.device-type=odyssey-x86",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:46:07.542279168Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:46:07.607574782Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: Intel 64-bit (x86-64) \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:e89a2dafe59a58dee0fcdc4620c1e36ef34357d92655da13e1f656c33031c0b5",
                    "sha256:5be4da3e11c12f8a7f04187b011613695c861dbfaa34600788e52b7a72d0fe20",
                    "sha256:77f26d83150120b739b5d8d75ad033761be477817d6c19e6a1dd8c375f42f8ef",
                    "sha256:d08beaf06efe313a283e864e75d9d0b4f53e9d5eae6a09aa7b5daa44b1bf2b12",
                    "sha256:2c842f6d58dfaa63098a6f68b838e8d1da81eb6a08832146d6b6f7379029d6e6",
                    "sha256:813ccd1d89aa81b3808b9f051f610516cd417b28eec1a286ca48a7b4574d4fb0",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:816dbe0c347dcba570fbf323572692f25fe5a89905ce0078708fd342430a2da8",
                    "sha256:9e5b74d2708d287243141cf8004976c99f1538dd32f790d927246da496da7e05",
                    "sha256:43f48a9c6b65bf6ad77cfd22bb9151ac2bd7a0bb3615c8ae854635e8c5065939"
                ]
            }
        },
        "latest-20240429": {
            "architecture": "amd64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "amd64",
                    "io.balena.device-type": "odyssey-x86",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                }
            },
            "created": "2024-05-02T12:18:12.985891796Z",
            "history": [
                {
                    "created": "2021-04-01T17:59:37.09884046Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-20T10:46:14.111891363Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-29T00:26:01.517560423Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:533e3405b5c87c5a7239c02ef2d954b1072df5afeee2139a9e2dd133dd4612b6 in / "
                },
                {
                    "created": "2023-11-29T00:26:02.196411879Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-02T12:11:35.787518344Z",
                    "created_by": "LABEL io.balena.architecture=amd64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-02T12:11:35.787518344Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T12:11:36.155885234Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T12:11:36.155885234Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-02T12:11:36.166220512Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T12:11:36.201352732Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T12:11:36.229371253Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T12:11:36.229371253Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-02T12:11:36.489410396Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T12:11:36.547751991Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: Intel 64-bit (x86-64) \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T12:18:12.910718736Z",
                    "created_by": "LABEL io.balena.device-type=odyssey-x86",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-02T12:18:12.910718736Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T12:18:12.985891796Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: Intel 64-bit (x86-64) \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:e89a2dafe59a58dee0fcdc4620c1e36ef34357d92655da13e1f656c33031c0b5",
                    "sha256:0a648d9cc45ccee05b7dda5c00174ff854e8f08899edb49b4b9ea8c61b058805",
                    "sha256:473314ea19844329bd2910bee3a05e7fd8996962d93719e1c3837927325ce390",
                    "sha256:1a8b3c1e1273d38aa2a3915c1cc142013ca3810eabdbad9eebc5997adc885bc2",
                    "sha256:ecc646eb7ee27032fc4faf92282b9e1d4176e672e63e5859c956e3b9b81e3777",
                    "sha256:dcaa3246209255ba81e531a54247f2762caac0def1a733005d0f168a69d14815",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:b537c15fb5e1acaa06a911b4b340ad545722901d3c792694a6cf8441f4bd8739",
                    "sha256:2738d555c5ce0d58e21ca1d22b99000d3deac89174240ba1bde438476ef3fdc4",
                    "sha256:5be83af9977c7d94e3c47abf63914eb6b1faed6b1bdc37a84b60c687ad11330a"
                ]
            }
        },
        "latest-build": {
            "architecture": "amd64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "amd64",
                    "io.balena.device-type": "odyssey-x86",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                }
            },
            "created": "2024-05-02T12:18:25.316859173Z",
            "history": [
                {
                    "created": "2021-04-01T17:59:37.09884046Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-20T10:46:14.111891363Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-29T00:26:01.517560423Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:533e3405b5c87c5a7239c02ef2d954b1072df5afeee2139a9e2dd133dd4612b6 in / "
                },
                {
                    "created": "2023-11-29T00:26:02.196411879Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-02T12:11:17.879557284Z",
                    "created_by": "LABEL io.balena.architecture=amd64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-02T12:11:17.879557284Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T12:12:42.641900869Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-clients \t\tsubversion \t\tautoconf \t\tautomake \t\tbzip2-devel \t\tglib2-devel \t\tgcc \t\tgcc-c++ \t\tImageMagick \t\tImageMagick-devel \t\tkernel-devel \t\tlibcurl-devel \t\tlibevent-devel \t\tlibffi-devel \t\tlibjpeg-devel \t\tlibsqlite3x-devel \t\tlibxml2-devel \t\tlibxslt-devel \t\tlibyaml-devel \t\tmysql-devel \t\tmake \t\tncurses-devel \t\topenssl-devel \t\tpostgresql-devel \t\treadline-devel \t\tsqlite-devel \t\tzlib-devel \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T12:12:43.102550992Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T12:12:43.102550992Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-02T12:12:43.113767499Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T12:12:43.152579927Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T12:12:43.164024901Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T12:12:43.164024901Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-02T12:12:43.287186632Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T12:12:43.340830362Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: Intel 64-bit (x86-64) \\nOS: Fedora 37 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T12:18:25.256627336Z",
                    "created_by": "LABEL io.balena.device-type=odyssey-x86",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-02T12:18:25.256627336Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T12:18:25.316859173Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: Intel 64-bit (x86-64) \\nOS: Fedora 37 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:e89a2dafe59a58dee0fcdc4620c1e36ef34357d92655da13e1f656c33031c0b5",
                    "sha256:69aca497cb556a67ac50c1b5a13b0b871991163be5ba5fe38edcba052f8101d7",
                    "sha256:c8e99a432af543f09f782a2ed7a06ebaf935caab86c88abcd86df364a0491feb",
                    "sha256:ea6031a54383b7350fe210e7be054eeeb58f56fc6ab91f80befca8c9f9dc23f9",
                    "sha256:c79ad587f89a7cf70aeb333fa90c49ebcdda05a9ad40d078fc2594db8b33808b",
                    "sha256:687a39c8eaf68f59b3a3ebb8d4f8e47c5e1c328640c7e6e5f79de9a12fdc4717",
                    "sha256:fd4f1a77214f560e5460e645895ace4494625265cce67f2fd9d252b37b953f54",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:7407744290b4667e01e846a53491363c6a6840d38aab7fb65b2e86bbf4404f53",
                    "sha256:4e25336ffc1cdcc59619d02ee439302775d8c82da08ce4ccb59eabd07daa4388",
                    "sha256:e767cf0c4419ff5f520564c8e8325256b271d87ad22f6a3d5a45fd89adde0f8e"
                ]
            }
        },
        "latest-build-20230811": {
            "architecture": "amd64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "amd64",
                    "io.balena.device-type": "intel-nuc",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2023-08-21T20:11:27.550050185Z",
            "history": [
                {
                    "created": "2021-04-01T17:59:37.09884046Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-20T10:46:14.111891363Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-04T18:22:42.383186833Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:3242aba4f770b24f6433fa19e51c222acf5a33d2268b82c7ec43874258838970 in / "
                },
                {
                    "created": "2023-08-04T18:22:43.038358583Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-21T19:52:26.839667108Z",
                    "created_by": "LABEL io.balena.architecture=amd64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-21T19:52:26.839667108Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-21T19:54:22.723795157Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-clients \t\tsubversion \t\tautoconf \t\tautomake \t\tbzip2-devel \t\tglib2-devel \t\tgcc \t\tgcc-c++ \t\tImageMagick \t\tImageMagick-devel \t\tkernel-devel \t\tlibcurl-devel \t\tlibevent-devel \t\tlibffi-devel \t\tlibjpeg-devel \t\tlibsqlite3x-devel \t\tlibxml2-devel \t\tlibxslt-devel \t\tlibyaml-devel \t\tmysql-devel \t\tmake \t\tncurses-devel \t\topenssl-devel \t\tpostgresql-devel \t\treadline-devel \t\tsqlite-devel \t\tzlib-devel \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-21T19:54:23.176375965Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-21T19:54:23.176375965Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-21T19:54:23.201202355Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-21T19:54:23.23712854Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-21T19:54:23.26131333Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-21T19:54:23.26131333Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-21T19:54:23.59116069Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-21T19:54:24.022279917Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: Intel 64-bit (x86-64) \\nOS: Fedora 37 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-21T20:11:27.223774107Z",
                    "created_by": "LABEL io.balena.device-type=intel-nuc",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-21T20:11:27.223774107Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-21T20:11:27.550050185Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: Intel 64-bit (x86-64) \\nOS: Fedora 37 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "moby.buildkit.buildinfo.v1": "eyJmcm9udGVuZCI6ImRvY2tlcmZpbGUudjAiLCJhdHRycyI6eyJmaWxlbmFtZSI6IkRvY2tlcmZpbGUifSwic291cmNlcyI6W3sidHlwZSI6ImRvY2tlci1pbWFnZSIsInJlZiI6ImRvY2tlci5pby9iYWxlbmFsaWIvYW1kNjQtZmVkb3JhOjM3LWJ1aWxkIiwicGluIjoic2hhMjU2OmI4Y2EwZTFhMjI4MDg5NGIxYTAyYThkY2QzNGFlYWQxODZkOWUzZDc2ZGE5YmVmYzgzNWI5NGZkYjliOGIyMTAifV19",
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:8a5c91bcb42954a1d542cf1243b349f4d83fdd74d2ddc71ccaf63ffb7b661793",
                    "sha256:fca50d5c7997910a204bc6cee98bca6e25e11762221da2784c6d3645566f0ddb",
                    "sha256:4be64fe096297543948eb2a7c876c47d02169f28dabd65c560170e08bee966e3",
                    "sha256:65f4400ced043778df1b5bb4626f17a257df0ae35120bb423640d62c1439a3f1",
                    "sha256:caff34ccc40cdda8a68ae0297c4d151b5bbca631da25af2549911be90e1ef3c2",
                    "sha256:6ea724cdc64a0b9e240f959ba2d165ef41ff80d432f6f8d3975d3707c5e22f14",
                    "sha256:de27dc4d90a28555a851f898e8c56fc77d55e3376b6cc61599b7bb3d062d9b39",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:78279af2d98b856c7e3eb8299823042c3f04590533e3de29dd235f624bba1774",
                    "sha256:a0e3ac019abde8e14928fda2211c34a0f6e4eca60fc39a5e08bb7288edb1350e",
                    "sha256:154cc2927c1fbb4cd7aebd9217781a86dbc797ea500ffb63be07af775d0c3fc1"
                ]
            }
        },
        "latest-build-20230829": {
            "architecture": "amd64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "amd64",
                    "io.balena.device-type": "intel-nuc",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2023-09-02T04:14:33.049284708Z",
            "history": [
                {
                    "created": "2021-04-01T17:59:37.09884046Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-20T10:46:14.111891363Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-04T18:22:42.383186833Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:3242aba4f770b24f6433fa19e51c222acf5a33d2268b82c7ec43874258838970 in / "
                },
                {
                    "created": "2023-08-04T18:22:43.038358583Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-02T03:53:27.833103705Z",
                    "created_by": "LABEL io.balena.architecture=amd64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-02T03:53:27.833103705Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T03:55:23.544595845Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-clients \t\tsubversion \t\tautoconf \t\tautomake \t\tbzip2-devel \t\tglib2-devel \t\tgcc \t\tgcc-c++ \t\tImageMagick \t\tImageMagick-devel \t\tkernel-devel \t\tlibcurl-devel \t\tlibevent-devel \t\tlibffi-devel \t\tlibjpeg-devel \t\tlibsqlite3x-devel \t\tlibxml2-devel \t\tlibxslt-devel \t\tlibyaml-devel \t\tmysql-devel \t\tmake \t\tncurses-devel \t\topenssl-devel \t\tpostgresql-devel \t\treadline-devel \t\tsqlite-devel \t\tzlib-devel \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T03:55:24.291233821Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T03:55:24.291233821Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-02T03:55:24.311293998Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T03:55:24.348070374Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T03:55:24.367347433Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T03:55:24.367347433Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-02T03:55:24.665994243Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T03:55:25.033334288Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: Intel 64-bit (x86-64) \\nOS: Fedora 37 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T04:14:32.699603066Z",
                    "created_by": "LABEL io.balena.device-type=intel-nuc",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-02T04:14:32.699603066Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T04:14:33.049284708Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: Intel 64-bit (x86-64) \\nOS: Fedora 37 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:8a5c91bcb42954a1d542cf1243b349f4d83fdd74d2ddc71ccaf63ffb7b661793",
                    "sha256:380419ecfa744daae3d1681c557d6abf8c91c0c5fc86a2969a8ed77e9709baa4",
                    "sha256:45d9048ef9e65fcf6e4da4efc96299d353e27eee9f5ef3defb10f8d7095c8c56",
                    "sha256:481891acae181c14fa3fbd6138eb51cd8d574c7faeea79ba665a1477c191fcfb",
                    "sha256:4d11897a6210b78d28e4a33da8b405a42a3c3199c12a9203c196ded7f32f7c52",
                    "sha256:fd6fa4324a5446fc6a9f74c9637c8bf8ef74cad16394e0b576fbf7f083bde078",
                    "sha256:e872cd9e8b19b0a1ff4c22e9d9aaa97fcb9e919dd67d71bba1a2af0bbcfde817",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:c8aa81fc5a0ef29028f81a3700d9082a8202fea749f9077ac965ebed986faaff",
                    "sha256:c4ab66bffa28eba1dec89fbbb24ccd52b50f992be76db3967939d588841caf70",
                    "sha256:f139f960ec8ad33a39863647b4acf956f04cbfc91403cc1f00a3ac7f9cf662c8"
                ]
            }
        },
        "latest-build-20230904": {
            "architecture": "amd64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "amd64",
                    "io.balena.device-type": "intel-nuc",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2023-09-09T04:10:06.175134321Z",
            "history": [
                {
                    "created": "2021-04-01T17:59:37.09884046Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-20T10:46:14.111891363Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-04T18:22:42.383186833Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:3242aba4f770b24f6433fa19e51c222acf5a33d2268b82c7ec43874258838970 in / "
                },
                {
                    "created": "2023-08-04T18:22:43.038358583Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T03:59:08.044755432Z",
                    "created_by": "LABEL io.balena.architecture=amd64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T03:59:08.044755432Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:01:03.762699262Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-clients \t\tsubversion \t\tautoconf \t\tautomake \t\tbzip2-devel \t\tglib2-devel \t\tgcc \t\tgcc-c++ \t\tImageMagick \t\tImageMagick-devel \t\tkernel-devel \t\tlibcurl-devel \t\tlibevent-devel \t\tlibffi-devel \t\tlibjpeg-devel \t\tlibsqlite3x-devel \t\tlibxml2-devel \t\tlibxslt-devel \t\tlibyaml-devel \t\tmysql-devel \t\tmake \t\tncurses-devel \t\topenssl-devel \t\tpostgresql-devel \t\treadline-devel \t\tsqlite-devel \t\tzlib-devel \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:01:04.206597884Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:01:04.206597884Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T04:01:04.222130076Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:01:04.229575164Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:01:04.270324895Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:01:04.270324895Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T04:01:04.552952939Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:01:04.768119479Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: Intel 64-bit (x86-64) \\nOS: Fedora 37 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:10:05.847721624Z",
                    "created_by": "LABEL io.balena.device-type=intel-nuc",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T04:10:05.847721624Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:10:06.175134321Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: Intel 64-bit (x86-64) \\nOS: Fedora 37 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:8a5c91bcb42954a1d542cf1243b349f4d83fdd74d2ddc71ccaf63ffb7b661793",
                    "sha256:7e137976dd3d65e1b7be54fc9701bd78bf00b6ee978ad81280b8bd275035d3a7",
                    "sha256:d731929dc50e1508b3da4a251cc5fce79452b733659ea85ab3bde8f093af9bf5",
                    "sha256:4b3ff1f4636fe0d304548a3ccd700b1ecc4ba1ec39a6deb8da2d0dbc6c113c38",
                    "sha256:f2b6f5a3ccb64e90278fd1cc7a829d3a1605bee1feb2d70b74cf510874920ce9",
                    "sha256:57b8dcaca48985fd0a6f32974c3f7061ca0bd95e7cc5678332d353ca671d4f4d",
                    "sha256:12382a969406127893595f87e10aa73f289decb5c9faceafaa395c967f378bf1",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:a54198a4f6973b4d2f87e98c928f6e533cffb9e4735af1def0a82b564af8d056",
                    "sha256:79b19829481ccbe4a19e650ba36bd16d720c94e05d8032496bdd74911c809423",
                    "sha256:be5adffc9f6673871c251d385c74a582a6418370ec621ddd497c3c2575b9d025"
                ]
            }
        },
        "latest-build-20230911": {
            "architecture": "amd64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "amd64",
                    "io.balena.device-type": "odyssey-x86",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2023-09-11T23:03:18.07533094Z",
            "history": [
                {
                    "created": "2021-04-01T17:59:37.09884046Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-20T10:46:14.111891363Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-04T18:22:42.383186833Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:3242aba4f770b24f6433fa19e51c222acf5a33d2268b82c7ec43874258838970 in / "
                },
                {
                    "created": "2023-08-04T18:22:43.038358583Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T03:59:08.044755432Z",
                    "created_by": "LABEL io.balena.architecture=amd64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T03:59:08.044755432Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:01:03.762699262Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-clients \t\tsubversion \t\tautoconf \t\tautomake \t\tbzip2-devel \t\tglib2-devel \t\tgcc \t\tgcc-c++ \t\tImageMagick \t\tImageMagick-devel \t\tkernel-devel \t\tlibcurl-devel \t\tlibevent-devel \t\tlibffi-devel \t\tlibjpeg-devel \t\tlibsqlite3x-devel \t\tlibxml2-devel \t\tlibxslt-devel \t\tlibyaml-devel \t\tmysql-devel \t\tmake \t\tncurses-devel \t\topenssl-devel \t\tpostgresql-devel \t\treadline-devel \t\tsqlite-devel \t\tzlib-devel \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:01:04.206597884Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:01:04.206597884Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T04:01:04.222130076Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:01:04.229575164Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:01:04.270324895Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:01:04.270324895Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T04:01:04.552952939Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:01:04.768119479Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: Intel 64-bit (x86-64) \\nOS: Fedora 37 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-11T23:03:18.023731172Z",
                    "created_by": "LABEL io.balena.device-type=odyssey-x86",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-11T23:03:18.023731172Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-11T23:03:18.07533094Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: Intel 64-bit (x86-64) \\nOS: Fedora 37 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:8a5c91bcb42954a1d542cf1243b349f4d83fdd74d2ddc71ccaf63ffb7b661793",
                    "sha256:7e137976dd3d65e1b7be54fc9701bd78bf00b6ee978ad81280b8bd275035d3a7",
                    "sha256:d731929dc50e1508b3da4a251cc5fce79452b733659ea85ab3bde8f093af9bf5",
                    "sha256:4b3ff1f4636fe0d304548a3ccd700b1ecc4ba1ec39a6deb8da2d0dbc6c113c38",
                    "sha256:f2b6f5a3ccb64e90278fd1cc7a829d3a1605bee1feb2d70b74cf510874920ce9",
                    "sha256:57b8dcaca48985fd0a6f32974c3f7061ca0bd95e7cc5678332d353ca671d4f4d",
                    "sha256:12382a969406127893595f87e10aa73f289decb5c9faceafaa395c967f378bf1",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:a54198a4f6973b4d2f87e98c928f6e533cffb9e4735af1def0a82b564af8d056",
                    "sha256:bb40f82ef3d173e295885cb7e546855f8c4d6e0389e290bbd759abeaa7fc35c2",
                    "sha256:52b09e99e8ef8c3d692b83f0f30eb481c911d97486c5511104564e4e2c74933c"
                ]
            }
        },
        "latest-build-20231103": {
            "architecture": "amd64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "amd64",
                    "io.balena.device-type": "odyssey-x86",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2023-11-04T20:35:20.583832402Z",
            "history": [
                {
                    "created": "2021-04-01T17:59:37.09884046Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-20T10:46:14.111891363Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-06T18:22:29.551043544Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:395273c1903fb6b62f46bbf72259ef76c6eb16f475d22abd47b7633b2b77a847 in / "
                },
                {
                    "created": "2023-10-06T18:22:30.235678845Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-04T20:25:21.407334619Z",
                    "created_by": "LABEL io.balena.architecture=amd64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-04T20:25:21.407334619Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T20:27:17.892115039Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-clients \t\tsubversion \t\tautoconf \t\tautomake \t\tbzip2-devel \t\tglib2-devel \t\tgcc \t\tgcc-c++ \t\tImageMagick \t\tImageMagick-devel \t\tkernel-devel \t\tlibcurl-devel \t\tlibevent-devel \t\tlibffi-devel \t\tlibjpeg-devel \t\tlibsqlite3x-devel \t\tlibxml2-devel \t\tlibxslt-devel \t\tlibyaml-devel \t\tmysql-devel \t\tmake \t\tncurses-devel \t\topenssl-devel \t\tpostgresql-devel \t\treadline-devel \t\tsqlite-devel \t\tzlib-devel \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T20:27:18.439454634Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T20:27:18.439454634Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-04T20:27:18.454973368Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T20:27:18.470340301Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T20:27:18.487471539Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T20:27:18.487471539Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-04T20:27:18.680851861Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T20:27:18.773652164Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: Intel 64-bit (x86-64) \\nOS: Fedora 37 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T20:35:20.48410019Z",
                    "created_by": "LABEL io.balena.device-type=odyssey-x86",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-04T20:35:20.48410019Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T20:35:20.583832402Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: Intel 64-bit (x86-64) \\nOS: Fedora 37 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:9b5a2675a1f8f633773bcb6f6dbade49054173b4bfd1599e2bbe64e975812329",
                    "sha256:fcb6fe73c1ef90bf51dd605419a7631f779162e59e7f05ae3b53221df48a43d8",
                    "sha256:962746f70f1d6e5a3e3168d70e500e915bedb07d8152d62899a9da3e9c94e790",
                    "sha256:2862fc443800750ff8488291956b775afd75216be276cc511dda6bbf03d8de12",
                    "sha256:d01eadb15f6285e638745bc495d75bdb9182744f77f7ae8587545a05d7d566d5",
                    "sha256:c2e14895ce1e2f89fb1bce52cb26e6d6cb3c810559d5a38e9d54d9524c660cc2",
                    "sha256:fad82e414fb32cf2575eafc67ecf1cd732bf7e572cca9049c237b73f270708c2",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:7bcefa9d8f8292e9c0c82b19ebba1cb5a8e2c499fbe7adb3de47fbf5b81fc2a0",
                    "sha256:538899c8434243ecb6a760a03b6942cf5c621a5d8e9b828f726b27c9e82473a1",
                    "sha256:da72d708db0029f206e3d7febe246bfc173619448141b2fda9c91c27310bcbf9"
                ]
            }
        },
        "latest-build-20231204": {
            "architecture": "amd64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "amd64",
                    "io.balena.device-type": "odyssey-x86",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2023-12-06T18:39:50.48066709Z",
            "history": [
                {
                    "created": "2021-04-01T17:59:37.09884046Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-20T10:46:14.111891363Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-29T00:26:01.517560423Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:533e3405b5c87c5a7239c02ef2d954b1072df5afeee2139a9e2dd133dd4612b6 in / "
                },
                {
                    "created": "2023-11-29T00:26:02.196411879Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T17:56:20.722691923Z",
                    "created_by": "LABEL io.balena.architecture=amd64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T17:56:20.722691923Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T17:57:56.524009334Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-clients \t\tsubversion \t\tautoconf \t\tautomake \t\tbzip2-devel \t\tglib2-devel \t\tgcc \t\tgcc-c++ \t\tImageMagick \t\tImageMagick-devel \t\tkernel-devel \t\tlibcurl-devel \t\tlibevent-devel \t\tlibffi-devel \t\tlibjpeg-devel \t\tlibsqlite3x-devel \t\tlibxml2-devel \t\tlibxslt-devel \t\tlibyaml-devel \t\tmysql-devel \t\tmake \t\tncurses-devel \t\topenssl-devel \t\tpostgresql-devel \t\treadline-devel \t\tsqlite-devel \t\tzlib-devel \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T17:57:57.379527234Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T17:57:57.379527234Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T17:57:57.389732057Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T17:57:57.423561452Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T17:57:57.433722035Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T17:57:57.433722035Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T17:57:57.545086844Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T17:57:57.602122598Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: Intel 64-bit (x86-64) \\nOS: Fedora 37 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T18:39:50.397682613Z",
                    "created_by": "LABEL io.balena.device-type=odyssey-x86",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T18:39:50.397682613Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T18:39:50.48066709Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: Intel 64-bit (x86-64) \\nOS: Fedora 37 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:e89a2dafe59a58dee0fcdc4620c1e36ef34357d92655da13e1f656c33031c0b5",
                    "sha256:3842ca05c6d6e63c2a499998a21f9e8fe0a8c5b17a196f1afa8c9b1d890237ef",
                    "sha256:6d1a5962fca1e170856c102276a8c2a0746037e047b15c07e3b05d0481f8cfc5",
                    "sha256:1e4c76b6157009b212c579ab2f6ff4beb320ea317783e890191e2ae5a236d56b",
                    "sha256:053fbadfb0bacdce1c5e0f950f6b186a8af7534a581ac45fb3086f5e116cb1e3",
                    "sha256:e774d478e2a8b593f281347cdc94a7bad960536f7d3e33618efc775213676c1e",
                    "sha256:033f50077f04b58e9bf1a8976908f2f4c4171040479df8cf0ece2274da1917f5",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:923da2b8a15a5b69f23ad282728f5163b99f449b783abab05b0e718e08cd322b",
                    "sha256:0e9d3865461f16cfbc44d5c8319fceffe05a448abd4373b584ed418691ced2fe",
                    "sha256:6e83982c719d46234ff40152425579247b6fe9722ed6c4f49c7d65d6c8e59dde"
                ]
            }
        },
        "latest-build-20240105": {
            "architecture": "amd64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "amd64",
                    "io.balena.device-type": "odyssey-x86",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2024-01-05T14:10:06.297576096Z",
            "history": [
                {
                    "created": "2021-04-01T17:59:37.09884046Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-20T10:46:14.111891363Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-29T00:26:01.517560423Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:533e3405b5c87c5a7239c02ef2d954b1072df5afeee2139a9e2dd133dd4612b6 in / "
                },
                {
                    "created": "2023-11-29T00:26:02.196411879Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-05T13:59:49.214004522Z",
                    "created_by": "LABEL io.balena.architecture=amd64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-05T13:59:49.214004522Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-05T14:01:12.249688157Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-clients \t\tsubversion \t\tautoconf \t\tautomake \t\tbzip2-devel \t\tglib2-devel \t\tgcc \t\tgcc-c++ \t\tImageMagick \t\tImageMagick-devel \t\tkernel-devel \t\tlibcurl-devel \t\tlibevent-devel \t\tlibffi-devel \t\tlibjpeg-devel \t\tlibsqlite3x-devel \t\tlibxml2-devel \t\tlibxslt-devel \t\tlibyaml-devel \t\tmysql-devel \t\tmake \t\tncurses-devel \t\topenssl-devel \t\tpostgresql-devel \t\treadline-devel \t\tsqlite-devel \t\tzlib-devel \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-05T14:01:12.707158106Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-05T14:01:12.707158106Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-05T14:01:12.716964591Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-05T14:01:12.751264858Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-05T14:01:12.761390183Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-05T14:01:12.761390183Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-05T14:01:12.874874682Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-05T14:01:12.929920306Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: Intel 64-bit (x86-64) \\nOS: Fedora 37 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-05T14:10:06.229865491Z",
                    "created_by": "LABEL io.balena.device-type=odyssey-x86",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-05T14:10:06.229865491Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-05T14:10:06.297576096Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: Intel 64-bit (x86-64) \\nOS: Fedora 37 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:e89a2dafe59a58dee0fcdc4620c1e36ef34357d92655da13e1f656c33031c0b5",
                    "sha256:c2b0bfda8e0222fe49c405f41cdeb903bc8db94e7f545187c394fc568ac12020",
                    "sha256:f5c6b692cb88e999d1cbb46d0f2da2f0a37f144ab3e0166f230bb66516bb5f95",
                    "sha256:d137905e5f91de2ac0fb4c5d3f763020de20469d0d46eb07a028b8cfed57a6e3",
                    "sha256:42a2981ff5d920ced544c33d3bec7468962d88c17284d4fe2811980952a35f48",
                    "sha256:1d6896688dae1e6ba3625fc4e907e343e7da67fa5024bb250005da4f0b9ef4df",
                    "sha256:1eaab1e94f855c44a6147d9a7aa71837abc423b55156998d85c09e9849c104a4",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:89eb9eb1f0f77805dc2f2e3cada700fdd9e8faacc94e139145a5f1974c8b6c5f",
                    "sha256:cfdec5a3da8a78adc20ca1063a036436c23a678bac19b92030229b8ae7fcb2db",
                    "sha256:7c36af6f508feebaeffb0ce9041f79727c5397dd8ad7758ab69810a314b7bda4"
                ]
            }
        },
        "latest-build-20240201": {
            "architecture": "amd64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "amd64",
                    "io.balena.device-type": "odyssey-x86",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2024-02-03T22:43:55.87440241Z",
            "history": [
                {
                    "created": "2021-04-01T17:59:37.09884046Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-20T10:46:14.111891363Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-29T00:26:01.517560423Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:533e3405b5c87c5a7239c02ef2d954b1072df5afeee2139a9e2dd133dd4612b6 in / "
                },
                {
                    "created": "2023-11-29T00:26:02.196411879Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-03T22:35:40.064848811Z",
                    "created_by": "LABEL io.balena.architecture=amd64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-03T22:35:40.064848811Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-03T22:37:17.384372627Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-clients \t\tsubversion \t\tautoconf \t\tautomake \t\tbzip2-devel \t\tglib2-devel \t\tgcc \t\tgcc-c++ \t\tImageMagick \t\tImageMagick-devel \t\tkernel-devel \t\tlibcurl-devel \t\tlibevent-devel \t\tlibffi-devel \t\tlibjpeg-devel \t\tlibsqlite3x-devel \t\tlibxml2-devel \t\tlibxslt-devel \t\tlibyaml-devel \t\tmysql-devel \t\tmake \t\tncurses-devel \t\topenssl-devel \t\tpostgresql-devel \t\treadline-devel \t\tsqlite-devel \t\tzlib-devel \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-03T22:37:17.935653796Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-03T22:37:17.935653796Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-03T22:37:17.944726096Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-03T22:37:17.953324557Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-03T22:37:17.977874773Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-03T22:37:17.977874773Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-03T22:37:18.094121056Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-03T22:37:18.156112032Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: Intel 64-bit (x86-64) \\nOS: Fedora 37 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-03T22:43:55.810318896Z",
                    "created_by": "LABEL io.balena.device-type=odyssey-x86",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-03T22:43:55.810318896Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-03T22:43:55.87440241Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: Intel 64-bit (x86-64) \\nOS: Fedora 37 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:e89a2dafe59a58dee0fcdc4620c1e36ef34357d92655da13e1f656c33031c0b5",
                    "sha256:5c6855906a6763f5ad3b5d5b4a9d9a0bce223062e0688a647e947320483b006b",
                    "sha256:f9f29f11fe2e98df34fab0ae39c9a61232ef36ea5f5603974f2ab314f6050eeb",
                    "sha256:d6a862f0a1187dfe9aaf487a1ce7cd50229d6cab12379a0a2a84e97da8608923",
                    "sha256:8aaee800dd20c2e29fdaaf85cae06bafe51333a8c1da7e449339fc2080434088",
                    "sha256:3263c0eab72120171008588fdc84227c2a13e15b4244b361821878df67940005",
                    "sha256:09a8a100dff40d87c1e109a260d5a3b55912a360d06594203c999991c248b2ab",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:8b8bb4b6826d6982f8ca09042e3cac6ce658b7b70115e35a948c1cf787a5f00a",
                    "sha256:926ee46536a161cca25e51c8b4d37c9e2665540da5035cbf506dbe6ebb7e1129",
                    "sha256:2e6ba2e1f97f8a00f21fb4260cf77cbcb93c6c653537530dddc080df37136070"
                ]
            }
        },
        "latest-build-20240304": {
            "architecture": "amd64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "amd64",
                    "io.balena.device-type": "odyssey-x86",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2024-03-05T18:48:36.537836424Z",
            "history": [
                {
                    "created": "2021-04-01T17:59:37.09884046Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-20T10:46:14.111891363Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-29T00:26:01.517560423Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:533e3405b5c87c5a7239c02ef2d954b1072df5afeee2139a9e2dd133dd4612b6 in / "
                },
                {
                    "created": "2023-11-29T00:26:02.196411879Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T18:27:05.923489385Z",
                    "created_by": "LABEL io.balena.architecture=amd64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T18:27:05.923489385Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T18:28:33.175113465Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-clients \t\tsubversion \t\tautoconf \t\tautomake \t\tbzip2-devel \t\tglib2-devel \t\tgcc \t\tgcc-c++ \t\tImageMagick \t\tImageMagick-devel \t\tkernel-devel \t\tlibcurl-devel \t\tlibevent-devel \t\tlibffi-devel \t\tlibjpeg-devel \t\tlibsqlite3x-devel \t\tlibxml2-devel \t\tlibxslt-devel \t\tlibyaml-devel \t\tmysql-devel \t\tmake \t\tncurses-devel \t\topenssl-devel \t\tpostgresql-devel \t\treadline-devel \t\tsqlite-devel \t\tzlib-devel \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T18:28:33.632877025Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T18:28:33.632877025Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T18:28:33.644452588Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T18:28:33.680550543Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T18:28:33.690272042Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T18:28:33.690272042Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T18:28:33.809877255Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T18:28:33.868215984Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: Intel 64-bit (x86-64) \\nOS: Fedora 37 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T18:48:36.482470886Z",
                    "created_by": "LABEL io.balena.device-type=odyssey-x86",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T18:48:36.482470886Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T18:48:36.537836424Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: Intel 64-bit (x86-64) \\nOS: Fedora 37 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:e89a2dafe59a58dee0fcdc4620c1e36ef34357d92655da13e1f656c33031c0b5",
                    "sha256:4c5901fe19b69519020c62b8dc6bf7d254f2d69f8287d8422ddc2bd803643b8d",
                    "sha256:07a772ab26c9756e7bf90b4b4f4ca0372e3f67f7ec2dea6a25b440f3db5b9e73",
                    "sha256:612ba352fe190d5c4c2ba405d6ee1f67eba5d8e50bfb44744f254ecd81860eeb",
                    "sha256:961a6c13cbef5948a4df659d3a8ff2fb0f6f1d125e19da8c84936e63db6ad0e6",
                    "sha256:b50cabcd7ebd1753b2e8fc37b3a333eb2e22ecd7cff5704bbb32bcb3b30dab27",
                    "sha256:02beef5ad9e76eeed930af8b873a9b42e8dfff62ff49a003de7fab25578f7919",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:3d8d7a509761c546acaa570e9197540b81153699c0fb92ba41208b3d41c2a3aa",
                    "sha256:113c3fc4f393f3cbfcc72a5d5a4494f8cbfb46474fbc6b81875aef88ef7c1d59",
                    "sha256:b0c1a5c8e3c85b8731d4defab67a7bf68fabfba958f54ff5d35f5f19d4f346d6"
                ]
            }
        },
        "latest-build-20240401": {
            "architecture": "amd64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "amd64",
                    "io.balena.device-type": "odyssey-x86",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                }
            },
            "created": "2024-04-02T02:40:24.807277799Z",
            "history": [
                {
                    "created": "2021-04-01T17:59:37.09884046Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-20T10:46:14.111891363Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-29T00:26:01.517560423Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:533e3405b5c87c5a7239c02ef2d954b1072df5afeee2139a9e2dd133dd4612b6 in / "
                },
                {
                    "created": "2023-11-29T00:26:02.196411879Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T02:31:15.826913675Z",
                    "created_by": "LABEL io.balena.architecture=amd64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T02:31:15.826913675Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T02:32:52.774190105Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-clients \t\tsubversion \t\tautoconf \t\tautomake \t\tbzip2-devel \t\tglib2-devel \t\tgcc \t\tgcc-c++ \t\tImageMagick \t\tImageMagick-devel \t\tkernel-devel \t\tlibcurl-devel \t\tlibevent-devel \t\tlibffi-devel \t\tlibjpeg-devel \t\tlibsqlite3x-devel \t\tlibxml2-devel \t\tlibxslt-devel \t\tlibyaml-devel \t\tmysql-devel \t\tmake \t\tncurses-devel \t\topenssl-devel \t\tpostgresql-devel \t\treadline-devel \t\tsqlite-devel \t\tzlib-devel \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T02:32:53.38868582Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T02:32:53.38868582Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T02:32:53.39888877Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T02:32:53.432372402Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T02:32:53.44641212Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T02:32:53.44641212Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T02:32:53.561322731Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T02:32:53.621444489Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: Intel 64-bit (x86-64) \\nOS: Fedora 37 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T02:40:24.741977883Z",
                    "created_by": "LABEL io.balena.device-type=odyssey-x86",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T02:40:24.741977883Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T02:40:24.807277799Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: Intel 64-bit (x86-64) \\nOS: Fedora 37 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:e89a2dafe59a58dee0fcdc4620c1e36ef34357d92655da13e1f656c33031c0b5",
                    "sha256:3b4a14f643484648a592483c6db333ff705c90f2df7537999c385a84e2f2a09d",
                    "sha256:2e68944bc9e69d0f84209aa4260facaf9274521f006aaacb762f3bbc6a769279",
                    "sha256:9ae269c28a0f741cc31822e336b2f07b225518d7767091bab803a9d607be13e9",
                    "sha256:ae0fb47eb6b0032050ca4b6ee6a97b52cee74de5157fe3e5642017c7067facec",
                    "sha256:679c7bfd1235e63fd9a0cd516851f3887aa2d711addadbdaaf3aade010c1dfd2",
                    "sha256:c196a8b7949dcdebecfda50b75380c60c2db6399510c124ff734d82c4830442d",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:52598cc0d230104cefdf66e01d81a6f2a0a74f25e046faba9f79db9a1748f788",
                    "sha256:95f6c15da05e86492519edd38c311812c6eb410ec34a829182583608a4bfb7a8",
                    "sha256:40e9c018003815646e25de094c2f50fd3a5c980715887ffafe4beadbd4da10b5"
                ]
            }
        },
        "latest-build-20240408": {
            "architecture": "amd64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "amd64",
                    "io.balena.device-type": "odyssey-x86",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                }
            },
            "created": "2024-04-09T13:46:36.534732858Z",
            "history": [
                {
                    "created": "2021-04-01T17:59:37.09884046Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-20T10:46:14.111891363Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-29T00:26:01.517560423Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:533e3405b5c87c5a7239c02ef2d954b1072df5afeee2139a9e2dd133dd4612b6 in / "
                },
                {
                    "created": "2023-11-29T00:26:02.196411879Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:35:32.311936072Z",
                    "created_by": "LABEL io.balena.architecture=amd64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:35:32.311936072Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:37:09.989098571Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-clients \t\tsubversion \t\tautoconf \t\tautomake \t\tbzip2-devel \t\tglib2-devel \t\tgcc \t\tgcc-c++ \t\tImageMagick \t\tImageMagick-devel \t\tkernel-devel \t\tlibcurl-devel \t\tlibevent-devel \t\tlibffi-devel \t\tlibjpeg-devel \t\tlibsqlite3x-devel \t\tlibxml2-devel \t\tlibxslt-devel \t\tlibyaml-devel \t\tmysql-devel \t\tmake \t\tncurses-devel \t\topenssl-devel \t\tpostgresql-devel \t\treadline-devel \t\tsqlite-devel \t\tzlib-devel \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:37:10.564395945Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:37:10.564395945Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:37:10.574556465Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:37:10.584642061Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:37:10.631213109Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:37:10.631213109Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:37:10.748260236Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:37:10.811715724Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: Intel 64-bit (x86-64) \\nOS: Fedora 37 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:46:36.475994426Z",
                    "created_by": "LABEL io.balena.device-type=odyssey-x86",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:46:36.475994426Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:46:36.534732858Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: Intel 64-bit (x86-64) \\nOS: Fedora 37 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:e89a2dafe59a58dee0fcdc4620c1e36ef34357d92655da13e1f656c33031c0b5",
                    "sha256:bb34a8980d43cf2f520e0436ab654bb9957a13ad2d9646ceda0678e767a91200",
                    "sha256:8d4f726150dc4bef55a136be112ae788dc1aa16102f0b8607c8e83aa48dd15c1",
                    "sha256:73dcc22213100073b3b1d4c24734bf4a5d1b34499ea9d80b428d940fe7b11283",
                    "sha256:9806effe4f43e07e7459013cb5d58812da53acda1562880af84005a22abac2f0",
                    "sha256:223c15d31d789ff55bdeec8d049c6732f65a685e17aa79f9b0aed12db10e4adc",
                    "sha256:051c24887f6281518e5a145879a67605ae9cc70a1c9d713e232e3f3c61dae253",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:c23c80b84860623b2ce218c703824110ba04099cc2c2122f7f57f05db3580136",
                    "sha256:6a9ca3074ec3849e36d4ca6daf9cc3591d4a4273d6c10d2b4366bf0ee546fd9b",
                    "sha256:dd38f759eb27e5e3dbd3aa234c63396c7e9485296012512c8e16594330bb2160"
                ]
            }
        },
        "latest-build-20240429": {
            "architecture": "amd64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "amd64",
                    "io.balena.device-type": "odyssey-x86",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                }
            },
            "created": "2024-05-02T12:18:25.316859173Z",
            "history": [
                {
                    "created": "2021-04-01T17:59:37.09884046Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-20T10:46:14.111891363Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-29T00:26:01.517560423Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:533e3405b5c87c5a7239c02ef2d954b1072df5afeee2139a9e2dd133dd4612b6 in / "
                },
                {
                    "created": "2023-11-29T00:26:02.196411879Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-02T12:11:17.879557284Z",
                    "created_by": "LABEL io.balena.architecture=amd64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-02T12:11:17.879557284Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T12:12:42.641900869Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-clients \t\tsubversion \t\tautoconf \t\tautomake \t\tbzip2-devel \t\tglib2-devel \t\tgcc \t\tgcc-c++ \t\tImageMagick \t\tImageMagick-devel \t\tkernel-devel \t\tlibcurl-devel \t\tlibevent-devel \t\tlibffi-devel \t\tlibjpeg-devel \t\tlibsqlite3x-devel \t\tlibxml2-devel \t\tlibxslt-devel \t\tlibyaml-devel \t\tmysql-devel \t\tmake \t\tncurses-devel \t\topenssl-devel \t\tpostgresql-devel \t\treadline-devel \t\tsqlite-devel \t\tzlib-devel \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T12:12:43.102550992Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T12:12:43.102550992Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-02T12:12:43.113767499Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T12:12:43.152579927Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T12:12:43.164024901Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T12:12:43.164024901Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-02T12:12:43.287186632Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T12:12:43.340830362Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: Intel 64-bit (x86-64) \\nOS: Fedora 37 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T12:18:25.256627336Z",
                    "created_by": "LABEL io.balena.device-type=odyssey-x86",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-02T12:18:25.256627336Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T12:18:25.316859173Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: Intel 64-bit (x86-64) \\nOS: Fedora 37 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:e89a2dafe59a58dee0fcdc4620c1e36ef34357d92655da13e1f656c33031c0b5",
                    "sha256:69aca497cb556a67ac50c1b5a13b0b871991163be5ba5fe38edcba052f8101d7",
                    "sha256:c8e99a432af543f09f782a2ed7a06ebaf935caab86c88abcd86df364a0491feb",
                    "sha256:ea6031a54383b7350fe210e7be054eeeb58f56fc6ab91f80befca8c9f9dc23f9",
                    "sha256:c79ad587f89a7cf70aeb333fa90c49ebcdda05a9ad40d078fc2594db8b33808b",
                    "sha256:687a39c8eaf68f59b3a3ebb8d4f8e47c5e1c328640c7e6e5f79de9a12fdc4717",
                    "sha256:fd4f1a77214f560e5460e645895ace4494625265cce67f2fd9d252b37b953f54",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:7407744290b4667e01e846a53491363c6a6840d38aab7fb65b2e86bbf4404f53",
                    "sha256:4e25336ffc1cdcc59619d02ee439302775d8c82da08ce4ccb59eabd07daa4388",
                    "sha256:e767cf0c4419ff5f520564c8e8325256b271d87ad22f6a3d5a45fd89adde0f8e"
                ]
            }
        },
        "latest-run": {
            "architecture": "amd64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "amd64",
                    "io.balena.device-type": "odyssey-x86",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                }
            },
            "created": "2024-05-02T12:18:12.985891796Z",
            "history": [
                {
                    "created": "2021-04-01T17:59:37.09884046Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-20T10:46:14.111891363Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-29T00:26:01.517560423Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:533e3405b5c87c5a7239c02ef2d954b1072df5afeee2139a9e2dd133dd4612b6 in / "
                },
                {
                    "created": "2023-11-29T00:26:02.196411879Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-02T12:11:35.787518344Z",
                    "created_by": "LABEL io.balena.architecture=amd64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-02T12:11:35.787518344Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T12:11:36.155885234Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T12:11:36.155885234Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-02T12:11:36.166220512Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T12:11:36.201352732Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T12:11:36.229371253Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T12:11:36.229371253Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-02T12:11:36.489410396Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T12:11:36.547751991Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: Intel 64-bit (x86-64) \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T12:18:12.910718736Z",
                    "created_by": "LABEL io.balena.device-type=odyssey-x86",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-02T12:18:12.910718736Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T12:18:12.985891796Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: Intel 64-bit (x86-64) \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:e89a2dafe59a58dee0fcdc4620c1e36ef34357d92655da13e1f656c33031c0b5",
                    "sha256:0a648d9cc45ccee05b7dda5c00174ff854e8f08899edb49b4b9ea8c61b058805",
                    "sha256:473314ea19844329bd2910bee3a05e7fd8996962d93719e1c3837927325ce390",
                    "sha256:1a8b3c1e1273d38aa2a3915c1cc142013ca3810eabdbad9eebc5997adc885bc2",
                    "sha256:ecc646eb7ee27032fc4faf92282b9e1d4176e672e63e5859c956e3b9b81e3777",
                    "sha256:dcaa3246209255ba81e531a54247f2762caac0def1a733005d0f168a69d14815",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:b537c15fb5e1acaa06a911b4b340ad545722901d3c792694a6cf8441f4bd8739",
                    "sha256:2738d555c5ce0d58e21ca1d22b99000d3deac89174240ba1bde438476ef3fdc4",
                    "sha256:5be83af9977c7d94e3c47abf63914eb6b1faed6b1bdc37a84b60c687ad11330a"
                ]
            }
        },
        "latest-run-20230811": {
            "architecture": "amd64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "amd64",
                    "io.balena.device-type": "intel-nuc",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2023-08-21T20:15:55.822498992Z",
            "history": [
                {
                    "created": "2021-04-01T17:59:37.09884046Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-20T10:46:14.111891363Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-04T18:22:42.383186833Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:3242aba4f770b24f6433fa19e51c222acf5a33d2268b82c7ec43874258838970 in / "
                },
                {
                    "created": "2023-08-04T18:22:43.038358583Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-21T19:52:26.839667108Z",
                    "created_by": "LABEL io.balena.architecture=amd64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-21T19:52:26.839667108Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-21T19:59:43.225911138Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-21T19:59:43.225911138Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-21T19:59:43.265017408Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-21T19:59:43.278822397Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-21T19:59:43.31418837Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-21T19:59:43.31418837Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-21T19:59:43.649629911Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-21T19:59:44.091734469Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: Intel 64-bit (x86-64) \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-21T20:15:55.528470281Z",
                    "created_by": "LABEL io.balena.device-type=intel-nuc",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-21T20:15:55.528470281Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-21T20:15:55.822498992Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: Intel 64-bit (x86-64) \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "moby.buildkit.buildinfo.v1": "eyJmcm9udGVuZCI6ImRvY2tlcmZpbGUudjAiLCJhdHRycyI6eyJmaWxlbmFtZSI6IkRvY2tlcmZpbGUifSwic291cmNlcyI6W3sidHlwZSI6ImRvY2tlci1pbWFnZSIsInJlZiI6ImRvY2tlci5pby9iYWxlbmFsaWIvYW1kNjQtZmVkb3JhOjM3LXJ1biIsInBpbiI6InNoYTI1Njo0ZDZkZjdlMzYzZTNiZmE5ZWZkNDVjODIxMjk2ZTE3MmMwOTAzMmE3OTU0MTkyZjczMDQxMWM4OTlmZWYyNGI3In1dfQ==",
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:8a5c91bcb42954a1d542cf1243b349f4d83fdd74d2ddc71ccaf63ffb7b661793",
                    "sha256:fca50d5c7997910a204bc6cee98bca6e25e11762221da2784c6d3645566f0ddb",
                    "sha256:3480908bbabedafa2f826ca9f403cb09eecf0383304b8bbe14e68de7beca1ddf",
                    "sha256:0dd58378b6f4109aefd89403151fb2cbfb7b5b5a829252b6828dd74ac3d4197f",
                    "sha256:597c7f0663815a1c3890fa212a75c9d37ecdc09d52d9952fd5b53e5d9caf6212",
                    "sha256:dbf5739d78d524aac1abdba9884c01b35edc636d914b379819738a3ef75648d7",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:21f04c3046c703b1a27343fba484e8a1bcdb988c7d8555b059c066ef4f0220d9",
                    "sha256:ce2118ba52ad3ebcbc8cbd5810227ff666d0cd51fad51fc828f171d92af3d74d",
                    "sha256:d111ea2ab348ba7c188e6a0c3aac986f1b5b2009b38e7416bf4ff012d1666f45"
                ]
            }
        },
        "latest-run-20230829": {
            "architecture": "amd64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "amd64",
                    "io.balena.device-type": "intel-nuc",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2023-09-02T04:17:48.735207793Z",
            "history": [
                {
                    "created": "2021-04-01T17:59:37.09884046Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-20T10:46:14.111891363Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-04T18:22:42.383186833Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:3242aba4f770b24f6433fa19e51c222acf5a33d2268b82c7ec43874258838970 in / "
                },
                {
                    "created": "2023-08-04T18:22:43.038358583Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-02T03:53:27.833103705Z",
                    "created_by": "LABEL io.balena.architecture=amd64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-02T03:53:27.833103705Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T03:59:29.487734532Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T03:59:29.487734532Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-02T03:59:29.506051361Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T03:59:29.527922573Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T03:59:29.557992178Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T03:59:29.557992178Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-02T03:59:29.842622847Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T03:59:30.225039407Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: Intel 64-bit (x86-64) \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T04:17:48.484867648Z",
                    "created_by": "LABEL io.balena.device-type=intel-nuc",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-02T04:17:48.484867648Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T04:17:48.735207793Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: Intel 64-bit (x86-64) \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:8a5c91bcb42954a1d542cf1243b349f4d83fdd74d2ddc71ccaf63ffb7b661793",
                    "sha256:380419ecfa744daae3d1681c557d6abf8c91c0c5fc86a2969a8ed77e9709baa4",
                    "sha256:58c1f2554a6401c303a1ee84178afc50a8b06dab7b87655f31d30c850c487334",
                    "sha256:c3f7ce1d467d976dfa04264cd86521d73064a1ed6e9fb71dc3410e477ae870ae",
                    "sha256:6f5c6abfd2b62955e4a3b682bb44712ef50b0fd3543e11c7d4fc17f1b82f6907",
                    "sha256:56469bde0dc559a1839e14d976f279c90e21acf0ed0b000c6a72d55ee8220876",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:8e90a20b4674cca48347191b933581e0ed4da241493cbfdf5a194bae7e5f8292",
                    "sha256:95a838d8cef27239aa14c47871c7b64b3b90b793856807b90df22d3881fd91b0",
                    "sha256:ec1d9080493cb8830eb541d3ffd2142141dc02d8e2e41bccd274018f0267e682"
                ]
            }
        },
        "latest-run-20230904": {
            "architecture": "amd64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "amd64",
                    "io.balena.device-type": "intel-nuc",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2023-09-09T04:14:00.317904233Z",
            "history": [
                {
                    "created": "2021-04-01T17:59:37.09884046Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-20T10:46:14.111891363Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-04T18:22:42.383186833Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:3242aba4f770b24f6433fa19e51c222acf5a33d2268b82c7ec43874258838970 in / "
                },
                {
                    "created": "2023-08-04T18:22:43.038358583Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T03:59:08.044755432Z",
                    "created_by": "LABEL io.balena.architecture=amd64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T03:59:08.044755432Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T03:59:08.444875601Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T03:59:08.444875601Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T03:59:08.456878787Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T03:59:08.464404941Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T03:59:08.470905987Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T03:59:08.470905987Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T03:59:08.778387992Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T03:59:08.973104388Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: Intel 64-bit (x86-64) \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:14:00.107701171Z",
                    "created_by": "LABEL io.balena.device-type=intel-nuc",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T04:14:00.107701171Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:14:00.317904233Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: Intel 64-bit (x86-64) \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:8a5c91bcb42954a1d542cf1243b349f4d83fdd74d2ddc71ccaf63ffb7b661793",
                    "sha256:7e137976dd3d65e1b7be54fc9701bd78bf00b6ee978ad81280b8bd275035d3a7",
                    "sha256:42ee78234deac018bf727039dafccfb78c9d756f1ec8903cef7eb85190ead930",
                    "sha256:7dc9005f3e3ce1987ea49d7c2df24a1cc02afb441b95cfff9caf872819ab4dfc",
                    "sha256:23e486a49ac227803e0c85abb4c0cd9fd2aa05725dbba3f37eb1a3aeb1d7bd57",
                    "sha256:96cfa030f844607e078e22e5b7761f3ce499394317ad0af4d4db456fb31aa74d",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:1ea1e3eb686efc3c91616ea714b0a283b6173e34d5506b3b624d37b1ed0064ed",
                    "sha256:542b978ffd01f251026ec67db609ce53d689b901747e6febcc4f908c46e731a6",
                    "sha256:ab7da43fc40a18bd1103ac844b2245b9dc80a8c437d638c05f5d64d746e937d2"
                ]
            }
        },
        "latest-run-20230911": {
            "architecture": "amd64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "amd64",
                    "io.balena.device-type": "odyssey-x86",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2023-09-11T23:03:25.893033534Z",
            "history": [
                {
                    "created": "2021-04-01T17:59:37.09884046Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-20T10:46:14.111891363Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-04T18:22:42.383186833Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:3242aba4f770b24f6433fa19e51c222acf5a33d2268b82c7ec43874258838970 in / "
                },
                {
                    "created": "2023-08-04T18:22:43.038358583Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T03:59:08.044755432Z",
                    "created_by": "LABEL io.balena.architecture=amd64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T03:59:08.044755432Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T03:59:08.444875601Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T03:59:08.444875601Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T03:59:08.456878787Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T03:59:08.464404941Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T03:59:08.470905987Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T03:59:08.470905987Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T03:59:08.778387992Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T03:59:08.973104388Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: Intel 64-bit (x86-64) \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-11T23:03:25.832214295Z",
                    "created_by": "LABEL io.balena.device-type=odyssey-x86",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-11T23:03:25.832214295Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-11T23:03:25.893033534Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: Intel 64-bit (x86-64) \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:8a5c91bcb42954a1d542cf1243b349f4d83fdd74d2ddc71ccaf63ffb7b661793",
                    "sha256:7e137976dd3d65e1b7be54fc9701bd78bf00b6ee978ad81280b8bd275035d3a7",
                    "sha256:42ee78234deac018bf727039dafccfb78c9d756f1ec8903cef7eb85190ead930",
                    "sha256:7dc9005f3e3ce1987ea49d7c2df24a1cc02afb441b95cfff9caf872819ab4dfc",
                    "sha256:23e486a49ac227803e0c85abb4c0cd9fd2aa05725dbba3f37eb1a3aeb1d7bd57",
                    "sha256:96cfa030f844607e078e22e5b7761f3ce499394317ad0af4d4db456fb31aa74d",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:1ea1e3eb686efc3c91616ea714b0a283b6173e34d5506b3b624d37b1ed0064ed",
                    "sha256:6477848327ef7344548c3706925e3c386ce207ba8f85bbff0604d9577f437ea0",
                    "sha256:b3d950f5dc5c037e537892b19270392fa69428eab347e4e7de50f9c4a58efada"
                ]
            }
        },
        "latest-run-20231103": {
            "architecture": "amd64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "amd64",
                    "io.balena.device-type": "odyssey-x86",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2023-11-04T20:35:38.577134772Z",
            "history": [
                {
                    "created": "2021-04-01T17:59:37.09884046Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-20T10:46:14.111891363Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-06T18:22:29.551043544Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:395273c1903fb6b62f46bbf72259ef76c6eb16f475d22abd47b7633b2b77a847 in / "
                },
                {
                    "created": "2023-10-06T18:22:30.235678845Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-04T20:25:11.729328966Z",
                    "created_by": "LABEL io.balena.architecture=amd64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-04T20:25:11.729328966Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T20:25:11.994255514Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T20:25:11.994255514Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-04T20:25:12.004780927Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T20:25:12.01526574Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T20:25:12.040162507Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T20:25:12.040162507Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-04T20:25:12.188765905Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T20:25:12.273025011Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: Intel 64-bit (x86-64) \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T20:35:38.486556692Z",
                    "created_by": "LABEL io.balena.device-type=odyssey-x86",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-04T20:35:38.486556692Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T20:35:38.577134772Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: Intel 64-bit (x86-64) \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:9b5a2675a1f8f633773bcb6f6dbade49054173b4bfd1599e2bbe64e975812329",
                    "sha256:dd03ffd46e3f50f2600532b8ee5aec2d2f39ac877d18df277fab563fbcf38866",
                    "sha256:c9a4ad29326980cdeb327278fabacfbfdaaee16234b8faae944634318f9efbd7",
                    "sha256:708ae14cfa0655c8947eda92d1111c7a0d097106e05cc443000b4958c60b7183",
                    "sha256:5b6c9e19c5b005401f4d5869255f3c70112a4551073cec3bd2bd57252289d958",
                    "sha256:1e3bb05f1b5995053bcd278a3b2764e0251dd367c7d5c8de4df7e5aa9241c8dc",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:4ba5a8faabeb7bb0b84e3bd972b6407bce7d138c7b9b56524725593ee8255157",
                    "sha256:b2bd3f62d35c5fa7aa62762c707241f33f2d83849733c03010880cdb7e60c672",
                    "sha256:40dd8b05a56defef78b6ae818a0d7a251be5a0d6d761cb72301827229442f673"
                ]
            }
        },
        "latest-run-20231204": {
            "architecture": "amd64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "amd64",
                    "io.balena.device-type": "odyssey-x86",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2023-12-06T18:39:53.083327891Z",
            "history": [
                {
                    "created": "2021-04-01T17:59:37.09884046Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-20T10:46:14.111891363Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-29T00:26:01.517560423Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:533e3405b5c87c5a7239c02ef2d954b1072df5afeee2139a9e2dd133dd4612b6 in / "
                },
                {
                    "created": "2023-11-29T00:26:02.196411879Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T17:56:03.747827155Z",
                    "created_by": "LABEL io.balena.architecture=amd64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T17:56:03.747827155Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T17:56:03.951248076Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T17:56:03.951248076Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T17:56:03.960836387Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T17:56:03.971888675Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T17:56:03.980766309Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T17:56:03.980766309Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T17:56:04.083929145Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T17:56:04.173103482Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: Intel 64-bit (x86-64) \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T18:39:53.001839298Z",
                    "created_by": "LABEL io.balena.device-type=odyssey-x86",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T18:39:53.001839298Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T18:39:53.083327891Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: Intel 64-bit (x86-64) \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:e89a2dafe59a58dee0fcdc4620c1e36ef34357d92655da13e1f656c33031c0b5",
                    "sha256:cf2ae2bdb9183af3f824b7e4c29fbd606e47799a97d6096d8f7e00ef5f490439",
                    "sha256:3d570902edb01a6b3632c26a6cef287f60fe5fda67ce2135a06f978c2ab4434a",
                    "sha256:21bdf36a029e5507f6b24f0ca8f4bc91bd5e55441b51ec0aeb0d61ddee34e8f7",
                    "sha256:6b13b5a03307c5608826145c3387a6fe156cfdf40f04965b7aaf32e06f80524d",
                    "sha256:8dee186546bb8954265c9c4b824dcc5702b7e5ae89c0cb055cf77b4b65228265",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:0b741073e9307f7b66244c8c4785863940367e83335ae78a22c374573878a558",
                    "sha256:cf7e1f853ea83becf842239b01452fb6d0e55296dbe10521d4d1253f626b0e61",
                    "sha256:843eaaba86419ec2d0b89eab4993af43674615156e09620c041bcd82c5a5f075"
                ]
            }
        },
        "latest-run-20240105": {
            "architecture": "amd64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "amd64",
                    "io.balena.device-type": "odyssey-x86",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2024-01-05T14:09:49.038173762Z",
            "history": [
                {
                    "created": "2021-04-01T17:59:37.09884046Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-20T10:46:14.111891363Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-29T00:26:01.517560423Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:533e3405b5c87c5a7239c02ef2d954b1072df5afeee2139a9e2dd133dd4612b6 in / "
                },
                {
                    "created": "2023-11-29T00:26:02.196411879Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-05T13:59:54.18041825Z",
                    "created_by": "LABEL io.balena.architecture=amd64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-05T13:59:54.18041825Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-05T13:59:54.417070806Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-05T13:59:54.417070806Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-05T13:59:54.427392984Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-05T13:59:54.459082685Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-05T13:59:54.48704776Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-05T13:59:54.48704776Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-05T13:59:54.701706892Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-05T13:59:54.764168187Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: Intel 64-bit (x86-64) \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-05T14:09:48.9753273Z",
                    "created_by": "LABEL io.balena.device-type=odyssey-x86",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-05T14:09:48.9753273Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-05T14:09:49.038173762Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: Intel 64-bit (x86-64) \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:e89a2dafe59a58dee0fcdc4620c1e36ef34357d92655da13e1f656c33031c0b5",
                    "sha256:be5ea942547e5f184cf40a284eeb82005dd573a75ec6da220bef84440c21799d",
                    "sha256:d93e9aba12c58fab57e3c93789ec071228282082e33691ff6db4af403c20c546",
                    "sha256:276623a2256a9b65bf5b724299227e40e352268a9527768edc0f5ce9f25058c2",
                    "sha256:54f349630e0de220734a865fd92a68af438bb762181ba71ce2e8f341d0a5c3f2",
                    "sha256:e0bd5807f9bff81e6d1440c396316bc46e684344b539d3c9a81edca0d1cf9ee4",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:bf359b349ecedfa1d9b00bd125627393917dc1d0d10f21d8655da275098f2e36",
                    "sha256:767d954a0e028119754e55f59fa017135398f7fcddf1acdae3e7365a2a86de9b",
                    "sha256:86f86251a137a57e059ea97ef596b7deb170ff38b1b036e3de423a2a1e3347f5"
                ]
            }
        },
        "latest-run-20240201": {
            "architecture": "amd64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "amd64",
                    "io.balena.device-type": "odyssey-x86",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2024-02-03T22:43:46.779088827Z",
            "history": [
                {
                    "created": "2021-04-01T17:59:37.09884046Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-20T10:46:14.111891363Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-29T00:26:01.517560423Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:533e3405b5c87c5a7239c02ef2d954b1072df5afeee2139a9e2dd133dd4612b6 in / "
                },
                {
                    "created": "2023-11-29T00:26:02.196411879Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-03T22:35:36.898952913Z",
                    "created_by": "LABEL io.balena.architecture=amd64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-03T22:35:36.898952913Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-03T22:35:37.498519547Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-03T22:35:37.498519547Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-03T22:35:37.511124291Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-03T22:35:37.542159925Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-03T22:35:37.554209496Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-03T22:35:37.554209496Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-03T22:35:37.769174671Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-03T22:35:37.829518486Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: Intel 64-bit (x86-64) \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-03T22:43:46.723150432Z",
                    "created_by": "LABEL io.balena.device-type=odyssey-x86",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-03T22:43:46.723150432Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-03T22:43:46.779088827Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: Intel 64-bit (x86-64) \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:e89a2dafe59a58dee0fcdc4620c1e36ef34357d92655da13e1f656c33031c0b5",
                    "sha256:4b96f1f532259574bf845e53bf75f5f3c0299925937fe263f5045f9062bd4dfe",
                    "sha256:e6abbbab6c0809ea1bea86f38e82aa33b1ebd78e9b5551e84cf93ab2a8e6f803",
                    "sha256:c6814fba19589c2e0583da7054121dc8142a4edfb259908aff631683e577f45d",
                    "sha256:2ec60fba1a4b3f73515c6c0f9db1371238b0da15c73d84aae9ef3f7275ec0741",
                    "sha256:cc0a116e7685f797625a84b4f73221e08d0a2e20e03846223e7f97e2560504a6",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:b756dc667e503ba7bfc9bb0a3f53c4ce4a81a520e4c09c358b11abf71c0f44cf",
                    "sha256:f35bc912ff63f7a1e6c6b9de29bd060e334b1c20fd4bffd0699d356c5834ae06",
                    "sha256:072c1fd16e6189864737ee5eab67766af26d77e9596f123c1897e655867ed416"
                ]
            }
        },
        "latest-run-20240304": {
            "architecture": "amd64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "amd64",
                    "io.balena.device-type": "odyssey-x86",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2024-03-05T18:48:10.26260045Z",
            "history": [
                {
                    "created": "2021-04-01T17:59:37.09884046Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-20T10:46:14.111891363Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-29T00:26:01.517560423Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:533e3405b5c87c5a7239c02ef2d954b1072df5afeee2139a9e2dd133dd4612b6 in / "
                },
                {
                    "created": "2023-11-29T00:26:02.196411879Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T18:27:17.052466666Z",
                    "created_by": "LABEL io.balena.architecture=amd64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T18:27:17.052466666Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T18:27:17.680717512Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T18:27:17.680717512Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T18:27:17.690105177Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T18:27:17.729671857Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T18:27:17.738614063Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T18:27:17.738614063Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T18:27:18.038006148Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T18:27:18.09950217Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: Intel 64-bit (x86-64) \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T18:48:10.184741148Z",
                    "created_by": "LABEL io.balena.device-type=odyssey-x86",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T18:48:10.184741148Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T18:48:10.26260045Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: Intel 64-bit (x86-64) \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:e89a2dafe59a58dee0fcdc4620c1e36ef34357d92655da13e1f656c33031c0b5",
                    "sha256:407784ce233d07c91716b195ba5fdadca2c77276758f618b3bf474704c07c93c",
                    "sha256:6790dcb3bf20873f21627079dd24a2d23da7d970b8a3fcb2e3e11d209531497d",
                    "sha256:1ca6aa489d1fe12bc5b9e9e9b286d3564777218362d06f08f07e262eccdeba52",
                    "sha256:ee7b099673a169cff2d986c726d47ef4ffb274e162056718e9ffe10f5db8d2b0",
                    "sha256:8949d553ef226f0d0474c9ab28f49bfd35c6aa44a4ee31ec5ea952e48c0d67c2",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:f5a5aad7ca1b65f289777c165b7d8e29d5078483491ada457a5b0bbf9c4fe705",
                    "sha256:a61f4a1f3c828639cef685f003c1b96631c29ca987fcc18c7ec9d20b7376c742",
                    "sha256:c4a01c429f2990290158ecb52c4beacba0eacf2b78d0742636b3ad881f713f81"
                ]
            }
        },
        "latest-run-20240401": {
            "architecture": "amd64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "amd64",
                    "io.balena.device-type": "odyssey-x86",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                }
            },
            "created": "2024-04-02T02:40:06.736289083Z",
            "history": [
                {
                    "created": "2021-04-01T17:59:37.09884046Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-20T10:46:14.111891363Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-29T00:26:01.517560423Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:533e3405b5c87c5a7239c02ef2d954b1072df5afeee2139a9e2dd133dd4612b6 in / "
                },
                {
                    "created": "2023-11-29T00:26:02.196411879Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T02:31:15.961600503Z",
                    "created_by": "LABEL io.balena.architecture=amd64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T02:31:15.961600503Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T02:31:16.301448773Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T02:31:16.301448773Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T02:31:16.310908864Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T02:31:16.32003679Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T02:31:16.353434347Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T02:31:16.353434347Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T02:31:16.471928657Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T02:31:16.525879007Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: Intel 64-bit (x86-64) \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T02:40:06.672943671Z",
                    "created_by": "LABEL io.balena.device-type=odyssey-x86",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T02:40:06.672943671Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T02:40:06.736289083Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: Intel 64-bit (x86-64) \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:e89a2dafe59a58dee0fcdc4620c1e36ef34357d92655da13e1f656c33031c0b5",
                    "sha256:ff8ed929feef33ec1c1f39c6b4f80cc3764a80f0e5629ec44a97462d096a8a67",
                    "sha256:140f598fedc50aebac7be5f429b0d1d1430326387767f769f8d75d71fafe67ce",
                    "sha256:a331ae444751612061e818b34079766a4799bf04d670910014b918e5a7f2aa98",
                    "sha256:af8973f6bb2e5a32c405b2a69629d63fe1968302e74a80caf44fc5b30def8c6f",
                    "sha256:28f34c8df9f98ec114938494ca7ed4bc600d4757531280b157b6268cdd7049db",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:b87f537d1904201dba89c59292d231a7b6310b37c6372c2650a11e3101d075c4",
                    "sha256:f71fb883b9f491b773f1bdd93386c88d7888e4f89612d99ca5eb498fa9e462f8",
                    "sha256:2711cd49e15e728d8336758cdf52285826a23f57012eeade73151b6c11bd7b49"
                ]
            }
        },
        "latest-run-20240408": {
            "architecture": "amd64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "amd64",
                    "io.balena.device-type": "odyssey-x86",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                }
            },
            "created": "2024-04-09T13:46:07.607574782Z",
            "history": [
                {
                    "created": "2021-04-01T17:59:37.09884046Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-20T10:46:14.111891363Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-29T00:26:01.517560423Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:533e3405b5c87c5a7239c02ef2d954b1072df5afeee2139a9e2dd133dd4612b6 in / "
                },
                {
                    "created": "2023-11-29T00:26:02.196411879Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:35:49.166636872Z",
                    "created_by": "LABEL io.balena.architecture=amd64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:35:49.166636872Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:35:49.353720115Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:35:49.353720115Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:35:49.363434466Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:35:49.373123647Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:35:49.403773106Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:35:49.403773106Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:35:49.523623495Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:35:49.603887285Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: Intel 64-bit (x86-64) \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:46:07.542279168Z",
                    "created_by": "LABEL io.balena.device-type=odyssey-x86",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:46:07.542279168Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:46:07.607574782Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: Intel 64-bit (x86-64) \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:e89a2dafe59a58dee0fcdc4620c1e36ef34357d92655da13e1f656c33031c0b5",
                    "sha256:5be4da3e11c12f8a7f04187b011613695c861dbfaa34600788e52b7a72d0fe20",
                    "sha256:77f26d83150120b739b5d8d75ad033761be477817d6c19e6a1dd8c375f42f8ef",
                    "sha256:d08beaf06efe313a283e864e75d9d0b4f53e9d5eae6a09aa7b5daa44b1bf2b12",
                    "sha256:2c842f6d58dfaa63098a6f68b838e8d1da81eb6a08832146d6b6f7379029d6e6",
                    "sha256:813ccd1d89aa81b3808b9f051f610516cd417b28eec1a286ca48a7b4574d4fb0",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:816dbe0c347dcba570fbf323572692f25fe5a89905ce0078708fd342430a2da8",
                    "sha256:9e5b74d2708d287243141cf8004976c99f1538dd32f790d927246da496da7e05",
                    "sha256:43f48a9c6b65bf6ad77cfd22bb9151ac2bd7a0bb3615c8ae854635e8c5065939"
                ]
            }
        },
        "latest-run-20240429": {
            "architecture": "amd64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "amd64",
                    "io.balena.device-type": "odyssey-x86",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                }
            },
            "created": "2024-05-02T12:18:12.985891796Z",
            "history": [
                {
                    "created": "2021-04-01T17:59:37.09884046Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-20T10:46:14.111891363Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-29T00:26:01.517560423Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:533e3405b5c87c5a7239c02ef2d954b1072df5afeee2139a9e2dd133dd4612b6 in / "
                },
                {
                    "created": "2023-11-29T00:26:02.196411879Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-02T12:11:35.787518344Z",
                    "created_by": "LABEL io.balena.architecture=amd64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-02T12:11:35.787518344Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T12:11:36.155885234Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T12:11:36.155885234Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-02T12:11:36.166220512Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T12:11:36.201352732Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T12:11:36.229371253Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T12:11:36.229371253Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-02T12:11:36.489410396Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T12:11:36.547751991Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: Intel 64-bit (x86-64) \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T12:18:12.910718736Z",
                    "created_by": "LABEL io.balena.device-type=odyssey-x86",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-02T12:18:12.910718736Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T12:18:12.985891796Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: Intel 64-bit (x86-64) \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:e89a2dafe59a58dee0fcdc4620c1e36ef34357d92655da13e1f656c33031c0b5",
                    "sha256:0a648d9cc45ccee05b7dda5c00174ff854e8f08899edb49b4b9ea8c61b058805",
                    "sha256:473314ea19844329bd2910bee3a05e7fd8996962d93719e1c3837927325ce390",
                    "sha256:1a8b3c1e1273d38aa2a3915c1cc142013ca3810eabdbad9eebc5997adc885bc2",
                    "sha256:ecc646eb7ee27032fc4faf92282b9e1d4176e672e63e5859c956e3b9b81e3777",
                    "sha256:dcaa3246209255ba81e531a54247f2762caac0def1a733005d0f168a69d14815",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:b537c15fb5e1acaa06a911b4b340ad545722901d3c792694a6cf8441f4bd8739",
                    "sha256:2738d555c5ce0d58e21ca1d22b99000d3deac89174240ba1bde438476ef3fdc4",
                    "sha256:5be83af9977c7d94e3c47abf63914eb6b1faed6b1bdc37a84b60c687ad11330a"
                ]
            }
        },
        "run": {
            "architecture": "amd64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "amd64",
                    "io.balena.device-type": "odyssey-x86",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                }
            },
            "created": "2024-05-02T12:18:12.985891796Z",
            "history": [
                {
                    "created": "2021-04-01T17:59:37.09884046Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-20T10:46:14.111891363Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-29T00:26:01.517560423Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:533e3405b5c87c5a7239c02ef2d954b1072df5afeee2139a9e2dd133dd4612b6 in / "
                },
                {
                    "created": "2023-11-29T00:26:02.196411879Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-02T12:11:35.787518344Z",
                    "created_by": "LABEL io.balena.architecture=amd64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-02T12:11:35.787518344Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T12:11:36.155885234Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T12:11:36.155885234Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-02T12:11:36.166220512Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T12:11:36.201352732Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T12:11:36.229371253Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T12:11:36.229371253Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-02T12:11:36.489410396Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T12:11:36.547751991Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: Intel 64-bit (x86-64) \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T12:18:12.910718736Z",
                    "created_by": "LABEL io.balena.device-type=odyssey-x86",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-02T12:18:12.910718736Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T12:18:12.985891796Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: Intel 64-bit (x86-64) \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:e89a2dafe59a58dee0fcdc4620c1e36ef34357d92655da13e1f656c33031c0b5",
                    "sha256:0a648d9cc45ccee05b7dda5c00174ff854e8f08899edb49b4b9ea8c61b058805",
                    "sha256:473314ea19844329bd2910bee3a05e7fd8996962d93719e1c3837927325ce390",
                    "sha256:1a8b3c1e1273d38aa2a3915c1cc142013ca3810eabdbad9eebc5997adc885bc2",
                    "sha256:ecc646eb7ee27032fc4faf92282b9e1d4176e672e63e5859c956e3b9b81e3777",
                    "sha256:dcaa3246209255ba81e531a54247f2762caac0def1a733005d0f168a69d14815",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:b537c15fb5e1acaa06a911b4b340ad545722901d3c792694a6cf8441f4bd8739",
                    "sha256:2738d555c5ce0d58e21ca1d22b99000d3deac89174240ba1bde438476ef3fdc4",
                    "sha256:5be83af9977c7d94e3c47abf63914eb6b1faed6b1bdc37a84b60c687ad11330a"
                ]
            }
        },
        "run-20230811": {
            "architecture": "amd64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "amd64",
                    "io.balena.device-type": "intel-nuc",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2023-08-21T20:15:55.822498992Z",
            "history": [
                {
                    "created": "2021-04-01T17:59:37.09884046Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-20T10:46:14.111891363Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-04T18:22:42.383186833Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:3242aba4f770b24f6433fa19e51c222acf5a33d2268b82c7ec43874258838970 in / "
                },
                {
                    "created": "2023-08-04T18:22:43.038358583Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-21T19:52:26.839667108Z",
                    "created_by": "LABEL io.balena.architecture=amd64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-21T19:52:26.839667108Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-21T19:59:43.225911138Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-21T19:59:43.225911138Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-21T19:59:43.265017408Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-21T19:59:43.278822397Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-21T19:59:43.31418837Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-21T19:59:43.31418837Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-21T19:59:43.649629911Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-21T19:59:44.091734469Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: Intel 64-bit (x86-64) \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-21T20:15:55.528470281Z",
                    "created_by": "LABEL io.balena.device-type=intel-nuc",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-21T20:15:55.528470281Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-21T20:15:55.822498992Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: Intel 64-bit (x86-64) \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "moby.buildkit.buildinfo.v1": "eyJmcm9udGVuZCI6ImRvY2tlcmZpbGUudjAiLCJhdHRycyI6eyJmaWxlbmFtZSI6IkRvY2tlcmZpbGUifSwic291cmNlcyI6W3sidHlwZSI6ImRvY2tlci1pbWFnZSIsInJlZiI6ImRvY2tlci5pby9iYWxlbmFsaWIvYW1kNjQtZmVkb3JhOjM3LXJ1biIsInBpbiI6InNoYTI1Njo0ZDZkZjdlMzYzZTNiZmE5ZWZkNDVjODIxMjk2ZTE3MmMwOTAzMmE3OTU0MTkyZjczMDQxMWM4OTlmZWYyNGI3In1dfQ==",
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:8a5c91bcb42954a1d542cf1243b349f4d83fdd74d2ddc71ccaf63ffb7b661793",
                    "sha256:fca50d5c7997910a204bc6cee98bca6e25e11762221da2784c6d3645566f0ddb",
                    "sha256:3480908bbabedafa2f826ca9f403cb09eecf0383304b8bbe14e68de7beca1ddf",
                    "sha256:0dd58378b6f4109aefd89403151fb2cbfb7b5b5a829252b6828dd74ac3d4197f",
                    "sha256:597c7f0663815a1c3890fa212a75c9d37ecdc09d52d9952fd5b53e5d9caf6212",
                    "sha256:dbf5739d78d524aac1abdba9884c01b35edc636d914b379819738a3ef75648d7",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:21f04c3046c703b1a27343fba484e8a1bcdb988c7d8555b059c066ef4f0220d9",
                    "sha256:ce2118ba52ad3ebcbc8cbd5810227ff666d0cd51fad51fc828f171d92af3d74d",
                    "sha256:d111ea2ab348ba7c188e6a0c3aac986f1b5b2009b38e7416bf4ff012d1666f45"
                ]
            }
        },
        "run-20230829": {
            "architecture": "amd64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "amd64",
                    "io.balena.device-type": "intel-nuc",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2023-09-02T04:17:48.735207793Z",
            "history": [
                {
                    "created": "2021-04-01T17:59:37.09884046Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-20T10:46:14.111891363Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-04T18:22:42.383186833Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:3242aba4f770b24f6433fa19e51c222acf5a33d2268b82c7ec43874258838970 in / "
                },
                {
                    "created": "2023-08-04T18:22:43.038358583Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-02T03:53:27.833103705Z",
                    "created_by": "LABEL io.balena.architecture=amd64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-02T03:53:27.833103705Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T03:59:29.487734532Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T03:59:29.487734532Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-02T03:59:29.506051361Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T03:59:29.527922573Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T03:59:29.557992178Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T03:59:29.557992178Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-02T03:59:29.842622847Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T03:59:30.225039407Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: Intel 64-bit (x86-64) \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T04:17:48.484867648Z",
                    "created_by": "LABEL io.balena.device-type=intel-nuc",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-02T04:17:48.484867648Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-02T04:17:48.735207793Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: Intel 64-bit (x86-64) \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:8a5c91bcb42954a1d542cf1243b349f4d83fdd74d2ddc71ccaf63ffb7b661793",
                    "sha256:380419ecfa744daae3d1681c557d6abf8c91c0c5fc86a2969a8ed77e9709baa4",
                    "sha256:58c1f2554a6401c303a1ee84178afc50a8b06dab7b87655f31d30c850c487334",
                    "sha256:c3f7ce1d467d976dfa04264cd86521d73064a1ed6e9fb71dc3410e477ae870ae",
                    "sha256:6f5c6abfd2b62955e4a3b682bb44712ef50b0fd3543e11c7d4fc17f1b82f6907",
                    "sha256:56469bde0dc559a1839e14d976f279c90e21acf0ed0b000c6a72d55ee8220876",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:8e90a20b4674cca48347191b933581e0ed4da241493cbfdf5a194bae7e5f8292",
                    "sha256:95a838d8cef27239aa14c47871c7b64b3b90b793856807b90df22d3881fd91b0",
                    "sha256:ec1d9080493cb8830eb541d3ffd2142141dc02d8e2e41bccd274018f0267e682"
                ]
            }
        },
        "run-20230904": {
            "architecture": "amd64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "amd64",
                    "io.balena.device-type": "intel-nuc",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2023-09-09T04:14:00.317904233Z",
            "history": [
                {
                    "created": "2021-04-01T17:59:37.09884046Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-20T10:46:14.111891363Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-04T18:22:42.383186833Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:3242aba4f770b24f6433fa19e51c222acf5a33d2268b82c7ec43874258838970 in / "
                },
                {
                    "created": "2023-08-04T18:22:43.038358583Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T03:59:08.044755432Z",
                    "created_by": "LABEL io.balena.architecture=amd64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T03:59:08.044755432Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T03:59:08.444875601Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T03:59:08.444875601Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T03:59:08.456878787Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T03:59:08.464404941Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T03:59:08.470905987Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T03:59:08.470905987Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T03:59:08.778387992Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T03:59:08.973104388Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: Intel 64-bit (x86-64) \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:14:00.107701171Z",
                    "created_by": "LABEL io.balena.device-type=intel-nuc",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T04:14:00.107701171Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:14:00.317904233Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: Intel 64-bit (x86-64) \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:8a5c91bcb42954a1d542cf1243b349f4d83fdd74d2ddc71ccaf63ffb7b661793",
                    "sha256:7e137976dd3d65e1b7be54fc9701bd78bf00b6ee978ad81280b8bd275035d3a7",
                    "sha256:42ee78234deac018bf727039dafccfb78c9d756f1ec8903cef7eb85190ead930",
                    "sha256:7dc9005f3e3ce1987ea49d7c2df24a1cc02afb441b95cfff9caf872819ab4dfc",
                    "sha256:23e486a49ac227803e0c85abb4c0cd9fd2aa05725dbba3f37eb1a3aeb1d7bd57",
                    "sha256:96cfa030f844607e078e22e5b7761f3ce499394317ad0af4d4db456fb31aa74d",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:1ea1e3eb686efc3c91616ea714b0a283b6173e34d5506b3b624d37b1ed0064ed",
                    "sha256:542b978ffd01f251026ec67db609ce53d689b901747e6febcc4f908c46e731a6",
                    "sha256:ab7da43fc40a18bd1103ac844b2245b9dc80a8c437d638c05f5d64d746e937d2"
                ]
            }
        },
        "run-20230911": {
            "architecture": "amd64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "amd64",
                    "io.balena.device-type": "odyssey-x86",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2023-09-11T23:03:25.893033534Z",
            "history": [
                {
                    "created": "2021-04-01T17:59:37.09884046Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-20T10:46:14.111891363Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-04T18:22:42.383186833Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:3242aba4f770b24f6433fa19e51c222acf5a33d2268b82c7ec43874258838970 in / "
                },
                {
                    "created": "2023-08-04T18:22:43.038358583Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T03:59:08.044755432Z",
                    "created_by": "LABEL io.balena.architecture=amd64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T03:59:08.044755432Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T03:59:08.444875601Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T03:59:08.444875601Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T03:59:08.456878787Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T03:59:08.464404941Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T03:59:08.470905987Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T03:59:08.470905987Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T03:59:08.778387992Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T03:59:08.973104388Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: Intel 64-bit (x86-64) \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-11T23:03:25.832214295Z",
                    "created_by": "LABEL io.balena.device-type=odyssey-x86",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-11T23:03:25.832214295Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-11T23:03:25.893033534Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: Intel 64-bit (x86-64) \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:8a5c91bcb42954a1d542cf1243b349f4d83fdd74d2ddc71ccaf63ffb7b661793",
                    "sha256:7e137976dd3d65e1b7be54fc9701bd78bf00b6ee978ad81280b8bd275035d3a7",
                    "sha256:42ee78234deac018bf727039dafccfb78c9d756f1ec8903cef7eb85190ead930",
                    "sha256:7dc9005f3e3ce1987ea49d7c2df24a1cc02afb441b95cfff9caf872819ab4dfc",
                    "sha256:23e486a49ac227803e0c85abb4c0cd9fd2aa05725dbba3f37eb1a3aeb1d7bd57",
                    "sha256:96cfa030f844607e078e22e5b7761f3ce499394317ad0af4d4db456fb31aa74d",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:1ea1e3eb686efc3c91616ea714b0a283b6173e34d5506b3b624d37b1ed0064ed",
                    "sha256:6477848327ef7344548c3706925e3c386ce207ba8f85bbff0604d9577f437ea0",
                    "sha256:b3d950f5dc5c037e537892b19270392fa69428eab347e4e7de50f9c4a58efada"
                ]
            }
        },
        "run-20231103": {
            "architecture": "amd64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "amd64",
                    "io.balena.device-type": "odyssey-x86",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2023-11-04T20:35:38.577134772Z",
            "history": [
                {
                    "created": "2021-04-01T17:59:37.09884046Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-20T10:46:14.111891363Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-06T18:22:29.551043544Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:395273c1903fb6b62f46bbf72259ef76c6eb16f475d22abd47b7633b2b77a847 in / "
                },
                {
                    "created": "2023-10-06T18:22:30.235678845Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-04T20:25:11.729328966Z",
                    "created_by": "LABEL io.balena.architecture=amd64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-04T20:25:11.729328966Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T20:25:11.994255514Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T20:25:11.994255514Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-04T20:25:12.004780927Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T20:25:12.01526574Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T20:25:12.040162507Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T20:25:12.040162507Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-04T20:25:12.188765905Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T20:25:12.273025011Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: Intel 64-bit (x86-64) \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T20:35:38.486556692Z",
                    "created_by": "LABEL io.balena.device-type=odyssey-x86",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-04T20:35:38.486556692Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T20:35:38.577134772Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: Intel 64-bit (x86-64) \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:9b5a2675a1f8f633773bcb6f6dbade49054173b4bfd1599e2bbe64e975812329",
                    "sha256:dd03ffd46e3f50f2600532b8ee5aec2d2f39ac877d18df277fab563fbcf38866",
                    "sha256:c9a4ad29326980cdeb327278fabacfbfdaaee16234b8faae944634318f9efbd7",
                    "sha256:708ae14cfa0655c8947eda92d1111c7a0d097106e05cc443000b4958c60b7183",
                    "sha256:5b6c9e19c5b005401f4d5869255f3c70112a4551073cec3bd2bd57252289d958",
                    "sha256:1e3bb05f1b5995053bcd278a3b2764e0251dd367c7d5c8de4df7e5aa9241c8dc",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:4ba5a8faabeb7bb0b84e3bd972b6407bce7d138c7b9b56524725593ee8255157",
                    "sha256:b2bd3f62d35c5fa7aa62762c707241f33f2d83849733c03010880cdb7e60c672",
                    "sha256:40dd8b05a56defef78b6ae818a0d7a251be5a0d6d761cb72301827229442f673"
                ]
            }
        },
        "run-20231204": {
            "architecture": "amd64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "amd64",
                    "io.balena.device-type": "odyssey-x86",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2023-12-06T18:39:53.083327891Z",
            "history": [
                {
                    "created": "2021-04-01T17:59:37.09884046Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-20T10:46:14.111891363Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-29T00:26:01.517560423Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:533e3405b5c87c5a7239c02ef2d954b1072df5afeee2139a9e2dd133dd4612b6 in / "
                },
                {
                    "created": "2023-11-29T00:26:02.196411879Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T17:56:03.747827155Z",
                    "created_by": "LABEL io.balena.architecture=amd64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T17:56:03.747827155Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T17:56:03.951248076Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T17:56:03.951248076Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T17:56:03.960836387Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T17:56:03.971888675Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T17:56:03.980766309Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T17:56:03.980766309Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T17:56:04.083929145Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T17:56:04.173103482Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: Intel 64-bit (x86-64) \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T18:39:53.001839298Z",
                    "created_by": "LABEL io.balena.device-type=odyssey-x86",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T18:39:53.001839298Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T18:39:53.083327891Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: Intel 64-bit (x86-64) \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:e89a2dafe59a58dee0fcdc4620c1e36ef34357d92655da13e1f656c33031c0b5",
                    "sha256:cf2ae2bdb9183af3f824b7e4c29fbd606e47799a97d6096d8f7e00ef5f490439",
                    "sha256:3d570902edb01a6b3632c26a6cef287f60fe5fda67ce2135a06f978c2ab4434a",
                    "sha256:21bdf36a029e5507f6b24f0ca8f4bc91bd5e55441b51ec0aeb0d61ddee34e8f7",
                    "sha256:6b13b5a03307c5608826145c3387a6fe156cfdf40f04965b7aaf32e06f80524d",
                    "sha256:8dee186546bb8954265c9c4b824dcc5702b7e5ae89c0cb055cf77b4b65228265",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:0b741073e9307f7b66244c8c4785863940367e83335ae78a22c374573878a558",
                    "sha256:cf7e1f853ea83becf842239b01452fb6d0e55296dbe10521d4d1253f626b0e61",
                    "sha256:843eaaba86419ec2d0b89eab4993af43674615156e09620c041bcd82c5a5f075"
                ]
            }
        },
        "run-20240105": {
            "architecture": "amd64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "amd64",
                    "io.balena.device-type": "odyssey-x86",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2024-01-05T14:09:49.038173762Z",
            "history": [
                {
                    "created": "2021-04-01T17:59:37.09884046Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-20T10:46:14.111891363Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-29T00:26:01.517560423Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:533e3405b5c87c5a7239c02ef2d954b1072df5afeee2139a9e2dd133dd4612b6 in / "
                },
                {
                    "created": "2023-11-29T00:26:02.196411879Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-05T13:59:54.18041825Z",
                    "created_by": "LABEL io.balena.architecture=amd64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-05T13:59:54.18041825Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-05T13:59:54.417070806Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-05T13:59:54.417070806Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-05T13:59:54.427392984Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-05T13:59:54.459082685Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-05T13:59:54.48704776Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-05T13:59:54.48704776Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-05T13:59:54.701706892Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-05T13:59:54.764168187Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: Intel 64-bit (x86-64) \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-05T14:09:48.9753273Z",
                    "created_by": "LABEL io.balena.device-type=odyssey-x86",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-05T14:09:48.9753273Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-05T14:09:49.038173762Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: Intel 64-bit (x86-64) \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:e89a2dafe59a58dee0fcdc4620c1e36ef34357d92655da13e1f656c33031c0b5",
                    "sha256:be5ea942547e5f184cf40a284eeb82005dd573a75ec6da220bef84440c21799d",
                    "sha256:d93e9aba12c58fab57e3c93789ec071228282082e33691ff6db4af403c20c546",
                    "sha256:276623a2256a9b65bf5b724299227e40e352268a9527768edc0f5ce9f25058c2",
                    "sha256:54f349630e0de220734a865fd92a68af438bb762181ba71ce2e8f341d0a5c3f2",
                    "sha256:e0bd5807f9bff81e6d1440c396316bc46e684344b539d3c9a81edca0d1cf9ee4",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:bf359b349ecedfa1d9b00bd125627393917dc1d0d10f21d8655da275098f2e36",
                    "sha256:767d954a0e028119754e55f59fa017135398f7fcddf1acdae3e7365a2a86de9b",
                    "sha256:86f86251a137a57e059ea97ef596b7deb170ff38b1b036e3de423a2a1e3347f5"
                ]
            }
        },
        "run-20240201": {
            "architecture": "amd64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "amd64",
                    "io.balena.device-type": "odyssey-x86",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2024-02-03T22:43:46.779088827Z",
            "history": [
                {
                    "created": "2021-04-01T17:59:37.09884046Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-20T10:46:14.111891363Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-29T00:26:01.517560423Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:533e3405b5c87c5a7239c02ef2d954b1072df5afeee2139a9e2dd133dd4612b6 in / "
                },
                {
                    "created": "2023-11-29T00:26:02.196411879Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-03T22:35:36.898952913Z",
                    "created_by": "LABEL io.balena.architecture=amd64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-03T22:35:36.898952913Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-03T22:35:37.498519547Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-03T22:35:37.498519547Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-03T22:35:37.511124291Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-03T22:35:37.542159925Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-03T22:35:37.554209496Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-03T22:35:37.554209496Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-03T22:35:37.769174671Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-03T22:35:37.829518486Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: Intel 64-bit (x86-64) \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-03T22:43:46.723150432Z",
                    "created_by": "LABEL io.balena.device-type=odyssey-x86",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-03T22:43:46.723150432Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-03T22:43:46.779088827Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: Intel 64-bit (x86-64) \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:e89a2dafe59a58dee0fcdc4620c1e36ef34357d92655da13e1f656c33031c0b5",
                    "sha256:4b96f1f532259574bf845e53bf75f5f3c0299925937fe263f5045f9062bd4dfe",
                    "sha256:e6abbbab6c0809ea1bea86f38e82aa33b1ebd78e9b5551e84cf93ab2a8e6f803",
                    "sha256:c6814fba19589c2e0583da7054121dc8142a4edfb259908aff631683e577f45d",
                    "sha256:2ec60fba1a4b3f73515c6c0f9db1371238b0da15c73d84aae9ef3f7275ec0741",
                    "sha256:cc0a116e7685f797625a84b4f73221e08d0a2e20e03846223e7f97e2560504a6",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:b756dc667e503ba7bfc9bb0a3f53c4ce4a81a520e4c09c358b11abf71c0f44cf",
                    "sha256:f35bc912ff63f7a1e6c6b9de29bd060e334b1c20fd4bffd0699d356c5834ae06",
                    "sha256:072c1fd16e6189864737ee5eab67766af26d77e9596f123c1897e655867ed416"
                ]
            }
        },
        "run-20240304": {
            "architecture": "amd64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "amd64",
                    "io.balena.device-type": "odyssey-x86",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2024-03-05T18:48:10.26260045Z",
            "history": [
                {
                    "created": "2021-04-01T17:59:37.09884046Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-20T10:46:14.111891363Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-29T00:26:01.517560423Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:533e3405b5c87c5a7239c02ef2d954b1072df5afeee2139a9e2dd133dd4612b6 in / "
                },
                {
                    "created": "2023-11-29T00:26:02.196411879Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T18:27:17.052466666Z",
                    "created_by": "LABEL io.balena.architecture=amd64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T18:27:17.052466666Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T18:27:17.680717512Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T18:27:17.680717512Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T18:27:17.690105177Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T18:27:17.729671857Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T18:27:17.738614063Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T18:27:17.738614063Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T18:27:18.038006148Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T18:27:18.09950217Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: Intel 64-bit (x86-64) \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T18:48:10.184741148Z",
                    "created_by": "LABEL io.balena.device-type=odyssey-x86",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T18:48:10.184741148Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T18:48:10.26260045Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: Intel 64-bit (x86-64) \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:e89a2dafe59a58dee0fcdc4620c1e36ef34357d92655da13e1f656c33031c0b5",
                    "sha256:407784ce233d07c91716b195ba5fdadca2c77276758f618b3bf474704c07c93c",
                    "sha256:6790dcb3bf20873f21627079dd24a2d23da7d970b8a3fcb2e3e11d209531497d",
                    "sha256:1ca6aa489d1fe12bc5b9e9e9b286d3564777218362d06f08f07e262eccdeba52",
                    "sha256:ee7b099673a169cff2d986c726d47ef4ffb274e162056718e9ffe10f5db8d2b0",
                    "sha256:8949d553ef226f0d0474c9ab28f49bfd35c6aa44a4ee31ec5ea952e48c0d67c2",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:f5a5aad7ca1b65f289777c165b7d8e29d5078483491ada457a5b0bbf9c4fe705",
                    "sha256:a61f4a1f3c828639cef685f003c1b96631c29ca987fcc18c7ec9d20b7376c742",
                    "sha256:c4a01c429f2990290158ecb52c4beacba0eacf2b78d0742636b3ad881f713f81"
                ]
            }
        },
        "run-20240401": {
            "architecture": "amd64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "amd64",
                    "io.balena.device-type": "odyssey-x86",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                }
            },
            "created": "2024-04-02T02:40:06.736289083Z",
            "history": [
                {
                    "created": "2021-04-01T17:59:37.09884046Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-20T10:46:14.111891363Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-29T00:26:01.517560423Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:533e3405b5c87c5a7239c02ef2d954b1072df5afeee2139a9e2dd133dd4612b6 in / "
                },
                {
                    "created": "2023-11-29T00:26:02.196411879Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T02:31:15.961600503Z",
                    "created_by": "LABEL io.balena.architecture=amd64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T02:31:15.961600503Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T02:31:16.301448773Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T02:31:16.301448773Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T02:31:16.310908864Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T02:31:16.32003679Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T02:31:16.353434347Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T02:31:16.353434347Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T02:31:16.471928657Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T02:31:16.525879007Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: Intel 64-bit (x86-64) \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T02:40:06.672943671Z",
                    "created_by": "LABEL io.balena.device-type=odyssey-x86",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T02:40:06.672943671Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T02:40:06.736289083Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: Intel 64-bit (x86-64) \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:e89a2dafe59a58dee0fcdc4620c1e36ef34357d92655da13e1f656c33031c0b5",
                    "sha256:ff8ed929feef33ec1c1f39c6b4f80cc3764a80f0e5629ec44a97462d096a8a67",
                    "sha256:140f598fedc50aebac7be5f429b0d1d1430326387767f769f8d75d71fafe67ce",
                    "sha256:a331ae444751612061e818b34079766a4799bf04d670910014b918e5a7f2aa98",
                    "sha256:af8973f6bb2e5a32c405b2a69629d63fe1968302e74a80caf44fc5b30def8c6f",
                    "sha256:28f34c8df9f98ec114938494ca7ed4bc600d4757531280b157b6268cdd7049db",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:b87f537d1904201dba89c59292d231a7b6310b37c6372c2650a11e3101d075c4",
                    "sha256:f71fb883b9f491b773f1bdd93386c88d7888e4f89612d99ca5eb498fa9e462f8",
                    "sha256:2711cd49e15e728d8336758cdf52285826a23f57012eeade73151b6c11bd7b49"
                ]
            }
        },
        "run-20240408": {
            "architecture": "amd64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "amd64",
                    "io.balena.device-type": "odyssey-x86",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                }
            },
            "created": "2024-04-09T13:46:07.607574782Z",
            "history": [
                {
                    "created": "2021-04-01T17:59:37.09884046Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-20T10:46:14.111891363Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-29T00:26:01.517560423Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:533e3405b5c87c5a7239c02ef2d954b1072df5afeee2139a9e2dd133dd4612b6 in / "
                },
                {
                    "created": "2023-11-29T00:26:02.196411879Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:35:49.166636872Z",
                    "created_by": "LABEL io.balena.architecture=amd64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:35:49.166636872Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:35:49.353720115Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:35:49.353720115Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:35:49.363434466Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:35:49.373123647Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:35:49.403773106Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:35:49.403773106Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:35:49.523623495Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:35:49.603887285Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: Intel 64-bit (x86-64) \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:46:07.542279168Z",
                    "created_by": "LABEL io.balena.device-type=odyssey-x86",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:46:07.542279168Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:46:07.607574782Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: Intel 64-bit (x86-64) \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:e89a2dafe59a58dee0fcdc4620c1e36ef34357d92655da13e1f656c33031c0b5",
                    "sha256:5be4da3e11c12f8a7f04187b011613695c861dbfaa34600788e52b7a72d0fe20",
                    "sha256:77f26d83150120b739b5d8d75ad033761be477817d6c19e6a1dd8c375f42f8ef",
                    "sha256:d08beaf06efe313a283e864e75d9d0b4f53e9d5eae6a09aa7b5daa44b1bf2b12",
                    "sha256:2c842f6d58dfaa63098a6f68b838e8d1da81eb6a08832146d6b6f7379029d6e6",
                    "sha256:813ccd1d89aa81b3808b9f051f610516cd417b28eec1a286ca48a7b4574d4fb0",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:816dbe0c347dcba570fbf323572692f25fe5a89905ce0078708fd342430a2da8",
                    "sha256:9e5b74d2708d287243141cf8004976c99f1538dd32f790d927246da496da7e05",
                    "sha256:43f48a9c6b65bf6ad77cfd22bb9151ac2bd7a0bb3615c8ae854635e8c5065939"
                ]
            }
        },
        "run-20240429": {
            "architecture": "amd64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "amd64",
                    "io.balena.device-type": "odyssey-x86",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                }
            },
            "created": "2024-05-02T12:18:12.985891796Z",
            "history": [
                {
                    "created": "2021-04-01T17:59:37.09884046Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-20T10:46:14.111891363Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-29T00:26:01.517560423Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:533e3405b5c87c5a7239c02ef2d954b1072df5afeee2139a9e2dd133dd4612b6 in / "
                },
                {
                    "created": "2023-11-29T00:26:02.196411879Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-02T12:11:35.787518344Z",
                    "created_by": "LABEL io.balena.architecture=amd64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-02T12:11:35.787518344Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T12:11:36.155885234Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T12:11:36.155885234Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-02T12:11:36.166220512Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T12:11:36.201352732Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T12:11:36.229371253Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T12:11:36.229371253Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-02T12:11:36.489410396Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T12:11:36.547751991Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: Intel 64-bit (x86-64) \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T12:18:12.910718736Z",
                    "created_by": "LABEL io.balena.device-type=odyssey-x86",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-02T12:18:12.910718736Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-02T12:18:12.985891796Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: Intel 64-bit (x86-64) \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:e89a2dafe59a58dee0fcdc4620c1e36ef34357d92655da13e1f656c33031c0b5",
                    "sha256:0a648d9cc45ccee05b7dda5c00174ff854e8f08899edb49b4b9ea8c61b058805",
                    "sha256:473314ea19844329bd2910bee3a05e7fd8996962d93719e1c3837927325ce390",
                    "sha256:1a8b3c1e1273d38aa2a3915c1cc142013ca3810eabdbad9eebc5997adc885bc2",
                    "sha256:ecc646eb7ee27032fc4faf92282b9e1d4176e672e63e5859c956e3b9b81e3777",
                    "sha256:dcaa3246209255ba81e531a54247f2762caac0def1a733005d0f168a69d14815",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:b537c15fb5e1acaa06a911b4b340ad545722901d3c792694a6cf8441f4bd8739",
                    "sha256:2738d555c5ce0d58e21ca1d22b99000d3deac89174240ba1bde438476ef3fdc4",
                    "sha256:5be83af9977c7d94e3c47abf63914eb6b1faed6b1bdc37a84b60c687ad11330a"
                ]
            }
        }
    }
}