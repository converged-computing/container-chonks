{
    "manifests": {
        "20230929": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:425f798c637e8499488abc4a9dafc8796326ccbfb4e722ad4882d2db2c8ecd87",
                "size": 6802
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ea792534a213e62c62a1c4772dfcf53eaf82f7635dbc9f71bb0a60a91226d118",
                    "size": 64705637
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:57e197807ba0a519d1edb0779ce76a06124dbef05029811c4cd40f0584de6bac",
                    "size": 2592232
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:471a3338d976e468e7f618dd22fbdde0e2373e61be9ba9fe8ba4b2e72baecef0",
                    "size": 28511392
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:43acb285765a1566a09368e26f802363c73729a1ae513cb100c40d7d5f2c9fd4",
                    "size": 473571
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1f7a541e39d90075887bbdb2cc816aabc30dbffcf6b53f81374d58c099208d3a",
                    "size": 1015
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f64cf4e6488b8740244403e8dfeecf1fd1eca6cee27302b8246883ac41a1084b",
                    "size": 281
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:455b8b17e8e1b86358879c1c85bb769d1d32ef5a39654a9da1ca47fe376a9941",
                    "size": 681
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:79974a50afa759f12e48dd7814fb83e5849ad292c42e28177d22c79b13419d23",
                    "size": 461
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a75d744ddb8d3ce956b7f4327f72717037514cb942025a76c979275f4800ab45",
                    "size": 6745116
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:079ed7ac1e7c007b5b2b48e9eb49602cc337b13652183ae095a5b4c8fc5ce8e8",
                    "size": 469
                }
            ]
        },
        "20231103": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:cf72bce69d27a2358bdd348f02dddfb3dacf1e8390539582fefdc24eb01b2237",
                "size": 6797
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9d8d1f79d667e0d33c19dcab3e1da521941331416c217cc74601d8d9f6eb34ab",
                    "size": 64844849
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:70f1454c069b387e5af8b9d91b5470e7c4785b9a3290f7113ad42e664f16f534",
                    "size": 2592223
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d76a558193cb7b66b0700ad5870a13652edf878e9142a0d74f9a71180fa098d3",
                    "size": 44064717
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6f396e4d4a3dac8410ab225cbad45fb13592e944fdf1ab97a953ead54f0fb00d",
                    "size": 473572
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:12c35de3a810ce75e005471dd252f007b4ee65305ff26ddc28b8dfa744f9b86f",
                    "size": 1012
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:476049291d6250253e43958e82448d6c862427743c148732b2a832f70c372a56",
                    "size": 278
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8e0ba4f7e5a572e065f592740afcf5c1f8313b9813191abe3a2b5fd75ccdd00e",
                    "size": 677
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d6b9fe800ceade297a03f9af34ae2921bb7a789025c1dcfcb5b389739c04d457",
                    "size": 462
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2d3832d1ab31b215e5761831765681db33ceff54edbe8978ace82e7667976b52",
                    "size": 6852365
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c10528dea3de7c6fd49674e8553d4cd40f8dba16a2911a1ac6a99b5acf45e8af",
                    "size": 467
                }
            ]
        },
        "20231106": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:0cd6f8c7fa75f4e2f7d2be0ae4b14e5c66fda33b6c8b8eaa96f74867e9b3e0eb",
                "size": 6801
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9d8d1f79d667e0d33c19dcab3e1da521941331416c217cc74601d8d9f6eb34ab",
                    "size": 64844849
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:03e4b9d169336e58479c799e52d209343f4fd63f113b03b9cc3778d78eefc36f",
                    "size": 2592228
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9ebd0b84befc3bef3f3a1a315ae5e7ec38574027144908174718797f0a00360c",
                    "size": 44065020
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4d11386853aeab8cd5baa963e4328bffa12cd29a1ce5240ad9607cc9c3e875fa",
                    "size": 473574
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7331c59cbf560592c7caacaec5a5b0e7c1412d0ee6c53af4a6afd0b75120350c",
                    "size": 1012
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:01cc8bad0eb150412ebd78b17a1ec8ddb84bf7bfda9878c71e39cec3d021ee7a",
                    "size": 278
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:204195aa087948caf7654cea0a3a5700bce5edb30a573214210d4567dfefe883",
                    "size": 677
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c45bba7cbbc35ad8b4c7416a9df0446d0594c82b7244266706a7a42cfd423cda",
                    "size": 462
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:883beea72baf754c5e02866d6409d567ab7ac97ceb43b3f033acf2e4d67ff705",
                    "size": 6851959
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d392242678b9e44bb982d028b0c35b2f9cd8a313fdb199bd7667ee3d4afb07bb",
                    "size": 467
                }
            ]
        },
        "20231127": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:fbd506194b56080b3cd1daa5fce5fa7821f6993bf80dcfdeeaab71feefa9b759",
                "size": 6801
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:69fff380046369a47fbc74b0aa03f61fb243f73dc5795e3ecf69c6577ee84908",
                    "size": 63118399
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0bb5eada9fb8c922ecc9f8444aaa0ee8a62fcac70ee74abc4710b2495f0bfd08",
                    "size": 2592228
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3ab8b31915862687dcc837ff941a87caf4c07e9f37527c8ff82b84c62d432e58",
                    "size": 22318509
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:491f82e7458e6e17bae05aa839d6b366e87513662f4340abcac0a9696a7480c0",
                    "size": 473573
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:744368413ff21e9a4e526bd1640cb20d58d0ac97385af7363e6ccfaa0a24b050",
                    "size": 1010
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d600c7ca91fb3e6cda2851db48eb14cc780b01a3eb28cb3b5cc1c157b30e5ce8",
                    "size": 278
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b803570392d88303afd7a2018b05dbf63c3295a143048a2729f5436e4f82f62e",
                    "size": 676
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c82c00cdd78937eb219600038c3a9ba8501aa8ae7b114cd8e577f8fe1107a36c",
                    "size": 462
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:390faaab281141853f012813dd071904a46b1de81f958bf38e69808b0eeff12d",
                    "size": 6664220
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4adc356c69b028295625f293b1d0c5d7fa703bee6cc5aa5b072a86d01e0ce930",
                    "size": 466
                }
            ]
        },
        "20231204": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:aadcf5971f3dcc20442bd363e57344117716db95c42af7d63c53f39f81fe4dd3",
                "size": 6797
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:69fff380046369a47fbc74b0aa03f61fb243f73dc5795e3ecf69c6577ee84908",
                    "size": 63118399
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d33718b133be58c12c588d020799740b8f5d0e1659f4305bd3a42e0be1ca53e9",
                    "size": 2592227
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:638dc3ba02ae0d436831ec2e65f80cf3a0df85f54b4dd0e7ef6c930f2c9ab6a9",
                    "size": 23448833
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:320c005249b51b04b58caf58affd18499aee26124689ea955f510182122cfab7",
                    "size": 473569
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7d3113c0c18b1dea309c42932b22901908926108a8103cdab78170405c7a600b",
                    "size": 1013
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ac6ed7c321ff834e5966003c322a533aea0543816c96955876c3ab5646e3079f",
                    "size": 278
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:297b2ba3b641a48b1e90733cb70836ce9c195ca3803cf200e37417506cf0bb66",
                    "size": 678
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1f73b516ad766efd99f0fe8db17e4e328b2f6accabc971ecfa3d27b53c981a71",
                    "size": 461
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:88a6f556227627ae13f8f1e81bfd7875459522e6b16f89af496e878e77b21b18",
                    "size": 6663642
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:56d1f6253cfba1bbba8e19b05b5bd006edaabcd4770a960a46ea68b10e0fdde9",
                    "size": 468
                }
            ]
        },
        "20240227": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:9dff4750c0efb91aedb381e864ae043d4598609b81841ac905ecf8569abe6fa3",
                "size": 6798
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:69fff380046369a47fbc74b0aa03f61fb243f73dc5795e3ecf69c6577ee84908",
                    "size": 63118399
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0c9cb203b87166e0d09b81a8d1f5b49ea5bb80d37799c1ddd6d0f58f482ba0ca",
                    "size": 2592228
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:cd15d660a3890fbc117644cc7e00384e54cf47a86db50fb85d3e3924a3b6e0f7",
                    "size": 23448836
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:69feda61e8a6a07d2f8173016c73ff91210e0484140825e75e597b45142b7ae1",
                    "size": 473570
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ce20a220ec40b0412743b54d0120c434710d00f3b54a54502308b76efc9dd983",
                    "size": 1012
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d47f351240c88d3748188f2ef0e0b48f6e891509bebda6f18393ad51c6305e70",
                    "size": 278
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fe1a2b8c0123677dd17cbf5897edd521c063917ffff70729a2e1211219421c57",
                    "size": 678
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f0bc84079738c7cb444a751732c831109078ebd828f39565c765bfc72f1e32d9",
                    "size": 462
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8c21ecec21affc35aa8a5227f35d93fe436894197c56e4bd6f855d4985f9db11",
                    "size": 6663444
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fa658dab08e5b203e9702c9231a43d3c58d202762f6b3935d386a575152602d7",
                    "size": 468
                }
            ]
        },
        "20240304": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:b236014d0b8e0954b6a9dc346f2932d5ed26b29607de5eb3066a3b50da753e9c",
                "size": 6798
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:69fff380046369a47fbc74b0aa03f61fb243f73dc5795e3ecf69c6577ee84908",
                    "size": 63118399
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1838771b8ec87483e105e112d8024f9e9029a53bae9d1ef0c34c061003181dfb",
                    "size": 2592227
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9086ea61d95c1ab147c8270e5a9b1830e96d367d41663c7617ebb4b06043f2fa",
                    "size": 23448747
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e665d30b7799b95a1fefa213155d46f59fff56b68586082bf191741035863ca9",
                    "size": 473573
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:eca08035356a02b31523d0089c92c641151221e1163f6f69259640069fc93325",
                    "size": 1011
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1dbbb8991fb8ec274be4b21cf0c12fa2b72fea515b37daf96cee76915bf6a3ad",
                    "size": 278
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0a012ba1f4d0af3a86a253d6ee08223c9446a2cf6250bdab21f839ebc7d16354",
                    "size": 677
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:30495c77303f15af04a882c71d278cea6699924428092ff409840f02e3455bec",
                    "size": 460
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e7ab56aa194f4dc7a68895e415de89ccf0160ea0b426b690a95a095a6f7d4a80",
                    "size": 6663488
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:23a366fe4d2a5894b996fe60721a7ea0557042186d1979ab9f7a18c5e5fee741",
                    "size": 467
                }
            ]
        },
        "20240401": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:7b10dd0d6f10c2e8e309549b112fe430a55f33cc7c33275c8ab91541930fdcee",
                "size": 6786
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:69fff380046369a47fbc74b0aa03f61fb243f73dc5795e3ecf69c6577ee84908",
                    "size": 63118399
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:326b20e912351ee1cd36eb4928f89de7420c89cff4fe26170cede56d5b53defb",
                    "size": 2592233
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f39d9f2f25dbd3d6ef3ad45ac705c80b09499c0886ce65119c20d6fc0873f021",
                    "size": 23448664
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:149aacaa82b179c640f96dd6fa65cb2df58f00055c9a94c3886a4906672573a7",
                    "size": 473577
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e7514cd29789812983b2a947f44fce3f7bcce347440875a08883bcd9b53e739f",
                    "size": 1012
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4b84039a432480f5ffe416931d3e349c4318c99332a368f259bac7fd40b1d2c5",
                    "size": 278
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:85dfe6b177a514d70942f90882fe77a64a24af14ef6f9f8be9f6e0ac8271c2d2",
                    "size": 679
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:75ac5a1c7aa9ff94b80b26d3cff3e1a67892548f05c0ca35405a77c861a15ab8",
                    "size": 462
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5e0ff124a6ae6ab036fba31dd61f281b5879c6812593ba0a0b7a0393e1a2619b",
                    "size": 6663618
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6704808fc482f83132cc07606068d73ae29e37a6aca08a65beaf66e0bc818072",
                    "size": 466
                }
            ]
        },
        "20240408": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:21c69c09c581cfae914b06ae8ea9aedf832bdfd087b409851b3cb2f7b448b385",
                "size": 6784
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:69fff380046369a47fbc74b0aa03f61fb243f73dc5795e3ecf69c6577ee84908",
                    "size": 63118399
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:689676ef4dfbe38a100ec0fd8bde8b49c700bedf04ca010d64d0e38e212b9404",
                    "size": 2592230
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:20de4a94e0f41f23dbdf295a23279b3082a2b94c36276a1517ff184d9dae8e62",
                    "size": 23448793
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:aba17861f514dbec43f4f00bc73113c6ead88d0daf01cd5af8c0468d2e6ee6d6",
                    "size": 473577
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:44561f9120b7b96b19381819ea39413a89fe135ccffbc8f4f6586ce34ddef54d",
                    "size": 1011
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6246de46784e0baf4fe4448538c5536535e1dd8374a16e2e22c5fb226e3f400d",
                    "size": 278
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:008ed895bd8ec822f5bbb391c610f13b97036c9b6a66d8ad9815fcd75fe5517e",
                    "size": 679
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:752a73f6143a147cf9dd80aa9e2296a8678cefd5393206c50f4df7a5303521d0",
                    "size": 460
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5f7970ca1823ab6f117260e104039dacfd3d8e583bad77fa9b3ce031e1b7083e",
                    "size": 6663815
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:471e478298689d5e3237afef5c6b64a4eb3d55cea881e49831fd2abea2ba9261",
                    "size": 467
                }
            ]
        },
        "20240429": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:446423e4a663df9e126411abd0bc036e3fb97a845722fe1b78c42d6b4a3e1518",
                "size": 6786
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:69fff380046369a47fbc74b0aa03f61fb243f73dc5795e3ecf69c6577ee84908",
                    "size": 63118399
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d67deff5c71a351663d4faf25c3b38f412142a31bca7a8d888c8821bfe5e18e9",
                    "size": 2592229
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:aef089e78d846edbce27f2669c47ec3fcef142e589e1867ef5908636b93f70a1",
                    "size": 23448814
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d2e3aa275cbb3a947522d3ea6580677ee9aa12d44c091352980066a1fb89bef8",
                    "size": 473573
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5f9e31015a5229413246198fe29fd337da9e65c8a8af3238c1f8824969f6e872",
                    "size": 1012
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3a3a2d6852cd0e1051942f064efb1ca5ed52209ef47cd0bf05a7e8752026738c",
                    "size": 278
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c3c8080aaea2aac7e2ff9499b2a0acda4cb7e625ee3cded157d534b54c647108",
                    "size": 678
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1e138be9b56c798718197323eafa69ddc869347ebd57ddc632dd70c020d34717",
                    "size": 462
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d537c6b0b2da4aaddeb1847e2edae9d037513a9590be529e9576078bd7d08504",
                    "size": 6663451
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c1526bc22c70d45cb4f2d11a06aa85fe110c675fceb404d9131388055cc3e980",
                    "size": 468
                }
            ]
        },
        "36": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:6c8c58ed48c56f342f3a9fa876f65960d8bb39543a7c9bb8a215c668678af848",
                "size": 6787
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0aeb4ade331e503f627cf2d20e48a0e609546d534f31d0ab05e75c8f0a67add4",
                    "size": 58130600
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:082c1b0215e65b79bee57867d846182d55066d84b6536f8ce5cdfb4557925530",
                    "size": 2592231
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:42ba2d464197953ae0c3ea9e9a7a0862776bf9c6b9f3de24425d068cab220125",
                    "size": 19390844
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4964fb2db364d724426035e1a65a77fb7a7597a97ee108d28fdc5f65bb88355b",
                    "size": 473576
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:30c2f7dc4c95c77dc1ca12e66dd393dae4e0e48b4bf2e1ecd5df4bb094a6764e",
                    "size": 1013
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6b1bd7b752a01aabedcbb0120f942f8e9b40c1ea7d9dc536209ada8b69b743c6",
                    "size": 278
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c65f82c416d78c6bd93cb4f9d6a5524c5b78e47f5242ba83e2a7e56333387a14",
                    "size": 679
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a5aee459832c98a800d0f6b838ab0cffb57b28fcdf8ae32a265c871cb574db71",
                    "size": 461
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6f46c83c96b207c2b44408633e6864c96953137d4403f04f0484074ec8cfe7a9",
                    "size": 5932206
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:cac987c2901706340d373e66b91ef8286b438fe6236a44732c00ee721f608033",
                    "size": 468
                }
            ]
        },
        "36-20230929": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:79899f8d9ed968c9a7cdafe90a9ccb7f128e1638e0df493cfccc4f10000417a2",
                "size": 6794
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0aeb4ade331e503f627cf2d20e48a0e609546d534f31d0ab05e75c8f0a67add4",
                    "size": 58130600
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9fff02ca2e741d3f751eb002765f73f5c3f408645ce7147499ea4640906e0943",
                    "size": 2592240
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:34731bf3d00791c7515a68c6e2636f8f537015e42c7242fa6ea97984d34bc11f",
                    "size": 19391522
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:25fb00537804b2ab003637ca1b2694263a573e70d2278eaa8bc6832b4aa9edaf",
                    "size": 473568
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f47f6aa8c3128884a4ce839c206f452bd83a20a48622d5853ffe82918a1725d2",
                    "size": 1016
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:835d1174417d13ab9dce12261ee90e320d0a2625008f423d55656efa7d4947e9",
                    "size": 282
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9589788ca4b24d6a18c55e30fc8041db9538dffa4132778990c87ae1bed4a90e",
                    "size": 683
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:044e4cd50142bf7d4dba6b76d94b21b9171e6a35c5837af8806bf46c006508b3",
                    "size": 460
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1e1819591ba34fb765844b19fc4466c69b8abebb4edec821b2f01edaa0c360bc",
                    "size": 5932512
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a5a46a3bcb4ac6df32bc2d9385c85cb7be69fc18f521a113f422c8ae9b0d79c7",
                    "size": 469
                }
            ]
        },
        "36-20231103": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:c9591a98ddd9f696164ebc1354aa4ed3bb061740d2f7978f0beeb3adedf0774f",
                "size": 6799
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0aeb4ade331e503f627cf2d20e48a0e609546d534f31d0ab05e75c8f0a67add4",
                    "size": 58130600
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3aa8ce65d91769293a572a85db2cef4e412aa18cc756acb1332097ff06409197",
                    "size": 2592234
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:be652b100b8959d592e3499aad6faa811f48f060d60641e81499551de617c31d",
                    "size": 19391777
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a2da1bfa547dbcbf400e728a0032b862a979e854c0aafd2806ce361bfa18ba80",
                    "size": 473575
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0fa7f8546442f1ac93a39ef77729bc53ce34c0b3997d6c9590306904a2e8a41e",
                    "size": 1011
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:04ec04306e065afad0dd8996fac2fc9581616e0b79b380a150dd7432fedea347",
                    "size": 279
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:39e0bad41de994a56535a80dd9b5088904a4269b59b1ff5ed27c2a4e5dbb4458",
                    "size": 680
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d15725703c805c5af6d481ba249cc3a5e4f7f3113bff5b44b5f3245349f6eddb",
                    "size": 462
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:deade38fbf99d00f45f53f4cbf269cd9ba69b0bad56d4d0767000a59c1f9d679",
                    "size": 5934959
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:211a3f9795902ff034bf544cbeed8235719de7227d3847dd57e237b39f004d2a",
                    "size": 468
                }
            ]
        },
        "36-20231106": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:9798902c27a6b05f3150b7efcd47471e2f9722fd709386eb3617b4405427d678",
                "size": 6801
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0aeb4ade331e503f627cf2d20e48a0e609546d534f31d0ab05e75c8f0a67add4",
                    "size": 58130600
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d32e3c089af872013fdf4d354ad913dd2f1c0bd469841260a344ba6bd3259052",
                    "size": 2592231
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:66fb0a05565bf516c3022347f2c65160b12721392d354f3cb07155208e144228",
                    "size": 19391881
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4d35d26befc4cbdaee212145b9d47395f8b14652efe87a7e2d8589d9c53ad7d5",
                    "size": 473577
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8f54b98642931b1cf7237c669e4afc8dc4df08f1eba6936419b74b65c8027d39",
                    "size": 1013
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:90e2ee75820604f119b5a41e80b578199a127ccfba7785fc67cdb2744c643531",
                    "size": 279
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:359ae85ccabbf99e533d340b537a398757219254b16485845579facb7e3e763b",
                    "size": 679
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:303faaf9eb6174330075a0f98e3115abbc556792a7daaa0ac3eefc6fadca33a8",
                    "size": 459
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ffe9ff7f7ae1288b14355e5f2304abd477bbe1efdd2a5418c0dedb9d14f27303",
                    "size": 5934801
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0794271fb5f826fdb210c26c845415526a9cbeb77cfe39eb85aa0c7218c4cf41",
                    "size": 465
                }
            ]
        },
        "36-20231127": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:b19bd777cfbb6c18e58426db1f6210b7cb6d71928c7998546ea7fa7020516d02",
                "size": 6799
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0aeb4ade331e503f627cf2d20e48a0e609546d534f31d0ab05e75c8f0a67add4",
                    "size": 58130600
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:27eff68d9a224631bc9148f2f2c0c72a35771748d9b8f590052016aeb924d11b",
                    "size": 2592235
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bd7ed4bd95d152cffde10cb094a285e61f847c1b2ad3e0c247a045233e23ef36",
                    "size": 19390728
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ba2f57050d9d37c6c6ba9fa8aadd91937b5517f921e2b541f3f3f0bb30b89052",
                    "size": 473578
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2760e33d1c6112d86dd20ebf1227225a26be11ad5116ae402a7b9bf4e775fb13",
                    "size": 1011
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7cf9189cd93fbba6a8e211532cce39785bd2600d9da95bafd01ca94da45c65a7",
                    "size": 279
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:37d7c147010f6df12a389d7f0c897c3fc4cf2c6a1e3257b6880f825879d95bb9",
                    "size": 680
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6a369e4755e6233336ec243579754afb360f9c8bf93836054e2fa686535524bb",
                    "size": 460
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a0b30896462c9882bcd694182ac2dd67017782ec1a10388bb526dafe912004ab",
                    "size": 5931562
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:38594f1e12812505b19ad09536b31bc14ee6185415c9c9499d0b33662623d644",
                    "size": 466
                }
            ]
        },
        "36-20231204": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:6024b01a136ec1c8240f3c7b1d4f1c0fbee9ac27f6d32b5202266ef6771a7c86",
                "size": 6798
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0aeb4ade331e503f627cf2d20e48a0e609546d534f31d0ab05e75c8f0a67add4",
                    "size": 58130600
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2e38fef274e245000293ffa599f96f1b79856ee26ac050ec3c1280c4aeae35ac",
                    "size": 2592234
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:cd54c649165938bddb85bf336891e597833fc5a5f22c35f1621b0a671d432d04",
                    "size": 19390853
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d9d8ea859bb946f8092af616fd2359c1407388455978dda73bb420d6b6fc0e4a",
                    "size": 473569
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c1e722fe6a576a7c34c5c35ebadf71995d44cd5b346dc2ac3e4c811adb9cfaaa",
                    "size": 1011
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f77e425fbdcff8d7bf6463013f5bcca6a56ff1f8a2274aba1c29ec516a725885",
                    "size": 277
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8d25903730d88759040297a1f9efbe27868d3352647cc94938d8937e47f71334",
                    "size": 677
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:617cbed8eedb3ea98f8d69136824f99f687e1286506ea23a735d2030dac5d86c",
                    "size": 461
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5e5273d5a2562f1812896f0acdb0764f18ffa84b3c790b8dc866ffcba93bb843",
                    "size": 5931829
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:db64633a78d4d25eaab821e77b7f6042d9bb38c224901095e93e899a12cc7be6",
                    "size": 466
                }
            ]
        },
        "36-20240205": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:71ef818847977a523b711fc1ded9e957525b0ddf5caab96ccc9c804257e80d13",
                "size": 6802
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0aeb4ade331e503f627cf2d20e48a0e609546d534f31d0ab05e75c8f0a67add4",
                    "size": 58130600
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7f84e7c89b99816b1d57b18ba46b176593a4acde24112af0ebb15a3f9c6324bd",
                    "size": 2592233
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:49f6c1b96c0eb5bb7d920ec2b7b7d53ff87c64dca3b618aa5282842ce4964366",
                    "size": 19390698
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:091ccb00dd5140a07b30294f5acca80d118c0cf0a78d10114205fa88f128097e",
                    "size": 473573
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6a53ba3f76b89db541ad5b2440966d7760158c62dcfdcf86a57a56ccabb1eab7",
                    "size": 1012
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:cf1196079c7d2d54dfd67774cc416684dcbccaf5ecadc944b3e7fac84f1b5688",
                    "size": 279
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9322d7c54bfbad2f558788f1dd17351e75511d72efb30e63be1288a0373f3e09",
                    "size": 677
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:84641737dd371ea66763c59da29abcab846714470b969f81d5d69266ceca4f21",
                    "size": 461
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:39b9d07554280d59c75a46039f9c0ba23a3766934da7243551f268654371c43a",
                    "size": 5931777
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:451e3b04a25218b55802544dcb5a304658ff2ddb072443224105db2895dff6ae",
                    "size": 467
                }
            ]
        },
        "36-20240227": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:04b340f474cffde6ed8bca3c00489d662eed38dec01364f5bff2c95f3e3f18d0",
                "size": 6799
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0aeb4ade331e503f627cf2d20e48a0e609546d534f31d0ab05e75c8f0a67add4",
                    "size": 58130600
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e7a0db0ff778242d33b334df3880f3377be078ede1389683094b9fc5ef625a8b",
                    "size": 2592234
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e11ece4d18eb73e1f2478b744c2762a970279215b677363fffd763b4e66cbb20",
                    "size": 19390875
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0859dbd8c79863b41056cf1f05b8070d167a36f4722ff62e7692830b9813dc72",
                    "size": 473577
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b1fb6c3b5aff923033461b6aced870ddbd9ecd23a6f1d33b947404edb036887d",
                    "size": 1013
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5db6ae9e6237947c470a017ac42126a11b27bc1f4c45124b7abee8e979d5121d",
                    "size": 279
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9784ee44190cc36d239aecc400341f0cdd989158bab82fd65d2360c337941dd6",
                    "size": 680
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c96d7e580d362e4810be600d8366b5df4ef8a5d0acaf892f1a6d7991c532b9e8",
                    "size": 461
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b72c9d80b7e951f284c81cc1f7647148877a157004633cfecc67ce439bbdd2b8",
                    "size": 5932079
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e7976f1664544e3d31840ca3e719c54a3020b1a6ecf0ec3e82e42d5adcad2475",
                    "size": 467
                }
            ]
        },
        "36-20240304": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:a520c13fdc186695915a9419eff66a1b15b0e9c313b8089ae3ba885a1b904b07",
                "size": 6798
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0aeb4ade331e503f627cf2d20e48a0e609546d534f31d0ab05e75c8f0a67add4",
                    "size": 58130600
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4bc51f944b49ce237b9f298b98365527f7e3798bf21bafd50e35866a556ed4e9",
                    "size": 2592234
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:facc66dc89c7d7c447626eb18bd7ce32d146ce57cca4020a810c3ce4f591eca7",
                    "size": 19390749
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c83275ccf32f5cf0cba4d8f5f680a0359bf1a953f54b790f0045b2ceccf6223f",
                    "size": 473575
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b34d49a738cb74e7f50b246548d2e75750c65f65c48b0f17385c21e6803b996a",
                    "size": 1011
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f4321ae63b784037f1250a339377b9aa8b8b667eaaa46f6ee1b5bc892702f6dc",
                    "size": 278
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a6b178a90bf42de76fa696cd5c34841d8b28240ce520eb2cbfb604e148aaf6cb",
                    "size": 678
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:56991078aebec441802470063e40c974fd84cab53be8c0302e8c05f1a88955a0",
                    "size": 461
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8ee7a14d7831229debf0d0b809eb7076ba63b4f9c39cc376c093e6362feacdbc",
                    "size": 5931978
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e2660df6e2732d7a7d859d21ab7a6f88dd6b61b64d0ff4dd8c7055f18faf55e4",
                    "size": 467
                }
            ]
        },
        "36-20240401": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:2e09c47049b14692b0f58c7b313e7f02afb85ddfe755c55c0b03e68049803c71",
                "size": 6785
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0aeb4ade331e503f627cf2d20e48a0e609546d534f31d0ab05e75c8f0a67add4",
                    "size": 58130600
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:56dc14cfe3300a84ae27764721db64d2f98d454a9b42a6c9d7cb9d30a172a070",
                    "size": 2592228
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8f5d5bfba91d41861de1fb090964f20b327211c1c947a70c5c06ff50f343cb09",
                    "size": 19390970
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d7510c6c08be3cae0d913e087b2ab0adfc335aa94a8b99e269e3a3aaaa9bdc39",
                    "size": 473575
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f364d329a6963313f859e7df4b3254176e848f77264ad4b07f4d4267197066f4",
                    "size": 1012
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:94abcdf5f2faad93c90676ffe091e188863184745ebc512c40b1f2ae1fbd2bbb",
                    "size": 278
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:33198baaf3af80d3355e63a11e4f2a4f308ff51588ae697ec514e96b8ce5ca0e",
                    "size": 677
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:079c572b5983bd27847370979958f7a75f320fbf3b0b1df78d317296b7aa988c",
                    "size": 462
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7679311a7a9ff5013878b38956783578337ce7784ec1ae59f5e052ac1e5852dc",
                    "size": 5932233
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3680bc3662e6ab647d38dbbb418e9b3e98dbfd9c8b0060b4ab98802b4a401d99",
                    "size": 466
                }
            ]
        },
        "36-20240408": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:6c8c58ed48c56f342f3a9fa876f65960d8bb39543a7c9bb8a215c668678af848",
                "size": 6787
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0aeb4ade331e503f627cf2d20e48a0e609546d534f31d0ab05e75c8f0a67add4",
                    "size": 58130600
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:082c1b0215e65b79bee57867d846182d55066d84b6536f8ce5cdfb4557925530",
                    "size": 2592231
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:42ba2d464197953ae0c3ea9e9a7a0862776bf9c6b9f3de24425d068cab220125",
                    "size": 19390844
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4964fb2db364d724426035e1a65a77fb7a7597a97ee108d28fdc5f65bb88355b",
                    "size": 473576
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:30c2f7dc4c95c77dc1ca12e66dd393dae4e0e48b4bf2e1ecd5df4bb094a6764e",
                    "size": 1013
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6b1bd7b752a01aabedcbb0120f942f8e9b40c1ea7d9dc536209ada8b69b743c6",
                    "size": 278
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c65f82c416d78c6bd93cb4f9d6a5524c5b78e47f5242ba83e2a7e56333387a14",
                    "size": 679
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a5aee459832c98a800d0f6b838ab0cffb57b28fcdf8ae32a265c871cb574db71",
                    "size": 461
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6f46c83c96b207c2b44408633e6864c96953137d4403f04f0484074ec8cfe7a9",
                    "size": 5932206
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:cac987c2901706340d373e66b91ef8286b438fe6236a44732c00ee721f608033",
                    "size": 468
                }
            ]
        },
        "36-build": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:c678204bd388b9f7da7254e7dd1bab922bf135d4ab3ef8a1d6c33e4d53926e48",
                "size": 7546
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0aeb4ade331e503f627cf2d20e48a0e609546d534f31d0ab05e75c8f0a67add4",
                    "size": 58130600
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8764ad086e58a97c06142ee94b9611c18210c22e68df2b5a48a9642655300718",
                    "size": 2592230
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1b36131f08816b90f920c5a468157221fdedd3d2135cf04285071fdee5c863b5",
                    "size": 19391006
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d34e3e4b0ce81bf5348d5f2e6ca0156b3814f6e6593c5ada871f5f985255bc86",
                    "size": 189028355
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d8fd98c44fe8de3eab8482ae2bbc1daab8ae83943d60e62c14804b3a610398df",
                    "size": 473572
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a9d996d83302baab279626d16a59c52db02af14ecdc464dd6da80b60e784e3e2",
                    "size": 1012
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:98f156bc669d3b72f6d0fbd7d2ae05bbe0a4153e02dc8a330f89d1d1571509a6",
                    "size": 278
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:82e21acf93e28ef258e7275e925c15f4924cb44c67031e28927da5a0ae68fb1f",
                    "size": 679
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c8e5300ef4596be4c3f87cdcce3ccf8c3581658a69caba06d3b1e117cd749a5b",
                    "size": 461
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5caab3768b668bf1a9f03d6b9204ded37390fda818f4c9f10aae3cef1866bd49",
                    "size": 10871580
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5ee7216beee2b4ec7959bd0175fe7e31c1f142194abdb7deb44f03266432865c",
                    "size": 468
                }
            ]
        },
        "36-build-20230929": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:ebd8093769e30d739c17520d6cd25bf0c99f4c5fc7bf69b154b22ac20a1ecf3a",
                "size": 7557
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0aeb4ade331e503f627cf2d20e48a0e609546d534f31d0ab05e75c8f0a67add4",
                    "size": 58130600
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9fff02ca2e741d3f751eb002765f73f5c3f408645ce7147499ea4640906e0943",
                    "size": 2592240
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:34731bf3d00791c7515a68c6e2636f8f537015e42c7242fa6ea97984d34bc11f",
                    "size": 19391522
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ee0273eaee345039612e5a2978c4257de92f2f05581e907907eaa91d4a9a84ae",
                    "size": 189028749
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b58b309390860bb38615abe1c225b33ddcccd4bdb661ae904cb959588f97cb46",
                    "size": 473572
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4a2ec80c02dc38eb71be3ae88acce64c21c04614dc6cec58bb4c3f9622e9043f",
                    "size": 1016
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:981708ed75d15fe8d6aaba3ec438aa9c2b3b575737cd18b10d4e0d587cd1e861",
                    "size": 282
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:675fb8c66d070387fdc334f92a6de6925867c31bb4e6d5e492c3a6732d04d1a9",
                    "size": 683
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3acdd833935de0a4b687f4213c5e200a7e8513aa1f5b2523da59be847973a27f",
                    "size": 460
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f346f18bda4754da0fbf6fc74f12744c69ab79ea6abf6d0995fc24cd43b2f2e8",
                    "size": 10871348
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ed942adb5803c91d75a1f8b70ef07e284736cb6add737a71026ad52b3f18450d",
                    "size": 469
                }
            ]
        },
        "36-build-20231103": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:3d884f3935342a61a86e5b93b8b5a695bb44c4d83318a9092e61a4a702f2ac17",
                "size": 7553
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0aeb4ade331e503f627cf2d20e48a0e609546d534f31d0ab05e75c8f0a67add4",
                    "size": 58130600
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e0fc7da42fa65e0bf9796dc9603250f7024b2b64504b41f25275e76938a29010",
                    "size": 2592223
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d4674344e3018946d336013ae38a5e944374f7e453bc862a076b51cbec6776ff",
                    "size": 19391653
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fbbe467bd03c82d3eb39849d667a4cab9585321543f93255a9f79178281299ab",
                    "size": 189031360
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:61812a3ed13453017a0056043145dc93fa05cd8f6455e928cd5db7d8abd72a1d",
                    "size": 473577
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:175fcda89179b0c9e7d9b3d87eb10df8af8d6d10db1fdfb866d5fff95e95900f",
                    "size": 1013
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:24ff18fe7c682fd2795fc67e9a3616d24c33e87fc7153aab30ed90319d3f3200",
                    "size": 279
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:43021fb968fc2a99bb22250d1ef2e93489067e357dba556491877a24aa8bca8a",
                    "size": 680
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:33a928abc66a70932b9a93f6470d1976d3b0825bb3de2543f7bf3568b1f96dcd",
                    "size": 460
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:12b6b1a5e6f351731877a60565e499f903204372b2ff97fa50e8c4d292826f4e",
                    "size": 10874963
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:96f2ee19c5a903cdf1425cc980be23b0735c87656cd40c0edde78aada57a9388",
                    "size": 468
                }
            ]
        },
        "36-build-20231106": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:6a3e9c123ff0ca3f5cbf5a784dd31d84615c33a638e40a888fd63dd7bda28561",
                "size": 7562
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0aeb4ade331e503f627cf2d20e48a0e609546d534f31d0ab05e75c8f0a67add4",
                    "size": 58130600
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:843e7fa7b0ecd6c9d9993a685c06be14dcb974fb8cb5967cf38c7f8e93526a72",
                    "size": 2592234
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9b373d83506e2b1cf8a5a7d6df6e2ce8b4da3a28ac651ca847e3a9b507278c95",
                    "size": 19391895
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:00995a91c2ba2800d0ea91eedd7df01960e6ed546fe8993dce12fb2e039c393f",
                    "size": 189031043
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:264baef117e1f41c340e8ef9cfea56670be17113f4cbf157ce7ec1545765223c",
                    "size": 473577
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d7e8363f514ba93e7c7e94483fadb5e5313d6273414ea651c4ae263d766a6bbb",
                    "size": 1013
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:93433296ed922f0f30cc682f6dd2688d0f74650d45e2a7444269a14d62dfb992",
                    "size": 280
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:999ce7eef31147e6ee0e65c7f5dd1c47a1049b1e2a64cdf13aad606fece866bc",
                    "size": 681
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:89ba4eac9d43e3ac8cf1ae642b1f4688f72765a4e4fe17768041699d5cbcefae",
                    "size": 462
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c2b74b5cf43b4d94fdcf995b3ec094044830bcdbfc65cca7bd39cba5049dd819",
                    "size": 10875047
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8fbe1b59b0ced60139758ad6bd348f7736c5f8e06bc2aa6dfdb66b7f01779c0d",
                    "size": 466
                }
            ]
        },
        "36-build-20231127": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:821df0cce23bb00cf4c7c618e4336dde6dea5d1b9abbfdb646667ebeda22f711",
                "size": 7557
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0aeb4ade331e503f627cf2d20e48a0e609546d534f31d0ab05e75c8f0a67add4",
                    "size": 58130600
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:451a3bc08d75ba36bb577db7145815a8f74476f35fd73cfe2705a9664265aa45",
                    "size": 2592235
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:dd401d5fcfd2da093ec1351b48274e96706e025d169778be65954f08e0845229",
                    "size": 19390772
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d2be874d8b07878e4b21c840e1631d7f4eacd9606cb875b02a18318de76ccdee",
                    "size": 189028967
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e2a32fbbbb7ee6072d6cbea15b3f64e309b8ee6e556b8d3cb6eb47d29f1c4894",
                    "size": 473575
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6106ae8d5029f94da59b8735b7a3e4b7a7f81bca08de4128924937c82bd718cf",
                    "size": 1013
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:23e49cb117956db748d328e28a0a28f49139353495c93f21e1b49007129f8e09",
                    "size": 278
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:51a674d4700df86cf39c02f4f9de18c211a00cd89e92ff0685eff68f73dd39e9",
                    "size": 677
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:117c44ec30ec7143ccbe5ef299b3d2a159764adabb71acab5fe528cf18548eeb",
                    "size": 460
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4cd116ae88a8f403cc87c646495bc8a77a75f44821d78d7d3f5e6a53e6e13032",
                    "size": 10870543
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:256012558422bed3d0cc13d1bf8161133d5dc2fb84c6e311873ef91e4ce17039",
                    "size": 465
                }
            ]
        },
        "36-build-20231204": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:36985d68a82057d432fb7756ae816e000cdbd9c49e4fae0a30ab787a636b2bc9",
                "size": 7562
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0aeb4ade331e503f627cf2d20e48a0e609546d534f31d0ab05e75c8f0a67add4",
                    "size": 58130600
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1c284bf58c67f6f1cd7059e2fe620935eb27f63f405d100b2ea214525520bb3c",
                    "size": 2592234
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e03f3ddbf6df09254b2f3f993eb7b22a30d02cd6ff230d8547b741da5081c474",
                    "size": 19390779
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b4b9f8ff17c724087469491f62dbf64fce7f52812f3005a01eebf5269aae939c",
                    "size": 189027957
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:50b7638fb8bc805f48e2cea302cff161b9e12ea5dc39906c79f71fbc5a3cb092",
                    "size": 473579
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:cece9d2420a0549fc226aa0af82ad27e4ea9b49ffcb8abbf8f649c6bc7324504",
                    "size": 1011
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:088831b12eed8f2b221928eaa87bd4e01ec53a1c837984234b84090da41c50c2",
                    "size": 277
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f381145d3e5da3ae0ff4735ed8d99bdb9ccdcedb661210e8964fd6ce309c5c35",
                    "size": 676
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:48a21261c4d0263c46155e98e10bf21d4b65b922ae3cfed9c13308b2cb634d4c",
                    "size": 462
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c6955c90582328a7d26f1d3aa9b2168731cf7d453ae7d7eff1472345fa8ed276",
                    "size": 10870647
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7debe55cbec0ef9f858247e5051653f9e69548912bd386f8434a0c7ca47791ba",
                    "size": 467
                }
            ]
        },
        "36-build-20240205": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:93757bf0ee1e384da72be11f04a2fcb097694c7cdc14c904799510f2b7f75bc3",
                "size": 7562
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0aeb4ade331e503f627cf2d20e48a0e609546d534f31d0ab05e75c8f0a67add4",
                    "size": 58130600
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9443a68ea8b80c77056653c9cdb28763df5baab71918d223778c8e0a655042dc",
                    "size": 2592233
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fbcd0a1bfe7330a8b54df75a84c2a41583064c469f4fe5ba60a905bdbf62fd7c",
                    "size": 19390762
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b310b92c8e727f77e093a13c020968a8f4cdd70676ee0cfb910762a39bf184e6",
                    "size": 189028276
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e66e95237a2ff66129bccc5e6fc8c73bb8f13b633451ee5e80e53a18094b6791",
                    "size": 473573
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0b1b257cd24c76610045b35d843aebc841260586162729aea2df36f2200ab158",
                    "size": 1013
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3e16611172f7e49e50fe3355b3ede6851b1eddda877a327933135185104a073b",
                    "size": 278
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:651624332fea39ffa8740cc6c5b66b8cdf0125b12dc8dfb87ca71393c5ba8e8a",
                    "size": 678
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a88c2d44d44b074055e19e9f1139ede15c46f572638dcabf4341f848e59e9747",
                    "size": 461
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:73ee8891a724e6d7e54909fa086f38cc720ea3aeb269ec8f09d9c899886fb8ee",
                    "size": 10870630
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1fc9033db41622c92a291a89095560d75e7f64c548dfa72a33933f58f7a1dcfd",
                    "size": 467
                }
            ]
        },
        "36-build-20240227": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:c7490a181c2d69b14b3b2fcf5022b253c0a54dbc2b3956e10a77ac61a73cf0ab",
                "size": 7559
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0aeb4ade331e503f627cf2d20e48a0e609546d534f31d0ab05e75c8f0a67add4",
                    "size": 58130600
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c1c5949f4af1f6c65c0792e39a3f0f9eea4094bb6e8643aa16bf5ec735519990",
                    "size": 2592230
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c9f76dd63f11fe26d3f455a753de3e4aaf382e2f8a5c03722e4d98c28c769b14",
                    "size": 19390832
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:64aa35e762e682b6a09603d7accc7d7dd4ba80d936e42b6f74d9a4c7cdb9065f",
                    "size": 189027895
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:638d538bbfb9dc71484135e0cb6d183c8f98afaf1038d86354a7598480517243",
                    "size": 473576
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:264df434a5e344308c5e8c657c21217955d59a6f06e5a963826823b03ac3799d",
                    "size": 1013
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:40cb454c93602c9789957f243277122d3c82fffd90376a441a8ce9a5656bf451",
                    "size": 279
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:abf8fc480b66a4343237269cbf5e48d28935902a2730eee845750f319c7927b5",
                    "size": 680
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:18bfe318852cef5a0c9ca4b6e59b8b39bc0018e1b1f0cf13ed00af8611c8f8e1",
                    "size": 461
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9b49bed4107678e0ccb139f7aab884acdac7fe6a4db216390f97e2cd52a57b30",
                    "size": 10870735
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:75780958d242a7ada10ce4815e2defe14764bb965966e6f61f7da2df9adae80a",
                    "size": 466
                }
            ]
        },
        "36-build-20240304": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:6d23024cf450d1f7b9e99c058724cc7b4783a707898250a53b066588e62ea4c0",
                "size": 7561
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0aeb4ade331e503f627cf2d20e48a0e609546d534f31d0ab05e75c8f0a67add4",
                    "size": 58130600
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:69cc4f4fa6068c7e20f64e589c6cb6f79356c3953b6ddec2251cd909a1f6e93a",
                    "size": 2592230
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:54ed8c26b2264b097115021b57f1a494f521ebeb9050fa2099a5f2491c8dcb7c",
                    "size": 19390870
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fa85abca87ed70710c728e1ee8a7547072773622b487eb13d75f0583dc6b611a",
                    "size": 189028170
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b26c60679cfda8d91f0e078bde48ff45bf147034eb56c860b0b09f7defd1a5bc",
                    "size": 473575
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:cf5b4b90867d019b607aa9455d5dea09f4b01831cc0acf2dfa05d0511ef9ed3e",
                    "size": 1011
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0b3d8ff0c32a5ed397bf09b7c1f82167c37008cf70fefb38ce1127d24ed697e5",
                    "size": 278
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:70846d0457808ad2411aa8acabe8981fbee880773bc320f139769b5eaa431b1a",
                    "size": 678
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d18df4bf438b32d5dc9239c1ec3dd8a97bbbb891e330233caee265b4bf070aba",
                    "size": 462
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0fa2708fcf8e7d3dbc46610a8ac862ac16dac09ff7f38e76918e351f016133e4",
                    "size": 10870621
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8dae4450b8911a89fc2879da3b52a77ec0a40543a1cb2a1c7956855d3dbe645f",
                    "size": 468
                }
            ]
        },
        "36-build-20240401": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:81aeb7a9cf9799b60bec1df65ebd0267a5da4c00ff234695e9d0be1222f0c657",
                "size": 7545
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0aeb4ade331e503f627cf2d20e48a0e609546d534f31d0ab05e75c8f0a67add4",
                    "size": 58130600
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:38deeb2234b41dc88ad2e4707f14aa15ac9f83b439b4a2de9154aed58340140c",
                    "size": 2592229
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b51db2e4f1ba1a1df6842273518f19453349bf68fa0af2adee47e8982db390b7",
                    "size": 19390797
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3459d5d38aace74a5cb60ddfa1ebd56751ec503521d2243e4264415574a18a28",
                    "size": 189028346
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:84cae1f53caf8feb4123289a122f72219033bda6b18c120821e037301caa372f",
                    "size": 473573
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b4adff2f3c484c54b270f35c8cc9cf2f9c5a8adb8967217c1e8705b24fd421a0",
                    "size": 1013
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9376e50f8875449ef3f41b8ba36304086f002888a0714e41c154e63a6a72f8e9",
                    "size": 279
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:627df8dec2e0b9cc214f41323126835112bf4aff4844fddc9dc9a0b049df17cd",
                    "size": 677
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:95d0ce7a36a5a599817494fdddbb8292782785761cd0c1dece72371edc2c9405",
                    "size": 462
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:67bb19f9a9a26b9473b664a292c559f3abcec92c83fed0fbe485fe390046fdfd",
                    "size": 10871064
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b151be80d3d65bba1dc9b71b7bd6ce8a8003664383ce0fb82ee5c1418198a4ee",
                    "size": 467
                }
            ]
        },
        "36-build-20240408": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:c678204bd388b9f7da7254e7dd1bab922bf135d4ab3ef8a1d6c33e4d53926e48",
                "size": 7546
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0aeb4ade331e503f627cf2d20e48a0e609546d534f31d0ab05e75c8f0a67add4",
                    "size": 58130600
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8764ad086e58a97c06142ee94b9611c18210c22e68df2b5a48a9642655300718",
                    "size": 2592230
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1b36131f08816b90f920c5a468157221fdedd3d2135cf04285071fdee5c863b5",
                    "size": 19391006
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d34e3e4b0ce81bf5348d5f2e6ca0156b3814f6e6593c5ada871f5f985255bc86",
                    "size": 189028355
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d8fd98c44fe8de3eab8482ae2bbc1daab8ae83943d60e62c14804b3a610398df",
                    "size": 473572
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a9d996d83302baab279626d16a59c52db02af14ecdc464dd6da80b60e784e3e2",
                    "size": 1012
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:98f156bc669d3b72f6d0fbd7d2ae05bbe0a4153e02dc8a330f89d1d1571509a6",
                    "size": 278
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:82e21acf93e28ef258e7275e925c15f4924cb44c67031e28927da5a0ae68fb1f",
                    "size": 679
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c8e5300ef4596be4c3f87cdcce3ccf8c3581658a69caba06d3b1e117cd749a5b",
                    "size": 461
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5caab3768b668bf1a9f03d6b9204ded37390fda818f4c9f10aae3cef1866bd49",
                    "size": 10871580
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5ee7216beee2b4ec7959bd0175fe7e31c1f142194abdb7deb44f03266432865c",
                    "size": 468
                }
            ]
        },
        "36-run": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:6c8c58ed48c56f342f3a9fa876f65960d8bb39543a7c9bb8a215c668678af848",
                "size": 6787
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0aeb4ade331e503f627cf2d20e48a0e609546d534f31d0ab05e75c8f0a67add4",
                    "size": 58130600
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:082c1b0215e65b79bee57867d846182d55066d84b6536f8ce5cdfb4557925530",
                    "size": 2592231
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:42ba2d464197953ae0c3ea9e9a7a0862776bf9c6b9f3de24425d068cab220125",
                    "size": 19390844
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4964fb2db364d724426035e1a65a77fb7a7597a97ee108d28fdc5f65bb88355b",
                    "size": 473576
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:30c2f7dc4c95c77dc1ca12e66dd393dae4e0e48b4bf2e1ecd5df4bb094a6764e",
                    "size": 1013
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6b1bd7b752a01aabedcbb0120f942f8e9b40c1ea7d9dc536209ada8b69b743c6",
                    "size": 278
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c65f82c416d78c6bd93cb4f9d6a5524c5b78e47f5242ba83e2a7e56333387a14",
                    "size": 679
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a5aee459832c98a800d0f6b838ab0cffb57b28fcdf8ae32a265c871cb574db71",
                    "size": 461
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6f46c83c96b207c2b44408633e6864c96953137d4403f04f0484074ec8cfe7a9",
                    "size": 5932206
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:cac987c2901706340d373e66b91ef8286b438fe6236a44732c00ee721f608033",
                    "size": 468
                }
            ]
        },
        "36-run-20230929": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:79899f8d9ed968c9a7cdafe90a9ccb7f128e1638e0df493cfccc4f10000417a2",
                "size": 6794
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0aeb4ade331e503f627cf2d20e48a0e609546d534f31d0ab05e75c8f0a67add4",
                    "size": 58130600
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9fff02ca2e741d3f751eb002765f73f5c3f408645ce7147499ea4640906e0943",
                    "size": 2592240
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:34731bf3d00791c7515a68c6e2636f8f537015e42c7242fa6ea97984d34bc11f",
                    "size": 19391522
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:25fb00537804b2ab003637ca1b2694263a573e70d2278eaa8bc6832b4aa9edaf",
                    "size": 473568
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f47f6aa8c3128884a4ce839c206f452bd83a20a48622d5853ffe82918a1725d2",
                    "size": 1016
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:835d1174417d13ab9dce12261ee90e320d0a2625008f423d55656efa7d4947e9",
                    "size": 282
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9589788ca4b24d6a18c55e30fc8041db9538dffa4132778990c87ae1bed4a90e",
                    "size": 683
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:044e4cd50142bf7d4dba6b76d94b21b9171e6a35c5837af8806bf46c006508b3",
                    "size": 460
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1e1819591ba34fb765844b19fc4466c69b8abebb4edec821b2f01edaa0c360bc",
                    "size": 5932512
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a5a46a3bcb4ac6df32bc2d9385c85cb7be69fc18f521a113f422c8ae9b0d79c7",
                    "size": 469
                }
            ]
        },
        "36-run-20231103": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:c9591a98ddd9f696164ebc1354aa4ed3bb061740d2f7978f0beeb3adedf0774f",
                "size": 6799
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0aeb4ade331e503f627cf2d20e48a0e609546d534f31d0ab05e75c8f0a67add4",
                    "size": 58130600
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3aa8ce65d91769293a572a85db2cef4e412aa18cc756acb1332097ff06409197",
                    "size": 2592234
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:be652b100b8959d592e3499aad6faa811f48f060d60641e81499551de617c31d",
                    "size": 19391777
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a2da1bfa547dbcbf400e728a0032b862a979e854c0aafd2806ce361bfa18ba80",
                    "size": 473575
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0fa7f8546442f1ac93a39ef77729bc53ce34c0b3997d6c9590306904a2e8a41e",
                    "size": 1011
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:04ec04306e065afad0dd8996fac2fc9581616e0b79b380a150dd7432fedea347",
                    "size": 279
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:39e0bad41de994a56535a80dd9b5088904a4269b59b1ff5ed27c2a4e5dbb4458",
                    "size": 680
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d15725703c805c5af6d481ba249cc3a5e4f7f3113bff5b44b5f3245349f6eddb",
                    "size": 462
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:deade38fbf99d00f45f53f4cbf269cd9ba69b0bad56d4d0767000a59c1f9d679",
                    "size": 5934959
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:211a3f9795902ff034bf544cbeed8235719de7227d3847dd57e237b39f004d2a",
                    "size": 468
                }
            ]
        },
        "36-run-20231106": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:9798902c27a6b05f3150b7efcd47471e2f9722fd709386eb3617b4405427d678",
                "size": 6801
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0aeb4ade331e503f627cf2d20e48a0e609546d534f31d0ab05e75c8f0a67add4",
                    "size": 58130600
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d32e3c089af872013fdf4d354ad913dd2f1c0bd469841260a344ba6bd3259052",
                    "size": 2592231
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:66fb0a05565bf516c3022347f2c65160b12721392d354f3cb07155208e144228",
                    "size": 19391881
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4d35d26befc4cbdaee212145b9d47395f8b14652efe87a7e2d8589d9c53ad7d5",
                    "size": 473577
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8f54b98642931b1cf7237c669e4afc8dc4df08f1eba6936419b74b65c8027d39",
                    "size": 1013
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:90e2ee75820604f119b5a41e80b578199a127ccfba7785fc67cdb2744c643531",
                    "size": 279
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:359ae85ccabbf99e533d340b537a398757219254b16485845579facb7e3e763b",
                    "size": 679
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:303faaf9eb6174330075a0f98e3115abbc556792a7daaa0ac3eefc6fadca33a8",
                    "size": 459
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ffe9ff7f7ae1288b14355e5f2304abd477bbe1efdd2a5418c0dedb9d14f27303",
                    "size": 5934801
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0794271fb5f826fdb210c26c845415526a9cbeb77cfe39eb85aa0c7218c4cf41",
                    "size": 465
                }
            ]
        },
        "36-run-20231127": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:b19bd777cfbb6c18e58426db1f6210b7cb6d71928c7998546ea7fa7020516d02",
                "size": 6799
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0aeb4ade331e503f627cf2d20e48a0e609546d534f31d0ab05e75c8f0a67add4",
                    "size": 58130600
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:27eff68d9a224631bc9148f2f2c0c72a35771748d9b8f590052016aeb924d11b",
                    "size": 2592235
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bd7ed4bd95d152cffde10cb094a285e61f847c1b2ad3e0c247a045233e23ef36",
                    "size": 19390728
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ba2f57050d9d37c6c6ba9fa8aadd91937b5517f921e2b541f3f3f0bb30b89052",
                    "size": 473578
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2760e33d1c6112d86dd20ebf1227225a26be11ad5116ae402a7b9bf4e775fb13",
                    "size": 1011
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7cf9189cd93fbba6a8e211532cce39785bd2600d9da95bafd01ca94da45c65a7",
                    "size": 279
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:37d7c147010f6df12a389d7f0c897c3fc4cf2c6a1e3257b6880f825879d95bb9",
                    "size": 680
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6a369e4755e6233336ec243579754afb360f9c8bf93836054e2fa686535524bb",
                    "size": 460
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a0b30896462c9882bcd694182ac2dd67017782ec1a10388bb526dafe912004ab",
                    "size": 5931562
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:38594f1e12812505b19ad09536b31bc14ee6185415c9c9499d0b33662623d644",
                    "size": 466
                }
            ]
        },
        "36-run-20231204": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:6024b01a136ec1c8240f3c7b1d4f1c0fbee9ac27f6d32b5202266ef6771a7c86",
                "size": 6798
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0aeb4ade331e503f627cf2d20e48a0e609546d534f31d0ab05e75c8f0a67add4",
                    "size": 58130600
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2e38fef274e245000293ffa599f96f1b79856ee26ac050ec3c1280c4aeae35ac",
                    "size": 2592234
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:cd54c649165938bddb85bf336891e597833fc5a5f22c35f1621b0a671d432d04",
                    "size": 19390853
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d9d8ea859bb946f8092af616fd2359c1407388455978dda73bb420d6b6fc0e4a",
                    "size": 473569
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c1e722fe6a576a7c34c5c35ebadf71995d44cd5b346dc2ac3e4c811adb9cfaaa",
                    "size": 1011
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f77e425fbdcff8d7bf6463013f5bcca6a56ff1f8a2274aba1c29ec516a725885",
                    "size": 277
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8d25903730d88759040297a1f9efbe27868d3352647cc94938d8937e47f71334",
                    "size": 677
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:617cbed8eedb3ea98f8d69136824f99f687e1286506ea23a735d2030dac5d86c",
                    "size": 461
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5e5273d5a2562f1812896f0acdb0764f18ffa84b3c790b8dc866ffcba93bb843",
                    "size": 5931829
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:db64633a78d4d25eaab821e77b7f6042d9bb38c224901095e93e899a12cc7be6",
                    "size": 466
                }
            ]
        },
        "36-run-20240205": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:71ef818847977a523b711fc1ded9e957525b0ddf5caab96ccc9c804257e80d13",
                "size": 6802
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0aeb4ade331e503f627cf2d20e48a0e609546d534f31d0ab05e75c8f0a67add4",
                    "size": 58130600
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7f84e7c89b99816b1d57b18ba46b176593a4acde24112af0ebb15a3f9c6324bd",
                    "size": 2592233
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:49f6c1b96c0eb5bb7d920ec2b7b7d53ff87c64dca3b618aa5282842ce4964366",
                    "size": 19390698
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:091ccb00dd5140a07b30294f5acca80d118c0cf0a78d10114205fa88f128097e",
                    "size": 473573
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6a53ba3f76b89db541ad5b2440966d7760158c62dcfdcf86a57a56ccabb1eab7",
                    "size": 1012
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:cf1196079c7d2d54dfd67774cc416684dcbccaf5ecadc944b3e7fac84f1b5688",
                    "size": 279
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9322d7c54bfbad2f558788f1dd17351e75511d72efb30e63be1288a0373f3e09",
                    "size": 677
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:84641737dd371ea66763c59da29abcab846714470b969f81d5d69266ceca4f21",
                    "size": 461
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:39b9d07554280d59c75a46039f9c0ba23a3766934da7243551f268654371c43a",
                    "size": 5931777
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:451e3b04a25218b55802544dcb5a304658ff2ddb072443224105db2895dff6ae",
                    "size": 467
                }
            ]
        },
        "36-run-20240227": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:04b340f474cffde6ed8bca3c00489d662eed38dec01364f5bff2c95f3e3f18d0",
                "size": 6799
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0aeb4ade331e503f627cf2d20e48a0e609546d534f31d0ab05e75c8f0a67add4",
                    "size": 58130600
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e7a0db0ff778242d33b334df3880f3377be078ede1389683094b9fc5ef625a8b",
                    "size": 2592234
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e11ece4d18eb73e1f2478b744c2762a970279215b677363fffd763b4e66cbb20",
                    "size": 19390875
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0859dbd8c79863b41056cf1f05b8070d167a36f4722ff62e7692830b9813dc72",
                    "size": 473577
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b1fb6c3b5aff923033461b6aced870ddbd9ecd23a6f1d33b947404edb036887d",
                    "size": 1013
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5db6ae9e6237947c470a017ac42126a11b27bc1f4c45124b7abee8e979d5121d",
                    "size": 279
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9784ee44190cc36d239aecc400341f0cdd989158bab82fd65d2360c337941dd6",
                    "size": 680
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c96d7e580d362e4810be600d8366b5df4ef8a5d0acaf892f1a6d7991c532b9e8",
                    "size": 461
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b72c9d80b7e951f284c81cc1f7647148877a157004633cfecc67ce439bbdd2b8",
                    "size": 5932079
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e7976f1664544e3d31840ca3e719c54a3020b1a6ecf0ec3e82e42d5adcad2475",
                    "size": 467
                }
            ]
        },
        "36-run-20240304": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:a520c13fdc186695915a9419eff66a1b15b0e9c313b8089ae3ba885a1b904b07",
                "size": 6798
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0aeb4ade331e503f627cf2d20e48a0e609546d534f31d0ab05e75c8f0a67add4",
                    "size": 58130600
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4bc51f944b49ce237b9f298b98365527f7e3798bf21bafd50e35866a556ed4e9",
                    "size": 2592234
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:facc66dc89c7d7c447626eb18bd7ce32d146ce57cca4020a810c3ce4f591eca7",
                    "size": 19390749
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c83275ccf32f5cf0cba4d8f5f680a0359bf1a953f54b790f0045b2ceccf6223f",
                    "size": 473575
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b34d49a738cb74e7f50b246548d2e75750c65f65c48b0f17385c21e6803b996a",
                    "size": 1011
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f4321ae63b784037f1250a339377b9aa8b8b667eaaa46f6ee1b5bc892702f6dc",
                    "size": 278
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a6b178a90bf42de76fa696cd5c34841d8b28240ce520eb2cbfb604e148aaf6cb",
                    "size": 678
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:56991078aebec441802470063e40c974fd84cab53be8c0302e8c05f1a88955a0",
                    "size": 461
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8ee7a14d7831229debf0d0b809eb7076ba63b4f9c39cc376c093e6362feacdbc",
                    "size": 5931978
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e2660df6e2732d7a7d859d21ab7a6f88dd6b61b64d0ff4dd8c7055f18faf55e4",
                    "size": 467
                }
            ]
        },
        "36-run-20240401": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:2e09c47049b14692b0f58c7b313e7f02afb85ddfe755c55c0b03e68049803c71",
                "size": 6785
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0aeb4ade331e503f627cf2d20e48a0e609546d534f31d0ab05e75c8f0a67add4",
                    "size": 58130600
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:56dc14cfe3300a84ae27764721db64d2f98d454a9b42a6c9d7cb9d30a172a070",
                    "size": 2592228
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8f5d5bfba91d41861de1fb090964f20b327211c1c947a70c5c06ff50f343cb09",
                    "size": 19390970
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d7510c6c08be3cae0d913e087b2ab0adfc335aa94a8b99e269e3a3aaaa9bdc39",
                    "size": 473575
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f364d329a6963313f859e7df4b3254176e848f77264ad4b07f4d4267197066f4",
                    "size": 1012
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:94abcdf5f2faad93c90676ffe091e188863184745ebc512c40b1f2ae1fbd2bbb",
                    "size": 278
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:33198baaf3af80d3355e63a11e4f2a4f308ff51588ae697ec514e96b8ce5ca0e",
                    "size": 677
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:079c572b5983bd27847370979958f7a75f320fbf3b0b1df78d317296b7aa988c",
                    "size": 462
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7679311a7a9ff5013878b38956783578337ce7784ec1ae59f5e052ac1e5852dc",
                    "size": 5932233
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3680bc3662e6ab647d38dbbb418e9b3e98dbfd9c8b0060b4ab98802b4a401d99",
                    "size": 466
                }
            ]
        },
        "36-run-20240408": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:6c8c58ed48c56f342f3a9fa876f65960d8bb39543a7c9bb8a215c668678af848",
                "size": 6787
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0aeb4ade331e503f627cf2d20e48a0e609546d534f31d0ab05e75c8f0a67add4",
                    "size": 58130600
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:082c1b0215e65b79bee57867d846182d55066d84b6536f8ce5cdfb4557925530",
                    "size": 2592231
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:42ba2d464197953ae0c3ea9e9a7a0862776bf9c6b9f3de24425d068cab220125",
                    "size": 19390844
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4964fb2db364d724426035e1a65a77fb7a7597a97ee108d28fdc5f65bb88355b",
                    "size": 473576
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:30c2f7dc4c95c77dc1ca12e66dd393dae4e0e48b4bf2e1ecd5df4bb094a6764e",
                    "size": 1013
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6b1bd7b752a01aabedcbb0120f942f8e9b40c1ea7d9dc536209ada8b69b743c6",
                    "size": 278
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c65f82c416d78c6bd93cb4f9d6a5524c5b78e47f5242ba83e2a7e56333387a14",
                    "size": 679
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a5aee459832c98a800d0f6b838ab0cffb57b28fcdf8ae32a265c871cb574db71",
                    "size": 461
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6f46c83c96b207c2b44408633e6864c96953137d4403f04f0484074ec8cfe7a9",
                    "size": 5932206
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:cac987c2901706340d373e66b91ef8286b438fe6236a44732c00ee721f608033",
                    "size": 468
                }
            ]
        },
        "37": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:446423e4a663df9e126411abd0bc036e3fb97a845722fe1b78c42d6b4a3e1518",
                "size": 6786
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:69fff380046369a47fbc74b0aa03f61fb243f73dc5795e3ecf69c6577ee84908",
                    "size": 63118399
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d67deff5c71a351663d4faf25c3b38f412142a31bca7a8d888c8821bfe5e18e9",
                    "size": 2592229
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:aef089e78d846edbce27f2669c47ec3fcef142e589e1867ef5908636b93f70a1",
                    "size": 23448814
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d2e3aa275cbb3a947522d3ea6580677ee9aa12d44c091352980066a1fb89bef8",
                    "size": 473573
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5f9e31015a5229413246198fe29fd337da9e65c8a8af3238c1f8824969f6e872",
                    "size": 1012
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3a3a2d6852cd0e1051942f064efb1ca5ed52209ef47cd0bf05a7e8752026738c",
                    "size": 278
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c3c8080aaea2aac7e2ff9499b2a0acda4cb7e625ee3cded157d534b54c647108",
                    "size": 678
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1e138be9b56c798718197323eafa69ddc869347ebd57ddc632dd70c020d34717",
                    "size": 462
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d537c6b0b2da4aaddeb1847e2edae9d037513a9590be529e9576078bd7d08504",
                    "size": 6663451
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c1526bc22c70d45cb4f2d11a06aa85fe110c675fceb404d9131388055cc3e980",
                    "size": 468
                }
            ]
        },
        "37-20230929": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:425f798c637e8499488abc4a9dafc8796326ccbfb4e722ad4882d2db2c8ecd87",
                "size": 6802
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ea792534a213e62c62a1c4772dfcf53eaf82f7635dbc9f71bb0a60a91226d118",
                    "size": 64705637
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:57e197807ba0a519d1edb0779ce76a06124dbef05029811c4cd40f0584de6bac",
                    "size": 2592232
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:471a3338d976e468e7f618dd22fbdde0e2373e61be9ba9fe8ba4b2e72baecef0",
                    "size": 28511392
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:43acb285765a1566a09368e26f802363c73729a1ae513cb100c40d7d5f2c9fd4",
                    "size": 473571
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1f7a541e39d90075887bbdb2cc816aabc30dbffcf6b53f81374d58c099208d3a",
                    "size": 1015
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f64cf4e6488b8740244403e8dfeecf1fd1eca6cee27302b8246883ac41a1084b",
                    "size": 281
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:455b8b17e8e1b86358879c1c85bb769d1d32ef5a39654a9da1ca47fe376a9941",
                    "size": 681
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:79974a50afa759f12e48dd7814fb83e5849ad292c42e28177d22c79b13419d23",
                    "size": 461
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a75d744ddb8d3ce956b7f4327f72717037514cb942025a76c979275f4800ab45",
                    "size": 6745116
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:079ed7ac1e7c007b5b2b48e9eb49602cc337b13652183ae095a5b4c8fc5ce8e8",
                    "size": 469
                }
            ]
        },
        "37-20231103": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:cf72bce69d27a2358bdd348f02dddfb3dacf1e8390539582fefdc24eb01b2237",
                "size": 6797
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9d8d1f79d667e0d33c19dcab3e1da521941331416c217cc74601d8d9f6eb34ab",
                    "size": 64844849
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:70f1454c069b387e5af8b9d91b5470e7c4785b9a3290f7113ad42e664f16f534",
                    "size": 2592223
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d76a558193cb7b66b0700ad5870a13652edf878e9142a0d74f9a71180fa098d3",
                    "size": 44064717
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6f396e4d4a3dac8410ab225cbad45fb13592e944fdf1ab97a953ead54f0fb00d",
                    "size": 473572
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:12c35de3a810ce75e005471dd252f007b4ee65305ff26ddc28b8dfa744f9b86f",
                    "size": 1012
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:476049291d6250253e43958e82448d6c862427743c148732b2a832f70c372a56",
                    "size": 278
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8e0ba4f7e5a572e065f592740afcf5c1f8313b9813191abe3a2b5fd75ccdd00e",
                    "size": 677
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d6b9fe800ceade297a03f9af34ae2921bb7a789025c1dcfcb5b389739c04d457",
                    "size": 462
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2d3832d1ab31b215e5761831765681db33ceff54edbe8978ace82e7667976b52",
                    "size": 6852365
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c10528dea3de7c6fd49674e8553d4cd40f8dba16a2911a1ac6a99b5acf45e8af",
                    "size": 467
                }
            ]
        },
        "37-20231106": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:0cd6f8c7fa75f4e2f7d2be0ae4b14e5c66fda33b6c8b8eaa96f74867e9b3e0eb",
                "size": 6801
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9d8d1f79d667e0d33c19dcab3e1da521941331416c217cc74601d8d9f6eb34ab",
                    "size": 64844849
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:03e4b9d169336e58479c799e52d209343f4fd63f113b03b9cc3778d78eefc36f",
                    "size": 2592228
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9ebd0b84befc3bef3f3a1a315ae5e7ec38574027144908174718797f0a00360c",
                    "size": 44065020
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4d11386853aeab8cd5baa963e4328bffa12cd29a1ce5240ad9607cc9c3e875fa",
                    "size": 473574
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7331c59cbf560592c7caacaec5a5b0e7c1412d0ee6c53af4a6afd0b75120350c",
                    "size": 1012
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:01cc8bad0eb150412ebd78b17a1ec8ddb84bf7bfda9878c71e39cec3d021ee7a",
                    "size": 278
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:204195aa087948caf7654cea0a3a5700bce5edb30a573214210d4567dfefe883",
                    "size": 677
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c45bba7cbbc35ad8b4c7416a9df0446d0594c82b7244266706a7a42cfd423cda",
                    "size": 462
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:883beea72baf754c5e02866d6409d567ab7ac97ceb43b3f033acf2e4d67ff705",
                    "size": 6851959
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d392242678b9e44bb982d028b0c35b2f9cd8a313fdb199bd7667ee3d4afb07bb",
                    "size": 467
                }
            ]
        },
        "37-20231127": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:fbd506194b56080b3cd1daa5fce5fa7821f6993bf80dcfdeeaab71feefa9b759",
                "size": 6801
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:69fff380046369a47fbc74b0aa03f61fb243f73dc5795e3ecf69c6577ee84908",
                    "size": 63118399
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0bb5eada9fb8c922ecc9f8444aaa0ee8a62fcac70ee74abc4710b2495f0bfd08",
                    "size": 2592228
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3ab8b31915862687dcc837ff941a87caf4c07e9f37527c8ff82b84c62d432e58",
                    "size": 22318509
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:491f82e7458e6e17bae05aa839d6b366e87513662f4340abcac0a9696a7480c0",
                    "size": 473573
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:744368413ff21e9a4e526bd1640cb20d58d0ac97385af7363e6ccfaa0a24b050",
                    "size": 1010
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d600c7ca91fb3e6cda2851db48eb14cc780b01a3eb28cb3b5cc1c157b30e5ce8",
                    "size": 278
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b803570392d88303afd7a2018b05dbf63c3295a143048a2729f5436e4f82f62e",
                    "size": 676
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c82c00cdd78937eb219600038c3a9ba8501aa8ae7b114cd8e577f8fe1107a36c",
                    "size": 462
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:390faaab281141853f012813dd071904a46b1de81f958bf38e69808b0eeff12d",
                    "size": 6664220
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4adc356c69b028295625f293b1d0c5d7fa703bee6cc5aa5b072a86d01e0ce930",
                    "size": 466
                }
            ]
        },
        "37-20231204": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:aadcf5971f3dcc20442bd363e57344117716db95c42af7d63c53f39f81fe4dd3",
                "size": 6797
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:69fff380046369a47fbc74b0aa03f61fb243f73dc5795e3ecf69c6577ee84908",
                    "size": 63118399
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d33718b133be58c12c588d020799740b8f5d0e1659f4305bd3a42e0be1ca53e9",
                    "size": 2592227
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:638dc3ba02ae0d436831ec2e65f80cf3a0df85f54b4dd0e7ef6c930f2c9ab6a9",
                    "size": 23448833
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:320c005249b51b04b58caf58affd18499aee26124689ea955f510182122cfab7",
                    "size": 473569
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7d3113c0c18b1dea309c42932b22901908926108a8103cdab78170405c7a600b",
                    "size": 1013
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ac6ed7c321ff834e5966003c322a533aea0543816c96955876c3ab5646e3079f",
                    "size": 278
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:297b2ba3b641a48b1e90733cb70836ce9c195ca3803cf200e37417506cf0bb66",
                    "size": 678
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1f73b516ad766efd99f0fe8db17e4e328b2f6accabc971ecfa3d27b53c981a71",
                    "size": 461
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:88a6f556227627ae13f8f1e81bfd7875459522e6b16f89af496e878e77b21b18",
                    "size": 6663642
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:56d1f6253cfba1bbba8e19b05b5bd006edaabcd4770a960a46ea68b10e0fdde9",
                    "size": 468
                }
            ]
        },
        "37-20240227": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:9dff4750c0efb91aedb381e864ae043d4598609b81841ac905ecf8569abe6fa3",
                "size": 6798
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:69fff380046369a47fbc74b0aa03f61fb243f73dc5795e3ecf69c6577ee84908",
                    "size": 63118399
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0c9cb203b87166e0d09b81a8d1f5b49ea5bb80d37799c1ddd6d0f58f482ba0ca",
                    "size": 2592228
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:cd15d660a3890fbc117644cc7e00384e54cf47a86db50fb85d3e3924a3b6e0f7",
                    "size": 23448836
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:69feda61e8a6a07d2f8173016c73ff91210e0484140825e75e597b45142b7ae1",
                    "size": 473570
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ce20a220ec40b0412743b54d0120c434710d00f3b54a54502308b76efc9dd983",
                    "size": 1012
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d47f351240c88d3748188f2ef0e0b48f6e891509bebda6f18393ad51c6305e70",
                    "size": 278
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fe1a2b8c0123677dd17cbf5897edd521c063917ffff70729a2e1211219421c57",
                    "size": 678
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f0bc84079738c7cb444a751732c831109078ebd828f39565c765bfc72f1e32d9",
                    "size": 462
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8c21ecec21affc35aa8a5227f35d93fe436894197c56e4bd6f855d4985f9db11",
                    "size": 6663444
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fa658dab08e5b203e9702c9231a43d3c58d202762f6b3935d386a575152602d7",
                    "size": 468
                }
            ]
        },
        "37-20240304": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:b236014d0b8e0954b6a9dc346f2932d5ed26b29607de5eb3066a3b50da753e9c",
                "size": 6798
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:69fff380046369a47fbc74b0aa03f61fb243f73dc5795e3ecf69c6577ee84908",
                    "size": 63118399
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1838771b8ec87483e105e112d8024f9e9029a53bae9d1ef0c34c061003181dfb",
                    "size": 2592227
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9086ea61d95c1ab147c8270e5a9b1830e96d367d41663c7617ebb4b06043f2fa",
                    "size": 23448747
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e665d30b7799b95a1fefa213155d46f59fff56b68586082bf191741035863ca9",
                    "size": 473573
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:eca08035356a02b31523d0089c92c641151221e1163f6f69259640069fc93325",
                    "size": 1011
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1dbbb8991fb8ec274be4b21cf0c12fa2b72fea515b37daf96cee76915bf6a3ad",
                    "size": 278
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0a012ba1f4d0af3a86a253d6ee08223c9446a2cf6250bdab21f839ebc7d16354",
                    "size": 677
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:30495c77303f15af04a882c71d278cea6699924428092ff409840f02e3455bec",
                    "size": 460
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e7ab56aa194f4dc7a68895e415de89ccf0160ea0b426b690a95a095a6f7d4a80",
                    "size": 6663488
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:23a366fe4d2a5894b996fe60721a7ea0557042186d1979ab9f7a18c5e5fee741",
                    "size": 467
                }
            ]
        },
        "37-20240401": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:7b10dd0d6f10c2e8e309549b112fe430a55f33cc7c33275c8ab91541930fdcee",
                "size": 6786
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:69fff380046369a47fbc74b0aa03f61fb243f73dc5795e3ecf69c6577ee84908",
                    "size": 63118399
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:326b20e912351ee1cd36eb4928f89de7420c89cff4fe26170cede56d5b53defb",
                    "size": 2592233
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f39d9f2f25dbd3d6ef3ad45ac705c80b09499c0886ce65119c20d6fc0873f021",
                    "size": 23448664
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:149aacaa82b179c640f96dd6fa65cb2df58f00055c9a94c3886a4906672573a7",
                    "size": 473577
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e7514cd29789812983b2a947f44fce3f7bcce347440875a08883bcd9b53e739f",
                    "size": 1012
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4b84039a432480f5ffe416931d3e349c4318c99332a368f259bac7fd40b1d2c5",
                    "size": 278
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:85dfe6b177a514d70942f90882fe77a64a24af14ef6f9f8be9f6e0ac8271c2d2",
                    "size": 679
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:75ac5a1c7aa9ff94b80b26d3cff3e1a67892548f05c0ca35405a77c861a15ab8",
                    "size": 462
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5e0ff124a6ae6ab036fba31dd61f281b5879c6812593ba0a0b7a0393e1a2619b",
                    "size": 6663618
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6704808fc482f83132cc07606068d73ae29e37a6aca08a65beaf66e0bc818072",
                    "size": 466
                }
            ]
        },
        "37-20240408": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:21c69c09c581cfae914b06ae8ea9aedf832bdfd087b409851b3cb2f7b448b385",
                "size": 6784
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:69fff380046369a47fbc74b0aa03f61fb243f73dc5795e3ecf69c6577ee84908",
                    "size": 63118399
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:689676ef4dfbe38a100ec0fd8bde8b49c700bedf04ca010d64d0e38e212b9404",
                    "size": 2592230
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:20de4a94e0f41f23dbdf295a23279b3082a2b94c36276a1517ff184d9dae8e62",
                    "size": 23448793
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:aba17861f514dbec43f4f00bc73113c6ead88d0daf01cd5af8c0468d2e6ee6d6",
                    "size": 473577
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:44561f9120b7b96b19381819ea39413a89fe135ccffbc8f4f6586ce34ddef54d",
                    "size": 1011
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6246de46784e0baf4fe4448538c5536535e1dd8374a16e2e22c5fb226e3f400d",
                    "size": 278
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:008ed895bd8ec822f5bbb391c610f13b97036c9b6a66d8ad9815fcd75fe5517e",
                    "size": 679
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:752a73f6143a147cf9dd80aa9e2296a8678cefd5393206c50f4df7a5303521d0",
                    "size": 460
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5f7970ca1823ab6f117260e104039dacfd3d8e583bad77fa9b3ce031e1b7083e",
                    "size": 6663815
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:471e478298689d5e3237afef5c6b64a4eb3d55cea881e49831fd2abea2ba9261",
                    "size": 467
                }
            ]
        },
        "37-20240429": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:446423e4a663df9e126411abd0bc036e3fb97a845722fe1b78c42d6b4a3e1518",
                "size": 6786
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:69fff380046369a47fbc74b0aa03f61fb243f73dc5795e3ecf69c6577ee84908",
                    "size": 63118399
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d67deff5c71a351663d4faf25c3b38f412142a31bca7a8d888c8821bfe5e18e9",
                    "size": 2592229
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:aef089e78d846edbce27f2669c47ec3fcef142e589e1867ef5908636b93f70a1",
                    "size": 23448814
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d2e3aa275cbb3a947522d3ea6580677ee9aa12d44c091352980066a1fb89bef8",
                    "size": 473573
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5f9e31015a5229413246198fe29fd337da9e65c8a8af3238c1f8824969f6e872",
                    "size": 1012
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3a3a2d6852cd0e1051942f064efb1ca5ed52209ef47cd0bf05a7e8752026738c",
                    "size": 278
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c3c8080aaea2aac7e2ff9499b2a0acda4cb7e625ee3cded157d534b54c647108",
                    "size": 678
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1e138be9b56c798718197323eafa69ddc869347ebd57ddc632dd70c020d34717",
                    "size": 462
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d537c6b0b2da4aaddeb1847e2edae9d037513a9590be529e9576078bd7d08504",
                    "size": 6663451
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c1526bc22c70d45cb4f2d11a06aa85fe110c675fceb404d9131388055cc3e980",
                    "size": 468
                }
            ]
        },
        "37-build": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:3f30e5ac7a1ed94a92c9f861cc823234a7289c33ec5e17576336d2dd86d746c0",
                "size": 7542
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:69fff380046369a47fbc74b0aa03f61fb243f73dc5795e3ecf69c6577ee84908",
                    "size": 63118399
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:82317edea666666d707ace0b03aad8572e29a838bb12b4c4dfd016b2ab4ce736",
                    "size": 2592233
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c2e5455188b6eb0cff89590382e7b0ecb02ea2b714d55bba2fa7dd06af5aec88",
                    "size": 23448711
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d715dbac72a798e8d0d0ffba83669baf0bbc4da2276a5a381ac22d652d5e13d9",
                    "size": 217029439
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7ff7cea49a20cad0aebae3fa3c701db7c3491385aea25f0e543cc59538fa5ee4",
                    "size": 473573
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d5a769b6122b0d526950c3579d87d5664c827ecd65688a38c75087c4f80db959",
                    "size": 1012
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:49c4a2084afc1da3b08c57198b9d7982cb4ad987197a29eb1c0b905a29331a4a",
                    "size": 277
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4baaeb452bcc05b92b082e0b84e390a65c6e08ed28ef13295f9b16ba167a9c10",
                    "size": 679
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8cba45c189962bae1d2ff247ddff62c95a79794bffefeb6283787d28c6b320ff",
                    "size": 462
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b8a3596546c565a35b5006d65c5ac7b1819ec696fcb88b1ada790d4c710871c1",
                    "size": 14184681
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c7ce7e283368359da734e89615c08cebaa64b8b0e016f8fa452d8749369f525b",
                    "size": 466
                }
            ]
        },
        "37-build-20230929": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:ecc99c85fc5ba85a06b809d6fc4bcb7553c5ea2c86affdff47c0ae487efb8bc8",
                "size": 7562
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ea792534a213e62c62a1c4772dfcf53eaf82f7635dbc9f71bb0a60a91226d118",
                    "size": 64705637
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:57e197807ba0a519d1edb0779ce76a06124dbef05029811c4cd40f0584de6bac",
                    "size": 2592232
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:471a3338d976e468e7f618dd22fbdde0e2373e61be9ba9fe8ba4b2e72baecef0",
                    "size": 28511392
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b83979765e4c0e1796530bd00bc646610b38f365257e80b2085b5af058f24a4c",
                    "size": 216664890
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:81879a19910e1a496d0c411ff2df904ee88a6408bea71d1d609271432a4191b6",
                    "size": 473570
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9e800c1f80f8401c189157dd7d7e4ebcd8f2e0376a3d21f7191ddb79b8794971",
                    "size": 1013
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e14e21ec6264d33a865243f3f009144460bb90639c04fc3afa6c46a08c027046",
                    "size": 281
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:af714c407ccba3319ab928f255b9ca302ccde44746e669d35f56b6cfa5c7882a",
                    "size": 681
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2e42947fed8288eb956d961238c22a61cd9ce2ca22b0e86c0190dcfeef46faec",
                    "size": 460
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:92ac5c0ed2e9ab77a59f0f03b00835bffd79ebcb41db8251a6039f2103595d3a",
                    "size": 14143971
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1115133676ff1d8dcec1d89ea095836ad1fa3d91a75e752062a248e7bb9da9dc",
                    "size": 469
                }
            ]
        },
        "37-build-20231103": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:a09fe3b50567add59eecb81f0c2b8290536335028d33aa672ff4be68ac7de9e2",
                "size": 7559
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9d8d1f79d667e0d33c19dcab3e1da521941331416c217cc74601d8d9f6eb34ab",
                    "size": 64844849
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0770b89f72b418017bafd34c1d5552048c5eed91faa033af7187c646a6592cf9",
                    "size": 2592229
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:29d309c8b3459e8477ca5e914be65c3e4e83ef21695a692f92c7b52fc198f2eb",
                    "size": 44064224
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a28acef6ee54c426ff17c9667f83540ef5cb43fdc3e3d664c847608b783be445",
                    "size": 216980025
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4c184b301d67b652578996acdc883d362ba56ee1d7961845e82a445fc8a3dd3e",
                    "size": 473568
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e88619da9641c1a99919b4fe52c48a15e4aa52d56e55d000d918576825ce0b6f",
                    "size": 1011
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:65ec30ea4e6e929ba2a9cfc9ea06dbd4c70137c62ff0ce8c31ba525ad3be1884",
                    "size": 277
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0f7ff1ffd46bd5431d360e8fcb55926935c214fc26015f8905538a14da17b14b",
                    "size": 676
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f83df3c49a1eebf8dbcb319e217aac00df4952838803b3ff962c7dd7957de30b",
                    "size": 462
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:52f706a1757630a41b2b42a68c4519d2679aa5562d2e972d851bb2c2198342a3",
                    "size": 14174655
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8d00344518b8975ce4dcaa92b7cf98204f82e478aa9f762860eecdc0707ee5f0",
                    "size": 466
                }
            ]
        },
        "37-build-20231106": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:0faf7fc9c7fafc4eb5c1f9c3fe0e6b382ba59f3c208ef734c46350765fbf3d21",
                "size": 7560
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9d8d1f79d667e0d33c19dcab3e1da521941331416c217cc74601d8d9f6eb34ab",
                    "size": 64844849
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:17ba3eac7c1f9ce9e04f05070a25561c9868bdcef663e68aa5ac8bd96c25b520",
                    "size": 2592233
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:285657690fbde02ba48611d3dd000f47b7c396651e283097f742181b60efba35",
                    "size": 44064946
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4e95e27869fa54cdc0812a839fe46f625b70ba99ce93d7f659480e6a4e1592d6",
                    "size": 216991202
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:dd992c92a0f592cad50a4aea59a1e3abbfdfc50f36449abe8be63813ecdbd3cb",
                    "size": 473574
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8d87a781fcef58ffe8d62d3cf860c226fb6bd64f59da4ded4c94850b90f1c4a6",
                    "size": 1012
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f6cbc2eb8a9998e5abebb20f735e54fa5fe6fe98f4ebe7936eb3ba03c3f0ded0",
                    "size": 279
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8783360b72f39fa722e56e53f2e8425e426bd937db8f07668131a09545834c4d",
                    "size": 677
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:dba5c227294800c799660501956b8746867066f6c53dda172235fc9aedc674c4",
                    "size": 462
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2460e279f884063c1a9e308db833c9dacd2dde9b98aa93b936043533e920b266",
                    "size": 14177170
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0d4f1cebeb40ab7c25891e99d5e190ee8e2bb3bcfe19d1371d15fd3559d4e171",
                    "size": 468
                }
            ]
        },
        "37-build-20231127": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:be891eb782071825b3360e9b9941aebb5887f425b54ac206612bec00d02a4a82",
                "size": 7560
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:69fff380046369a47fbc74b0aa03f61fb243f73dc5795e3ecf69c6577ee84908",
                    "size": 63118399
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6641d4e23883de336ed449229e82843e5c72e3f1c81c8dd83135346960efdc5a",
                    "size": 2592224
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1b1e517fb0275fc4621249537f0da6236e1cd69bf862d820c876333462493f3f",
                    "size": 22318515
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:165564d821c1037960b170fea0079cf103fda6666513335e98b6968d8c3b8949",
                    "size": 217051070
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:01e9e8459499b3bc80b1b59e093b711165e883a6b0b34cecc147192d6647a93e",
                    "size": 473574
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:74619d00050fd0824b99ae241a8517f158d42b3343465fa6a78cafb4d6e70522",
                    "size": 1012
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:49b562c66c266d31dfe6f77e08fbf606c721fe74fe3756a0fc70572d0a9e2ae7",
                    "size": 277
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:eecd0d10f4b58b52bb36ae388d9d633ae650558ff64874899f7de0e019094c26",
                    "size": 677
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0f119eeaa7b1d1ee4109e4bb3f17232a250013fca828e92e654cb5ddb16da097",
                    "size": 462
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:64562e8ea53fc4ac173899ff5486353dc362ab731b8fc51bfb41b119f81c1954",
                    "size": 14196960
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:702b1a75c6c95c26a91a158fae023f289b505e40eb1ab6315e81991213599ec1",
                    "size": 468
                }
            ]
        },
        "37-build-20231204": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:99b3aee7d15f49913753baad8d516a6025eadc37957e099762903c9cf8307e6c",
                "size": 7561
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:69fff380046369a47fbc74b0aa03f61fb243f73dc5795e3ecf69c6577ee84908",
                    "size": 63118399
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f0ca99f7b063cce65d52273a4f2101d346418bdd8a7352f4af9785e2ba52c05e",
                    "size": 2592224
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d3ef5f06a980545479bdc090e802b2a72a2c93d49fecdc47c50cc8357a279eb5",
                    "size": 23448791
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0e6eee1f98642a0b9ea66873f6f6bbc955484317743fa4c8d53660f136d5bb83",
                    "size": 217028879
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3e2ff8beebba14a582e830769648b12ea0b2f4a228d63c45d1aa4f46afaf0066",
                    "size": 473573
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4e458a328d96b94763f7d9f7f65c86f99b34e9b495422a2c95974a479df994b4",
                    "size": 1013
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2959fa0cc7c12e351b42c74a818d4f9aa5cb261407867e24a6ebc87062ec7a0e",
                    "size": 278
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:673c09069e4697b12af04dc085dd22f9b86c51024bbdf19a4f969cc74a67f80d",
                    "size": 679
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:19ce9cb7ae33b72478454483374a2eda66bc4f88d8f7b9fab48c46f5622433be",
                    "size": 461
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d3836afe1a67b5c923d07b657f2ad38faca4b0d40a4620b8a6ba6cc5586f5cb6",
                    "size": 14184583
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0d0fe98f8d7bc6ec247e03e0961ce3f04f8a299182aa24ee049f0310900146c1",
                    "size": 466
                }
            ]
        },
        "37-build-20240205": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:e0fbc52f059abd9cfe0d4a11b5c9fecd134d212d7ff109165ccff651c264e6a9",
                "size": 7559
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:69fff380046369a47fbc74b0aa03f61fb243f73dc5795e3ecf69c6577ee84908",
                    "size": 63118399
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:af78cc0520f170b906a82f421a37356d2c269781502c5f7d2c396abdfa55d6a9",
                    "size": 2592222
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7edbd9813867cb3dddc51da4d40538bd9695d5b483b8ed59539b24b19c133b4e",
                    "size": 23448737
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:44dc7c873245302e133bf36d8149b48643b19afe9a7540a40abe1eae736eaed8",
                    "size": 217029550
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4dc8c6e0f74fad71d0a2e17368a0c25cccb51945f997463748b8def1421f4f81",
                    "size": 473575
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4bc00a878dab5ef147d98e03eb2e1a5a19985e5e5fdcd18ff8defac4938695b5",
                    "size": 1012
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fb87ee75d18626f6429938563bfa6b76bda1ac557019c8354f99cc04c16fb1d0",
                    "size": 278
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e36e3c571cd31032afd2e63729a6a6885268fbecb1a32d4ab477e88b760c6925",
                    "size": 677
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:75fc38abf14743c0cb98e30147fdaf527dc87c34a8cd91db118b48425c25a493",
                    "size": 461
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:59ef309f55d771568c5e0390359ea96f28e63e62a2d44d2afce553fb8ad08abe",
                    "size": 14184469
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e9b00f9455a7cefe8c1b186acc6e22258c416ed43eabe6413acbda3722227094",
                    "size": 467
                }
            ]
        },
        "37-build-20240227": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:d4a5fd7ac9c4ed47512597fec3f8330587e32ad641c23165d0bdf0f0ac2bf3d7",
                "size": 7561
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:69fff380046369a47fbc74b0aa03f61fb243f73dc5795e3ecf69c6577ee84908",
                    "size": 63118399
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:65764d35c6ba7bc01cd8c1c7c80dedd0fba41e8aed4fe20f32b8104e40811b27",
                    "size": 2592230
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ccb26de59532c7a3ca4e330f6259f0a22d5502c63fce64953cfb835da2a89232",
                    "size": 23448765
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:dbffb8cd0d199db9da89c0a8f6be633d403ae9577895ef76ed8559e0e6a2fce6",
                    "size": 217030397
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f2cdbf2b50a12d0c904c51a1aa6a78d769e31ab23e681213a8dcd625845a43fa",
                    "size": 473575
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:caf29b48f9a19f9f082026316d26fb42e73b1f7a2585ff1f86457c794c8ca68d",
                    "size": 1012
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:821dddb4fbe51867593b530bacd209ea5cec4104a56beb6362389970d19aaa68",
                    "size": 278
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a0fa218cb0068ba037fef0d258fb86dfbfed2c4590d7b39e86733b5c8b69f61b",
                    "size": 679
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9d68feee9a64aaf2316e4f6f65cdc6fbf9e80169d4bf9cd0152c507a525b3155",
                    "size": 460
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:471f163f1849870784876371cc7a7b793b8e001cbe190346afbab71c7dcd1405",
                    "size": 14184974
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7a131c5d5f20c3a57414728de464611b31b3a92dc0f064f48578cf07c52aed01",
                    "size": 467
                }
            ]
        },
        "37-build-20240304": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:23512eec154c319f49659d57f67d75885fe1b274e2df97c40e8053e355ef3e54",
                "size": 7561
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:69fff380046369a47fbc74b0aa03f61fb243f73dc5795e3ecf69c6577ee84908",
                    "size": 63118399
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:365c152eab29768a6002cd30191cfe30aa5a9c7670afb3dd05e5568d60598b53",
                    "size": 2592229
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9cfac25b66436aaad9254043374a8a0bce94c1fcc73328f0009e4c633a489dab",
                    "size": 23448738
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:eec58c8baedb56f03697759c56cc8b52846aa6b359079d478ffe547bd11683f2",
                    "size": 217029920
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d5ea14a5b029f6e9168ba600f7829994ee94710831ae531cc8575103cb5f9076",
                    "size": 473576
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7b5e5aded2a12ddea2c899e597f6b276bdbb070022f582eb5ffef5eab6706f4c",
                    "size": 1012
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2fdfe10b79cf925c4a4f205beee5164056995aa8d5d10cae49aeae14093d612d",
                    "size": 278
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:563ad2bf80f0e61e8048e26e2680eceb622c9b84a0e9b242dc26a7272ef9ee62",
                    "size": 677
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:87d42fc86fb1bef824e1ec397f2adeb648ebde6cb39d75fa5d79da952fead6a4",
                    "size": 461
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3382b0f36243706e5090913ead9f748df9850f3a8640e802178dc8db6ad7b2e3",
                    "size": 14185070
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b04888f5e5409cdd6f6e3450d9c48e117a00f76964e6b29c6464683258281589",
                    "size": 468
                }
            ]
        },
        "37-build-20240401": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:d3e880c742f4602d9e7bc0df8aa119e9b3055292a48d0ad9cd6a23836a90eb28",
                "size": 7544
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:69fff380046369a47fbc74b0aa03f61fb243f73dc5795e3ecf69c6577ee84908",
                    "size": 63118399
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d3a4176e53d7e5697395953f42ef76b08d9fef8fe5a662a442cd4f13740c7a1d",
                    "size": 2592234
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b1d05a709ad59f905b2bb738079267053a09a0f4f535e32192bcd83e0dce163c",
                    "size": 23448641
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3f3f5fce4a1b94b586b0523b225e6b5436e9dd40567f898aaaffd4c2302a2399",
                    "size": 217029391
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:de3c36bd181e84497d428d49b10abc3694cd9a0c75ec31064623d54cb4f8c211",
                    "size": 473577
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:565296760a52acc955f0523e8e8213020ff97bec4df095452a9633f053cb710d",
                    "size": 1013
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bf3fbff6d013e83413ee8ed775faa0f5e3350e9b987d24b28cb8715ea67d31ed",
                    "size": 278
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4363ad41c733c6b3e9c7a4610329a637d3d876504b93320bb9b4612bba294335",
                    "size": 678
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:38693fb89d5d2d6143564a7b4bd2d1c7da21077550cbe4d5e8a7ec5096625ff1",
                    "size": 462
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:50b9705b259416d3facecc57b9eef8fb462f73f287ec4b3d6993ce0e86683976",
                    "size": 14184596
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:617c4ec85c8244460bbe3bd75b56fb374cd167d4cffe310acdc1d8c7078251e0",
                    "size": 466
                }
            ]
        },
        "37-build-20240408": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:9bcd5e065a963cfe331a0693e508c6bf3d467bb19c28968dc4a88680caca961e",
                "size": 7546
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:69fff380046369a47fbc74b0aa03f61fb243f73dc5795e3ecf69c6577ee84908",
                    "size": 63118399
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7e54c1365f15bf88b17ba38f79d2a428ac06b2fadf6f6c91f27bb25c858dbc60",
                    "size": 2592231
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:017b908d94c1c349a53970523ee7a139bef37f34ad362e03d6bec2d726504a0d",
                    "size": 23448703
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1b5c50d01e785c4728ab89718fa8aaa45a81c0af2408ac0cc79f3ee163c253bd",
                    "size": 217028541
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d83e2fae00f6ab84a73baecccee1b9773d59ae4b450a12e360a5effca4944ac4",
                    "size": 473576
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fadda5faf2fcc02b62f25d0f9c548bc0d5c1abdeda6da2328fc79ddb5b8b91ca",
                    "size": 1011
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e1e9b66fa7cafdd2423279eb1c13f4052734fd9472c334ca49bfa60216bfccc8",
                    "size": 279
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4cbd57e7f4360c9cbeecd7408e549686853d4c97c491b59f4d07d320805ce98a",
                    "size": 679
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a4759f7eafc183e7e416b2fb6e564ecd7cf14425e5e7ccad33b50b3ea539f38e",
                    "size": 461
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5054766872814bd9ddd15e31cfe6005ba9b012b3451c6135c92547fe32057854",
                    "size": 14184723
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:08aac2cbacfaa7515ff025f78a1cb5e8ba814473f7ef9c5e78ac015aec5c2e4a",
                    "size": 468
                }
            ]
        },
        "37-build-20240429": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:3f30e5ac7a1ed94a92c9f861cc823234a7289c33ec5e17576336d2dd86d746c0",
                "size": 7542
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:69fff380046369a47fbc74b0aa03f61fb243f73dc5795e3ecf69c6577ee84908",
                    "size": 63118399
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:82317edea666666d707ace0b03aad8572e29a838bb12b4c4dfd016b2ab4ce736",
                    "size": 2592233
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c2e5455188b6eb0cff89590382e7b0ecb02ea2b714d55bba2fa7dd06af5aec88",
                    "size": 23448711
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d715dbac72a798e8d0d0ffba83669baf0bbc4da2276a5a381ac22d652d5e13d9",
                    "size": 217029439
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7ff7cea49a20cad0aebae3fa3c701db7c3491385aea25f0e543cc59538fa5ee4",
                    "size": 473573
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d5a769b6122b0d526950c3579d87d5664c827ecd65688a38c75087c4f80db959",
                    "size": 1012
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:49c4a2084afc1da3b08c57198b9d7982cb4ad987197a29eb1c0b905a29331a4a",
                    "size": 277
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4baaeb452bcc05b92b082e0b84e390a65c6e08ed28ef13295f9b16ba167a9c10",
                    "size": 679
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8cba45c189962bae1d2ff247ddff62c95a79794bffefeb6283787d28c6b320ff",
                    "size": 462
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b8a3596546c565a35b5006d65c5ac7b1819ec696fcb88b1ada790d4c710871c1",
                    "size": 14184681
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c7ce7e283368359da734e89615c08cebaa64b8b0e016f8fa452d8749369f525b",
                    "size": 466
                }
            ]
        },
        "37-run": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:446423e4a663df9e126411abd0bc036e3fb97a845722fe1b78c42d6b4a3e1518",
                "size": 6786
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:69fff380046369a47fbc74b0aa03f61fb243f73dc5795e3ecf69c6577ee84908",
                    "size": 63118399
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d67deff5c71a351663d4faf25c3b38f412142a31bca7a8d888c8821bfe5e18e9",
                    "size": 2592229
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:aef089e78d846edbce27f2669c47ec3fcef142e589e1867ef5908636b93f70a1",
                    "size": 23448814
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d2e3aa275cbb3a947522d3ea6580677ee9aa12d44c091352980066a1fb89bef8",
                    "size": 473573
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5f9e31015a5229413246198fe29fd337da9e65c8a8af3238c1f8824969f6e872",
                    "size": 1012
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3a3a2d6852cd0e1051942f064efb1ca5ed52209ef47cd0bf05a7e8752026738c",
                    "size": 278
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c3c8080aaea2aac7e2ff9499b2a0acda4cb7e625ee3cded157d534b54c647108",
                    "size": 678
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1e138be9b56c798718197323eafa69ddc869347ebd57ddc632dd70c020d34717",
                    "size": 462
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d537c6b0b2da4aaddeb1847e2edae9d037513a9590be529e9576078bd7d08504",
                    "size": 6663451
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c1526bc22c70d45cb4f2d11a06aa85fe110c675fceb404d9131388055cc3e980",
                    "size": 468
                }
            ]
        },
        "37-run-20230929": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:425f798c637e8499488abc4a9dafc8796326ccbfb4e722ad4882d2db2c8ecd87",
                "size": 6802
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ea792534a213e62c62a1c4772dfcf53eaf82f7635dbc9f71bb0a60a91226d118",
                    "size": 64705637
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:57e197807ba0a519d1edb0779ce76a06124dbef05029811c4cd40f0584de6bac",
                    "size": 2592232
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:471a3338d976e468e7f618dd22fbdde0e2373e61be9ba9fe8ba4b2e72baecef0",
                    "size": 28511392
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:43acb285765a1566a09368e26f802363c73729a1ae513cb100c40d7d5f2c9fd4",
                    "size": 473571
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1f7a541e39d90075887bbdb2cc816aabc30dbffcf6b53f81374d58c099208d3a",
                    "size": 1015
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f64cf4e6488b8740244403e8dfeecf1fd1eca6cee27302b8246883ac41a1084b",
                    "size": 281
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:455b8b17e8e1b86358879c1c85bb769d1d32ef5a39654a9da1ca47fe376a9941",
                    "size": 681
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:79974a50afa759f12e48dd7814fb83e5849ad292c42e28177d22c79b13419d23",
                    "size": 461
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a75d744ddb8d3ce956b7f4327f72717037514cb942025a76c979275f4800ab45",
                    "size": 6745116
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:079ed7ac1e7c007b5b2b48e9eb49602cc337b13652183ae095a5b4c8fc5ce8e8",
                    "size": 469
                }
            ]
        },
        "37-run-20231103": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:cf72bce69d27a2358bdd348f02dddfb3dacf1e8390539582fefdc24eb01b2237",
                "size": 6797
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9d8d1f79d667e0d33c19dcab3e1da521941331416c217cc74601d8d9f6eb34ab",
                    "size": 64844849
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:70f1454c069b387e5af8b9d91b5470e7c4785b9a3290f7113ad42e664f16f534",
                    "size": 2592223
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d76a558193cb7b66b0700ad5870a13652edf878e9142a0d74f9a71180fa098d3",
                    "size": 44064717
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6f396e4d4a3dac8410ab225cbad45fb13592e944fdf1ab97a953ead54f0fb00d",
                    "size": 473572
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:12c35de3a810ce75e005471dd252f007b4ee65305ff26ddc28b8dfa744f9b86f",
                    "size": 1012
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:476049291d6250253e43958e82448d6c862427743c148732b2a832f70c372a56",
                    "size": 278
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8e0ba4f7e5a572e065f592740afcf5c1f8313b9813191abe3a2b5fd75ccdd00e",
                    "size": 677
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d6b9fe800ceade297a03f9af34ae2921bb7a789025c1dcfcb5b389739c04d457",
                    "size": 462
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2d3832d1ab31b215e5761831765681db33ceff54edbe8978ace82e7667976b52",
                    "size": 6852365
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c10528dea3de7c6fd49674e8553d4cd40f8dba16a2911a1ac6a99b5acf45e8af",
                    "size": 467
                }
            ]
        },
        "37-run-20231106": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:0cd6f8c7fa75f4e2f7d2be0ae4b14e5c66fda33b6c8b8eaa96f74867e9b3e0eb",
                "size": 6801
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9d8d1f79d667e0d33c19dcab3e1da521941331416c217cc74601d8d9f6eb34ab",
                    "size": 64844849
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:03e4b9d169336e58479c799e52d209343f4fd63f113b03b9cc3778d78eefc36f",
                    "size": 2592228
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9ebd0b84befc3bef3f3a1a315ae5e7ec38574027144908174718797f0a00360c",
                    "size": 44065020
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4d11386853aeab8cd5baa963e4328bffa12cd29a1ce5240ad9607cc9c3e875fa",
                    "size": 473574
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7331c59cbf560592c7caacaec5a5b0e7c1412d0ee6c53af4a6afd0b75120350c",
                    "size": 1012
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:01cc8bad0eb150412ebd78b17a1ec8ddb84bf7bfda9878c71e39cec3d021ee7a",
                    "size": 278
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:204195aa087948caf7654cea0a3a5700bce5edb30a573214210d4567dfefe883",
                    "size": 677
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c45bba7cbbc35ad8b4c7416a9df0446d0594c82b7244266706a7a42cfd423cda",
                    "size": 462
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:883beea72baf754c5e02866d6409d567ab7ac97ceb43b3f033acf2e4d67ff705",
                    "size": 6851959
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d392242678b9e44bb982d028b0c35b2f9cd8a313fdb199bd7667ee3d4afb07bb",
                    "size": 467
                }
            ]
        },
        "37-run-20231127": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:fbd506194b56080b3cd1daa5fce5fa7821f6993bf80dcfdeeaab71feefa9b759",
                "size": 6801
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:69fff380046369a47fbc74b0aa03f61fb243f73dc5795e3ecf69c6577ee84908",
                    "size": 63118399
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0bb5eada9fb8c922ecc9f8444aaa0ee8a62fcac70ee74abc4710b2495f0bfd08",
                    "size": 2592228
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3ab8b31915862687dcc837ff941a87caf4c07e9f37527c8ff82b84c62d432e58",
                    "size": 22318509
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:491f82e7458e6e17bae05aa839d6b366e87513662f4340abcac0a9696a7480c0",
                    "size": 473573
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:744368413ff21e9a4e526bd1640cb20d58d0ac97385af7363e6ccfaa0a24b050",
                    "size": 1010
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d600c7ca91fb3e6cda2851db48eb14cc780b01a3eb28cb3b5cc1c157b30e5ce8",
                    "size": 278
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b803570392d88303afd7a2018b05dbf63c3295a143048a2729f5436e4f82f62e",
                    "size": 676
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c82c00cdd78937eb219600038c3a9ba8501aa8ae7b114cd8e577f8fe1107a36c",
                    "size": 462
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:390faaab281141853f012813dd071904a46b1de81f958bf38e69808b0eeff12d",
                    "size": 6664220
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4adc356c69b028295625f293b1d0c5d7fa703bee6cc5aa5b072a86d01e0ce930",
                    "size": 466
                }
            ]
        },
        "37-run-20231204": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:aadcf5971f3dcc20442bd363e57344117716db95c42af7d63c53f39f81fe4dd3",
                "size": 6797
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:69fff380046369a47fbc74b0aa03f61fb243f73dc5795e3ecf69c6577ee84908",
                    "size": 63118399
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d33718b133be58c12c588d020799740b8f5d0e1659f4305bd3a42e0be1ca53e9",
                    "size": 2592227
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:638dc3ba02ae0d436831ec2e65f80cf3a0df85f54b4dd0e7ef6c930f2c9ab6a9",
                    "size": 23448833
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:320c005249b51b04b58caf58affd18499aee26124689ea955f510182122cfab7",
                    "size": 473569
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7d3113c0c18b1dea309c42932b22901908926108a8103cdab78170405c7a600b",
                    "size": 1013
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ac6ed7c321ff834e5966003c322a533aea0543816c96955876c3ab5646e3079f",
                    "size": 278
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:297b2ba3b641a48b1e90733cb70836ce9c195ca3803cf200e37417506cf0bb66",
                    "size": 678
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1f73b516ad766efd99f0fe8db17e4e328b2f6accabc971ecfa3d27b53c981a71",
                    "size": 461
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:88a6f556227627ae13f8f1e81bfd7875459522e6b16f89af496e878e77b21b18",
                    "size": 6663642
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:56d1f6253cfba1bbba8e19b05b5bd006edaabcd4770a960a46ea68b10e0fdde9",
                    "size": 468
                }
            ]
        },
        "37-run-20240227": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:9dff4750c0efb91aedb381e864ae043d4598609b81841ac905ecf8569abe6fa3",
                "size": 6798
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:69fff380046369a47fbc74b0aa03f61fb243f73dc5795e3ecf69c6577ee84908",
                    "size": 63118399
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0c9cb203b87166e0d09b81a8d1f5b49ea5bb80d37799c1ddd6d0f58f482ba0ca",
                    "size": 2592228
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:cd15d660a3890fbc117644cc7e00384e54cf47a86db50fb85d3e3924a3b6e0f7",
                    "size": 23448836
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:69feda61e8a6a07d2f8173016c73ff91210e0484140825e75e597b45142b7ae1",
                    "size": 473570
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ce20a220ec40b0412743b54d0120c434710d00f3b54a54502308b76efc9dd983",
                    "size": 1012
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d47f351240c88d3748188f2ef0e0b48f6e891509bebda6f18393ad51c6305e70",
                    "size": 278
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fe1a2b8c0123677dd17cbf5897edd521c063917ffff70729a2e1211219421c57",
                    "size": 678
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f0bc84079738c7cb444a751732c831109078ebd828f39565c765bfc72f1e32d9",
                    "size": 462
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8c21ecec21affc35aa8a5227f35d93fe436894197c56e4bd6f855d4985f9db11",
                    "size": 6663444
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fa658dab08e5b203e9702c9231a43d3c58d202762f6b3935d386a575152602d7",
                    "size": 468
                }
            ]
        },
        "37-run-20240304": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:b236014d0b8e0954b6a9dc346f2932d5ed26b29607de5eb3066a3b50da753e9c",
                "size": 6798
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:69fff380046369a47fbc74b0aa03f61fb243f73dc5795e3ecf69c6577ee84908",
                    "size": 63118399
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1838771b8ec87483e105e112d8024f9e9029a53bae9d1ef0c34c061003181dfb",
                    "size": 2592227
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9086ea61d95c1ab147c8270e5a9b1830e96d367d41663c7617ebb4b06043f2fa",
                    "size": 23448747
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e665d30b7799b95a1fefa213155d46f59fff56b68586082bf191741035863ca9",
                    "size": 473573
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:eca08035356a02b31523d0089c92c641151221e1163f6f69259640069fc93325",
                    "size": 1011
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1dbbb8991fb8ec274be4b21cf0c12fa2b72fea515b37daf96cee76915bf6a3ad",
                    "size": 278
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0a012ba1f4d0af3a86a253d6ee08223c9446a2cf6250bdab21f839ebc7d16354",
                    "size": 677
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:30495c77303f15af04a882c71d278cea6699924428092ff409840f02e3455bec",
                    "size": 460
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e7ab56aa194f4dc7a68895e415de89ccf0160ea0b426b690a95a095a6f7d4a80",
                    "size": 6663488
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:23a366fe4d2a5894b996fe60721a7ea0557042186d1979ab9f7a18c5e5fee741",
                    "size": 467
                }
            ]
        },
        "37-run-20240401": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:7b10dd0d6f10c2e8e309549b112fe430a55f33cc7c33275c8ab91541930fdcee",
                "size": 6786
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:69fff380046369a47fbc74b0aa03f61fb243f73dc5795e3ecf69c6577ee84908",
                    "size": 63118399
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:326b20e912351ee1cd36eb4928f89de7420c89cff4fe26170cede56d5b53defb",
                    "size": 2592233
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f39d9f2f25dbd3d6ef3ad45ac705c80b09499c0886ce65119c20d6fc0873f021",
                    "size": 23448664
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:149aacaa82b179c640f96dd6fa65cb2df58f00055c9a94c3886a4906672573a7",
                    "size": 473577
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e7514cd29789812983b2a947f44fce3f7bcce347440875a08883bcd9b53e739f",
                    "size": 1012
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4b84039a432480f5ffe416931d3e349c4318c99332a368f259bac7fd40b1d2c5",
                    "size": 278
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:85dfe6b177a514d70942f90882fe77a64a24af14ef6f9f8be9f6e0ac8271c2d2",
                    "size": 679
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:75ac5a1c7aa9ff94b80b26d3cff3e1a67892548f05c0ca35405a77c861a15ab8",
                    "size": 462
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5e0ff124a6ae6ab036fba31dd61f281b5879c6812593ba0a0b7a0393e1a2619b",
                    "size": 6663618
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6704808fc482f83132cc07606068d73ae29e37a6aca08a65beaf66e0bc818072",
                    "size": 466
                }
            ]
        },
        "37-run-20240408": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:21c69c09c581cfae914b06ae8ea9aedf832bdfd087b409851b3cb2f7b448b385",
                "size": 6784
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:69fff380046369a47fbc74b0aa03f61fb243f73dc5795e3ecf69c6577ee84908",
                    "size": 63118399
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:689676ef4dfbe38a100ec0fd8bde8b49c700bedf04ca010d64d0e38e212b9404",
                    "size": 2592230
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:20de4a94e0f41f23dbdf295a23279b3082a2b94c36276a1517ff184d9dae8e62",
                    "size": 23448793
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:aba17861f514dbec43f4f00bc73113c6ead88d0daf01cd5af8c0468d2e6ee6d6",
                    "size": 473577
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:44561f9120b7b96b19381819ea39413a89fe135ccffbc8f4f6586ce34ddef54d",
                    "size": 1011
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6246de46784e0baf4fe4448538c5536535e1dd8374a16e2e22c5fb226e3f400d",
                    "size": 278
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:008ed895bd8ec822f5bbb391c610f13b97036c9b6a66d8ad9815fcd75fe5517e",
                    "size": 679
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:752a73f6143a147cf9dd80aa9e2296a8678cefd5393206c50f4df7a5303521d0",
                    "size": 460
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5f7970ca1823ab6f117260e104039dacfd3d8e583bad77fa9b3ce031e1b7083e",
                    "size": 6663815
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:471e478298689d5e3237afef5c6b64a4eb3d55cea881e49831fd2abea2ba9261",
                    "size": 467
                }
            ]
        },
        "37-run-20240429": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:446423e4a663df9e126411abd0bc036e3fb97a845722fe1b78c42d6b4a3e1518",
                "size": 6786
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:69fff380046369a47fbc74b0aa03f61fb243f73dc5795e3ecf69c6577ee84908",
                    "size": 63118399
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d67deff5c71a351663d4faf25c3b38f412142a31bca7a8d888c8821bfe5e18e9",
                    "size": 2592229
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:aef089e78d846edbce27f2669c47ec3fcef142e589e1867ef5908636b93f70a1",
                    "size": 23448814
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d2e3aa275cbb3a947522d3ea6580677ee9aa12d44c091352980066a1fb89bef8",
                    "size": 473573
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5f9e31015a5229413246198fe29fd337da9e65c8a8af3238c1f8824969f6e872",
                    "size": 1012
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3a3a2d6852cd0e1051942f064efb1ca5ed52209ef47cd0bf05a7e8752026738c",
                    "size": 278
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c3c8080aaea2aac7e2ff9499b2a0acda4cb7e625ee3cded157d534b54c647108",
                    "size": 678
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1e138be9b56c798718197323eafa69ddc869347ebd57ddc632dd70c020d34717",
                    "size": 462
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d537c6b0b2da4aaddeb1847e2edae9d037513a9590be529e9576078bd7d08504",
                    "size": 6663451
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c1526bc22c70d45cb4f2d11a06aa85fe110c675fceb404d9131388055cc3e980",
                    "size": 468
                }
            ]
        },
        "38": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:028b6364483b6a06b5785639d5c2d4e42ae400195e5a5c71e84783ce81821361",
                "size": 6785
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3aae694a5eee87d89f05e7d069add3611bfac3b1f9488446d9f484e00e268258",
                    "size": 65655494
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e3a29097b88d916c4c9d4805b3b5006a58f8f232c1035ec25a81757fce450681",
                    "size": 2592221
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b4fe12d3e79f34600efc5ecc27cd450141a6e551a379ebd5833b8b8aa425bcd2",
                    "size": 43774767
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:49bf492858ba01f4e87111272605ed1e297c655e4dfcd99e48f9bd2721786069",
                    "size": 473574
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b9b2a1a7222acfa84d0d257c56a93f843e3803c86dc363c2e3fd13a1d32356a0",
                    "size": 1011
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d5a53a0ba073aea6cca6c67d729e1693383253ae45368d5abe2474624275f679",
                    "size": 277
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:dcc229854562155539218cff0ebf1c5265ef1bd70adc2cab474f6567ff358ec8",
                    "size": 678
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9037230e582ab47d63fb807ca5b6188b4b74053f5a1133ecec9fc1ff4fe40080",
                    "size": 460
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bec42da99f71895dd235dc664b6931a6832cc0789b312d39aef8e509aaeb79e6",
                    "size": 7065463
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5202c9f8f155990b9269f5690536c25ea496bfe9ddb75a2134817504ccb434c6",
                    "size": 469
                }
            ]
        },
        "38-20230929": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:a1dbcf6542c2660bc785d965c43c5eea65306ce666e1a807b286694092a6624d",
                "size": 6800
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9523322a2d97b6a26a31c5c19b62d9ec9e3ea7e7ed808d90b225b9c6081ffb13",
                    "size": 67189372
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a6d99b1591f4a2ac8c7f1063b08df11152da017afef86609dedd5fe617e8a699",
                    "size": 2592240
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2cf6a9255a2d6156a2411b3bf5d43d89037cb35e5f3c1ec7132209cecc6b903c",
                    "size": 29150787
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b4847da95c2e5aa31861600e2fc4a9cf64f59b2f56e370410025c1c05dfb7e12",
                    "size": 473571
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a591cbfa2b15eaeda430f6a6bed77257d07189373b36f0ebf75fc2f1173b5012",
                    "size": 1013
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b549fca8a7cd69f6d251512dd03d24d16adb8be178cd0770426f92d649447d13",
                    "size": 280
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ee29642da2366253e21262ef770cf7ca279e58f01dfc0a405d0004bcf7c0b49c",
                    "size": 680
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:01a84a333883d5f0c1b98c0076a78a70ac251c15bc08c6c7f07e21a5bc48d7c6",
                    "size": 461
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0be676b5d83a7a04fca71dfdbdd70eb9e50745fd9b356488a68bb5b33ba3cab8",
                    "size": 7003289
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a820d7ace849b0662e38b50ba537ef5fb3ab171cb8d83b22cb350511766c015c",
                    "size": 470
                }
            ]
        },
        "38-20231103": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:805e181f231411b66a2857561a26d16f4b10789de4935e30c37345348f654761",
                "size": 6802
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:994fd3fca5751f6e1c90c062034ff93a6b3f342958e643366a96aae667d543f2",
                    "size": 67303181
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4042a15f73abe729aa6a99e8c875836c7bfd95e4bbf238631ad2978fbe0b3b1f",
                    "size": 2592223
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4466fd6697681c10ae500b288256ffcf0ceb861c4551dac45dec279e44472b4e",
                    "size": 47537530
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ffde60dc30cdf33ca4cbec80345579f0534b61ac5745a5401dd77e75b059c920",
                    "size": 473572
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:63b554587e75e5ab9b303823f9fbd84d71ba6648b638774a3207ea509ad774c3",
                    "size": 1012
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:250a90a9dc885de9b73b2de5149c6206a0f75dd7bec0c2ef9ca8e6a19c600e91",
                    "size": 279
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6e2a5878fd8eed1858580e278041ec339be436a62e9dae2f2b31d0a95b7f2ee3",
                    "size": 677
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e10f13f0a1d66bcf73c81cb6c2a9e17a8eb64685d495dca52cc8980af4d571e1",
                    "size": 461
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:21013939309f018993f7f492583e564c9c0ae07b2621d6ddbca4e6fa5748716b",
                    "size": 7117324
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:463bb6c34285d7d9db126024cf3516e4b6a01708f4cf269180cb4568c22aa3e1",
                    "size": 467
                }
            ]
        },
        "38-20231106": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:67d24e6b984e69214193c87ffc40010da861e25dfc462fe197333d581dcd2c87",
                "size": 6794
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:994fd3fca5751f6e1c90c062034ff93a6b3f342958e643366a96aae667d543f2",
                    "size": 67303181
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:cbad3804ca9a1990d11b1dab8512437a6d2207cb2e3b91fdce89923f9fb02fc4",
                    "size": 2592228
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:843af85ee0e2cba3ad15eb602a87dfb85611c8565ba7b219eb7d9f1037b92247",
                    "size": 47537535
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8d6d06253da0cc7ad0444fbe83086513855b925743b7703c46160860956838c0",
                    "size": 473568
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3dc7f18dc8b28fd6e6fc02a41a3d830e1f386fb747a91baecf98d2c2a10be567",
                    "size": 1010
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0fce6bd897ca96240dc822f3e09ac9a893d6aebfc8a8f44490e2ac3cba19db18",
                    "size": 277
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d9458ad05af8c5c75e86f95dfe67b1528149fc6be910daa882f7eb2c7d52a11c",
                    "size": 677
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:297ac5b778550a8c477f9ce1dcf5b586c0241b41f6060f6228ef34c2711bb801",
                    "size": 461
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6e14a4192f20abb6ea0ea6404cf3dcd58760882e778392638afe42bda3434a81",
                    "size": 7117221
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e1549f43441566733f7883ecbbbdb02e95d5f3d816e832be69a12932dc146e29",
                    "size": 466
                }
            ]
        },
        "38-20231127": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:daf0238040adc0f1775da2ed882b74348a93c20811ba9a6ca09de3ed331f8a80",
                "size": 6800
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3d928c985542784e5bc7c6fca298f5b3a4ac1bfec6b17159c10ceee12ce55b6f",
                    "size": 65592571
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9ec881267433f57c40f9e61b9cacfc759deeabc358ec1d3ab79e7d3d9352108b",
                    "size": 2592223
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:781f4f5a3dde4c9a61c80922544acac969445bf6bbef57b8b4cde27fa279a5d3",
                    "size": 23224341
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e3c80ac69ae01565561ccd29f02448ac74392b0b5192ebbd68b44539849f16b6",
                    "size": 473572
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:79c681c3b3a541a0d672b6c0d4fcc5580c9a6f6745c2cd3a0781a3d7353b8311",
                    "size": 1010
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4e528eaac518431865ce34b46050da9fd107a9358dc9944df7f312a04d9eb22e",
                    "size": 277
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:575a74a07660a4ba56a0649e03ba939749f1345458b4fe3faefd5a794fa840df",
                    "size": 675
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2134d9bc86b427048cd2f61383ad0ba5ba19558dc6da89578c2eec248ea7736d",
                    "size": 461
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2aeb80d309c1bf29491e70309488e7e3f0c6861fdf18a153904ff9d0f73b02ff",
                    "size": 6964627
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e7c4f78571685e5404c32d686dcc6b1f125a06148e36beef0cff5a655450f2c4",
                    "size": 467
                }
            ]
        },
        "38-20231204": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:873ac4f7a039cc777bb7ea284d208b5eb7129fd883c8d5b3abe9c7a0f1dca7ba",
                "size": 6800
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3d928c985542784e5bc7c6fca298f5b3a4ac1bfec6b17159c10ceee12ce55b6f",
                    "size": 65592571
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fa6cb229accf0202ead41553eb23f045d2d0b4b7c654edc4a7703fae1b1fd4f1",
                    "size": 2592228
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:794e2484fc3502b0985c9be83646c613d677fd7bdd2eaac82b87175f45afe192",
                    "size": 24268758
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:26ed8809c1463ea30b9f3e26eafef2451aa7e113497f4b9b8d3ef9b313bce66d",
                    "size": 473572
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f556958f040f66a457d183ace4961e9ab16685e3fffc7799c5791eb17712d4fb",
                    "size": 1012
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0978745a9a8ce87ffc5b13a80bcea5daaafe483a29cc45fd7463f155779e2270",
                    "size": 278
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6b066ba991e828e9f289e27f708122171f5275731ed2b82c4ba73e2748471fc0",
                    "size": 676
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ee6896184ac2908e9a3714c17f90d8c1be8a60382453e1e67fd6d89c29e415bc",
                    "size": 461
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fcecbba9017a193e33406bbb99c5f0cc96b14507505dfea986c477658955b83e",
                    "size": 6973855
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8399e2c9fd029714dd36f0b1faedeb3899ee05e47d2c67330ed17bfba06793bf",
                    "size": 466
                }
            ]
        },
        "38-20240205": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:8d1b8c11a2b4f4576ea49c9d359360341d2a4509e635208c4a3697bd2605a0af",
                "size": 6801
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3d928c985542784e5bc7c6fca298f5b3a4ac1bfec6b17159c10ceee12ce55b6f",
                    "size": 65592571
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ad178d72905db2a360115bb6849c8068832e4984036fba003f04068ac6a6bd97",
                    "size": 2592222
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c0c4e6507e8b5bea4db351b8a6e8235876e2ff0673b210ee3e0bdea64763e01f",
                    "size": 48784154
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:13d9bb662b3794aedd8f8aa98c68058a1760a1356d9a3f42f3c63d2c86f83493",
                    "size": 473570
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:60f2e0bf0733ba97b5cc94b41bad01f6ebbec1f3416e566df0a97f774801ce5a",
                    "size": 1008
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1e4c008363977243f758162e1a713e2c92b1ecc41fa5c026da5c93adc75c6e4c",
                    "size": 275
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:52dec7d4914ffbbd75752bfccb0ae75fcd88a831e71b41e00592971eebde608b",
                    "size": 674
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6ca74a7f0011a23ced2243105850369609f2211be0d769bc193ee941b2520a08",
                    "size": 460
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f7748e164667d80371dea93d50dbbfc5182183ef37eb1b23df7aec3c82315294",
                    "size": 7404468
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:cb130ef056629874dc4be60e414d415ddb2aea66bf86078bef5af460418bfb24",
                    "size": 467
                }
            ]
        },
        "38-20240227": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:d9339e972de928695cae528bc0f20b7a0d9451c5e7c3e96a0c0099dca64eb9db",
                "size": 6800
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3aae694a5eee87d89f05e7d069add3611bfac3b1f9488446d9f484e00e268258",
                    "size": 65655494
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3e590c6dbdc96b1cdbacfe1edf9c0cd1a8d274ab9f64fcc727a9b8e531dd2cd4",
                    "size": 2592233
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7adb706717b650f823b13f7c6bb4c282be1a52690199e6f455cfb30d5cbca021",
                    "size": 38654943
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:423d419b6640476cb76b200c9f282eeae646a2e6cfecc2031156e13b9dad4b7f",
                    "size": 473575
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8ac9f745039954e9a75bd5b770563cf3125dfa45774358751a883b41f6055e6d",
                    "size": 1012
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f26142fae26d26aef024cc33f49b3ed51f70b996d1d2dd77338eab55f74f6971",
                    "size": 278
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6dc59657604b207e982b92ee10c9209906db18c87aeac61679b4b9713931a9a6",
                    "size": 677
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5996e90f577025eb8a85d74dbbda6775db92ab5af6b03561273305fc0d42d737",
                    "size": 461
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a16686e72c452a3d877a4a22555e051537f2427e5c8e153dfb7cece7a7f30f24",
                    "size": 7026044
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:21c8deac8397f0282fac2ad41144bb8bb1a1fcf9daaafc46727b86d5b622f166",
                    "size": 467
                }
            ]
        },
        "38-20240304": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:23b0ce0508c6e99811ff1ba21641ca1dca44aff57343147212f1a5c215dccf12",
                "size": 6802
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3aae694a5eee87d89f05e7d069add3611bfac3b1f9488446d9f484e00e268258",
                    "size": 65655494
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:79b599003222175835e1970954e9519145d402578af3b20e11f3ca2cf50f9fd1",
                    "size": 2592227
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:735b184569da057a3a27ffc4e0458248f8683681c2b5aaf874f8a86e0c6a7e52",
                    "size": 38655023
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:225147945e23054c0b9d4ecc254f42c0cfd7dd6414e8bc13cb2fa054d95600d4",
                    "size": 473574
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:46dfb557ffde70435f342251cdac53f7ba6b7047f858c4fae563553aa7d9deb5",
                    "size": 1010
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5e1edb9a59a184f87f5dad7580e05bfb45f04c855962693b34d0ac28e0794b9a",
                    "size": 277
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f1b94eb18edf2c26967fed53ec8bd49d33c18b0432078cf67640436e7923552c",
                    "size": 677
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:68bb8a514653a6465e96d23a3e1534dafeb20dc7615d5f98386e125d682677ba",
                    "size": 461
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:aa9662faf62b25a333b3484c87c4296b41a07955306b20250f6926d0444c7949",
                    "size": 7025945
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2ed4ed5ed68b9b670ab7a1733991b0986e0a234330a312eff8b1420ebaae1330",
                    "size": 465
                }
            ]
        },
        "38-20240401": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:3575e2555cf96cf13e04502bd39220338bf188231d316c4297f6507eb4c05a5a",
                "size": 6787
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3aae694a5eee87d89f05e7d069add3611bfac3b1f9488446d9f484e00e268258",
                    "size": 65655494
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5c8a07cf7e0a6610b389237666844a0c93f0042b105e99fc1128ba49157a7a8a",
                    "size": 2592232
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f6c33e17fe4a960c76b12f34fd78f661a1e818432520307b00c7935866ab0623",
                    "size": 43688134
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a5eaebb4c97c56647af86311d98554cace9891838bee9093423ecf3f101e5b1a",
                    "size": 473578
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ee87f3843998a99a46c9560aa1d631660954eae2d583aca0eb974334f7b297f0",
                    "size": 1010
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a8d38676405c3fa5b42b13ac40a2b44c68d9e5a8b71f40bcafdde8a8a8c17c95",
                    "size": 277
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:556bf3cf41263f53c8916f59c8da3bd38d8d0af02e9f832ca81341fafb49683c",
                    "size": 677
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1ef0f1fe648699e4b93f679558b9d0e31bdd61320e7df39ccf0441adf648998a",
                    "size": 459
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7e37c9b8ae563e709f9bc3e609cb0e5a88b49caf6809b88c9c8e50e8a91d6f87",
                    "size": 7056139
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1f4d5c24d0336e958d041387b931b363db4fce6f5bd15f96915105edaa6ef6c5",
                    "size": 467
                }
            ]
        },
        "38-20240408": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:e6c7a2f36d8e27d87040093bdf0a2897170bc838ea7029114339f341b2457e3b",
                "size": 6787
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3aae694a5eee87d89f05e7d069add3611bfac3b1f9488446d9f484e00e268258",
                    "size": 65655494
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e3a29097b88d916c4c9d4805b3b5006a58f8f232c1035ec25a81757fce450681",
                    "size": 2592221
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b4fe12d3e79f34600efc5ecc27cd450141a6e551a379ebd5833b8b8aa425bcd2",
                    "size": 43774767
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:49bf492858ba01f4e87111272605ed1e297c655e4dfcd99e48f9bd2721786069",
                    "size": 473574
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b9b2a1a7222acfa84d0d257c56a93f843e3803c86dc363c2e3fd13a1d32356a0",
                    "size": 1011
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d5a53a0ba073aea6cca6c67d729e1693383253ae45368d5abe2474624275f679",
                    "size": 277
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:dcc229854562155539218cff0ebf1c5265ef1bd70adc2cab474f6567ff358ec8",
                    "size": 678
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9037230e582ab47d63fb807ca5b6188b4b74053f5a1133ecec9fc1ff4fe40080",
                    "size": 460
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:75b8610993f82a8a4b4bdc964fec23a049a135952c538344264ea2d6fa8ac2da",
                    "size": 7058838
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5a6aa34334678b7b749ef9d014967339f76e4a7650ee3a347ac884e0bf346ba5",
                    "size": 467
                }
            ]
        },
        "38-20240429": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:028b6364483b6a06b5785639d5c2d4e42ae400195e5a5c71e84783ce81821361",
                "size": 6785
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3aae694a5eee87d89f05e7d069add3611bfac3b1f9488446d9f484e00e268258",
                    "size": 65655494
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e3a29097b88d916c4c9d4805b3b5006a58f8f232c1035ec25a81757fce450681",
                    "size": 2592221
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b4fe12d3e79f34600efc5ecc27cd450141a6e551a379ebd5833b8b8aa425bcd2",
                    "size": 43774767
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:49bf492858ba01f4e87111272605ed1e297c655e4dfcd99e48f9bd2721786069",
                    "size": 473574
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b9b2a1a7222acfa84d0d257c56a93f843e3803c86dc363c2e3fd13a1d32356a0",
                    "size": 1011
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d5a53a0ba073aea6cca6c67d729e1693383253ae45368d5abe2474624275f679",
                    "size": 277
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:dcc229854562155539218cff0ebf1c5265ef1bd70adc2cab474f6567ff358ec8",
                    "size": 678
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9037230e582ab47d63fb807ca5b6188b4b74053f5a1133ecec9fc1ff4fe40080",
                    "size": 460
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bec42da99f71895dd235dc664b6931a6832cc0789b312d39aef8e509aaeb79e6",
                    "size": 7065463
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5202c9f8f155990b9269f5690536c25ea496bfe9ddb75a2134817504ccb434c6",
                    "size": 469
                }
            ]
        },
        "38-build": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:f402dae7b168b9031a5d4fa9e27c5917a0e53b0efd379b32f4079ae6f18531e7",
                "size": 7544
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3aae694a5eee87d89f05e7d069add3611bfac3b1f9488446d9f484e00e268258",
                    "size": 65655494
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:98497adddbae4de490fcc1d04edf735aec4a83cbc9ba5af1f1e65fbde562983e",
                    "size": 2592225
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6360d6ec9ad08998c00390ca47a7bd8cc87409fcaf713afd73b689b918b01438",
                    "size": 43774660
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:055af6a5333deae0eff8ae00dac4ea238156b511fe973fabe60f028c580994a2",
                    "size": 226660520
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:01daed6b4313e6915e63f67b4c51191e2e74999bd73c3c6e7a177fdd969e2568",
                    "size": 473572
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2f2510c732d5e8c6d4f2659881c9a3563b54b4a0c18c278a0a1cd35cfdc6c8f2",
                    "size": 1011
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6e9ff13c8e735763b572fac974b254a92ff8ed58829c7c45b30ee881dc470bc9",
                    "size": 278
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d0bb6ea75d932375589b31fb55875c485ea7731e58b798bd4b6d897c59b1fd84",
                    "size": 677
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:47114f532225fca85828e20ee26ed3b91cb32c3702011f7a59618389bb5e5f9c",
                    "size": 461
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:706a5467ad5e01c34ead62ff1cb41d5d32f0a5ecb179bee287c28af5a0641467",
                    "size": 15286765
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:865fdf478a2927a5a54a4bcdd1c93e8adc0df908935d7aeb7515810ff3555272",
                    "size": 469
                }
            ]
        },
        "38-build-20230929": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:1e5dad5ddd6cb6387202f6b6e42820ff21c6ffb77878e516087622d742fd7713",
                "size": 7559
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9523322a2d97b6a26a31c5c19b62d9ec9e3ea7e7ed808d90b225b9c6081ffb13",
                    "size": 67189372
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a6d99b1591f4a2ac8c7f1063b08df11152da017afef86609dedd5fe617e8a699",
                    "size": 2592240
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2cf6a9255a2d6156a2411b3bf5d43d89037cb35e5f3c1ec7132209cecc6b903c",
                    "size": 29150787
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b5ed1c20e12ff1e52f83467d747d4e18692dc81e5232d66cbe9b03719f26b37a",
                    "size": 227668373
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d703cb4193979978f68db2360235e9dc4eba7eb6cf0d37db49877a0d8763b647",
                    "size": 473575
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:eb78fd9e84376d78cc6dc008808a664fe5f779024bc5fb1047c162f94cd63aea",
                    "size": 1015
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:70a49c3a85ca229f71ffd443e7646cdec25e31d29213d89783e0461dcd250408",
                    "size": 281
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:14145367757eca4591f179bb11bf85d9334cd122c562c802f0021deb922c8165",
                    "size": 681
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6100929971b4f4337bb2c899c69595adb01fe278a394b954f726bb1c4cd3ddd8",
                    "size": 460
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5c0b2a08751ab010d362b7b435a8adfaf04a965a4034edfd68e2f22c5b5142f0",
                    "size": 15147591
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9cf94bbb272fe9408f42b4d18a2f5a6d7370ff387e960e71b4b1ff805f9972cf",
                    "size": 470
                }
            ]
        },
        "38-build-20231103": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:026caa91c0166172a5bab4aae4e34da18e4a2c8544c0233685456a44537c5c6e",
                "size": 7561
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:994fd3fca5751f6e1c90c062034ff93a6b3f342958e643366a96aae667d543f2",
                    "size": 67303181
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0935cb4e3913d5b70eed21c21bfcad9e50ffb9c64c23a531273cb0567f3d9971",
                    "size": 2592223
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e934f22ad3e7d31680fa824db8c311455b178b0b514224439d6d935275d5fcba",
                    "size": 47536950
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c59c8dc545242ee6d4d8fe8aa12053cfeb16cbfff73cba1e7de901afe220c200",
                    "size": 225451486
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7626772cc366719be14238cf5784af66bf4b3a280dd32ef762d7199f121aa9c1",
                    "size": 473569
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8ad80855f8fcbe70dedc8691335f7a0338243c4caf626ca0ef93b15921038182",
                    "size": 1011
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2f9e33d02f5244487244960d4009bb4fc0836faf6957a37c11cfe33b3da8ff15",
                    "size": 278
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9bdfbd3c76ab5a932a50b14a4967b51cbf4a813e81f75c45122f71f4ba46eaa6",
                    "size": 677
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2f8d1ed0eacff961484f396e60514158e97a22da916ed93321ff17df79ea04cc",
                    "size": 461
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f1b5c4553126ae76a12662f7486a94e5d88a9d9b9094787d095b6ebc8a047ab2",
                    "size": 15188677
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b431dbfb245c7f07fb43ea09f4a31c02b09f8d32e6fae44fd1b95518b50f4254",
                    "size": 467
                }
            ]
        },
        "38-build-20231106": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:d090f63af4b7cb081c023bf631b5d17dac5a43df343fe115d1195b2eaf0bd6f4",
                "size": 7559
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:994fd3fca5751f6e1c90c062034ff93a6b3f342958e643366a96aae667d543f2",
                    "size": 67303181
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b9c256a6f919dbb3c90d501194fde29b46d3db6bdd7826ac8509ae15a9180ca5",
                    "size": 2592230
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:108c1a43cd8e84c3eb92b8cdc362143f30b4bb9fb6621cbe44a2092c6fc705a9",
                    "size": 47537464
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5b9f112c0e36d8ca224a0f228c6f6663a0db989cb4dfa525eb4ffc560b3595f4",
                    "size": 225434868
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:573198235dd8f34baf309d0f8a5334478cb498aa70de7a4d2a5a1db442a3bd61",
                    "size": 473573
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9f3fad4dfef406bfd755aca0f91fc309588335b38583be969480f37a5fbef9fa",
                    "size": 1013
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:157d1997f07a1f15499992243c23b2937d06855ee58bfec3967acd7ae574aa91",
                    "size": 279
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c2effad4c9611844f8a2bad6b970ac40a0d9e463474e8282455ef37ddde78b40",
                    "size": 677
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1fb2106e02104aacbdc6e1d462f6f9f1b3514c8faecdbcdaa5eb8458e7a29719",
                    "size": 460
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:000ff08aff6416163ff51d4e0b95a216836dec8a74cb5e6860374a8778c02fb4",
                    "size": 15183585
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:70400e6dc9aea327be425deb4d21c3b646c0ac8e68d51d232eba35feedc8eeb0",
                    "size": 466
                }
            ]
        },
        "38-build-20231127": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:649a3a623d60388e719cbdceffaed927dd1fa7337a705a5af1348f8e00fe5fd6",
                "size": 7562
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3d928c985542784e5bc7c6fca298f5b3a4ac1bfec6b17159c10ceee12ce55b6f",
                    "size": 65592571
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:656e97fa810c49c611de64776411de7b8af8dcaca8a641e71e7141b3e6851568",
                    "size": 2592228
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d9e0f7ed7e93cccc0731fb16229639465d20f8d11e3c564d36cd25d01f019fb6",
                    "size": 23224115
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:461f954f27f2d8d1eca9c25ab1b1e42b883937a52407c7c04d450b06d11a46c3",
                    "size": 225777019
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:307ef5bd5d77b4c1dcdc883f30d3b811dca33502d8f4436d283efe6c9fc93e0f",
                    "size": 473572
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a04fbd8b7d85027c34d9a7dcc8ea3c53abe7357c7d3da84df463e84abad61dbf",
                    "size": 1011
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a194af57345ac91e32ad6e5bfc2ac708b5f5e167fb6d91fc33d7de9272a8b5ae",
                    "size": 278
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:aa4e6846723bfcffe2df90737462b3359a43b84b02afc85f2eabdcc87265794c",
                    "size": 676
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:670e61471cfed3c8bb741059102769026d31c651eaf45af75bc7f45919ac5079",
                    "size": 461
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ad3c125f40e603e38d815bb74ec4a1d1b421e90f617e8a80605a58c31e7d36eb",
                    "size": 15226333
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:487099ccd6b151b62a234557c228e2cc5679062400a3166aba15ebcfe911369c",
                    "size": 466
                }
            ]
        },
        "38-build-20231204": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:f8ed8aabdd3a66dc0870db5965a2a26cdf00e375814960cddb585dbd6253a479",
                "size": 7556
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3d928c985542784e5bc7c6fca298f5b3a4ac1bfec6b17159c10ceee12ce55b6f",
                    "size": 65592571
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bb9e9125d1a94d15454fedd5e84df0adbb403eebd338f3a3bb7dd0857d455e61",
                    "size": 2592227
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4b0c823ad4be967e13700b7ea36d0274f62dfad5e6fb052d391f069550f3b45c",
                    "size": 24268604
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7eb71369589b4454a8f457cb36f2552e93a70cb3eecebe7ee436e5ce5fde6a84",
                    "size": 225783702
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d74e4078daa5d6db0ce2d620b7da0589e7c2ac855ab75b722e9f9b8e396e0ed5",
                    "size": 473572
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8e1b9b16efc0f665a7000f270b9af1223e94ecadda6b81e366afcb86615b9fcd",
                    "size": 1010
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:88be7132dff3a48888776ed46c3d56727937bbca47e4300cf1e766941f01a052",
                    "size": 277
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b5b726edf96bef2f61de3ad78159ed3c0fbc506dfb85415f90d817aa59350a6a",
                    "size": 677
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f48c1985e19f34562783e3c6e3c506510e3d155b352157e6210750ec0f74037f",
                    "size": 461
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a01aa02469427bb56b1a38c60dc65c4dbc8394190738f482f1f990ca5d83072d",
                    "size": 15236515
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:368b5a38e8434d7d073ca301b5e70aa1e9c4ded2373917787534c5ea32d87c15",
                    "size": 467
                }
            ]
        },
        "38-build-20240205": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:e543fd59d8e5bcc33ce8d7dc143e6fe57ecc6b55254999d2ab44ceb16f32fa21",
                "size": 7562
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3d928c985542784e5bc7c6fca298f5b3a4ac1bfec6b17159c10ceee12ce55b6f",
                    "size": 65592571
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:91bfec1f5a7797c0b2358ee1d96e4af2dd13ca25a782f751941f63861310ab63",
                    "size": 2592227
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3bdc430956b05a945bb024174c76e13cbb1f722bac02256eea2ba2748989dcec",
                    "size": 48784152
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0f0506bebf1bfd2041e11e2be78a1b5ad62e5226645ef47e592562924a8d0c1d",
                    "size": 226241483
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a05cec1639aa9dc70ddd659f22accc4f1d6900af4d83b4049988ea9f69b6b39c",
                    "size": 473575
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e34ed3f99b707791b6367efa10d69378e2f25aaa38af7d1b5da87ba61a169689",
                    "size": 1011
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:93cca6e30b8ad623a9d41665ed3b6d4939cfe51c354bdf36c314d3618777043d",
                    "size": 277
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:41dcc55edff1fb1d5f0dfd391f1fc01458f2e805f627d9aa07815b2dbb0b8198",
                    "size": 677
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6181e7f2ae217007869c85aef428df6d65f6ad77258bffff870f535764a378d6",
                    "size": 460
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:52fd93a5a5a2d7b61a9e67e47566041fcca54f4281ef15b5b8c73e13ecdf0c36",
                    "size": 15210399
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:60c662632e6a3d58cdf2a8235db632ea161ebd669e43bf6021424259661b80f8",
                    "size": 466
                }
            ]
        },
        "38-build-20240227": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:eea48a0dc13457671650ae48d637c51aaa029fb57f2213287f5304a64cc349d1",
                "size": 7560
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3aae694a5eee87d89f05e7d069add3611bfac3b1f9488446d9f484e00e268258",
                    "size": 65655494
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a959596924082edfa799128bafb3725cbbbaff1735bff3a18e2530fa3f40911f",
                    "size": 2592233
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b2d440bd27a5625de567075e0fe762e042a2e6048ac4250d1b95036e48134cf4",
                    "size": 38655023
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e28cfc79d1bea0dc753f24603ea064a85f05611f6824d06a4e2c6fe360f57069",
                    "size": 226528739
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bfc9560a04191c0b1e05974b8f878daa54430455dbc13b3bab7c414b08f1d8e8",
                    "size": 473571
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:64347769f50f36376ab908c5c80600f6a7409c8d48880aaf03f30ce46d670d71",
                    "size": 1008
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b55185618671bced84a3f40db84e13ff8036402ddd3a373ed399c05ec9aca931",
                    "size": 276
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ca1a0f949fd966d277e8ac54559890aaf1f40586ed38cd2251809fb900955043",
                    "size": 674
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b96b475b2fee5d9453522951ce6301c0362efcb1025d15fc6796711ba2e6fb4f",
                    "size": 460
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fa594eacff989a259955229727eb961267dbff245e354a8c5efe059668b09930",
                    "size": 15261640
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:75de2eae137f8e1f7cbcb7b0c0dbc49ec8d7f6eed698759d8f0894b7c7d1dc50",
                    "size": 468
                }
            ]
        },
        "38-build-20240304": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:a5254d85ca0de3bb62e8a30d727fdeb81f02efd32af4eb6dbeefc72e2a450d3a",
                "size": 7562
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3aae694a5eee87d89f05e7d069add3611bfac3b1f9488446d9f484e00e268258",
                    "size": 65655494
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:953f1ac2fc695d00b8cb596f3d65fe80f70f5271005525597dca0507b6c0241a",
                    "size": 2592228
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9b13d79b02a136ed18da662852eef9383d30ad41c5d30fdb3c1921bea393862e",
                    "size": 38655068
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:19c9f12ffe707bd1798e044978b8884b2434a602e5e76f85a909549ee14764d5",
                    "size": 226548393
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3dbceebd6f97de98353f0ba6238437790b45bdc083332ebe5fbaa0a96d283a09",
                    "size": 473575
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:00fbb58f64a60f59883f14c6038254756c7c35c451cdf584fc518b712722c291",
                    "size": 1012
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:04aea93dd22d5e071b67ad766ec9facb57f3ebbd5d16f8e8b276091ed5854aad",
                    "size": 278
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:dab2639b751995f8a5c885ea0152e4ebb6fa69e2accb6e31ca54c88963be414b",
                    "size": 679
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:481c6fb71f9d659dcc9dd7a617d53cb2c1516a45ea697ab4753a513ef922dfa4",
                    "size": 461
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f006a81be0ccdfafcd1aa8b50a769572e58c6599cd571a80c5198e98141a8911",
                    "size": 15260710
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:34f43b353310790dd8c098b36cb8f85f94f0f4ec51036a14f22176f6af9a5249",
                    "size": 465
                }
            ]
        },
        "38-build-20240401": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:754d551720a8f92b0ddcdfbfa49a38592643430191ade5af18c85078b5d86dae",
                "size": 7546
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3aae694a5eee87d89f05e7d069add3611bfac3b1f9488446d9f484e00e268258",
                    "size": 65655494
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b779f45ea316a3231c479d69fdb7560e47194490fbf9217210d8a271cc746732",
                    "size": 2592227
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:55605f1089f3b87325f06254c4d7a03eeb71871c57364acaf50b8f40fab2c10f",
                    "size": 43688152
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:34ff44b163eff62c9d558c657a41c4b56ffde46fdb3693e27faa0b0193b3d10c",
                    "size": 226441351
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e64d263f6c53c0eb520510fb0fbf71a332cb670773609e11d97e850059b8c2d6",
                    "size": 473572
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ad1d9af600b3b6fd4c1006aa08787bc8c8f46c116efa3d8b793c04f4c24c4f24",
                    "size": 1012
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a3a47fa3a1545256930e5f618f84f762d43369005a9cda3b597dda27d1d1e1d4",
                    "size": 278
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:35a02201e807e373dd496b80c01b5987887717815a538ffb7fb23ca0b5256cea",
                    "size": 677
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bc4306fda37b5454d8a79d3fac814cae1b4f05a0eefc5a4285a7ac0058447e19",
                    "size": 459
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9c54e229367c301e69c0ca93209c00dd1339a4ac316446f08676efc4013eea53",
                    "size": 15260043
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:aa2b837da28f7028fb5c22060e3c6b9039f035c5769c7aa5253d1ae0c1aa5000",
                    "size": 464
                }
            ]
        },
        "38-build-20240408": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:fdac6168f5ea1f4ecc3b1d1909b2b10f29cbf7e79ec4edb2087f852c1d5dd7bd",
                "size": 7544
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3aae694a5eee87d89f05e7d069add3611bfac3b1f9488446d9f484e00e268258",
                    "size": 65655494
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:98497adddbae4de490fcc1d04edf735aec4a83cbc9ba5af1f1e65fbde562983e",
                    "size": 2592225
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6360d6ec9ad08998c00390ca47a7bd8cc87409fcaf713afd73b689b918b01438",
                    "size": 43774660
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:055af6a5333deae0eff8ae00dac4ea238156b511fe973fabe60f028c580994a2",
                    "size": 226660520
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:01daed6b4313e6915e63f67b4c51191e2e74999bd73c3c6e7a177fdd969e2568",
                    "size": 473572
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2f2510c732d5e8c6d4f2659881c9a3563b54b4a0c18c278a0a1cd35cfdc6c8f2",
                    "size": 1011
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6e9ff13c8e735763b572fac974b254a92ff8ed58829c7c45b30ee881dc470bc9",
                    "size": 278
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d0bb6ea75d932375589b31fb55875c485ea7731e58b798bd4b6d897c59b1fd84",
                    "size": 677
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:47114f532225fca85828e20ee26ed3b91cb32c3702011f7a59618389bb5e5f9c",
                    "size": 461
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1002d8c99ff8e3daf918d7bb14df6f9540ee6de67890e3d96b05423c31cf57e3",
                    "size": 15277211
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f979f41631614e513b770a0ca7ab3375f03eadd40c89e1f13e029ea7c1b315e8",
                    "size": 467
                }
            ]
        },
        "38-build-20240429": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:f402dae7b168b9031a5d4fa9e27c5917a0e53b0efd379b32f4079ae6f18531e7",
                "size": 7544
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3aae694a5eee87d89f05e7d069add3611bfac3b1f9488446d9f484e00e268258",
                    "size": 65655494
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:98497adddbae4de490fcc1d04edf735aec4a83cbc9ba5af1f1e65fbde562983e",
                    "size": 2592225
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6360d6ec9ad08998c00390ca47a7bd8cc87409fcaf713afd73b689b918b01438",
                    "size": 43774660
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:055af6a5333deae0eff8ae00dac4ea238156b511fe973fabe60f028c580994a2",
                    "size": 226660520
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:01daed6b4313e6915e63f67b4c51191e2e74999bd73c3c6e7a177fdd969e2568",
                    "size": 473572
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2f2510c732d5e8c6d4f2659881c9a3563b54b4a0c18c278a0a1cd35cfdc6c8f2",
                    "size": 1011
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6e9ff13c8e735763b572fac974b254a92ff8ed58829c7c45b30ee881dc470bc9",
                    "size": 278
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d0bb6ea75d932375589b31fb55875c485ea7731e58b798bd4b6d897c59b1fd84",
                    "size": 677
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:47114f532225fca85828e20ee26ed3b91cb32c3702011f7a59618389bb5e5f9c",
                    "size": 461
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:706a5467ad5e01c34ead62ff1cb41d5d32f0a5ecb179bee287c28af5a0641467",
                    "size": 15286765
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:865fdf478a2927a5a54a4bcdd1c93e8adc0df908935d7aeb7515810ff3555272",
                    "size": 469
                }
            ]
        },
        "38-run": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:028b6364483b6a06b5785639d5c2d4e42ae400195e5a5c71e84783ce81821361",
                "size": 6785
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3aae694a5eee87d89f05e7d069add3611bfac3b1f9488446d9f484e00e268258",
                    "size": 65655494
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e3a29097b88d916c4c9d4805b3b5006a58f8f232c1035ec25a81757fce450681",
                    "size": 2592221
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b4fe12d3e79f34600efc5ecc27cd450141a6e551a379ebd5833b8b8aa425bcd2",
                    "size": 43774767
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:49bf492858ba01f4e87111272605ed1e297c655e4dfcd99e48f9bd2721786069",
                    "size": 473574
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b9b2a1a7222acfa84d0d257c56a93f843e3803c86dc363c2e3fd13a1d32356a0",
                    "size": 1011
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d5a53a0ba073aea6cca6c67d729e1693383253ae45368d5abe2474624275f679",
                    "size": 277
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:dcc229854562155539218cff0ebf1c5265ef1bd70adc2cab474f6567ff358ec8",
                    "size": 678
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9037230e582ab47d63fb807ca5b6188b4b74053f5a1133ecec9fc1ff4fe40080",
                    "size": 460
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bec42da99f71895dd235dc664b6931a6832cc0789b312d39aef8e509aaeb79e6",
                    "size": 7065463
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5202c9f8f155990b9269f5690536c25ea496bfe9ddb75a2134817504ccb434c6",
                    "size": 469
                }
            ]
        },
        "38-run-20230929": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:a1dbcf6542c2660bc785d965c43c5eea65306ce666e1a807b286694092a6624d",
                "size": 6800
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9523322a2d97b6a26a31c5c19b62d9ec9e3ea7e7ed808d90b225b9c6081ffb13",
                    "size": 67189372
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a6d99b1591f4a2ac8c7f1063b08df11152da017afef86609dedd5fe617e8a699",
                    "size": 2592240
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2cf6a9255a2d6156a2411b3bf5d43d89037cb35e5f3c1ec7132209cecc6b903c",
                    "size": 29150787
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b4847da95c2e5aa31861600e2fc4a9cf64f59b2f56e370410025c1c05dfb7e12",
                    "size": 473571
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a591cbfa2b15eaeda430f6a6bed77257d07189373b36f0ebf75fc2f1173b5012",
                    "size": 1013
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b549fca8a7cd69f6d251512dd03d24d16adb8be178cd0770426f92d649447d13",
                    "size": 280
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ee29642da2366253e21262ef770cf7ca279e58f01dfc0a405d0004bcf7c0b49c",
                    "size": 680
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:01a84a333883d5f0c1b98c0076a78a70ac251c15bc08c6c7f07e21a5bc48d7c6",
                    "size": 461
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0be676b5d83a7a04fca71dfdbdd70eb9e50745fd9b356488a68bb5b33ba3cab8",
                    "size": 7003289
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a820d7ace849b0662e38b50ba537ef5fb3ab171cb8d83b22cb350511766c015c",
                    "size": 470
                }
            ]
        },
        "38-run-20231103": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:805e181f231411b66a2857561a26d16f4b10789de4935e30c37345348f654761",
                "size": 6802
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:994fd3fca5751f6e1c90c062034ff93a6b3f342958e643366a96aae667d543f2",
                    "size": 67303181
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4042a15f73abe729aa6a99e8c875836c7bfd95e4bbf238631ad2978fbe0b3b1f",
                    "size": 2592223
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4466fd6697681c10ae500b288256ffcf0ceb861c4551dac45dec279e44472b4e",
                    "size": 47537530
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ffde60dc30cdf33ca4cbec80345579f0534b61ac5745a5401dd77e75b059c920",
                    "size": 473572
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:63b554587e75e5ab9b303823f9fbd84d71ba6648b638774a3207ea509ad774c3",
                    "size": 1012
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:250a90a9dc885de9b73b2de5149c6206a0f75dd7bec0c2ef9ca8e6a19c600e91",
                    "size": 279
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6e2a5878fd8eed1858580e278041ec339be436a62e9dae2f2b31d0a95b7f2ee3",
                    "size": 677
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e10f13f0a1d66bcf73c81cb6c2a9e17a8eb64685d495dca52cc8980af4d571e1",
                    "size": 461
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:21013939309f018993f7f492583e564c9c0ae07b2621d6ddbca4e6fa5748716b",
                    "size": 7117324
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:463bb6c34285d7d9db126024cf3516e4b6a01708f4cf269180cb4568c22aa3e1",
                    "size": 467
                }
            ]
        },
        "38-run-20231106": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:67d24e6b984e69214193c87ffc40010da861e25dfc462fe197333d581dcd2c87",
                "size": 6794
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:994fd3fca5751f6e1c90c062034ff93a6b3f342958e643366a96aae667d543f2",
                    "size": 67303181
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:cbad3804ca9a1990d11b1dab8512437a6d2207cb2e3b91fdce89923f9fb02fc4",
                    "size": 2592228
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:843af85ee0e2cba3ad15eb602a87dfb85611c8565ba7b219eb7d9f1037b92247",
                    "size": 47537535
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8d6d06253da0cc7ad0444fbe83086513855b925743b7703c46160860956838c0",
                    "size": 473568
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3dc7f18dc8b28fd6e6fc02a41a3d830e1f386fb747a91baecf98d2c2a10be567",
                    "size": 1010
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0fce6bd897ca96240dc822f3e09ac9a893d6aebfc8a8f44490e2ac3cba19db18",
                    "size": 277
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d9458ad05af8c5c75e86f95dfe67b1528149fc6be910daa882f7eb2c7d52a11c",
                    "size": 677
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:297ac5b778550a8c477f9ce1dcf5b586c0241b41f6060f6228ef34c2711bb801",
                    "size": 461
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6e14a4192f20abb6ea0ea6404cf3dcd58760882e778392638afe42bda3434a81",
                    "size": 7117221
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e1549f43441566733f7883ecbbbdb02e95d5f3d816e832be69a12932dc146e29",
                    "size": 466
                }
            ]
        },
        "38-run-20231127": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:daf0238040adc0f1775da2ed882b74348a93c20811ba9a6ca09de3ed331f8a80",
                "size": 6800
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3d928c985542784e5bc7c6fca298f5b3a4ac1bfec6b17159c10ceee12ce55b6f",
                    "size": 65592571
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9ec881267433f57c40f9e61b9cacfc759deeabc358ec1d3ab79e7d3d9352108b",
                    "size": 2592223
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:781f4f5a3dde4c9a61c80922544acac969445bf6bbef57b8b4cde27fa279a5d3",
                    "size": 23224341
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e3c80ac69ae01565561ccd29f02448ac74392b0b5192ebbd68b44539849f16b6",
                    "size": 473572
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:79c681c3b3a541a0d672b6c0d4fcc5580c9a6f6745c2cd3a0781a3d7353b8311",
                    "size": 1010
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4e528eaac518431865ce34b46050da9fd107a9358dc9944df7f312a04d9eb22e",
                    "size": 277
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:575a74a07660a4ba56a0649e03ba939749f1345458b4fe3faefd5a794fa840df",
                    "size": 675
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2134d9bc86b427048cd2f61383ad0ba5ba19558dc6da89578c2eec248ea7736d",
                    "size": 461
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2aeb80d309c1bf29491e70309488e7e3f0c6861fdf18a153904ff9d0f73b02ff",
                    "size": 6964627
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e7c4f78571685e5404c32d686dcc6b1f125a06148e36beef0cff5a655450f2c4",
                    "size": 467
                }
            ]
        },
        "38-run-20231204": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:873ac4f7a039cc777bb7ea284d208b5eb7129fd883c8d5b3abe9c7a0f1dca7ba",
                "size": 6800
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3d928c985542784e5bc7c6fca298f5b3a4ac1bfec6b17159c10ceee12ce55b6f",
                    "size": 65592571
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fa6cb229accf0202ead41553eb23f045d2d0b4b7c654edc4a7703fae1b1fd4f1",
                    "size": 2592228
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:794e2484fc3502b0985c9be83646c613d677fd7bdd2eaac82b87175f45afe192",
                    "size": 24268758
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:26ed8809c1463ea30b9f3e26eafef2451aa7e113497f4b9b8d3ef9b313bce66d",
                    "size": 473572
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f556958f040f66a457d183ace4961e9ab16685e3fffc7799c5791eb17712d4fb",
                    "size": 1012
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0978745a9a8ce87ffc5b13a80bcea5daaafe483a29cc45fd7463f155779e2270",
                    "size": 278
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6b066ba991e828e9f289e27f708122171f5275731ed2b82c4ba73e2748471fc0",
                    "size": 676
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ee6896184ac2908e9a3714c17f90d8c1be8a60382453e1e67fd6d89c29e415bc",
                    "size": 461
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fcecbba9017a193e33406bbb99c5f0cc96b14507505dfea986c477658955b83e",
                    "size": 6973855
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8399e2c9fd029714dd36f0b1faedeb3899ee05e47d2c67330ed17bfba06793bf",
                    "size": 466
                }
            ]
        },
        "38-run-20240205": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:8d1b8c11a2b4f4576ea49c9d359360341d2a4509e635208c4a3697bd2605a0af",
                "size": 6801
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3d928c985542784e5bc7c6fca298f5b3a4ac1bfec6b17159c10ceee12ce55b6f",
                    "size": 65592571
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ad178d72905db2a360115bb6849c8068832e4984036fba003f04068ac6a6bd97",
                    "size": 2592222
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c0c4e6507e8b5bea4db351b8a6e8235876e2ff0673b210ee3e0bdea64763e01f",
                    "size": 48784154
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:13d9bb662b3794aedd8f8aa98c68058a1760a1356d9a3f42f3c63d2c86f83493",
                    "size": 473570
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:60f2e0bf0733ba97b5cc94b41bad01f6ebbec1f3416e566df0a97f774801ce5a",
                    "size": 1008
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1e4c008363977243f758162e1a713e2c92b1ecc41fa5c026da5c93adc75c6e4c",
                    "size": 275
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:52dec7d4914ffbbd75752bfccb0ae75fcd88a831e71b41e00592971eebde608b",
                    "size": 674
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6ca74a7f0011a23ced2243105850369609f2211be0d769bc193ee941b2520a08",
                    "size": 460
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f7748e164667d80371dea93d50dbbfc5182183ef37eb1b23df7aec3c82315294",
                    "size": 7404468
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:cb130ef056629874dc4be60e414d415ddb2aea66bf86078bef5af460418bfb24",
                    "size": 467
                }
            ]
        },
        "38-run-20240227": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:d9339e972de928695cae528bc0f20b7a0d9451c5e7c3e96a0c0099dca64eb9db",
                "size": 6800
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3aae694a5eee87d89f05e7d069add3611bfac3b1f9488446d9f484e00e268258",
                    "size": 65655494
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3e590c6dbdc96b1cdbacfe1edf9c0cd1a8d274ab9f64fcc727a9b8e531dd2cd4",
                    "size": 2592233
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7adb706717b650f823b13f7c6bb4c282be1a52690199e6f455cfb30d5cbca021",
                    "size": 38654943
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:423d419b6640476cb76b200c9f282eeae646a2e6cfecc2031156e13b9dad4b7f",
                    "size": 473575
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8ac9f745039954e9a75bd5b770563cf3125dfa45774358751a883b41f6055e6d",
                    "size": 1012
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f26142fae26d26aef024cc33f49b3ed51f70b996d1d2dd77338eab55f74f6971",
                    "size": 278
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6dc59657604b207e982b92ee10c9209906db18c87aeac61679b4b9713931a9a6",
                    "size": 677
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5996e90f577025eb8a85d74dbbda6775db92ab5af6b03561273305fc0d42d737",
                    "size": 461
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a16686e72c452a3d877a4a22555e051537f2427e5c8e153dfb7cece7a7f30f24",
                    "size": 7026044
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:21c8deac8397f0282fac2ad41144bb8bb1a1fcf9daaafc46727b86d5b622f166",
                    "size": 467
                }
            ]
        },
        "38-run-20240304": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:23b0ce0508c6e99811ff1ba21641ca1dca44aff57343147212f1a5c215dccf12",
                "size": 6802
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3aae694a5eee87d89f05e7d069add3611bfac3b1f9488446d9f484e00e268258",
                    "size": 65655494
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:79b599003222175835e1970954e9519145d402578af3b20e11f3ca2cf50f9fd1",
                    "size": 2592227
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:735b184569da057a3a27ffc4e0458248f8683681c2b5aaf874f8a86e0c6a7e52",
                    "size": 38655023
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:225147945e23054c0b9d4ecc254f42c0cfd7dd6414e8bc13cb2fa054d95600d4",
                    "size": 473574
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:46dfb557ffde70435f342251cdac53f7ba6b7047f858c4fae563553aa7d9deb5",
                    "size": 1010
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5e1edb9a59a184f87f5dad7580e05bfb45f04c855962693b34d0ac28e0794b9a",
                    "size": 277
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f1b94eb18edf2c26967fed53ec8bd49d33c18b0432078cf67640436e7923552c",
                    "size": 677
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:68bb8a514653a6465e96d23a3e1534dafeb20dc7615d5f98386e125d682677ba",
                    "size": 461
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:aa9662faf62b25a333b3484c87c4296b41a07955306b20250f6926d0444c7949",
                    "size": 7025945
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2ed4ed5ed68b9b670ab7a1733991b0986e0a234330a312eff8b1420ebaae1330",
                    "size": 465
                }
            ]
        },
        "38-run-20240401": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:3575e2555cf96cf13e04502bd39220338bf188231d316c4297f6507eb4c05a5a",
                "size": 6787
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3aae694a5eee87d89f05e7d069add3611bfac3b1f9488446d9f484e00e268258",
                    "size": 65655494
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5c8a07cf7e0a6610b389237666844a0c93f0042b105e99fc1128ba49157a7a8a",
                    "size": 2592232
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f6c33e17fe4a960c76b12f34fd78f661a1e818432520307b00c7935866ab0623",
                    "size": 43688134
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a5eaebb4c97c56647af86311d98554cace9891838bee9093423ecf3f101e5b1a",
                    "size": 473578
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ee87f3843998a99a46c9560aa1d631660954eae2d583aca0eb974334f7b297f0",
                    "size": 1010
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a8d38676405c3fa5b42b13ac40a2b44c68d9e5a8b71f40bcafdde8a8a8c17c95",
                    "size": 277
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:556bf3cf41263f53c8916f59c8da3bd38d8d0af02e9f832ca81341fafb49683c",
                    "size": 677
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1ef0f1fe648699e4b93f679558b9d0e31bdd61320e7df39ccf0441adf648998a",
                    "size": 459
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7e37c9b8ae563e709f9bc3e609cb0e5a88b49caf6809b88c9c8e50e8a91d6f87",
                    "size": 7056139
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1f4d5c24d0336e958d041387b931b363db4fce6f5bd15f96915105edaa6ef6c5",
                    "size": 467
                }
            ]
        },
        "38-run-20240408": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:e6c7a2f36d8e27d87040093bdf0a2897170bc838ea7029114339f341b2457e3b",
                "size": 6787
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3aae694a5eee87d89f05e7d069add3611bfac3b1f9488446d9f484e00e268258",
                    "size": 65655494
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e3a29097b88d916c4c9d4805b3b5006a58f8f232c1035ec25a81757fce450681",
                    "size": 2592221
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b4fe12d3e79f34600efc5ecc27cd450141a6e551a379ebd5833b8b8aa425bcd2",
                    "size": 43774767
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:49bf492858ba01f4e87111272605ed1e297c655e4dfcd99e48f9bd2721786069",
                    "size": 473574
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b9b2a1a7222acfa84d0d257c56a93f843e3803c86dc363c2e3fd13a1d32356a0",
                    "size": 1011
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d5a53a0ba073aea6cca6c67d729e1693383253ae45368d5abe2474624275f679",
                    "size": 277
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:dcc229854562155539218cff0ebf1c5265ef1bd70adc2cab474f6567ff358ec8",
                    "size": 678
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9037230e582ab47d63fb807ca5b6188b4b74053f5a1133ecec9fc1ff4fe40080",
                    "size": 460
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:75b8610993f82a8a4b4bdc964fec23a049a135952c538344264ea2d6fa8ac2da",
                    "size": 7058838
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5a6aa34334678b7b749ef9d014967339f76e4a7650ee3a347ac884e0bf346ba5",
                    "size": 467
                }
            ]
        },
        "38-run-20240429": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:028b6364483b6a06b5785639d5c2d4e42ae400195e5a5c71e84783ce81821361",
                "size": 6785
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3aae694a5eee87d89f05e7d069add3611bfac3b1f9488446d9f484e00e268258",
                    "size": 65655494
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e3a29097b88d916c4c9d4805b3b5006a58f8f232c1035ec25a81757fce450681",
                    "size": 2592221
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b4fe12d3e79f34600efc5ecc27cd450141a6e551a379ebd5833b8b8aa425bcd2",
                    "size": 43774767
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:49bf492858ba01f4e87111272605ed1e297c655e4dfcd99e48f9bd2721786069",
                    "size": 473574
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b9b2a1a7222acfa84d0d257c56a93f843e3803c86dc363c2e3fd13a1d32356a0",
                    "size": 1011
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d5a53a0ba073aea6cca6c67d729e1693383253ae45368d5abe2474624275f679",
                    "size": 277
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:dcc229854562155539218cff0ebf1c5265ef1bd70adc2cab474f6567ff358ec8",
                    "size": 678
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9037230e582ab47d63fb807ca5b6188b4b74053f5a1133ecec9fc1ff4fe40080",
                    "size": 460
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bec42da99f71895dd235dc664b6931a6832cc0789b312d39aef8e509aaeb79e6",
                    "size": 7065463
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5202c9f8f155990b9269f5690536c25ea496bfe9ddb75a2134817504ccb434c6",
                    "size": 469
                }
            ]
        },
        "build": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:3f30e5ac7a1ed94a92c9f861cc823234a7289c33ec5e17576336d2dd86d746c0",
                "size": 7542
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:69fff380046369a47fbc74b0aa03f61fb243f73dc5795e3ecf69c6577ee84908",
                    "size": 63118399
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:82317edea666666d707ace0b03aad8572e29a838bb12b4c4dfd016b2ab4ce736",
                    "size": 2592233
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c2e5455188b6eb0cff89590382e7b0ecb02ea2b714d55bba2fa7dd06af5aec88",
                    "size": 23448711
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d715dbac72a798e8d0d0ffba83669baf0bbc4da2276a5a381ac22d652d5e13d9",
                    "size": 217029439
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7ff7cea49a20cad0aebae3fa3c701db7c3491385aea25f0e543cc59538fa5ee4",
                    "size": 473573
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d5a769b6122b0d526950c3579d87d5664c827ecd65688a38c75087c4f80db959",
                    "size": 1012
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:49c4a2084afc1da3b08c57198b9d7982cb4ad987197a29eb1c0b905a29331a4a",
                    "size": 277
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4baaeb452bcc05b92b082e0b84e390a65c6e08ed28ef13295f9b16ba167a9c10",
                    "size": 679
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8cba45c189962bae1d2ff247ddff62c95a79794bffefeb6283787d28c6b320ff",
                    "size": 462
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b8a3596546c565a35b5006d65c5ac7b1819ec696fcb88b1ada790d4c710871c1",
                    "size": 14184681
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c7ce7e283368359da734e89615c08cebaa64b8b0e016f8fa452d8749369f525b",
                    "size": 466
                }
            ]
        },
        "build-20230929": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:ecc99c85fc5ba85a06b809d6fc4bcb7553c5ea2c86affdff47c0ae487efb8bc8",
                "size": 7562
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ea792534a213e62c62a1c4772dfcf53eaf82f7635dbc9f71bb0a60a91226d118",
                    "size": 64705637
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:57e197807ba0a519d1edb0779ce76a06124dbef05029811c4cd40f0584de6bac",
                    "size": 2592232
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:471a3338d976e468e7f618dd22fbdde0e2373e61be9ba9fe8ba4b2e72baecef0",
                    "size": 28511392
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b83979765e4c0e1796530bd00bc646610b38f365257e80b2085b5af058f24a4c",
                    "size": 216664890
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:81879a19910e1a496d0c411ff2df904ee88a6408bea71d1d609271432a4191b6",
                    "size": 473570
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9e800c1f80f8401c189157dd7d7e4ebcd8f2e0376a3d21f7191ddb79b8794971",
                    "size": 1013
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e14e21ec6264d33a865243f3f009144460bb90639c04fc3afa6c46a08c027046",
                    "size": 281
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:af714c407ccba3319ab928f255b9ca302ccde44746e669d35f56b6cfa5c7882a",
                    "size": 681
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2e42947fed8288eb956d961238c22a61cd9ce2ca22b0e86c0190dcfeef46faec",
                    "size": 460
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:92ac5c0ed2e9ab77a59f0f03b00835bffd79ebcb41db8251a6039f2103595d3a",
                    "size": 14143971
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1115133676ff1d8dcec1d89ea095836ad1fa3d91a75e752062a248e7bb9da9dc",
                    "size": 469
                }
            ]
        },
        "build-20231103": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:a09fe3b50567add59eecb81f0c2b8290536335028d33aa672ff4be68ac7de9e2",
                "size": 7559
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9d8d1f79d667e0d33c19dcab3e1da521941331416c217cc74601d8d9f6eb34ab",
                    "size": 64844849
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0770b89f72b418017bafd34c1d5552048c5eed91faa033af7187c646a6592cf9",
                    "size": 2592229
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:29d309c8b3459e8477ca5e914be65c3e4e83ef21695a692f92c7b52fc198f2eb",
                    "size": 44064224
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a28acef6ee54c426ff17c9667f83540ef5cb43fdc3e3d664c847608b783be445",
                    "size": 216980025
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4c184b301d67b652578996acdc883d362ba56ee1d7961845e82a445fc8a3dd3e",
                    "size": 473568
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e88619da9641c1a99919b4fe52c48a15e4aa52d56e55d000d918576825ce0b6f",
                    "size": 1011
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:65ec30ea4e6e929ba2a9cfc9ea06dbd4c70137c62ff0ce8c31ba525ad3be1884",
                    "size": 277
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0f7ff1ffd46bd5431d360e8fcb55926935c214fc26015f8905538a14da17b14b",
                    "size": 676
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f83df3c49a1eebf8dbcb319e217aac00df4952838803b3ff962c7dd7957de30b",
                    "size": 462
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:52f706a1757630a41b2b42a68c4519d2679aa5562d2e972d851bb2c2198342a3",
                    "size": 14174655
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8d00344518b8975ce4dcaa92b7cf98204f82e478aa9f762860eecdc0707ee5f0",
                    "size": 466
                }
            ]
        },
        "build-20231106": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:0faf7fc9c7fafc4eb5c1f9c3fe0e6b382ba59f3c208ef734c46350765fbf3d21",
                "size": 7560
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9d8d1f79d667e0d33c19dcab3e1da521941331416c217cc74601d8d9f6eb34ab",
                    "size": 64844849
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:17ba3eac7c1f9ce9e04f05070a25561c9868bdcef663e68aa5ac8bd96c25b520",
                    "size": 2592233
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:285657690fbde02ba48611d3dd000f47b7c396651e283097f742181b60efba35",
                    "size": 44064946
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4e95e27869fa54cdc0812a839fe46f625b70ba99ce93d7f659480e6a4e1592d6",
                    "size": 216991202
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:dd992c92a0f592cad50a4aea59a1e3abbfdfc50f36449abe8be63813ecdbd3cb",
                    "size": 473574
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8d87a781fcef58ffe8d62d3cf860c226fb6bd64f59da4ded4c94850b90f1c4a6",
                    "size": 1012
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f6cbc2eb8a9998e5abebb20f735e54fa5fe6fe98f4ebe7936eb3ba03c3f0ded0",
                    "size": 279
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8783360b72f39fa722e56e53f2e8425e426bd937db8f07668131a09545834c4d",
                    "size": 677
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:dba5c227294800c799660501956b8746867066f6c53dda172235fc9aedc674c4",
                    "size": 462
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2460e279f884063c1a9e308db833c9dacd2dde9b98aa93b936043533e920b266",
                    "size": 14177170
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0d4f1cebeb40ab7c25891e99d5e190ee8e2bb3bcfe19d1371d15fd3559d4e171",
                    "size": 468
                }
            ]
        },
        "build-20231127": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:be891eb782071825b3360e9b9941aebb5887f425b54ac206612bec00d02a4a82",
                "size": 7560
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:69fff380046369a47fbc74b0aa03f61fb243f73dc5795e3ecf69c6577ee84908",
                    "size": 63118399
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6641d4e23883de336ed449229e82843e5c72e3f1c81c8dd83135346960efdc5a",
                    "size": 2592224
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1b1e517fb0275fc4621249537f0da6236e1cd69bf862d820c876333462493f3f",
                    "size": 22318515
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:165564d821c1037960b170fea0079cf103fda6666513335e98b6968d8c3b8949",
                    "size": 217051070
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:01e9e8459499b3bc80b1b59e093b711165e883a6b0b34cecc147192d6647a93e",
                    "size": 473574
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:74619d00050fd0824b99ae241a8517f158d42b3343465fa6a78cafb4d6e70522",
                    "size": 1012
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:49b562c66c266d31dfe6f77e08fbf606c721fe74fe3756a0fc70572d0a9e2ae7",
                    "size": 277
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:eecd0d10f4b58b52bb36ae388d9d633ae650558ff64874899f7de0e019094c26",
                    "size": 677
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0f119eeaa7b1d1ee4109e4bb3f17232a250013fca828e92e654cb5ddb16da097",
                    "size": 462
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:64562e8ea53fc4ac173899ff5486353dc362ab731b8fc51bfb41b119f81c1954",
                    "size": 14196960
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:702b1a75c6c95c26a91a158fae023f289b505e40eb1ab6315e81991213599ec1",
                    "size": 468
                }
            ]
        },
        "build-20231204": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:99b3aee7d15f49913753baad8d516a6025eadc37957e099762903c9cf8307e6c",
                "size": 7561
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:69fff380046369a47fbc74b0aa03f61fb243f73dc5795e3ecf69c6577ee84908",
                    "size": 63118399
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f0ca99f7b063cce65d52273a4f2101d346418bdd8a7352f4af9785e2ba52c05e",
                    "size": 2592224
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d3ef5f06a980545479bdc090e802b2a72a2c93d49fecdc47c50cc8357a279eb5",
                    "size": 23448791
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0e6eee1f98642a0b9ea66873f6f6bbc955484317743fa4c8d53660f136d5bb83",
                    "size": 217028879
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3e2ff8beebba14a582e830769648b12ea0b2f4a228d63c45d1aa4f46afaf0066",
                    "size": 473573
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4e458a328d96b94763f7d9f7f65c86f99b34e9b495422a2c95974a479df994b4",
                    "size": 1013
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2959fa0cc7c12e351b42c74a818d4f9aa5cb261407867e24a6ebc87062ec7a0e",
                    "size": 278
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:673c09069e4697b12af04dc085dd22f9b86c51024bbdf19a4f969cc74a67f80d",
                    "size": 679
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:19ce9cb7ae33b72478454483374a2eda66bc4f88d8f7b9fab48c46f5622433be",
                    "size": 461
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d3836afe1a67b5c923d07b657f2ad38faca4b0d40a4620b8a6ba6cc5586f5cb6",
                    "size": 14184583
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0d0fe98f8d7bc6ec247e03e0961ce3f04f8a299182aa24ee049f0310900146c1",
                    "size": 466
                }
            ]
        },
        "build-20240205": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:e0fbc52f059abd9cfe0d4a11b5c9fecd134d212d7ff109165ccff651c264e6a9",
                "size": 7559
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:69fff380046369a47fbc74b0aa03f61fb243f73dc5795e3ecf69c6577ee84908",
                    "size": 63118399
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:af78cc0520f170b906a82f421a37356d2c269781502c5f7d2c396abdfa55d6a9",
                    "size": 2592222
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7edbd9813867cb3dddc51da4d40538bd9695d5b483b8ed59539b24b19c133b4e",
                    "size": 23448737
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:44dc7c873245302e133bf36d8149b48643b19afe9a7540a40abe1eae736eaed8",
                    "size": 217029550
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4dc8c6e0f74fad71d0a2e17368a0c25cccb51945f997463748b8def1421f4f81",
                    "size": 473575
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4bc00a878dab5ef147d98e03eb2e1a5a19985e5e5fdcd18ff8defac4938695b5",
                    "size": 1012
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fb87ee75d18626f6429938563bfa6b76bda1ac557019c8354f99cc04c16fb1d0",
                    "size": 278
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e36e3c571cd31032afd2e63729a6a6885268fbecb1a32d4ab477e88b760c6925",
                    "size": 677
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:75fc38abf14743c0cb98e30147fdaf527dc87c34a8cd91db118b48425c25a493",
                    "size": 461
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:59ef309f55d771568c5e0390359ea96f28e63e62a2d44d2afce553fb8ad08abe",
                    "size": 14184469
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e9b00f9455a7cefe8c1b186acc6e22258c416ed43eabe6413acbda3722227094",
                    "size": 467
                }
            ]
        },
        "build-20240227": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:d4a5fd7ac9c4ed47512597fec3f8330587e32ad641c23165d0bdf0f0ac2bf3d7",
                "size": 7561
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:69fff380046369a47fbc74b0aa03f61fb243f73dc5795e3ecf69c6577ee84908",
                    "size": 63118399
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:65764d35c6ba7bc01cd8c1c7c80dedd0fba41e8aed4fe20f32b8104e40811b27",
                    "size": 2592230
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ccb26de59532c7a3ca4e330f6259f0a22d5502c63fce64953cfb835da2a89232",
                    "size": 23448765
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:dbffb8cd0d199db9da89c0a8f6be633d403ae9577895ef76ed8559e0e6a2fce6",
                    "size": 217030397
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f2cdbf2b50a12d0c904c51a1aa6a78d769e31ab23e681213a8dcd625845a43fa",
                    "size": 473575
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:caf29b48f9a19f9f082026316d26fb42e73b1f7a2585ff1f86457c794c8ca68d",
                    "size": 1012
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:821dddb4fbe51867593b530bacd209ea5cec4104a56beb6362389970d19aaa68",
                    "size": 278
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a0fa218cb0068ba037fef0d258fb86dfbfed2c4590d7b39e86733b5c8b69f61b",
                    "size": 679
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9d68feee9a64aaf2316e4f6f65cdc6fbf9e80169d4bf9cd0152c507a525b3155",
                    "size": 460
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:471f163f1849870784876371cc7a7b793b8e001cbe190346afbab71c7dcd1405",
                    "size": 14184974
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7a131c5d5f20c3a57414728de464611b31b3a92dc0f064f48578cf07c52aed01",
                    "size": 467
                }
            ]
        },
        "build-20240304": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:23512eec154c319f49659d57f67d75885fe1b274e2df97c40e8053e355ef3e54",
                "size": 7561
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:69fff380046369a47fbc74b0aa03f61fb243f73dc5795e3ecf69c6577ee84908",
                    "size": 63118399
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:365c152eab29768a6002cd30191cfe30aa5a9c7670afb3dd05e5568d60598b53",
                    "size": 2592229
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9cfac25b66436aaad9254043374a8a0bce94c1fcc73328f0009e4c633a489dab",
                    "size": 23448738
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:eec58c8baedb56f03697759c56cc8b52846aa6b359079d478ffe547bd11683f2",
                    "size": 217029920
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d5ea14a5b029f6e9168ba600f7829994ee94710831ae531cc8575103cb5f9076",
                    "size": 473576
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7b5e5aded2a12ddea2c899e597f6b276bdbb070022f582eb5ffef5eab6706f4c",
                    "size": 1012
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2fdfe10b79cf925c4a4f205beee5164056995aa8d5d10cae49aeae14093d612d",
                    "size": 278
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:563ad2bf80f0e61e8048e26e2680eceb622c9b84a0e9b242dc26a7272ef9ee62",
                    "size": 677
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:87d42fc86fb1bef824e1ec397f2adeb648ebde6cb39d75fa5d79da952fead6a4",
                    "size": 461
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3382b0f36243706e5090913ead9f748df9850f3a8640e802178dc8db6ad7b2e3",
                    "size": 14185070
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b04888f5e5409cdd6f6e3450d9c48e117a00f76964e6b29c6464683258281589",
                    "size": 468
                }
            ]
        },
        "build-20240401": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:d3e880c742f4602d9e7bc0df8aa119e9b3055292a48d0ad9cd6a23836a90eb28",
                "size": 7544
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:69fff380046369a47fbc74b0aa03f61fb243f73dc5795e3ecf69c6577ee84908",
                    "size": 63118399
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d3a4176e53d7e5697395953f42ef76b08d9fef8fe5a662a442cd4f13740c7a1d",
                    "size": 2592234
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b1d05a709ad59f905b2bb738079267053a09a0f4f535e32192bcd83e0dce163c",
                    "size": 23448641
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3f3f5fce4a1b94b586b0523b225e6b5436e9dd40567f898aaaffd4c2302a2399",
                    "size": 217029391
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:de3c36bd181e84497d428d49b10abc3694cd9a0c75ec31064623d54cb4f8c211",
                    "size": 473577
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:565296760a52acc955f0523e8e8213020ff97bec4df095452a9633f053cb710d",
                    "size": 1013
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bf3fbff6d013e83413ee8ed775faa0f5e3350e9b987d24b28cb8715ea67d31ed",
                    "size": 278
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4363ad41c733c6b3e9c7a4610329a637d3d876504b93320bb9b4612bba294335",
                    "size": 678
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:38693fb89d5d2d6143564a7b4bd2d1c7da21077550cbe4d5e8a7ec5096625ff1",
                    "size": 462
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:50b9705b259416d3facecc57b9eef8fb462f73f287ec4b3d6993ce0e86683976",
                    "size": 14184596
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:617c4ec85c8244460bbe3bd75b56fb374cd167d4cffe310acdc1d8c7078251e0",
                    "size": 466
                }
            ]
        },
        "build-20240408": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:9bcd5e065a963cfe331a0693e508c6bf3d467bb19c28968dc4a88680caca961e",
                "size": 7546
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:69fff380046369a47fbc74b0aa03f61fb243f73dc5795e3ecf69c6577ee84908",
                    "size": 63118399
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7e54c1365f15bf88b17ba38f79d2a428ac06b2fadf6f6c91f27bb25c858dbc60",
                    "size": 2592231
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:017b908d94c1c349a53970523ee7a139bef37f34ad362e03d6bec2d726504a0d",
                    "size": 23448703
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1b5c50d01e785c4728ab89718fa8aaa45a81c0af2408ac0cc79f3ee163c253bd",
                    "size": 217028541
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d83e2fae00f6ab84a73baecccee1b9773d59ae4b450a12e360a5effca4944ac4",
                    "size": 473576
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fadda5faf2fcc02b62f25d0f9c548bc0d5c1abdeda6da2328fc79ddb5b8b91ca",
                    "size": 1011
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e1e9b66fa7cafdd2423279eb1c13f4052734fd9472c334ca49bfa60216bfccc8",
                    "size": 279
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4cbd57e7f4360c9cbeecd7408e549686853d4c97c491b59f4d07d320805ce98a",
                    "size": 679
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a4759f7eafc183e7e416b2fb6e564ecd7cf14425e5e7ccad33b50b3ea539f38e",
                    "size": 461
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5054766872814bd9ddd15e31cfe6005ba9b012b3451c6135c92547fe32057854",
                    "size": 14184723
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:08aac2cbacfaa7515ff025f78a1cb5e8ba814473f7ef9c5e78ac015aec5c2e4a",
                    "size": 468
                }
            ]
        },
        "build-20240429": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:3f30e5ac7a1ed94a92c9f861cc823234a7289c33ec5e17576336d2dd86d746c0",
                "size": 7542
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:69fff380046369a47fbc74b0aa03f61fb243f73dc5795e3ecf69c6577ee84908",
                    "size": 63118399
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:82317edea666666d707ace0b03aad8572e29a838bb12b4c4dfd016b2ab4ce736",
                    "size": 2592233
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c2e5455188b6eb0cff89590382e7b0ecb02ea2b714d55bba2fa7dd06af5aec88",
                    "size": 23448711
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d715dbac72a798e8d0d0ffba83669baf0bbc4da2276a5a381ac22d652d5e13d9",
                    "size": 217029439
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7ff7cea49a20cad0aebae3fa3c701db7c3491385aea25f0e543cc59538fa5ee4",
                    "size": 473573
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d5a769b6122b0d526950c3579d87d5664c827ecd65688a38c75087c4f80db959",
                    "size": 1012
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:49c4a2084afc1da3b08c57198b9d7982cb4ad987197a29eb1c0b905a29331a4a",
                    "size": 277
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4baaeb452bcc05b92b082e0b84e390a65c6e08ed28ef13295f9b16ba167a9c10",
                    "size": 679
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8cba45c189962bae1d2ff247ddff62c95a79794bffefeb6283787d28c6b320ff",
                    "size": 462
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b8a3596546c565a35b5006d65c5ac7b1819ec696fcb88b1ada790d4c710871c1",
                    "size": 14184681
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c7ce7e283368359da734e89615c08cebaa64b8b0e016f8fa452d8749369f525b",
                    "size": 466
                }
            ]
        },
        "latest": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:446423e4a663df9e126411abd0bc036e3fb97a845722fe1b78c42d6b4a3e1518",
                "size": 6786
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:69fff380046369a47fbc74b0aa03f61fb243f73dc5795e3ecf69c6577ee84908",
                    "size": 63118399
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d67deff5c71a351663d4faf25c3b38f412142a31bca7a8d888c8821bfe5e18e9",
                    "size": 2592229
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:aef089e78d846edbce27f2669c47ec3fcef142e589e1867ef5908636b93f70a1",
                    "size": 23448814
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d2e3aa275cbb3a947522d3ea6580677ee9aa12d44c091352980066a1fb89bef8",
                    "size": 473573
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5f9e31015a5229413246198fe29fd337da9e65c8a8af3238c1f8824969f6e872",
                    "size": 1012
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3a3a2d6852cd0e1051942f064efb1ca5ed52209ef47cd0bf05a7e8752026738c",
                    "size": 278
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c3c8080aaea2aac7e2ff9499b2a0acda4cb7e625ee3cded157d534b54c647108",
                    "size": 678
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1e138be9b56c798718197323eafa69ddc869347ebd57ddc632dd70c020d34717",
                    "size": 462
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d537c6b0b2da4aaddeb1847e2edae9d037513a9590be529e9576078bd7d08504",
                    "size": 6663451
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c1526bc22c70d45cb4f2d11a06aa85fe110c675fceb404d9131388055cc3e980",
                    "size": 468
                }
            ]
        },
        "latest-20230929": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:425f798c637e8499488abc4a9dafc8796326ccbfb4e722ad4882d2db2c8ecd87",
                "size": 6802
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ea792534a213e62c62a1c4772dfcf53eaf82f7635dbc9f71bb0a60a91226d118",
                    "size": 64705637
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:57e197807ba0a519d1edb0779ce76a06124dbef05029811c4cd40f0584de6bac",
                    "size": 2592232
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:471a3338d976e468e7f618dd22fbdde0e2373e61be9ba9fe8ba4b2e72baecef0",
                    "size": 28511392
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:43acb285765a1566a09368e26f802363c73729a1ae513cb100c40d7d5f2c9fd4",
                    "size": 473571
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1f7a541e39d90075887bbdb2cc816aabc30dbffcf6b53f81374d58c099208d3a",
                    "size": 1015
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f64cf4e6488b8740244403e8dfeecf1fd1eca6cee27302b8246883ac41a1084b",
                    "size": 281
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:455b8b17e8e1b86358879c1c85bb769d1d32ef5a39654a9da1ca47fe376a9941",
                    "size": 681
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:79974a50afa759f12e48dd7814fb83e5849ad292c42e28177d22c79b13419d23",
                    "size": 461
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a75d744ddb8d3ce956b7f4327f72717037514cb942025a76c979275f4800ab45",
                    "size": 6745116
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:079ed7ac1e7c007b5b2b48e9eb49602cc337b13652183ae095a5b4c8fc5ce8e8",
                    "size": 469
                }
            ]
        },
        "latest-20231103": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:cf72bce69d27a2358bdd348f02dddfb3dacf1e8390539582fefdc24eb01b2237",
                "size": 6797
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9d8d1f79d667e0d33c19dcab3e1da521941331416c217cc74601d8d9f6eb34ab",
                    "size": 64844849
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:70f1454c069b387e5af8b9d91b5470e7c4785b9a3290f7113ad42e664f16f534",
                    "size": 2592223
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d76a558193cb7b66b0700ad5870a13652edf878e9142a0d74f9a71180fa098d3",
                    "size": 44064717
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6f396e4d4a3dac8410ab225cbad45fb13592e944fdf1ab97a953ead54f0fb00d",
                    "size": 473572
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:12c35de3a810ce75e005471dd252f007b4ee65305ff26ddc28b8dfa744f9b86f",
                    "size": 1012
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:476049291d6250253e43958e82448d6c862427743c148732b2a832f70c372a56",
                    "size": 278
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8e0ba4f7e5a572e065f592740afcf5c1f8313b9813191abe3a2b5fd75ccdd00e",
                    "size": 677
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d6b9fe800ceade297a03f9af34ae2921bb7a789025c1dcfcb5b389739c04d457",
                    "size": 462
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2d3832d1ab31b215e5761831765681db33ceff54edbe8978ace82e7667976b52",
                    "size": 6852365
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c10528dea3de7c6fd49674e8553d4cd40f8dba16a2911a1ac6a99b5acf45e8af",
                    "size": 467
                }
            ]
        },
        "latest-20231106": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:0cd6f8c7fa75f4e2f7d2be0ae4b14e5c66fda33b6c8b8eaa96f74867e9b3e0eb",
                "size": 6801
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9d8d1f79d667e0d33c19dcab3e1da521941331416c217cc74601d8d9f6eb34ab",
                    "size": 64844849
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:03e4b9d169336e58479c799e52d209343f4fd63f113b03b9cc3778d78eefc36f",
                    "size": 2592228
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9ebd0b84befc3bef3f3a1a315ae5e7ec38574027144908174718797f0a00360c",
                    "size": 44065020
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4d11386853aeab8cd5baa963e4328bffa12cd29a1ce5240ad9607cc9c3e875fa",
                    "size": 473574
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7331c59cbf560592c7caacaec5a5b0e7c1412d0ee6c53af4a6afd0b75120350c",
                    "size": 1012
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:01cc8bad0eb150412ebd78b17a1ec8ddb84bf7bfda9878c71e39cec3d021ee7a",
                    "size": 278
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:204195aa087948caf7654cea0a3a5700bce5edb30a573214210d4567dfefe883",
                    "size": 677
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c45bba7cbbc35ad8b4c7416a9df0446d0594c82b7244266706a7a42cfd423cda",
                    "size": 462
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:883beea72baf754c5e02866d6409d567ab7ac97ceb43b3f033acf2e4d67ff705",
                    "size": 6851959
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d392242678b9e44bb982d028b0c35b2f9cd8a313fdb199bd7667ee3d4afb07bb",
                    "size": 467
                }
            ]
        },
        "latest-20231127": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:fbd506194b56080b3cd1daa5fce5fa7821f6993bf80dcfdeeaab71feefa9b759",
                "size": 6801
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:69fff380046369a47fbc74b0aa03f61fb243f73dc5795e3ecf69c6577ee84908",
                    "size": 63118399
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0bb5eada9fb8c922ecc9f8444aaa0ee8a62fcac70ee74abc4710b2495f0bfd08",
                    "size": 2592228
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3ab8b31915862687dcc837ff941a87caf4c07e9f37527c8ff82b84c62d432e58",
                    "size": 22318509
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:491f82e7458e6e17bae05aa839d6b366e87513662f4340abcac0a9696a7480c0",
                    "size": 473573
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:744368413ff21e9a4e526bd1640cb20d58d0ac97385af7363e6ccfaa0a24b050",
                    "size": 1010
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d600c7ca91fb3e6cda2851db48eb14cc780b01a3eb28cb3b5cc1c157b30e5ce8",
                    "size": 278
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b803570392d88303afd7a2018b05dbf63c3295a143048a2729f5436e4f82f62e",
                    "size": 676
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c82c00cdd78937eb219600038c3a9ba8501aa8ae7b114cd8e577f8fe1107a36c",
                    "size": 462
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:390faaab281141853f012813dd071904a46b1de81f958bf38e69808b0eeff12d",
                    "size": 6664220
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4adc356c69b028295625f293b1d0c5d7fa703bee6cc5aa5b072a86d01e0ce930",
                    "size": 466
                }
            ]
        },
        "latest-20231204": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:aadcf5971f3dcc20442bd363e57344117716db95c42af7d63c53f39f81fe4dd3",
                "size": 6797
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:69fff380046369a47fbc74b0aa03f61fb243f73dc5795e3ecf69c6577ee84908",
                    "size": 63118399
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d33718b133be58c12c588d020799740b8f5d0e1659f4305bd3a42e0be1ca53e9",
                    "size": 2592227
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:638dc3ba02ae0d436831ec2e65f80cf3a0df85f54b4dd0e7ef6c930f2c9ab6a9",
                    "size": 23448833
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:320c005249b51b04b58caf58affd18499aee26124689ea955f510182122cfab7",
                    "size": 473569
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7d3113c0c18b1dea309c42932b22901908926108a8103cdab78170405c7a600b",
                    "size": 1013
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ac6ed7c321ff834e5966003c322a533aea0543816c96955876c3ab5646e3079f",
                    "size": 278
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:297b2ba3b641a48b1e90733cb70836ce9c195ca3803cf200e37417506cf0bb66",
                    "size": 678
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1f73b516ad766efd99f0fe8db17e4e328b2f6accabc971ecfa3d27b53c981a71",
                    "size": 461
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:88a6f556227627ae13f8f1e81bfd7875459522e6b16f89af496e878e77b21b18",
                    "size": 6663642
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:56d1f6253cfba1bbba8e19b05b5bd006edaabcd4770a960a46ea68b10e0fdde9",
                    "size": 468
                }
            ]
        },
        "latest-20240227": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:9dff4750c0efb91aedb381e864ae043d4598609b81841ac905ecf8569abe6fa3",
                "size": 6798
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:69fff380046369a47fbc74b0aa03f61fb243f73dc5795e3ecf69c6577ee84908",
                    "size": 63118399
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0c9cb203b87166e0d09b81a8d1f5b49ea5bb80d37799c1ddd6d0f58f482ba0ca",
                    "size": 2592228
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:cd15d660a3890fbc117644cc7e00384e54cf47a86db50fb85d3e3924a3b6e0f7",
                    "size": 23448836
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:69feda61e8a6a07d2f8173016c73ff91210e0484140825e75e597b45142b7ae1",
                    "size": 473570
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ce20a220ec40b0412743b54d0120c434710d00f3b54a54502308b76efc9dd983",
                    "size": 1012
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d47f351240c88d3748188f2ef0e0b48f6e891509bebda6f18393ad51c6305e70",
                    "size": 278
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fe1a2b8c0123677dd17cbf5897edd521c063917ffff70729a2e1211219421c57",
                    "size": 678
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f0bc84079738c7cb444a751732c831109078ebd828f39565c765bfc72f1e32d9",
                    "size": 462
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8c21ecec21affc35aa8a5227f35d93fe436894197c56e4bd6f855d4985f9db11",
                    "size": 6663444
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fa658dab08e5b203e9702c9231a43d3c58d202762f6b3935d386a575152602d7",
                    "size": 468
                }
            ]
        },
        "latest-20240304": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:b236014d0b8e0954b6a9dc346f2932d5ed26b29607de5eb3066a3b50da753e9c",
                "size": 6798
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:69fff380046369a47fbc74b0aa03f61fb243f73dc5795e3ecf69c6577ee84908",
                    "size": 63118399
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1838771b8ec87483e105e112d8024f9e9029a53bae9d1ef0c34c061003181dfb",
                    "size": 2592227
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9086ea61d95c1ab147c8270e5a9b1830e96d367d41663c7617ebb4b06043f2fa",
                    "size": 23448747
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e665d30b7799b95a1fefa213155d46f59fff56b68586082bf191741035863ca9",
                    "size": 473573
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:eca08035356a02b31523d0089c92c641151221e1163f6f69259640069fc93325",
                    "size": 1011
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1dbbb8991fb8ec274be4b21cf0c12fa2b72fea515b37daf96cee76915bf6a3ad",
                    "size": 278
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0a012ba1f4d0af3a86a253d6ee08223c9446a2cf6250bdab21f839ebc7d16354",
                    "size": 677
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:30495c77303f15af04a882c71d278cea6699924428092ff409840f02e3455bec",
                    "size": 460
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e7ab56aa194f4dc7a68895e415de89ccf0160ea0b426b690a95a095a6f7d4a80",
                    "size": 6663488
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:23a366fe4d2a5894b996fe60721a7ea0557042186d1979ab9f7a18c5e5fee741",
                    "size": 467
                }
            ]
        },
        "latest-20240401": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:7b10dd0d6f10c2e8e309549b112fe430a55f33cc7c33275c8ab91541930fdcee",
                "size": 6786
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:69fff380046369a47fbc74b0aa03f61fb243f73dc5795e3ecf69c6577ee84908",
                    "size": 63118399
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:326b20e912351ee1cd36eb4928f89de7420c89cff4fe26170cede56d5b53defb",
                    "size": 2592233
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f39d9f2f25dbd3d6ef3ad45ac705c80b09499c0886ce65119c20d6fc0873f021",
                    "size": 23448664
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:149aacaa82b179c640f96dd6fa65cb2df58f00055c9a94c3886a4906672573a7",
                    "size": 473577
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e7514cd29789812983b2a947f44fce3f7bcce347440875a08883bcd9b53e739f",
                    "size": 1012
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4b84039a432480f5ffe416931d3e349c4318c99332a368f259bac7fd40b1d2c5",
                    "size": 278
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:85dfe6b177a514d70942f90882fe77a64a24af14ef6f9f8be9f6e0ac8271c2d2",
                    "size": 679
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:75ac5a1c7aa9ff94b80b26d3cff3e1a67892548f05c0ca35405a77c861a15ab8",
                    "size": 462
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5e0ff124a6ae6ab036fba31dd61f281b5879c6812593ba0a0b7a0393e1a2619b",
                    "size": 6663618
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6704808fc482f83132cc07606068d73ae29e37a6aca08a65beaf66e0bc818072",
                    "size": 466
                }
            ]
        },
        "latest-20240408": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:21c69c09c581cfae914b06ae8ea9aedf832bdfd087b409851b3cb2f7b448b385",
                "size": 6784
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:69fff380046369a47fbc74b0aa03f61fb243f73dc5795e3ecf69c6577ee84908",
                    "size": 63118399
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:689676ef4dfbe38a100ec0fd8bde8b49c700bedf04ca010d64d0e38e212b9404",
                    "size": 2592230
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:20de4a94e0f41f23dbdf295a23279b3082a2b94c36276a1517ff184d9dae8e62",
                    "size": 23448793
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:aba17861f514dbec43f4f00bc73113c6ead88d0daf01cd5af8c0468d2e6ee6d6",
                    "size": 473577
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:44561f9120b7b96b19381819ea39413a89fe135ccffbc8f4f6586ce34ddef54d",
                    "size": 1011
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6246de46784e0baf4fe4448538c5536535e1dd8374a16e2e22c5fb226e3f400d",
                    "size": 278
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:008ed895bd8ec822f5bbb391c610f13b97036c9b6a66d8ad9815fcd75fe5517e",
                    "size": 679
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:752a73f6143a147cf9dd80aa9e2296a8678cefd5393206c50f4df7a5303521d0",
                    "size": 460
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5f7970ca1823ab6f117260e104039dacfd3d8e583bad77fa9b3ce031e1b7083e",
                    "size": 6663815
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:471e478298689d5e3237afef5c6b64a4eb3d55cea881e49831fd2abea2ba9261",
                    "size": 467
                }
            ]
        },
        "latest-20240429": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:446423e4a663df9e126411abd0bc036e3fb97a845722fe1b78c42d6b4a3e1518",
                "size": 6786
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:69fff380046369a47fbc74b0aa03f61fb243f73dc5795e3ecf69c6577ee84908",
                    "size": 63118399
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d67deff5c71a351663d4faf25c3b38f412142a31bca7a8d888c8821bfe5e18e9",
                    "size": 2592229
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:aef089e78d846edbce27f2669c47ec3fcef142e589e1867ef5908636b93f70a1",
                    "size": 23448814
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d2e3aa275cbb3a947522d3ea6580677ee9aa12d44c091352980066a1fb89bef8",
                    "size": 473573
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5f9e31015a5229413246198fe29fd337da9e65c8a8af3238c1f8824969f6e872",
                    "size": 1012
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3a3a2d6852cd0e1051942f064efb1ca5ed52209ef47cd0bf05a7e8752026738c",
                    "size": 278
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c3c8080aaea2aac7e2ff9499b2a0acda4cb7e625ee3cded157d534b54c647108",
                    "size": 678
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1e138be9b56c798718197323eafa69ddc869347ebd57ddc632dd70c020d34717",
                    "size": 462
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d537c6b0b2da4aaddeb1847e2edae9d037513a9590be529e9576078bd7d08504",
                    "size": 6663451
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c1526bc22c70d45cb4f2d11a06aa85fe110c675fceb404d9131388055cc3e980",
                    "size": 468
                }
            ]
        },
        "latest-build": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:3f30e5ac7a1ed94a92c9f861cc823234a7289c33ec5e17576336d2dd86d746c0",
                "size": 7542
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:69fff380046369a47fbc74b0aa03f61fb243f73dc5795e3ecf69c6577ee84908",
                    "size": 63118399
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:82317edea666666d707ace0b03aad8572e29a838bb12b4c4dfd016b2ab4ce736",
                    "size": 2592233
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c2e5455188b6eb0cff89590382e7b0ecb02ea2b714d55bba2fa7dd06af5aec88",
                    "size": 23448711
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d715dbac72a798e8d0d0ffba83669baf0bbc4da2276a5a381ac22d652d5e13d9",
                    "size": 217029439
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7ff7cea49a20cad0aebae3fa3c701db7c3491385aea25f0e543cc59538fa5ee4",
                    "size": 473573
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d5a769b6122b0d526950c3579d87d5664c827ecd65688a38c75087c4f80db959",
                    "size": 1012
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:49c4a2084afc1da3b08c57198b9d7982cb4ad987197a29eb1c0b905a29331a4a",
                    "size": 277
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4baaeb452bcc05b92b082e0b84e390a65c6e08ed28ef13295f9b16ba167a9c10",
                    "size": 679
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8cba45c189962bae1d2ff247ddff62c95a79794bffefeb6283787d28c6b320ff",
                    "size": 462
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b8a3596546c565a35b5006d65c5ac7b1819ec696fcb88b1ada790d4c710871c1",
                    "size": 14184681
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c7ce7e283368359da734e89615c08cebaa64b8b0e016f8fa452d8749369f525b",
                    "size": 466
                }
            ]
        },
        "latest-build-20230929": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:ecc99c85fc5ba85a06b809d6fc4bcb7553c5ea2c86affdff47c0ae487efb8bc8",
                "size": 7562
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ea792534a213e62c62a1c4772dfcf53eaf82f7635dbc9f71bb0a60a91226d118",
                    "size": 64705637
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:57e197807ba0a519d1edb0779ce76a06124dbef05029811c4cd40f0584de6bac",
                    "size": 2592232
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:471a3338d976e468e7f618dd22fbdde0e2373e61be9ba9fe8ba4b2e72baecef0",
                    "size": 28511392
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b83979765e4c0e1796530bd00bc646610b38f365257e80b2085b5af058f24a4c",
                    "size": 216664890
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:81879a19910e1a496d0c411ff2df904ee88a6408bea71d1d609271432a4191b6",
                    "size": 473570
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9e800c1f80f8401c189157dd7d7e4ebcd8f2e0376a3d21f7191ddb79b8794971",
                    "size": 1013
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e14e21ec6264d33a865243f3f009144460bb90639c04fc3afa6c46a08c027046",
                    "size": 281
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:af714c407ccba3319ab928f255b9ca302ccde44746e669d35f56b6cfa5c7882a",
                    "size": 681
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2e42947fed8288eb956d961238c22a61cd9ce2ca22b0e86c0190dcfeef46faec",
                    "size": 460
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:92ac5c0ed2e9ab77a59f0f03b00835bffd79ebcb41db8251a6039f2103595d3a",
                    "size": 14143971
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1115133676ff1d8dcec1d89ea095836ad1fa3d91a75e752062a248e7bb9da9dc",
                    "size": 469
                }
            ]
        },
        "latest-build-20231103": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:a09fe3b50567add59eecb81f0c2b8290536335028d33aa672ff4be68ac7de9e2",
                "size": 7559
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9d8d1f79d667e0d33c19dcab3e1da521941331416c217cc74601d8d9f6eb34ab",
                    "size": 64844849
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0770b89f72b418017bafd34c1d5552048c5eed91faa033af7187c646a6592cf9",
                    "size": 2592229
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:29d309c8b3459e8477ca5e914be65c3e4e83ef21695a692f92c7b52fc198f2eb",
                    "size": 44064224
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a28acef6ee54c426ff17c9667f83540ef5cb43fdc3e3d664c847608b783be445",
                    "size": 216980025
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4c184b301d67b652578996acdc883d362ba56ee1d7961845e82a445fc8a3dd3e",
                    "size": 473568
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e88619da9641c1a99919b4fe52c48a15e4aa52d56e55d000d918576825ce0b6f",
                    "size": 1011
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:65ec30ea4e6e929ba2a9cfc9ea06dbd4c70137c62ff0ce8c31ba525ad3be1884",
                    "size": 277
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0f7ff1ffd46bd5431d360e8fcb55926935c214fc26015f8905538a14da17b14b",
                    "size": 676
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f83df3c49a1eebf8dbcb319e217aac00df4952838803b3ff962c7dd7957de30b",
                    "size": 462
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:52f706a1757630a41b2b42a68c4519d2679aa5562d2e972d851bb2c2198342a3",
                    "size": 14174655
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8d00344518b8975ce4dcaa92b7cf98204f82e478aa9f762860eecdc0707ee5f0",
                    "size": 466
                }
            ]
        },
        "latest-build-20231106": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:0faf7fc9c7fafc4eb5c1f9c3fe0e6b382ba59f3c208ef734c46350765fbf3d21",
                "size": 7560
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9d8d1f79d667e0d33c19dcab3e1da521941331416c217cc74601d8d9f6eb34ab",
                    "size": 64844849
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:17ba3eac7c1f9ce9e04f05070a25561c9868bdcef663e68aa5ac8bd96c25b520",
                    "size": 2592233
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:285657690fbde02ba48611d3dd000f47b7c396651e283097f742181b60efba35",
                    "size": 44064946
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4e95e27869fa54cdc0812a839fe46f625b70ba99ce93d7f659480e6a4e1592d6",
                    "size": 216991202
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:dd992c92a0f592cad50a4aea59a1e3abbfdfc50f36449abe8be63813ecdbd3cb",
                    "size": 473574
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8d87a781fcef58ffe8d62d3cf860c226fb6bd64f59da4ded4c94850b90f1c4a6",
                    "size": 1012
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f6cbc2eb8a9998e5abebb20f735e54fa5fe6fe98f4ebe7936eb3ba03c3f0ded0",
                    "size": 279
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8783360b72f39fa722e56e53f2e8425e426bd937db8f07668131a09545834c4d",
                    "size": 677
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:dba5c227294800c799660501956b8746867066f6c53dda172235fc9aedc674c4",
                    "size": 462
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2460e279f884063c1a9e308db833c9dacd2dde9b98aa93b936043533e920b266",
                    "size": 14177170
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0d4f1cebeb40ab7c25891e99d5e190ee8e2bb3bcfe19d1371d15fd3559d4e171",
                    "size": 468
                }
            ]
        },
        "latest-build-20231127": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:be891eb782071825b3360e9b9941aebb5887f425b54ac206612bec00d02a4a82",
                "size": 7560
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:69fff380046369a47fbc74b0aa03f61fb243f73dc5795e3ecf69c6577ee84908",
                    "size": 63118399
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6641d4e23883de336ed449229e82843e5c72e3f1c81c8dd83135346960efdc5a",
                    "size": 2592224
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1b1e517fb0275fc4621249537f0da6236e1cd69bf862d820c876333462493f3f",
                    "size": 22318515
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:165564d821c1037960b170fea0079cf103fda6666513335e98b6968d8c3b8949",
                    "size": 217051070
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:01e9e8459499b3bc80b1b59e093b711165e883a6b0b34cecc147192d6647a93e",
                    "size": 473574
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:74619d00050fd0824b99ae241a8517f158d42b3343465fa6a78cafb4d6e70522",
                    "size": 1012
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:49b562c66c266d31dfe6f77e08fbf606c721fe74fe3756a0fc70572d0a9e2ae7",
                    "size": 277
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:eecd0d10f4b58b52bb36ae388d9d633ae650558ff64874899f7de0e019094c26",
                    "size": 677
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0f119eeaa7b1d1ee4109e4bb3f17232a250013fca828e92e654cb5ddb16da097",
                    "size": 462
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:64562e8ea53fc4ac173899ff5486353dc362ab731b8fc51bfb41b119f81c1954",
                    "size": 14196960
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:702b1a75c6c95c26a91a158fae023f289b505e40eb1ab6315e81991213599ec1",
                    "size": 468
                }
            ]
        },
        "latest-build-20231204": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:99b3aee7d15f49913753baad8d516a6025eadc37957e099762903c9cf8307e6c",
                "size": 7561
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:69fff380046369a47fbc74b0aa03f61fb243f73dc5795e3ecf69c6577ee84908",
                    "size": 63118399
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f0ca99f7b063cce65d52273a4f2101d346418bdd8a7352f4af9785e2ba52c05e",
                    "size": 2592224
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d3ef5f06a980545479bdc090e802b2a72a2c93d49fecdc47c50cc8357a279eb5",
                    "size": 23448791
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0e6eee1f98642a0b9ea66873f6f6bbc955484317743fa4c8d53660f136d5bb83",
                    "size": 217028879
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3e2ff8beebba14a582e830769648b12ea0b2f4a228d63c45d1aa4f46afaf0066",
                    "size": 473573
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4e458a328d96b94763f7d9f7f65c86f99b34e9b495422a2c95974a479df994b4",
                    "size": 1013
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2959fa0cc7c12e351b42c74a818d4f9aa5cb261407867e24a6ebc87062ec7a0e",
                    "size": 278
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:673c09069e4697b12af04dc085dd22f9b86c51024bbdf19a4f969cc74a67f80d",
                    "size": 679
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:19ce9cb7ae33b72478454483374a2eda66bc4f88d8f7b9fab48c46f5622433be",
                    "size": 461
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d3836afe1a67b5c923d07b657f2ad38faca4b0d40a4620b8a6ba6cc5586f5cb6",
                    "size": 14184583
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0d0fe98f8d7bc6ec247e03e0961ce3f04f8a299182aa24ee049f0310900146c1",
                    "size": 466
                }
            ]
        },
        "latest-build-20240205": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:e0fbc52f059abd9cfe0d4a11b5c9fecd134d212d7ff109165ccff651c264e6a9",
                "size": 7559
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:69fff380046369a47fbc74b0aa03f61fb243f73dc5795e3ecf69c6577ee84908",
                    "size": 63118399
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:af78cc0520f170b906a82f421a37356d2c269781502c5f7d2c396abdfa55d6a9",
                    "size": 2592222
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7edbd9813867cb3dddc51da4d40538bd9695d5b483b8ed59539b24b19c133b4e",
                    "size": 23448737
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:44dc7c873245302e133bf36d8149b48643b19afe9a7540a40abe1eae736eaed8",
                    "size": 217029550
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4dc8c6e0f74fad71d0a2e17368a0c25cccb51945f997463748b8def1421f4f81",
                    "size": 473575
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4bc00a878dab5ef147d98e03eb2e1a5a19985e5e5fdcd18ff8defac4938695b5",
                    "size": 1012
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fb87ee75d18626f6429938563bfa6b76bda1ac557019c8354f99cc04c16fb1d0",
                    "size": 278
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e36e3c571cd31032afd2e63729a6a6885268fbecb1a32d4ab477e88b760c6925",
                    "size": 677
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:75fc38abf14743c0cb98e30147fdaf527dc87c34a8cd91db118b48425c25a493",
                    "size": 461
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:59ef309f55d771568c5e0390359ea96f28e63e62a2d44d2afce553fb8ad08abe",
                    "size": 14184469
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e9b00f9455a7cefe8c1b186acc6e22258c416ed43eabe6413acbda3722227094",
                    "size": 467
                }
            ]
        },
        "latest-build-20240227": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:d4a5fd7ac9c4ed47512597fec3f8330587e32ad641c23165d0bdf0f0ac2bf3d7",
                "size": 7561
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:69fff380046369a47fbc74b0aa03f61fb243f73dc5795e3ecf69c6577ee84908",
                    "size": 63118399
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:65764d35c6ba7bc01cd8c1c7c80dedd0fba41e8aed4fe20f32b8104e40811b27",
                    "size": 2592230
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ccb26de59532c7a3ca4e330f6259f0a22d5502c63fce64953cfb835da2a89232",
                    "size": 23448765
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:dbffb8cd0d199db9da89c0a8f6be633d403ae9577895ef76ed8559e0e6a2fce6",
                    "size": 217030397
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f2cdbf2b50a12d0c904c51a1aa6a78d769e31ab23e681213a8dcd625845a43fa",
                    "size": 473575
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:caf29b48f9a19f9f082026316d26fb42e73b1f7a2585ff1f86457c794c8ca68d",
                    "size": 1012
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:821dddb4fbe51867593b530bacd209ea5cec4104a56beb6362389970d19aaa68",
                    "size": 278
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a0fa218cb0068ba037fef0d258fb86dfbfed2c4590d7b39e86733b5c8b69f61b",
                    "size": 679
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9d68feee9a64aaf2316e4f6f65cdc6fbf9e80169d4bf9cd0152c507a525b3155",
                    "size": 460
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:471f163f1849870784876371cc7a7b793b8e001cbe190346afbab71c7dcd1405",
                    "size": 14184974
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7a131c5d5f20c3a57414728de464611b31b3a92dc0f064f48578cf07c52aed01",
                    "size": 467
                }
            ]
        },
        "latest-build-20240304": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:23512eec154c319f49659d57f67d75885fe1b274e2df97c40e8053e355ef3e54",
                "size": 7561
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:69fff380046369a47fbc74b0aa03f61fb243f73dc5795e3ecf69c6577ee84908",
                    "size": 63118399
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:365c152eab29768a6002cd30191cfe30aa5a9c7670afb3dd05e5568d60598b53",
                    "size": 2592229
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9cfac25b66436aaad9254043374a8a0bce94c1fcc73328f0009e4c633a489dab",
                    "size": 23448738
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:eec58c8baedb56f03697759c56cc8b52846aa6b359079d478ffe547bd11683f2",
                    "size": 217029920
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d5ea14a5b029f6e9168ba600f7829994ee94710831ae531cc8575103cb5f9076",
                    "size": 473576
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7b5e5aded2a12ddea2c899e597f6b276bdbb070022f582eb5ffef5eab6706f4c",
                    "size": 1012
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2fdfe10b79cf925c4a4f205beee5164056995aa8d5d10cae49aeae14093d612d",
                    "size": 278
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:563ad2bf80f0e61e8048e26e2680eceb622c9b84a0e9b242dc26a7272ef9ee62",
                    "size": 677
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:87d42fc86fb1bef824e1ec397f2adeb648ebde6cb39d75fa5d79da952fead6a4",
                    "size": 461
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3382b0f36243706e5090913ead9f748df9850f3a8640e802178dc8db6ad7b2e3",
                    "size": 14185070
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b04888f5e5409cdd6f6e3450d9c48e117a00f76964e6b29c6464683258281589",
                    "size": 468
                }
            ]
        },
        "latest-build-20240401": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:d3e880c742f4602d9e7bc0df8aa119e9b3055292a48d0ad9cd6a23836a90eb28",
                "size": 7544
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:69fff380046369a47fbc74b0aa03f61fb243f73dc5795e3ecf69c6577ee84908",
                    "size": 63118399
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d3a4176e53d7e5697395953f42ef76b08d9fef8fe5a662a442cd4f13740c7a1d",
                    "size": 2592234
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b1d05a709ad59f905b2bb738079267053a09a0f4f535e32192bcd83e0dce163c",
                    "size": 23448641
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3f3f5fce4a1b94b586b0523b225e6b5436e9dd40567f898aaaffd4c2302a2399",
                    "size": 217029391
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:de3c36bd181e84497d428d49b10abc3694cd9a0c75ec31064623d54cb4f8c211",
                    "size": 473577
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:565296760a52acc955f0523e8e8213020ff97bec4df095452a9633f053cb710d",
                    "size": 1013
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bf3fbff6d013e83413ee8ed775faa0f5e3350e9b987d24b28cb8715ea67d31ed",
                    "size": 278
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4363ad41c733c6b3e9c7a4610329a637d3d876504b93320bb9b4612bba294335",
                    "size": 678
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:38693fb89d5d2d6143564a7b4bd2d1c7da21077550cbe4d5e8a7ec5096625ff1",
                    "size": 462
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:50b9705b259416d3facecc57b9eef8fb462f73f287ec4b3d6993ce0e86683976",
                    "size": 14184596
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:617c4ec85c8244460bbe3bd75b56fb374cd167d4cffe310acdc1d8c7078251e0",
                    "size": 466
                }
            ]
        },
        "latest-build-20240408": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:9bcd5e065a963cfe331a0693e508c6bf3d467bb19c28968dc4a88680caca961e",
                "size": 7546
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:69fff380046369a47fbc74b0aa03f61fb243f73dc5795e3ecf69c6577ee84908",
                    "size": 63118399
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7e54c1365f15bf88b17ba38f79d2a428ac06b2fadf6f6c91f27bb25c858dbc60",
                    "size": 2592231
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:017b908d94c1c349a53970523ee7a139bef37f34ad362e03d6bec2d726504a0d",
                    "size": 23448703
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1b5c50d01e785c4728ab89718fa8aaa45a81c0af2408ac0cc79f3ee163c253bd",
                    "size": 217028541
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d83e2fae00f6ab84a73baecccee1b9773d59ae4b450a12e360a5effca4944ac4",
                    "size": 473576
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fadda5faf2fcc02b62f25d0f9c548bc0d5c1abdeda6da2328fc79ddb5b8b91ca",
                    "size": 1011
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e1e9b66fa7cafdd2423279eb1c13f4052734fd9472c334ca49bfa60216bfccc8",
                    "size": 279
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4cbd57e7f4360c9cbeecd7408e549686853d4c97c491b59f4d07d320805ce98a",
                    "size": 679
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a4759f7eafc183e7e416b2fb6e564ecd7cf14425e5e7ccad33b50b3ea539f38e",
                    "size": 461
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5054766872814bd9ddd15e31cfe6005ba9b012b3451c6135c92547fe32057854",
                    "size": 14184723
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:08aac2cbacfaa7515ff025f78a1cb5e8ba814473f7ef9c5e78ac015aec5c2e4a",
                    "size": 468
                }
            ]
        },
        "latest-build-20240429": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:3f30e5ac7a1ed94a92c9f861cc823234a7289c33ec5e17576336d2dd86d746c0",
                "size": 7542
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:69fff380046369a47fbc74b0aa03f61fb243f73dc5795e3ecf69c6577ee84908",
                    "size": 63118399
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:82317edea666666d707ace0b03aad8572e29a838bb12b4c4dfd016b2ab4ce736",
                    "size": 2592233
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c2e5455188b6eb0cff89590382e7b0ecb02ea2b714d55bba2fa7dd06af5aec88",
                    "size": 23448711
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d715dbac72a798e8d0d0ffba83669baf0bbc4da2276a5a381ac22d652d5e13d9",
                    "size": 217029439
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7ff7cea49a20cad0aebae3fa3c701db7c3491385aea25f0e543cc59538fa5ee4",
                    "size": 473573
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d5a769b6122b0d526950c3579d87d5664c827ecd65688a38c75087c4f80db959",
                    "size": 1012
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:49c4a2084afc1da3b08c57198b9d7982cb4ad987197a29eb1c0b905a29331a4a",
                    "size": 277
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4baaeb452bcc05b92b082e0b84e390a65c6e08ed28ef13295f9b16ba167a9c10",
                    "size": 679
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8cba45c189962bae1d2ff247ddff62c95a79794bffefeb6283787d28c6b320ff",
                    "size": 462
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b8a3596546c565a35b5006d65c5ac7b1819ec696fcb88b1ada790d4c710871c1",
                    "size": 14184681
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c7ce7e283368359da734e89615c08cebaa64b8b0e016f8fa452d8749369f525b",
                    "size": 466
                }
            ]
        },
        "latest-run": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:446423e4a663df9e126411abd0bc036e3fb97a845722fe1b78c42d6b4a3e1518",
                "size": 6786
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:69fff380046369a47fbc74b0aa03f61fb243f73dc5795e3ecf69c6577ee84908",
                    "size": 63118399
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d67deff5c71a351663d4faf25c3b38f412142a31bca7a8d888c8821bfe5e18e9",
                    "size": 2592229
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:aef089e78d846edbce27f2669c47ec3fcef142e589e1867ef5908636b93f70a1",
                    "size": 23448814
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d2e3aa275cbb3a947522d3ea6580677ee9aa12d44c091352980066a1fb89bef8",
                    "size": 473573
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5f9e31015a5229413246198fe29fd337da9e65c8a8af3238c1f8824969f6e872",
                    "size": 1012
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3a3a2d6852cd0e1051942f064efb1ca5ed52209ef47cd0bf05a7e8752026738c",
                    "size": 278
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c3c8080aaea2aac7e2ff9499b2a0acda4cb7e625ee3cded157d534b54c647108",
                    "size": 678
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1e138be9b56c798718197323eafa69ddc869347ebd57ddc632dd70c020d34717",
                    "size": 462
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d537c6b0b2da4aaddeb1847e2edae9d037513a9590be529e9576078bd7d08504",
                    "size": 6663451
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c1526bc22c70d45cb4f2d11a06aa85fe110c675fceb404d9131388055cc3e980",
                    "size": 468
                }
            ]
        },
        "latest-run-20230929": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:425f798c637e8499488abc4a9dafc8796326ccbfb4e722ad4882d2db2c8ecd87",
                "size": 6802
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ea792534a213e62c62a1c4772dfcf53eaf82f7635dbc9f71bb0a60a91226d118",
                    "size": 64705637
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:57e197807ba0a519d1edb0779ce76a06124dbef05029811c4cd40f0584de6bac",
                    "size": 2592232
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:471a3338d976e468e7f618dd22fbdde0e2373e61be9ba9fe8ba4b2e72baecef0",
                    "size": 28511392
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:43acb285765a1566a09368e26f802363c73729a1ae513cb100c40d7d5f2c9fd4",
                    "size": 473571
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1f7a541e39d90075887bbdb2cc816aabc30dbffcf6b53f81374d58c099208d3a",
                    "size": 1015
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f64cf4e6488b8740244403e8dfeecf1fd1eca6cee27302b8246883ac41a1084b",
                    "size": 281
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:455b8b17e8e1b86358879c1c85bb769d1d32ef5a39654a9da1ca47fe376a9941",
                    "size": 681
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:79974a50afa759f12e48dd7814fb83e5849ad292c42e28177d22c79b13419d23",
                    "size": 461
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a75d744ddb8d3ce956b7f4327f72717037514cb942025a76c979275f4800ab45",
                    "size": 6745116
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:079ed7ac1e7c007b5b2b48e9eb49602cc337b13652183ae095a5b4c8fc5ce8e8",
                    "size": 469
                }
            ]
        },
        "latest-run-20231103": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:cf72bce69d27a2358bdd348f02dddfb3dacf1e8390539582fefdc24eb01b2237",
                "size": 6797
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9d8d1f79d667e0d33c19dcab3e1da521941331416c217cc74601d8d9f6eb34ab",
                    "size": 64844849
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:70f1454c069b387e5af8b9d91b5470e7c4785b9a3290f7113ad42e664f16f534",
                    "size": 2592223
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d76a558193cb7b66b0700ad5870a13652edf878e9142a0d74f9a71180fa098d3",
                    "size": 44064717
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6f396e4d4a3dac8410ab225cbad45fb13592e944fdf1ab97a953ead54f0fb00d",
                    "size": 473572
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:12c35de3a810ce75e005471dd252f007b4ee65305ff26ddc28b8dfa744f9b86f",
                    "size": 1012
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:476049291d6250253e43958e82448d6c862427743c148732b2a832f70c372a56",
                    "size": 278
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8e0ba4f7e5a572e065f592740afcf5c1f8313b9813191abe3a2b5fd75ccdd00e",
                    "size": 677
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d6b9fe800ceade297a03f9af34ae2921bb7a789025c1dcfcb5b389739c04d457",
                    "size": 462
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2d3832d1ab31b215e5761831765681db33ceff54edbe8978ace82e7667976b52",
                    "size": 6852365
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c10528dea3de7c6fd49674e8553d4cd40f8dba16a2911a1ac6a99b5acf45e8af",
                    "size": 467
                }
            ]
        },
        "latest-run-20231106": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:0cd6f8c7fa75f4e2f7d2be0ae4b14e5c66fda33b6c8b8eaa96f74867e9b3e0eb",
                "size": 6801
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9d8d1f79d667e0d33c19dcab3e1da521941331416c217cc74601d8d9f6eb34ab",
                    "size": 64844849
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:03e4b9d169336e58479c799e52d209343f4fd63f113b03b9cc3778d78eefc36f",
                    "size": 2592228
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9ebd0b84befc3bef3f3a1a315ae5e7ec38574027144908174718797f0a00360c",
                    "size": 44065020
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4d11386853aeab8cd5baa963e4328bffa12cd29a1ce5240ad9607cc9c3e875fa",
                    "size": 473574
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7331c59cbf560592c7caacaec5a5b0e7c1412d0ee6c53af4a6afd0b75120350c",
                    "size": 1012
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:01cc8bad0eb150412ebd78b17a1ec8ddb84bf7bfda9878c71e39cec3d021ee7a",
                    "size": 278
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:204195aa087948caf7654cea0a3a5700bce5edb30a573214210d4567dfefe883",
                    "size": 677
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c45bba7cbbc35ad8b4c7416a9df0446d0594c82b7244266706a7a42cfd423cda",
                    "size": 462
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:883beea72baf754c5e02866d6409d567ab7ac97ceb43b3f033acf2e4d67ff705",
                    "size": 6851959
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d392242678b9e44bb982d028b0c35b2f9cd8a313fdb199bd7667ee3d4afb07bb",
                    "size": 467
                }
            ]
        },
        "latest-run-20231127": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:fbd506194b56080b3cd1daa5fce5fa7821f6993bf80dcfdeeaab71feefa9b759",
                "size": 6801
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:69fff380046369a47fbc74b0aa03f61fb243f73dc5795e3ecf69c6577ee84908",
                    "size": 63118399
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0bb5eada9fb8c922ecc9f8444aaa0ee8a62fcac70ee74abc4710b2495f0bfd08",
                    "size": 2592228
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3ab8b31915862687dcc837ff941a87caf4c07e9f37527c8ff82b84c62d432e58",
                    "size": 22318509
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:491f82e7458e6e17bae05aa839d6b366e87513662f4340abcac0a9696a7480c0",
                    "size": 473573
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:744368413ff21e9a4e526bd1640cb20d58d0ac97385af7363e6ccfaa0a24b050",
                    "size": 1010
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d600c7ca91fb3e6cda2851db48eb14cc780b01a3eb28cb3b5cc1c157b30e5ce8",
                    "size": 278
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b803570392d88303afd7a2018b05dbf63c3295a143048a2729f5436e4f82f62e",
                    "size": 676
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c82c00cdd78937eb219600038c3a9ba8501aa8ae7b114cd8e577f8fe1107a36c",
                    "size": 462
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:390faaab281141853f012813dd071904a46b1de81f958bf38e69808b0eeff12d",
                    "size": 6664220
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4adc356c69b028295625f293b1d0c5d7fa703bee6cc5aa5b072a86d01e0ce930",
                    "size": 466
                }
            ]
        },
        "latest-run-20231204": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:aadcf5971f3dcc20442bd363e57344117716db95c42af7d63c53f39f81fe4dd3",
                "size": 6797
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:69fff380046369a47fbc74b0aa03f61fb243f73dc5795e3ecf69c6577ee84908",
                    "size": 63118399
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d33718b133be58c12c588d020799740b8f5d0e1659f4305bd3a42e0be1ca53e9",
                    "size": 2592227
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:638dc3ba02ae0d436831ec2e65f80cf3a0df85f54b4dd0e7ef6c930f2c9ab6a9",
                    "size": 23448833
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:320c005249b51b04b58caf58affd18499aee26124689ea955f510182122cfab7",
                    "size": 473569
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7d3113c0c18b1dea309c42932b22901908926108a8103cdab78170405c7a600b",
                    "size": 1013
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ac6ed7c321ff834e5966003c322a533aea0543816c96955876c3ab5646e3079f",
                    "size": 278
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:297b2ba3b641a48b1e90733cb70836ce9c195ca3803cf200e37417506cf0bb66",
                    "size": 678
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1f73b516ad766efd99f0fe8db17e4e328b2f6accabc971ecfa3d27b53c981a71",
                    "size": 461
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:88a6f556227627ae13f8f1e81bfd7875459522e6b16f89af496e878e77b21b18",
                    "size": 6663642
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:56d1f6253cfba1bbba8e19b05b5bd006edaabcd4770a960a46ea68b10e0fdde9",
                    "size": 468
                }
            ]
        },
        "latest-run-20240227": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:9dff4750c0efb91aedb381e864ae043d4598609b81841ac905ecf8569abe6fa3",
                "size": 6798
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:69fff380046369a47fbc74b0aa03f61fb243f73dc5795e3ecf69c6577ee84908",
                    "size": 63118399
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0c9cb203b87166e0d09b81a8d1f5b49ea5bb80d37799c1ddd6d0f58f482ba0ca",
                    "size": 2592228
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:cd15d660a3890fbc117644cc7e00384e54cf47a86db50fb85d3e3924a3b6e0f7",
                    "size": 23448836
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:69feda61e8a6a07d2f8173016c73ff91210e0484140825e75e597b45142b7ae1",
                    "size": 473570
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ce20a220ec40b0412743b54d0120c434710d00f3b54a54502308b76efc9dd983",
                    "size": 1012
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d47f351240c88d3748188f2ef0e0b48f6e891509bebda6f18393ad51c6305e70",
                    "size": 278
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fe1a2b8c0123677dd17cbf5897edd521c063917ffff70729a2e1211219421c57",
                    "size": 678
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f0bc84079738c7cb444a751732c831109078ebd828f39565c765bfc72f1e32d9",
                    "size": 462
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8c21ecec21affc35aa8a5227f35d93fe436894197c56e4bd6f855d4985f9db11",
                    "size": 6663444
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fa658dab08e5b203e9702c9231a43d3c58d202762f6b3935d386a575152602d7",
                    "size": 468
                }
            ]
        },
        "latest-run-20240304": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:b236014d0b8e0954b6a9dc346f2932d5ed26b29607de5eb3066a3b50da753e9c",
                "size": 6798
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:69fff380046369a47fbc74b0aa03f61fb243f73dc5795e3ecf69c6577ee84908",
                    "size": 63118399
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1838771b8ec87483e105e112d8024f9e9029a53bae9d1ef0c34c061003181dfb",
                    "size": 2592227
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9086ea61d95c1ab147c8270e5a9b1830e96d367d41663c7617ebb4b06043f2fa",
                    "size": 23448747
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e665d30b7799b95a1fefa213155d46f59fff56b68586082bf191741035863ca9",
                    "size": 473573
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:eca08035356a02b31523d0089c92c641151221e1163f6f69259640069fc93325",
                    "size": 1011
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1dbbb8991fb8ec274be4b21cf0c12fa2b72fea515b37daf96cee76915bf6a3ad",
                    "size": 278
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0a012ba1f4d0af3a86a253d6ee08223c9446a2cf6250bdab21f839ebc7d16354",
                    "size": 677
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:30495c77303f15af04a882c71d278cea6699924428092ff409840f02e3455bec",
                    "size": 460
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e7ab56aa194f4dc7a68895e415de89ccf0160ea0b426b690a95a095a6f7d4a80",
                    "size": 6663488
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:23a366fe4d2a5894b996fe60721a7ea0557042186d1979ab9f7a18c5e5fee741",
                    "size": 467
                }
            ]
        },
        "latest-run-20240401": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:7b10dd0d6f10c2e8e309549b112fe430a55f33cc7c33275c8ab91541930fdcee",
                "size": 6786
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:69fff380046369a47fbc74b0aa03f61fb243f73dc5795e3ecf69c6577ee84908",
                    "size": 63118399
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:326b20e912351ee1cd36eb4928f89de7420c89cff4fe26170cede56d5b53defb",
                    "size": 2592233
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f39d9f2f25dbd3d6ef3ad45ac705c80b09499c0886ce65119c20d6fc0873f021",
                    "size": 23448664
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:149aacaa82b179c640f96dd6fa65cb2df58f00055c9a94c3886a4906672573a7",
                    "size": 473577
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e7514cd29789812983b2a947f44fce3f7bcce347440875a08883bcd9b53e739f",
                    "size": 1012
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4b84039a432480f5ffe416931d3e349c4318c99332a368f259bac7fd40b1d2c5",
                    "size": 278
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:85dfe6b177a514d70942f90882fe77a64a24af14ef6f9f8be9f6e0ac8271c2d2",
                    "size": 679
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:75ac5a1c7aa9ff94b80b26d3cff3e1a67892548f05c0ca35405a77c861a15ab8",
                    "size": 462
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5e0ff124a6ae6ab036fba31dd61f281b5879c6812593ba0a0b7a0393e1a2619b",
                    "size": 6663618
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6704808fc482f83132cc07606068d73ae29e37a6aca08a65beaf66e0bc818072",
                    "size": 466
                }
            ]
        },
        "latest-run-20240408": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:21c69c09c581cfae914b06ae8ea9aedf832bdfd087b409851b3cb2f7b448b385",
                "size": 6784
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:69fff380046369a47fbc74b0aa03f61fb243f73dc5795e3ecf69c6577ee84908",
                    "size": 63118399
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:689676ef4dfbe38a100ec0fd8bde8b49c700bedf04ca010d64d0e38e212b9404",
                    "size": 2592230
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:20de4a94e0f41f23dbdf295a23279b3082a2b94c36276a1517ff184d9dae8e62",
                    "size": 23448793
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:aba17861f514dbec43f4f00bc73113c6ead88d0daf01cd5af8c0468d2e6ee6d6",
                    "size": 473577
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:44561f9120b7b96b19381819ea39413a89fe135ccffbc8f4f6586ce34ddef54d",
                    "size": 1011
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6246de46784e0baf4fe4448538c5536535e1dd8374a16e2e22c5fb226e3f400d",
                    "size": 278
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:008ed895bd8ec822f5bbb391c610f13b97036c9b6a66d8ad9815fcd75fe5517e",
                    "size": 679
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:752a73f6143a147cf9dd80aa9e2296a8678cefd5393206c50f4df7a5303521d0",
                    "size": 460
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5f7970ca1823ab6f117260e104039dacfd3d8e583bad77fa9b3ce031e1b7083e",
                    "size": 6663815
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:471e478298689d5e3237afef5c6b64a4eb3d55cea881e49831fd2abea2ba9261",
                    "size": 467
                }
            ]
        },
        "latest-run-20240429": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:446423e4a663df9e126411abd0bc036e3fb97a845722fe1b78c42d6b4a3e1518",
                "size": 6786
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:69fff380046369a47fbc74b0aa03f61fb243f73dc5795e3ecf69c6577ee84908",
                    "size": 63118399
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d67deff5c71a351663d4faf25c3b38f412142a31bca7a8d888c8821bfe5e18e9",
                    "size": 2592229
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:aef089e78d846edbce27f2669c47ec3fcef142e589e1867ef5908636b93f70a1",
                    "size": 23448814
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d2e3aa275cbb3a947522d3ea6580677ee9aa12d44c091352980066a1fb89bef8",
                    "size": 473573
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5f9e31015a5229413246198fe29fd337da9e65c8a8af3238c1f8824969f6e872",
                    "size": 1012
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3a3a2d6852cd0e1051942f064efb1ca5ed52209ef47cd0bf05a7e8752026738c",
                    "size": 278
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c3c8080aaea2aac7e2ff9499b2a0acda4cb7e625ee3cded157d534b54c647108",
                    "size": 678
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1e138be9b56c798718197323eafa69ddc869347ebd57ddc632dd70c020d34717",
                    "size": 462
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d537c6b0b2da4aaddeb1847e2edae9d037513a9590be529e9576078bd7d08504",
                    "size": 6663451
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c1526bc22c70d45cb4f2d11a06aa85fe110c675fceb404d9131388055cc3e980",
                    "size": 468
                }
            ]
        },
        "run": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:446423e4a663df9e126411abd0bc036e3fb97a845722fe1b78c42d6b4a3e1518",
                "size": 6786
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:69fff380046369a47fbc74b0aa03f61fb243f73dc5795e3ecf69c6577ee84908",
                    "size": 63118399
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d67deff5c71a351663d4faf25c3b38f412142a31bca7a8d888c8821bfe5e18e9",
                    "size": 2592229
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:aef089e78d846edbce27f2669c47ec3fcef142e589e1867ef5908636b93f70a1",
                    "size": 23448814
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d2e3aa275cbb3a947522d3ea6580677ee9aa12d44c091352980066a1fb89bef8",
                    "size": 473573
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5f9e31015a5229413246198fe29fd337da9e65c8a8af3238c1f8824969f6e872",
                    "size": 1012
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3a3a2d6852cd0e1051942f064efb1ca5ed52209ef47cd0bf05a7e8752026738c",
                    "size": 278
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c3c8080aaea2aac7e2ff9499b2a0acda4cb7e625ee3cded157d534b54c647108",
                    "size": 678
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1e138be9b56c798718197323eafa69ddc869347ebd57ddc632dd70c020d34717",
                    "size": 462
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d537c6b0b2da4aaddeb1847e2edae9d037513a9590be529e9576078bd7d08504",
                    "size": 6663451
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c1526bc22c70d45cb4f2d11a06aa85fe110c675fceb404d9131388055cc3e980",
                    "size": 468
                }
            ]
        },
        "run-20230929": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:425f798c637e8499488abc4a9dafc8796326ccbfb4e722ad4882d2db2c8ecd87",
                "size": 6802
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ea792534a213e62c62a1c4772dfcf53eaf82f7635dbc9f71bb0a60a91226d118",
                    "size": 64705637
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:57e197807ba0a519d1edb0779ce76a06124dbef05029811c4cd40f0584de6bac",
                    "size": 2592232
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:471a3338d976e468e7f618dd22fbdde0e2373e61be9ba9fe8ba4b2e72baecef0",
                    "size": 28511392
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:43acb285765a1566a09368e26f802363c73729a1ae513cb100c40d7d5f2c9fd4",
                    "size": 473571
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1f7a541e39d90075887bbdb2cc816aabc30dbffcf6b53f81374d58c099208d3a",
                    "size": 1015
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f64cf4e6488b8740244403e8dfeecf1fd1eca6cee27302b8246883ac41a1084b",
                    "size": 281
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:455b8b17e8e1b86358879c1c85bb769d1d32ef5a39654a9da1ca47fe376a9941",
                    "size": 681
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:79974a50afa759f12e48dd7814fb83e5849ad292c42e28177d22c79b13419d23",
                    "size": 461
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a75d744ddb8d3ce956b7f4327f72717037514cb942025a76c979275f4800ab45",
                    "size": 6745116
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:079ed7ac1e7c007b5b2b48e9eb49602cc337b13652183ae095a5b4c8fc5ce8e8",
                    "size": 469
                }
            ]
        },
        "run-20231103": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:cf72bce69d27a2358bdd348f02dddfb3dacf1e8390539582fefdc24eb01b2237",
                "size": 6797
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9d8d1f79d667e0d33c19dcab3e1da521941331416c217cc74601d8d9f6eb34ab",
                    "size": 64844849
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:70f1454c069b387e5af8b9d91b5470e7c4785b9a3290f7113ad42e664f16f534",
                    "size": 2592223
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d76a558193cb7b66b0700ad5870a13652edf878e9142a0d74f9a71180fa098d3",
                    "size": 44064717
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6f396e4d4a3dac8410ab225cbad45fb13592e944fdf1ab97a953ead54f0fb00d",
                    "size": 473572
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:12c35de3a810ce75e005471dd252f007b4ee65305ff26ddc28b8dfa744f9b86f",
                    "size": 1012
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:476049291d6250253e43958e82448d6c862427743c148732b2a832f70c372a56",
                    "size": 278
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8e0ba4f7e5a572e065f592740afcf5c1f8313b9813191abe3a2b5fd75ccdd00e",
                    "size": 677
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d6b9fe800ceade297a03f9af34ae2921bb7a789025c1dcfcb5b389739c04d457",
                    "size": 462
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2d3832d1ab31b215e5761831765681db33ceff54edbe8978ace82e7667976b52",
                    "size": 6852365
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c10528dea3de7c6fd49674e8553d4cd40f8dba16a2911a1ac6a99b5acf45e8af",
                    "size": 467
                }
            ]
        },
        "run-20231106": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:0cd6f8c7fa75f4e2f7d2be0ae4b14e5c66fda33b6c8b8eaa96f74867e9b3e0eb",
                "size": 6801
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9d8d1f79d667e0d33c19dcab3e1da521941331416c217cc74601d8d9f6eb34ab",
                    "size": 64844849
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:03e4b9d169336e58479c799e52d209343f4fd63f113b03b9cc3778d78eefc36f",
                    "size": 2592228
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9ebd0b84befc3bef3f3a1a315ae5e7ec38574027144908174718797f0a00360c",
                    "size": 44065020
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4d11386853aeab8cd5baa963e4328bffa12cd29a1ce5240ad9607cc9c3e875fa",
                    "size": 473574
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7331c59cbf560592c7caacaec5a5b0e7c1412d0ee6c53af4a6afd0b75120350c",
                    "size": 1012
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:01cc8bad0eb150412ebd78b17a1ec8ddb84bf7bfda9878c71e39cec3d021ee7a",
                    "size": 278
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:204195aa087948caf7654cea0a3a5700bce5edb30a573214210d4567dfefe883",
                    "size": 677
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c45bba7cbbc35ad8b4c7416a9df0446d0594c82b7244266706a7a42cfd423cda",
                    "size": 462
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:883beea72baf754c5e02866d6409d567ab7ac97ceb43b3f033acf2e4d67ff705",
                    "size": 6851959
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d392242678b9e44bb982d028b0c35b2f9cd8a313fdb199bd7667ee3d4afb07bb",
                    "size": 467
                }
            ]
        },
        "run-20231127": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:fbd506194b56080b3cd1daa5fce5fa7821f6993bf80dcfdeeaab71feefa9b759",
                "size": 6801
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:69fff380046369a47fbc74b0aa03f61fb243f73dc5795e3ecf69c6577ee84908",
                    "size": 63118399
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0bb5eada9fb8c922ecc9f8444aaa0ee8a62fcac70ee74abc4710b2495f0bfd08",
                    "size": 2592228
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3ab8b31915862687dcc837ff941a87caf4c07e9f37527c8ff82b84c62d432e58",
                    "size": 22318509
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:491f82e7458e6e17bae05aa839d6b366e87513662f4340abcac0a9696a7480c0",
                    "size": 473573
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:744368413ff21e9a4e526bd1640cb20d58d0ac97385af7363e6ccfaa0a24b050",
                    "size": 1010
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d600c7ca91fb3e6cda2851db48eb14cc780b01a3eb28cb3b5cc1c157b30e5ce8",
                    "size": 278
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b803570392d88303afd7a2018b05dbf63c3295a143048a2729f5436e4f82f62e",
                    "size": 676
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c82c00cdd78937eb219600038c3a9ba8501aa8ae7b114cd8e577f8fe1107a36c",
                    "size": 462
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:390faaab281141853f012813dd071904a46b1de81f958bf38e69808b0eeff12d",
                    "size": 6664220
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4adc356c69b028295625f293b1d0c5d7fa703bee6cc5aa5b072a86d01e0ce930",
                    "size": 466
                }
            ]
        },
        "run-20231204": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:aadcf5971f3dcc20442bd363e57344117716db95c42af7d63c53f39f81fe4dd3",
                "size": 6797
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:69fff380046369a47fbc74b0aa03f61fb243f73dc5795e3ecf69c6577ee84908",
                    "size": 63118399
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d33718b133be58c12c588d020799740b8f5d0e1659f4305bd3a42e0be1ca53e9",
                    "size": 2592227
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:638dc3ba02ae0d436831ec2e65f80cf3a0df85f54b4dd0e7ef6c930f2c9ab6a9",
                    "size": 23448833
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:320c005249b51b04b58caf58affd18499aee26124689ea955f510182122cfab7",
                    "size": 473569
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7d3113c0c18b1dea309c42932b22901908926108a8103cdab78170405c7a600b",
                    "size": 1013
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ac6ed7c321ff834e5966003c322a533aea0543816c96955876c3ab5646e3079f",
                    "size": 278
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:297b2ba3b641a48b1e90733cb70836ce9c195ca3803cf200e37417506cf0bb66",
                    "size": 678
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1f73b516ad766efd99f0fe8db17e4e328b2f6accabc971ecfa3d27b53c981a71",
                    "size": 461
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:88a6f556227627ae13f8f1e81bfd7875459522e6b16f89af496e878e77b21b18",
                    "size": 6663642
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:56d1f6253cfba1bbba8e19b05b5bd006edaabcd4770a960a46ea68b10e0fdde9",
                    "size": 468
                }
            ]
        },
        "run-20240227": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:9dff4750c0efb91aedb381e864ae043d4598609b81841ac905ecf8569abe6fa3",
                "size": 6798
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:69fff380046369a47fbc74b0aa03f61fb243f73dc5795e3ecf69c6577ee84908",
                    "size": 63118399
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0c9cb203b87166e0d09b81a8d1f5b49ea5bb80d37799c1ddd6d0f58f482ba0ca",
                    "size": 2592228
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:cd15d660a3890fbc117644cc7e00384e54cf47a86db50fb85d3e3924a3b6e0f7",
                    "size": 23448836
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:69feda61e8a6a07d2f8173016c73ff91210e0484140825e75e597b45142b7ae1",
                    "size": 473570
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ce20a220ec40b0412743b54d0120c434710d00f3b54a54502308b76efc9dd983",
                    "size": 1012
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d47f351240c88d3748188f2ef0e0b48f6e891509bebda6f18393ad51c6305e70",
                    "size": 278
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fe1a2b8c0123677dd17cbf5897edd521c063917ffff70729a2e1211219421c57",
                    "size": 678
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f0bc84079738c7cb444a751732c831109078ebd828f39565c765bfc72f1e32d9",
                    "size": 462
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8c21ecec21affc35aa8a5227f35d93fe436894197c56e4bd6f855d4985f9db11",
                    "size": 6663444
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fa658dab08e5b203e9702c9231a43d3c58d202762f6b3935d386a575152602d7",
                    "size": 468
                }
            ]
        },
        "run-20240304": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:b236014d0b8e0954b6a9dc346f2932d5ed26b29607de5eb3066a3b50da753e9c",
                "size": 6798
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:69fff380046369a47fbc74b0aa03f61fb243f73dc5795e3ecf69c6577ee84908",
                    "size": 63118399
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1838771b8ec87483e105e112d8024f9e9029a53bae9d1ef0c34c061003181dfb",
                    "size": 2592227
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9086ea61d95c1ab147c8270e5a9b1830e96d367d41663c7617ebb4b06043f2fa",
                    "size": 23448747
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e665d30b7799b95a1fefa213155d46f59fff56b68586082bf191741035863ca9",
                    "size": 473573
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:eca08035356a02b31523d0089c92c641151221e1163f6f69259640069fc93325",
                    "size": 1011
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1dbbb8991fb8ec274be4b21cf0c12fa2b72fea515b37daf96cee76915bf6a3ad",
                    "size": 278
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0a012ba1f4d0af3a86a253d6ee08223c9446a2cf6250bdab21f839ebc7d16354",
                    "size": 677
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:30495c77303f15af04a882c71d278cea6699924428092ff409840f02e3455bec",
                    "size": 460
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e7ab56aa194f4dc7a68895e415de89ccf0160ea0b426b690a95a095a6f7d4a80",
                    "size": 6663488
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:23a366fe4d2a5894b996fe60721a7ea0557042186d1979ab9f7a18c5e5fee741",
                    "size": 467
                }
            ]
        },
        "run-20240401": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:7b10dd0d6f10c2e8e309549b112fe430a55f33cc7c33275c8ab91541930fdcee",
                "size": 6786
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:69fff380046369a47fbc74b0aa03f61fb243f73dc5795e3ecf69c6577ee84908",
                    "size": 63118399
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:326b20e912351ee1cd36eb4928f89de7420c89cff4fe26170cede56d5b53defb",
                    "size": 2592233
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f39d9f2f25dbd3d6ef3ad45ac705c80b09499c0886ce65119c20d6fc0873f021",
                    "size": 23448664
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:149aacaa82b179c640f96dd6fa65cb2df58f00055c9a94c3886a4906672573a7",
                    "size": 473577
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e7514cd29789812983b2a947f44fce3f7bcce347440875a08883bcd9b53e739f",
                    "size": 1012
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4b84039a432480f5ffe416931d3e349c4318c99332a368f259bac7fd40b1d2c5",
                    "size": 278
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:85dfe6b177a514d70942f90882fe77a64a24af14ef6f9f8be9f6e0ac8271c2d2",
                    "size": 679
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:75ac5a1c7aa9ff94b80b26d3cff3e1a67892548f05c0ca35405a77c861a15ab8",
                    "size": 462
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5e0ff124a6ae6ab036fba31dd61f281b5879c6812593ba0a0b7a0393e1a2619b",
                    "size": 6663618
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6704808fc482f83132cc07606068d73ae29e37a6aca08a65beaf66e0bc818072",
                    "size": 466
                }
            ]
        },
        "run-20240408": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:21c69c09c581cfae914b06ae8ea9aedf832bdfd087b409851b3cb2f7b448b385",
                "size": 6784
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:69fff380046369a47fbc74b0aa03f61fb243f73dc5795e3ecf69c6577ee84908",
                    "size": 63118399
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:689676ef4dfbe38a100ec0fd8bde8b49c700bedf04ca010d64d0e38e212b9404",
                    "size": 2592230
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:20de4a94e0f41f23dbdf295a23279b3082a2b94c36276a1517ff184d9dae8e62",
                    "size": 23448793
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:aba17861f514dbec43f4f00bc73113c6ead88d0daf01cd5af8c0468d2e6ee6d6",
                    "size": 473577
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:44561f9120b7b96b19381819ea39413a89fe135ccffbc8f4f6586ce34ddef54d",
                    "size": 1011
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6246de46784e0baf4fe4448538c5536535e1dd8374a16e2e22c5fb226e3f400d",
                    "size": 278
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:008ed895bd8ec822f5bbb391c610f13b97036c9b6a66d8ad9815fcd75fe5517e",
                    "size": 679
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:752a73f6143a147cf9dd80aa9e2296a8678cefd5393206c50f4df7a5303521d0",
                    "size": 460
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5f7970ca1823ab6f117260e104039dacfd3d8e583bad77fa9b3ce031e1b7083e",
                    "size": 6663815
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:471e478298689d5e3237afef5c6b64a4eb3d55cea881e49831fd2abea2ba9261",
                    "size": 467
                }
            ]
        },
        "run-20240429": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:446423e4a663df9e126411abd0bc036e3fb97a845722fe1b78c42d6b4a3e1518",
                "size": 6786
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:69fff380046369a47fbc74b0aa03f61fb243f73dc5795e3ecf69c6577ee84908",
                    "size": 63118399
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d67deff5c71a351663d4faf25c3b38f412142a31bca7a8d888c8821bfe5e18e9",
                    "size": 2592229
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:aef089e78d846edbce27f2669c47ec3fcef142e589e1867ef5908636b93f70a1",
                    "size": 23448814
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d2e3aa275cbb3a947522d3ea6580677ee9aa12d44c091352980066a1fb89bef8",
                    "size": 473573
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5f9e31015a5229413246198fe29fd337da9e65c8a8af3238c1f8824969f6e872",
                    "size": 1012
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3a3a2d6852cd0e1051942f064efb1ca5ed52209ef47cd0bf05a7e8752026738c",
                    "size": 278
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c3c8080aaea2aac7e2ff9499b2a0acda4cb7e625ee3cded157d534b54c647108",
                    "size": 678
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1e138be9b56c798718197323eafa69ddc869347ebd57ddc632dd70c020d34717",
                    "size": 462
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d537c6b0b2da4aaddeb1847e2edae9d037513a9590be529e9576078bd7d08504",
                    "size": 6663451
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c1526bc22c70d45cb4f2d11a06aa85fe110c675fceb404d9131388055cc3e980",
                    "size": 468
                }
            ]
        }
    },
    "tags": [
        "20230929",
        "20231103",
        "20231106",
        "20231127",
        "20231204",
        "20240227",
        "20240304",
        "20240401",
        "20240408",
        "20240429",
        "36",
        "36-20230929",
        "36-20231103",
        "36-20231106",
        "36-20231127",
        "36-20231204",
        "36-20240205",
        "36-20240227",
        "36-20240304",
        "36-20240401",
        "36-20240408",
        "36-build",
        "36-build-20230929",
        "36-build-20231103",
        "36-build-20231106",
        "36-build-20231127",
        "36-build-20231204",
        "36-build-20240205",
        "36-build-20240227",
        "36-build-20240304",
        "36-build-20240401",
        "36-build-20240408",
        "36-run",
        "36-run-20230929",
        "36-run-20231103",
        "36-run-20231106",
        "36-run-20231127",
        "36-run-20231204",
        "36-run-20240205",
        "36-run-20240227",
        "36-run-20240304",
        "36-run-20240401",
        "36-run-20240408",
        "37",
        "37-20230929",
        "37-20231103",
        "37-20231106",
        "37-20231127",
        "37-20231204",
        "37-20240227",
        "37-20240304",
        "37-20240401",
        "37-20240408",
        "37-20240429",
        "37-build",
        "37-build-20230929",
        "37-build-20231103",
        "37-build-20231106",
        "37-build-20231127",
        "37-build-20231204",
        "37-build-20240205",
        "37-build-20240227",
        "37-build-20240304",
        "37-build-20240401",
        "37-build-20240408",
        "37-build-20240429",
        "37-run",
        "37-run-20230929",
        "37-run-20231103",
        "37-run-20231106",
        "37-run-20231127",
        "37-run-20231204",
        "37-run-20240227",
        "37-run-20240304",
        "37-run-20240401",
        "37-run-20240408",
        "37-run-20240429",
        "38",
        "38-20230929",
        "38-20231103",
        "38-20231106",
        "38-20231127",
        "38-20231204",
        "38-20240205",
        "38-20240227",
        "38-20240304",
        "38-20240401",
        "38-20240408",
        "38-20240429",
        "38-build",
        "38-build-20230929",
        "38-build-20231103",
        "38-build-20231106",
        "38-build-20231127",
        "38-build-20231204",
        "38-build-20240205",
        "38-build-20240227",
        "38-build-20240304",
        "38-build-20240401",
        "38-build-20240408",
        "38-build-20240429",
        "38-run",
        "38-run-20230929",
        "38-run-20231103",
        "38-run-20231106",
        "38-run-20231127",
        "38-run-20231204",
        "38-run-20240205",
        "38-run-20240227",
        "38-run-20240304",
        "38-run-20240401",
        "38-run-20240408",
        "38-run-20240429",
        "build",
        "build-20230929",
        "build-20231103",
        "build-20231106",
        "build-20231127",
        "build-20231204",
        "build-20240205",
        "build-20240227",
        "build-20240304",
        "build-20240401",
        "build-20240408",
        "build-20240429",
        "latest",
        "latest-20230929",
        "latest-20231103",
        "latest-20231106",
        "latest-20231127",
        "latest-20231204",
        "latest-20240227",
        "latest-20240304",
        "latest-20240401",
        "latest-20240408",
        "latest-20240429",
        "latest-build",
        "latest-build-20230929",
        "latest-build-20231103",
        "latest-build-20231106",
        "latest-build-20231127",
        "latest-build-20231204",
        "latest-build-20240205",
        "latest-build-20240227",
        "latest-build-20240304",
        "latest-build-20240401",
        "latest-build-20240408",
        "latest-build-20240429",
        "latest-run",
        "latest-run-20230929",
        "latest-run-20231103",
        "latest-run-20231106",
        "latest-run-20231127",
        "latest-run-20231204",
        "latest-run-20240227",
        "latest-run-20240304",
        "latest-run-20240401",
        "latest-run-20240408",
        "latest-run-20240429",
        "run",
        "run-20230929",
        "run-20231103",
        "run-20231106",
        "run-20231127",
        "run-20231204",
        "run-20240227",
        "run-20240304",
        "run-20240401",
        "run-20240408",
        "run-20240429"
    ],
    "configs": {
        "20230929": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "raspberrypi5",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2023-10-04T23:25:26.883353446Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:31.895761202Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-04T18:40:58.001277299Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:614dff70ca4206841645edfd3dab48901efeefccc8ef99772f475ee9bac861ff in / "
                },
                {
                    "created": "2023-08-04T18:40:59.951513662Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T05:16:42.403188583Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T05:16:42.403188583Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T05:16:42.403188583Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T05:41:14.882541843Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T05:41:16.309377049Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T05:41:16.309377049Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T05:41:16.340188202Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T05:41:16.351150734Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T05:41:16.360211026Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T05:41:16.360211026Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T05:41:21.389664273Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T05:41:21.747711571Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-04T23:25:26.738925718Z",
                    "created_by": "LABEL io.balena.device-type=raspberrypi5",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-04T23:25:26.738925718Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-04T23:25:26.883353446Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:cf819d1f191d71ce750fc0b9ca71726d50fc052d7c695682165a84c2bd1eb716",
                    "sha256:2c61372b1614282bfdb58c104252b37a61be492de5c3298dffc56376adfe0a8f",
                    "sha256:3892fad87609c0724cb700c7b327865d8b642316f214825299540678c84e007b",
                    "sha256:47b1691c56a15153e34460e97d0615abbde7eb4128cffd187b3c4507be55c4a0",
                    "sha256:526255e20ebb75f4e4a9cd0b179342ccc59ea09dfb95f916aad1dfd38903c411",
                    "sha256:10a91abc01c07dd01c837dc1a35597c3030ffee89a81f6dcc760a204a2da9e5a",
                    "sha256:fb61a502b5a7e114c0e1b65ffbf1f5d42041b65c52f9ecb41e2fb9a1cdcdbd97",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:cc06c053add61653ccca8a1d621c01df905dfb240d202ad2f7452d1777852952",
                    "sha256:d4eb19f941ac91799d9d6198e4fe925d23b49332e47400690cf7b3c2d9295b5d",
                    "sha256:59e1a00a1db05f912e0325907ea2f23a8be8f071617bd4b6a6101c339749e0fb"
                ]
            }
        },
        "20231103": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "raspberrypi5",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2023-11-04T17:03:19.763869192Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:31.895761202Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-06T18:42:53.905315575Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:a506790441a5cd056fb456111da480939a46667d520b519dcb9b2e2aa16aae70 in / "
                },
                {
                    "created": "2023-10-06T18:42:54.852939758Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-04T14:05:43.22598589Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-04T14:05:43.22598589Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-04T14:05:43.22598589Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T14:34:18.977818495Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T14:34:20.236374739Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T14:34:20.236374739Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-04T14:34:20.246502673Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T14:34:20.255833503Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T14:34:20.26399513Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T14:34:20.26399513Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-04T14:34:25.601224907Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T14:34:25.783838009Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T17:03:19.593865165Z",
                    "created_by": "LABEL io.balena.device-type=raspberrypi5",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-04T17:03:19.593865165Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T17:03:19.763869192Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:a37bac7c99baeb556998a67a51775b34aa6df7829fa1ff19323033c5e19837b3",
                    "sha256:768fbcc1112a55954ab49021af3e5b3e77d06892f0018801cb6a68567a441e44",
                    "sha256:b339e6005ff8696452b8a5daf08c04afc137c0da129e399cf294d19b6213af01",
                    "sha256:80e7fcb77b05762cb4af7a336c31edd97b255eb9c5e68b5e2d99fcd0c0941c00",
                    "sha256:faa025149da6c8af6245b9feb2dfa133869871b24b83291212a581a8ac861951",
                    "sha256:85fb00c475997eaa7bf88fdc4a78bd8ad8ecfcafaa4870eb4c2e610747381ba2",
                    "sha256:707dbcf7ea87fd75e1d03a7f275e36d8fcfc1b4ea1f3c867ab6830318bf147e9",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:2509d1d7a240f88f51a41393363e38c35b81e3edf67fa356b59390c21617a3ab",
                    "sha256:171429e7f6504ee1e18052a76bfe8bba842c7c6431ef9aace42dec71ec4b4f87",
                    "sha256:2f738c2c60a7541836ab6cba290bbf92fadc59c7087650523f34270dfd060022"
                ]
            }
        },
        "20231106": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "raspberrypi5",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2023-11-06T12:34:47.835870966Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:31.895761202Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-06T18:42:53.905315575Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:a506790441a5cd056fb456111da480939a46667d520b519dcb9b2e2aa16aae70 in / "
                },
                {
                    "created": "2023-10-06T18:42:54.852939758Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T09:12:27.261337628Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T09:12:27.261337628Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T09:12:27.261337628Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T09:44:07.194449485Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T09:44:08.356242913Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T09:44:08.356242913Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T09:44:08.370923209Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T09:44:08.383861082Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T09:44:08.401598819Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T09:44:08.401598819Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T09:44:14.097449997Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T09:44:14.33458648Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T12:34:47.673440252Z",
                    "created_by": "LABEL io.balena.device-type=raspberrypi5",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T12:34:47.673440252Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T12:34:47.835870966Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:a37bac7c99baeb556998a67a51775b34aa6df7829fa1ff19323033c5e19837b3",
                    "sha256:bb42b2b57488a97c34e8f0aa9c9a04b6b5ddc51428a7f869c902e262985533fa",
                    "sha256:f41e2d07027059a658a46da06111805a1c38c357d7a263b65a57906a413afcb8",
                    "sha256:6dfd1348c7cf846716582db5414652bd266c84c3ceb084217d2c1faaa43610bd",
                    "sha256:1ef3bd9e556e1fe5e94ee5fc778405d0e160b3b2f911f7b73b841e3f2947d4ec",
                    "sha256:b00ab734246e3ab0a163af225efd04d30fbb893167c4883967444d8739b0a28b",
                    "sha256:505040d84b751f1b80aad25e47e2b5770da95393e303943d0e90452bb789625d",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:3de7d77508b1af83bfd44b6a7776ab5e9c687ecfe948f5f9d8f15802beed22b0",
                    "sha256:472ace270ccea41c14f9933f0ae960d9532fe6435435172037ed71643d1a40fe",
                    "sha256:b852d3e7cabdbb835dd738b4c9527990b0b1ff959e4bf050462c494b30c51dc0"
                ]
            }
        },
        "20231127": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "raspberrypi5",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2023-12-01T13:07:49.854569597Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:31.895761202Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-29T00:47:03.16713451Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:270e11b4c18af1c1efb8b8579be7fbda5255d56dd69f83ef7d933cfd2c685e5c in / "
                },
                {
                    "created": "2023-11-29T00:47:04.125919026Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T10:52:09.172740458Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T10:52:09.172740458Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T10:52:09.172740458Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T11:10:46.008255947Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T11:10:47.111959762Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T11:10:47.111959762Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T11:10:47.123059062Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T11:10:47.148503741Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T11:10:47.157133896Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T11:10:47.157133896Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T11:10:50.883923644Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T11:10:51.046020579Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T13:07:49.720770039Z",
                    "created_by": "LABEL io.balena.device-type=raspberrypi5",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T13:07:49.720770039Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T13:07:49.854569597Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:22de68abb450063be7e40efd22fd3b41bec469efafdd95e25c65998648e52b28",
                    "sha256:60f2f571d3fb1d1d2155d703033185efdcb8fd06f11360aff3752c6009ddbba5",
                    "sha256:8bb3ecdba476409248d260241fff01266e4176e947fe811a5efe5456870e671e",
                    "sha256:6852dc1f1a771f4a7632382350c1dbaa2ae3e16802b4884d04618e03763e8376",
                    "sha256:9db2458df0d1ffca59509d5dbd49436ef952483f1042d53531ca90ba7d6de9e9",
                    "sha256:8d401a597be69855ebfaf84921f07b57da8bb7a5c49c370999b998f6062358a2",
                    "sha256:05f9f870334e6de793d303f103d1f1b35f7df1ff21724f7ebaeb6fc561bccc2c",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:24546f46791bf568236132bceae1cdf41c9ca9f6d3e09077cab2bc32ee6bb76c",
                    "sha256:24ce1f5be0535d16b93594731aca9f7680b480d54b2a5820055e1580b872afe6",
                    "sha256:2b6dc1653ae6cb200b6663e6156cbdd3bdc518b03fac893f19869e9e8855682c"
                ]
            }
        },
        "20231204": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "raspberrypi5",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2023-12-06T22:55:22.373508696Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:31.895761202Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-29T00:47:03.16713451Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:270e11b4c18af1c1efb8b8579be7fbda5255d56dd69f83ef7d933cfd2c685e5c in / "
                },
                {
                    "created": "2023-11-29T00:47:04.125919026Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T20:40:21.575448793Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T20:40:21.575448793Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T20:40:21.575448793Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T20:59:06.4416038Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T20:59:07.14149679Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T20:59:07.14149679Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T20:59:07.150718208Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T20:59:07.159290685Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T20:59:07.187587582Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T20:59:07.187587582Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T20:59:10.850419463Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T20:59:11.010511508Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T22:55:22.243882328Z",
                    "created_by": "LABEL io.balena.device-type=raspberrypi5",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T22:55:22.243882328Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T22:55:22.373508696Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:22de68abb450063be7e40efd22fd3b41bec469efafdd95e25c65998648e52b28",
                    "sha256:2c6b0df21f9efd51a24a59463b9265452ccc9cf8a26908c50d2742c0e67683bd",
                    "sha256:906012c4f278d0d6c4a614afd4c812fc55bc367d28aac2c10cbdd33ac6ec80b8",
                    "sha256:34fc306b51c5f84676518d54cf67a097f48bfc8e79fb8c0ffc71ed9b2d1b5def",
                    "sha256:aa005d370b40094b326443ce4f1b6d04a780598588bd8f8fa1dc601171d59314",
                    "sha256:e580b4505982459166845d47c3159777541e000c8826a05635c6f84f62f03011",
                    "sha256:79990d4ff119d7188fd5fdcaaa04c391747be11fefbbe682a6a2c495c8ca3a6b",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:0aff9ccfdfd88ab9194d2d15e49264900a8942406276260bf5fb479d637d2075",
                    "sha256:6d3c0215ae8da55215b0e456b5d4b89a26cb450350fe5507c5eaf7bd88c8e132",
                    "sha256:e29791cd9f4ed15e18ea8be26b30c0de9a5af5048774d06e28ebf84d9800b573"
                ]
            }
        },
        "20240227": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "raspberrypi5",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2024-03-01T23:15:37.22340042Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:31.895761202Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-29T00:47:03.16713451Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:270e11b4c18af1c1efb8b8579be7fbda5255d56dd69f83ef7d933cfd2c685e5c in / "
                },
                {
                    "created": "2023-11-29T00:47:04.125919026Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T20:49:58.705358685Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T20:49:58.705358685Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T20:49:58.705358685Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:08:24.834287933Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:08:25.565567755Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:08:25.565567755Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T21:08:25.579271093Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:08:25.617204263Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:08:25.629384601Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:08:25.629384601Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T21:08:29.321790107Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:08:29.46619614Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T23:15:37.108481029Z",
                    "created_by": "LABEL io.balena.device-type=raspberrypi5",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T23:15:37.108481029Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T23:15:37.22340042Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:22de68abb450063be7e40efd22fd3b41bec469efafdd95e25c65998648e52b28",
                    "sha256:bfe341409759f9ccd364ecb2d335246560d19282f3ecf321c53836e101a82d2a",
                    "sha256:22279a1bcbb3b6a49c8d9ada414e0b58c5c83f35e20c9a33acc65e0aedb733a1",
                    "sha256:59b3dbe842a8cbc03ed09e65a15a87e8c46f6653b87eb93c5b37d8ab77060acf",
                    "sha256:2ad87538d509ffa4457cec4d29a36d570c8392257dab445452209d4097b7bf52",
                    "sha256:4b3f303bc53eefd36ad3db9ee937836bf0e5855a96ec2546c67cb8238fa8c5bc",
                    "sha256:27f44cee2cfb128916d178e2e1dd253065b766fcffe0f37cdb2588702c65bd5f",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:7f5845d6da8e4b02efd4b375c5222854a386a7b02c491fe3b96307345b96014d",
                    "sha256:aa61cf5f3f2942560cb632dd38548d7fd159cf0a4b737535c92836aa99ca1f52",
                    "sha256:9bd02f5806da6e3ef9c204b8c1b4ff3a20f9a32e3329966bb482123a9c47dee3"
                ]
            }
        },
        "20240304": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "raspberrypi5",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2024-03-05T10:50:26.53777156Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:31.895761202Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-29T00:47:03.16713451Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:270e11b4c18af1c1efb8b8579be7fbda5255d56dd69f83ef7d933cfd2c685e5c in / "
                },
                {
                    "created": "2023-11-29T00:47:04.125919026Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T08:24:13.360409226Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T08:24:13.360409226Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T08:24:13.360409226Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T08:43:22.770169859Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T08:43:23.650621519Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T08:43:23.650621519Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T08:43:23.66033272Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T08:43:23.670216283Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T08:43:23.695421657Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T08:43:23.695421657Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T08:43:27.455502812Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T08:43:27.593974423Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T10:50:26.413272107Z",
                    "created_by": "LABEL io.balena.device-type=raspberrypi5",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T10:50:26.413272107Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T10:50:26.53777156Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:22de68abb450063be7e40efd22fd3b41bec469efafdd95e25c65998648e52b28",
                    "sha256:28463901e499aa0a1515b57d0fbafa9cb9a2cc02cc10ed1687c180941c557184",
                    "sha256:0ca6f2444de4ad55ab4af4fd74364d376cec4fab74ebda60cba78c9fa2d7e649",
                    "sha256:cfc10fd96b96916769b790f45b5a4f0a1a17202f2532d659330de963d4494ebf",
                    "sha256:d2c34fbda1de7685d96923948d480fbe0ebab10b9087bfebda73744dbe2a6f9a",
                    "sha256:0d88f38f1e25f8d79cc6f17c26de206e21378fdd492c88062ab3e718003d32df",
                    "sha256:01e1144fabf916d9df9dbc69c087247ccbb1e57b391ed28f7dac24153a50d7b2",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:7ad9ead66349340e94a99303f594e85c786a6fabee7368153801d079722794bc",
                    "sha256:277971ea1ea290467dd51b95c3577111463f5dc7077258efb29b337ec37f92ca",
                    "sha256:c50f7b67b899b950301dce6815e76581bd6eadf166ce724064342aafc78db096"
                ]
            }
        },
        "20240401": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "raspberrypi5",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                }
            },
            "created": "2024-04-01T23:46:43.192266903Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:31.895761202Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-29T00:47:03.16713451Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:270e11b4c18af1c1efb8b8579be7fbda5255d56dd69f83ef7d933cfd2c685e5c in / "
                },
                {
                    "created": "2023-11-29T00:47:04.125919026Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T21:26:29.343455526Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T21:26:29.343455526Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T21:26:29.343455526Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T21:45:10.957762154Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T21:45:11.852141047Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T21:45:11.852141047Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T21:45:11.862471903Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T21:45:11.872331413Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T21:45:11.898584749Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T21:45:11.898584749Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T21:45:15.686171825Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T21:45:15.820771715Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T23:46:43.076294289Z",
                    "created_by": "LABEL io.balena.device-type=raspberrypi5",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T23:46:43.076294289Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T23:46:43.192266903Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:22de68abb450063be7e40efd22fd3b41bec469efafdd95e25c65998648e52b28",
                    "sha256:3a6d39f67382783e2c69d9a448aa59d1d7654260210364d05c2cae2ef469e3c8",
                    "sha256:8b316e0949cd1905304ca774963ddae530565f690a65de9db1a2dafa9aed0363",
                    "sha256:7fa4949a4c79caf7d749cc4abcbc241a5dd3a5c8d0155458cf6d4d83ac483646",
                    "sha256:0a0eea417236fa5be4e06c1d20766fd9f3b0e064419a66f356dea0f1f6d794df",
                    "sha256:ad31ce618fd1f26b74bc2900fbd27319ed86917e85375f90b57d28b291156d51",
                    "sha256:7b8582873ef4cde2aca83ece090a3993ca7c4f8fe0b13c3b0b064f08c7b21c21",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:8050b5f7d3d161f91b3bad0576691d8640130b32c0b8f23db87cdd4fee47c82e",
                    "sha256:31ab2d2b151011b640236ef0b2d0b2cf3b5928aff282a614c0affce35da9ea37",
                    "sha256:b6d8f2a786c666058d591d1a9eae9808f450684bad88d50400cbbadcda61a90c"
                ]
            }
        },
        "20240408": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "raspberrypi5",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                }
            },
            "created": "2024-04-09T20:00:01.596559907Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:31.895761202Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-29T00:47:03.16713451Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:270e11b4c18af1c1efb8b8579be7fbda5255d56dd69f83ef7d933cfd2c685e5c in / "
                },
                {
                    "created": "2023-11-29T00:47:04.125919026Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:52.915602222Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:52.915602222Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:52.915602222Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:54:04.100191166Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:54:04.963844501Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:54:04.963844501Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:54:04.973366628Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:54:05.001513857Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:54:05.024710968Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:54:05.024710968Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:54:08.797015979Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:54:08.943058393Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T20:00:01.48497321Z",
                    "created_by": "LABEL io.balena.device-type=raspberrypi5",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T20:00:01.48497321Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T20:00:01.596559907Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:22de68abb450063be7e40efd22fd3b41bec469efafdd95e25c65998648e52b28",
                    "sha256:03dd9a4ed991dc43e9a504ad71941782bb6fd4cd57f8ade649bbe25b622e3902",
                    "sha256:d24e8e6aec171dc7068d2c19b85d8c6341381b2f0cf4e1d1a20d5419f2d1ec53",
                    "sha256:e743a07ebcce27b755341d992eb4148fe86bd04481c6d8f2b6fe7364a942af19",
                    "sha256:1c988fbb0bdd3374b1f72bebc1953bd62853c7e33608dbc885ff64eba44dc1eb",
                    "sha256:7fad6968fdbdd1afee5f76e3b2f3df1829677bc85be4fa920cb57db14562699c",
                    "sha256:2999088cf700c485af0973e03dd5e2ff9d96b3f604f5908307f3edb5377c6d58",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:a75c43802eb36b20a7183fe5c30e33ef495a904237a7483d5c73c1df1691887b",
                    "sha256:5317fa65bc7c35c38c442c90f849cc95fc28d4aa5eb818b916e1a8116119211a",
                    "sha256:01008a19db5ef632d2ed55d56cefe9f631cc0c1484a447ea200434f527fe9280"
                ]
            }
        },
        "20240429": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "raspberrypi5",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                }
            },
            "created": "2024-05-06T10:38:45.538160132Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:31.895761202Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-29T00:47:03.16713451Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:270e11b4c18af1c1efb8b8579be7fbda5255d56dd69f83ef7d933cfd2c685e5c in / "
                },
                {
                    "created": "2023-11-29T00:47:04.125919026Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T09:28:47.993183335Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T09:28:47.993183335Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T09:28:47.993183335Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T09:47:56.501476974Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T09:47:57.631980985Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T09:47:57.631980985Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T09:47:57.644124262Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T09:47:57.678847981Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T09:47:57.688494096Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T09:47:57.688494096Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T09:48:01.526529414Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T09:48:01.665893428Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T10:38:45.395029597Z",
                    "created_by": "LABEL io.balena.device-type=raspberrypi5",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T10:38:45.395029597Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T10:38:45.538160132Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:22de68abb450063be7e40efd22fd3b41bec469efafdd95e25c65998648e52b28",
                    "sha256:ef64ad49ccf58709af070779ae49d014558d78a8b6a21fcc279c09ddac79e6c9",
                    "sha256:486e799e950e2b998ed0a1a7221aed44130002259c2b437524c7a8a72b725a56",
                    "sha256:5ad52f9d14deab1b2c3a79dfb68bf730440e209f5926a2cd2ebd561c519a08de",
                    "sha256:73001e4334a2e5a98b50faf87e712eaf851af09ac903e83a569150844ce9eda1",
                    "sha256:696c197b14bb7731bf0a36bbdc5e5272937b693f192b143e02dac747a1305ba1",
                    "sha256:f27b4f97c199fdc59cc49eb91fc7a348daf160285ca6bfce88ede5b64e4bb0a9",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:22341517b8222bb5810db07c816fbd0de10749523856c0263caf14789e77d27d",
                    "sha256:814378e6a74f147b97de86dbedb021279d972677e845a91c72091b86b4dcd6d5",
                    "sha256:07672fdc7d8d9779da09498cf20a8b017e6d3ee8d7e8b681424c91d8c94d3f67"
                ]
            }
        },
        "36": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f36container",
                    "FGC=f36",
                    "FBR=f36",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "raspberrypi5",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                }
            },
            "created": "2024-04-09T20:01:07.438256949Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:22.742482656Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f36container FGC=f36 FBR=f36",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-04T20:03:43.247035495Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:cee460779f9d1124ed00f2513a5161d8a111efd58c800bb362e4de8ee2ff74c6 in / "
                },
                {
                    "created": "2023-05-04T20:03:44.015472382Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:44.289415356Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:44.289415356Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:44.289415356Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:52:48.382975748Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:52:49.102483271Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:52:49.102483271Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:52:49.114498269Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:52:49.160258289Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:52:49.171704486Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:52:49.171704486Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:52:52.904600449Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 36   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:52:53.038869737Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 36 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T20:01:07.332215187Z",
                    "created_by": "LABEL io.balena.device-type=raspberrypi5",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T20:01:07.332215187Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T20:01:07.438256949Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 36 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:cd2d1f658717e76eb6caf0ebc0408c1c3e79889436d4de8e629563541cf3e3ac",
                    "sha256:96e8237f4a277db04c955fec05200b74f0da4fc11acef6e970444aa8d1ac4877",
                    "sha256:eebacd7727dd5f1adf1a458419bda175ca082cd8b48b6f5ab3162ceac82ead68",
                    "sha256:6847feafbfe5a6b06d1a3180b2725497fd90858670af4d7e07d859032794fee6",
                    "sha256:2329dcac2e30f4e2a05e85f5b8dbaa8227ee8eb85ef825dd7ac0cb8fad9571fe",
                    "sha256:ca51ce238f812d151cfee4e045e109e016d9a7f7d83543fe8f0f508ebc62399e",
                    "sha256:eaa4fd10880c293c373fc3aa5f36e6d0b2267661144b4b50b13423abdc65b432",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:57d8577708926141837b5cef818df1c257b9d966cce81182c4fbc54c0cf82336",
                    "sha256:7499bb41f0fff1317b528bf463a0b30e83e5515588f56b869e8d2f33bcf9cb6c",
                    "sha256:fdb7961c4c1d5b0360efaae54ebf463383491686a226e64dfaea06dd2aa15545"
                ]
            }
        },
        "36-20230929": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f36container",
                    "FGC=f36",
                    "FBR=f36",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "raspberrypi5",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2023-10-04T23:25:08.15992044Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:22.742482656Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f36container FGC=f36 FBR=f36",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-04T20:03:43.247035495Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:cee460779f9d1124ed00f2513a5161d8a111efd58c800bb362e4de8ee2ff74c6 in / "
                },
                {
                    "created": "2023-05-04T20:03:44.015472382Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T06:28:26.44141738Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T06:28:26.44141738Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T06:28:26.44141738Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T06:52:10.14333682Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T06:52:11.560313193Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T06:52:11.560313193Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T06:52:11.59227561Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T06:52:11.60340289Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T06:52:11.619420149Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T06:52:11.619420149Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T06:52:16.486359938Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 36   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T06:52:16.828028478Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 36 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-04T23:25:07.997136698Z",
                    "created_by": "LABEL io.balena.device-type=raspberrypi5",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-04T23:25:07.997136698Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-04T23:25:08.15992044Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 36 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:cd2d1f658717e76eb6caf0ebc0408c1c3e79889436d4de8e629563541cf3e3ac",
                    "sha256:05ce1b7fa6b0ced945e9fc1d7f1f0dfa18b03b07cdd6519f6ea474b052de883b",
                    "sha256:9e9f88eff6885b01860209ee41f449670562ec3746b2b29dd15e691c1bb16b93",
                    "sha256:26962155532afb1cf5af9c8452dabade728ab6dcc317cdc035ba3dfb4a625de3",
                    "sha256:2a8c67bac577afb58a1c7f8027a3ea327157889daade6bc813255fed4b28c7c6",
                    "sha256:19cde6d3569afc75f1fe7aeb1b94ccc4af816b762b0d936c97794daf78ed89de",
                    "sha256:ea7164d23b98002b69a33a0e805eb3371773875a916e8a49ec706c920b856d61",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:6ccdb93e087c02477234e1031bae4936d610cfb73384f3bfce75e3fec5f6865b",
                    "sha256:c62774d665cbe39ad10e9bba533347ebc560ad4fd680b31d42e4e385e084a2b1",
                    "sha256:088d8c081bdc31c93a649f18e64e8281706c8e49b307288da460455c5e260cde"
                ]
            }
        },
        "36-20231103": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f36container",
                    "FGC=f36",
                    "FBR=f36",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "raspberrypi5",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2023-11-04T17:04:23.612556367Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:22.742482656Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f36container FGC=f36 FBR=f36",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-04T20:03:43.247035495Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:cee460779f9d1124ed00f2513a5161d8a111efd58c800bb362e4de8ee2ff74c6 in / "
                },
                {
                    "created": "2023-05-04T20:03:44.015472382Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-04T14:05:51.77913656Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-04T14:05:51.77913656Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-04T14:05:51.77913656Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T14:34:52.146138052Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T14:34:53.485981428Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T14:34:53.485981428Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-04T14:34:53.501948442Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T14:34:53.534351296Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T14:34:53.551492077Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T14:34:53.551492077Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-04T14:34:59.163447727Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 36   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T14:34:59.407290408Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 36 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T17:04:23.455059025Z",
                    "created_by": "LABEL io.balena.device-type=raspberrypi5",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-04T17:04:23.455059025Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T17:04:23.612556367Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 36 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:cd2d1f658717e76eb6caf0ebc0408c1c3e79889436d4de8e629563541cf3e3ac",
                    "sha256:0951a032362c378170cff28bd69fda54b2a89b2358a705928c3e0a3e987de581",
                    "sha256:5f9c9ad1eab5caa95a2a457607e654cd1f1cb1ab74681557680887d6c77ced48",
                    "sha256:7226546a0d6b125b34e9ff76b8934bea9bdd152ede8f594fdb7130d1e5064b1d",
                    "sha256:0a83373bac0d6dfd8f735e9ed99ef382ad60478d2238eb196f172bc4f40a3c0b",
                    "sha256:70d6ae4d04a996f3217c4ca7fbc2a9523349cc8ee322d1680f24d9c9a796f04e",
                    "sha256:be43df9660d9c6e41bdf584275d2eb329a1e7e207869c5fc7274df5afd012bc5",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:1c056b9c3a4eaa0d2b14c92dafe4209699e36f30dc450f1fdb21c5503bb9e217",
                    "sha256:e9929a97e92a4f56357bbc7d54289df4dd98031d61d4aeb17ff35b74bdf7ac1f",
                    "sha256:5310b037c354e0da4c7943b5aa53657c8745c68d603901a23eba19ef906c00c3"
                ]
            }
        },
        "36-20231106": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f36container",
                    "FGC=f36",
                    "FBR=f36",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "raspberrypi5",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2023-11-06T12:27:47.812318134Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:22.742482656Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f36container FGC=f36 FBR=f36",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-04T20:03:43.247035495Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:cee460779f9d1124ed00f2513a5161d8a111efd58c800bb362e4de8ee2ff74c6 in / "
                },
                {
                    "created": "2023-05-04T20:03:44.015472382Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T09:12:35.649605283Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T09:12:35.649605283Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T09:12:35.649605283Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T09:41:53.130222292Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T09:41:54.435309446Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T09:41:54.435309446Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T09:41:54.44835057Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T09:41:54.477975525Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T09:41:54.492194652Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T09:41:54.492194652Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T09:42:00.200803708Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 36   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T09:42:00.424308379Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 36 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T12:27:47.689316052Z",
                    "created_by": "LABEL io.balena.device-type=raspberrypi5",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T12:27:47.689316052Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T12:27:47.812318134Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 36 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:cd2d1f658717e76eb6caf0ebc0408c1c3e79889436d4de8e629563541cf3e3ac",
                    "sha256:fbca01e85af298fa11995aee1bbd4658369fdb052de565344b04c2d7f69d042d",
                    "sha256:27ae2f7ef624598ce84145a76dbbeb76035333a3abb0bfddc5ab349f480f9827",
                    "sha256:ca23ee149b3d03336f78ece07cc113e5009e34ee3e2596c73ce1b0344a7d2a77",
                    "sha256:991306643e23f5f5fe287d555fb486b7c937395620e97cee8746e907e781f6d8",
                    "sha256:ea9472c023ea625c2ba44ca95f24307cd817e6b46bf9144332ac0b3ef6ee8ffb",
                    "sha256:8e88def0a52dfc3fcfdd1c0d176b0bf4cb0bf7c491ea42a1eda58dbec84ea733",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:0cd95cc22f322bdc8f04e36456eb49b4da908c3bb847d27d32a364f1d6d63253",
                    "sha256:ff65cd5a84b561a80a64cf33f15f8d20e62cc757aacd4e8c7ab7fb8c6e8bb50b",
                    "sha256:899b5a3974f24630fcc07c211651ab84e24ec448c166a4edb153fb6388726d3d"
                ]
            }
        },
        "36-20231127": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f36container",
                    "FGC=f36",
                    "FBR=f36",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "raspberrypi5",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2023-12-01T13:07:38.243002994Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:22.742482656Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f36container FGC=f36 FBR=f36",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-04T20:03:43.247035495Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:cee460779f9d1124ed00f2513a5161d8a111efd58c800bb362e4de8ee2ff74c6 in / "
                },
                {
                    "created": "2023-05-04T20:03:44.015472382Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T10:52:16.234962769Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T10:52:16.234962769Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T10:52:16.234962769Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T11:10:25.32890941Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T11:10:26.409909941Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T11:10:26.409909941Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T11:10:26.419491063Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T11:10:26.428051209Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T11:10:26.43866507Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T11:10:26.43866507Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T11:10:30.344632509Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 36   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T11:10:30.508603857Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 36 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T13:07:38.096515992Z",
                    "created_by": "LABEL io.balena.device-type=raspberrypi5",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T13:07:38.096515992Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T13:07:38.243002994Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 36 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:cd2d1f658717e76eb6caf0ebc0408c1c3e79889436d4de8e629563541cf3e3ac",
                    "sha256:0988f5f003f0969108012f5d711269905aec30d22188d5f4f22f4806dffd83f5",
                    "sha256:6f4d35bad817db05463cdf3f43efd0862bdcab6e32ac7ab7a209c80048b3efa8",
                    "sha256:2cfb6e873f60f5ac84cabbf2304479d35de5ed6331cac9864aea1c0750b921f6",
                    "sha256:2ab48a6044f5f632d11728a70bfa1bf43fb88d3317b8a40a2871a3705ebf2bcd",
                    "sha256:7d8f3f0a00baddeca1dd73dda6026927206e5cec4531c9a682738b03fdd89845",
                    "sha256:9e8204a91a6fe42ae072bf8eca34adcbc454e46b72d65d5447362acd18c9bf6b",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:8445a4f8bc7491031f472014e64b8bcf637d32adcb86e6d9d61e6ecc0752c75a",
                    "sha256:04a66bbf050836af667b6b1acb9bfbdc58a42894d41825c2c2528ccd5dd84e54",
                    "sha256:cd58339b3e9106d18f21a2b125352f70582589792325b90f9dfd165e52e19280"
                ]
            }
        },
        "36-20231204": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f36container",
                    "FGC=f36",
                    "FBR=f36",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "raspberrypi5",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2023-12-06T22:54:53.300344252Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:22.742482656Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f36container FGC=f36 FBR=f36",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-04T20:03:43.247035495Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:cee460779f9d1124ed00f2513a5161d8a111efd58c800bb362e4de8ee2ff74c6 in / "
                },
                {
                    "created": "2023-05-04T20:03:44.015472382Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T20:40:18.714260335Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T20:40:18.714260335Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T20:40:18.714260335Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T20:58:20.290618266Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T20:58:21.05068733Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T20:58:21.05068733Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T20:58:21.063806516Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T20:58:21.103887941Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T20:58:21.118444605Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T20:58:21.118444605Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T20:58:24.947450657Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 36   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T20:58:25.0897754Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 36 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T22:54:53.165129121Z",
                    "created_by": "LABEL io.balena.device-type=raspberrypi5",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T22:54:53.165129121Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T22:54:53.300344252Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 36 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:cd2d1f658717e76eb6caf0ebc0408c1c3e79889436d4de8e629563541cf3e3ac",
                    "sha256:1c7db62dcfa18c79ff9899c266455d694030ff0f9a08cad5af263ccac7d5cfb2",
                    "sha256:6efaa96a298fa27a660499947df886ec2f9e28ca5c4c0696dc54c0daf012da13",
                    "sha256:7142d44abc28c8bbe2807baa567da519550742fd5824b6f07639b65ad8fdecca",
                    "sha256:1a40531135766009c0fa215d24e3e159db54a27d0a2a6c63d0b81504a20a4c89",
                    "sha256:ef2c2ed26c2c5681e957e761dc1ba1ffd9dcfdcf670bf1725173cb6a2a5866ce",
                    "sha256:998e969a67a9b686d7306559e3f40f25832ed04628aa75927315b8675a972f9a",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:8d72956b9828c889d2dbb87697fb117ef08f3865d27dc2aba86a25d15a369dae",
                    "sha256:587a4b0614520c092d6592c0e3f99ec5406dc3bb9257ff97068ae0a4aef2605d",
                    "sha256:bfe7b1486ea178190a1f0142bf44103c184f8d862306645153f6d2478a27176b"
                ]
            }
        },
        "36-20240205": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f36container",
                    "FGC=f36",
                    "FBR=f36",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "raspberrypi5",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2024-02-05T02:46:50.686334671Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:22.742482656Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f36container FGC=f36 FBR=f36",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-04T20:03:43.247035495Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:cee460779f9d1124ed00f2513a5161d8a111efd58c800bb362e4de8ee2ff74c6 in / "
                },
                {
                    "created": "2023-05-04T20:03:44.015472382Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-05T00:26:02.331567977Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-05T00:26:02.331567977Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-05T00:26:02.331567977Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T00:45:30.731081444Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T00:45:31.728887582Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T00:45:31.728887582Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-05T00:45:31.769327849Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T00:45:31.793427983Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T00:45:31.805803761Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T00:45:31.805803761Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-05T00:45:35.639168025Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 36   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T00:45:35.801238853Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 36 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T02:46:50.567257619Z",
                    "created_by": "LABEL io.balena.device-type=raspberrypi5",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-05T02:46:50.567257619Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T02:46:50.686334671Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 36 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:cd2d1f658717e76eb6caf0ebc0408c1c3e79889436d4de8e629563541cf3e3ac",
                    "sha256:70bec8b60420945ed68778b7651fdae5be1e762a544bda7cfe8646d3cfa496a8",
                    "sha256:46bb4885e89f9818f246467a6d6c22a4015e68ba76feafc7a95c2654ba1a864c",
                    "sha256:ffe006fc0417220624c7603f50db7af8cbaeb87775b8cad8121584dbc82190e0",
                    "sha256:7a426c3f2c3daf0a3a7b703c8810230c4f76ec54a5b3972aaf2ac4b44ed3c031",
                    "sha256:a17d3939a40b03dcd2d31f8b949632c3056d1fd7ba90b808bdcb69574f106cea",
                    "sha256:3a167f245df36cafb1689d9e83280f92db3a94410899c634a0e4eeb1278e12b2",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:7aefa85f0b6c07f7b79a8e1608f00c6e8d38f86e4d0051968c2fbf9587955bf2",
                    "sha256:b32a101fc609317c68ec2e0940fde6c115acd2c20594d7357a041ece472caf93",
                    "sha256:28ec11d5e5bbb4690b442a8fb282ba3f57567b60537fbfdacac9d6f7542fb559"
                ]
            }
        },
        "36-20240227": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f36container",
                    "FGC=f36",
                    "FBR=f36",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "raspberrypi5",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2024-03-01T23:15:17.297755543Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:22.742482656Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f36container FGC=f36 FBR=f36",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-04T20:03:43.247035495Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:cee460779f9d1124ed00f2513a5161d8a111efd58c800bb362e4de8ee2ff74c6 in / "
                },
                {
                    "created": "2023-05-04T20:03:44.015472382Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T20:50:02.277291954Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T20:50:02.277291954Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T20:50:02.277291954Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:08:19.727432623Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:08:20.493667027Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:08:20.493667027Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T21:08:20.504558637Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:08:20.53410244Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:08:20.54393228Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:08:20.54393228Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T21:08:24.266191717Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 36   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:08:24.405560095Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 36 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T23:15:17.179839426Z",
                    "created_by": "LABEL io.balena.device-type=raspberrypi5",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T23:15:17.179839426Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T23:15:17.297755543Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 36 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:cd2d1f658717e76eb6caf0ebc0408c1c3e79889436d4de8e629563541cf3e3ac",
                    "sha256:e864a5fd5a85ea7de7c429ad3786adc43add7b3bad7605a5267f71b74ef4f46d",
                    "sha256:f9745bfda56c8769e29c7fe4418ec400bda3547d6f7e2b94cf1578c853decfb1",
                    "sha256:3b0bb44987d7ed3bb758a262b1cdb5cc89a8bb7caa6cf17d171ec9ffab456784",
                    "sha256:b668db57138d2f4d3a3a4fe2a4fca77d7a33a1147ea5193bc7f088a29bc3df6e",
                    "sha256:4fb9cef9cd8dfd649c46b33c2804e0ed65b39895160fd2940fa1e823a207137b",
                    "sha256:bf049f60667eee7c3ab494a865bbe46c948b2953f52aa4768f5eeb0ab3e7035f",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:9c4d3515b2ac6333e066ae20a1676f1c14cfa2e4013e83e034c0bfd5bce0137e",
                    "sha256:715c907c50fff879ceb6e347f85804ff62167abe73c25840f8a8b60b830add4e",
                    "sha256:18db654c6dceae793e9e242533a895dd4ef393b29eb83905eae3c015cec11869"
                ]
            }
        },
        "36-20240304": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f36container",
                    "FGC=f36",
                    "FBR=f36",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "raspberrypi5",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2024-03-05T10:49:25.0166149Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:22.742482656Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f36container FGC=f36 FBR=f36",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-04T20:03:43.247035495Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:cee460779f9d1124ed00f2513a5161d8a111efd58c800bb362e4de8ee2ff74c6 in / "
                },
                {
                    "created": "2023-05-04T20:03:44.015472382Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T08:24:14.922279421Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T08:24:14.922279421Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T08:24:14.922279421Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T08:42:21.859759897Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T08:42:23.326242746Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T08:42:23.326242746Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T08:42:23.336383154Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T08:42:23.346622195Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T08:42:23.377651932Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T08:42:23.377651932Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T08:42:27.266843534Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 36   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T08:42:27.402142548Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 36 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T10:49:24.879401975Z",
                    "created_by": "LABEL io.balena.device-type=raspberrypi5",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T10:49:24.879401975Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T10:49:25.0166149Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 36 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:cd2d1f658717e76eb6caf0ebc0408c1c3e79889436d4de8e629563541cf3e3ac",
                    "sha256:b59a6b5e1477f2c1760b9fafd534430e1b3e627940f206e2a912fc7cc99e8b5f",
                    "sha256:9d921ab8193391974ec2825bcb16b8687c1a495d839300d5976a46254f5cd319",
                    "sha256:357859910e787423ff442861725cd291a1d55ae5384cd316b21cac31999aed1e",
                    "sha256:41fb44363c3ee3098b05a3a643a8fe49f2a04b7ad67bcadf125aa1c2114bfece",
                    "sha256:34423e69f4515ba4a00b47bbfdf43063c6c1a46f6ec4f63ccb4a8f263d2854b1",
                    "sha256:2fcd075d152d2c1213ae41f4155e55bdab5602455031af70a1d006c325b4f722",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:d6c771aa19b713b8429a249e0328e601b8714348b76f00b828e7ae21393eedba",
                    "sha256:c100613e0efd000865edd39ff22e13d8505ca049ef546d89e48039e7255eed37",
                    "sha256:bdb48ec1b8a6dc247770fbb3494a21b4bead3a04bc0a515a288d051cf405867f"
                ]
            }
        },
        "36-20240401": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f36container",
                    "FGC=f36",
                    "FBR=f36",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "raspberrypi5",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                }
            },
            "created": "2024-04-01T23:46:15.253227085Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:22.742482656Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f36container FGC=f36 FBR=f36",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-04T20:03:43.247035495Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:cee460779f9d1124ed00f2513a5161d8a111efd58c800bb362e4de8ee2ff74c6 in / "
                },
                {
                    "created": "2023-05-04T20:03:44.015472382Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T21:26:28.405977148Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T21:26:28.405977148Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T21:26:28.405977148Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T21:46:06.484116098Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T21:46:07.353362908Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T21:46:07.353362908Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T21:46:07.362716446Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T21:46:07.371056132Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T21:46:07.40557557Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T21:46:07.40557557Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T21:46:11.057940603Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 36   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T21:46:11.196274302Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 36 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T23:46:15.128616353Z",
                    "created_by": "LABEL io.balena.device-type=raspberrypi5",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T23:46:15.128616353Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T23:46:15.253227085Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 36 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:cd2d1f658717e76eb6caf0ebc0408c1c3e79889436d4de8e629563541cf3e3ac",
                    "sha256:0bcb93467a71db1d91f97206ca3d53ef7ed8325e886870c4f93254125506ccaf",
                    "sha256:ee5232de64f68e282c5152a2cf1ee54bf9a7144c661bb3f52975ed782c2f34c5",
                    "sha256:b5750ef0a3421417ee1aa11017b9e9cf5c58cb301c449b82d5c1db7ba06a1245",
                    "sha256:9e654b7993325650e6bdfe739d4519434ff8635d924db824318bd59c3052690a",
                    "sha256:6e0af07b0964b4201fcde2932ac07b59991415f655867d6e2b04e392114e6ef1",
                    "sha256:1a3e17d9bd0848c60750171e33d97cb75a1915a92f35b4c29e2e8e8088cbacf3",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:d024288ac0c97e8389226f634bba57c43cfd5b66544ada9f536ae4dc909264f6",
                    "sha256:c8ef89446bdffde0d481a0dbe7be75451c661bea8ab3662519b693a5c252858f",
                    "sha256:b6f0854d2828b675a1e2ec61f5643426d9b1bd445fd31def9d8a210165afde16"
                ]
            }
        },
        "36-20240408": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f36container",
                    "FGC=f36",
                    "FBR=f36",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "raspberrypi5",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                }
            },
            "created": "2024-04-09T20:01:07.438256949Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:22.742482656Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f36container FGC=f36 FBR=f36",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-04T20:03:43.247035495Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:cee460779f9d1124ed00f2513a5161d8a111efd58c800bb362e4de8ee2ff74c6 in / "
                },
                {
                    "created": "2023-05-04T20:03:44.015472382Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:44.289415356Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:44.289415356Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:44.289415356Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:52:48.382975748Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:52:49.102483271Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:52:49.102483271Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:52:49.114498269Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:52:49.160258289Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:52:49.171704486Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:52:49.171704486Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:52:52.904600449Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 36   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:52:53.038869737Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 36 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T20:01:07.332215187Z",
                    "created_by": "LABEL io.balena.device-type=raspberrypi5",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T20:01:07.332215187Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T20:01:07.438256949Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 36 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:cd2d1f658717e76eb6caf0ebc0408c1c3e79889436d4de8e629563541cf3e3ac",
                    "sha256:96e8237f4a277db04c955fec05200b74f0da4fc11acef6e970444aa8d1ac4877",
                    "sha256:eebacd7727dd5f1adf1a458419bda175ca082cd8b48b6f5ab3162ceac82ead68",
                    "sha256:6847feafbfe5a6b06d1a3180b2725497fd90858670af4d7e07d859032794fee6",
                    "sha256:2329dcac2e30f4e2a05e85f5b8dbaa8227ee8eb85ef825dd7ac0cb8fad9571fe",
                    "sha256:ca51ce238f812d151cfee4e045e109e016d9a7f7d83543fe8f0f508ebc62399e",
                    "sha256:eaa4fd10880c293c373fc3aa5f36e6d0b2267661144b4b50b13423abdc65b432",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:57d8577708926141837b5cef818df1c257b9d966cce81182c4fbc54c0cf82336",
                    "sha256:7499bb41f0fff1317b528bf463a0b30e83e5515588f56b869e8d2f33bcf9cb6c",
                    "sha256:fdb7961c4c1d5b0360efaae54ebf463383491686a226e64dfaea06dd2aa15545"
                ]
            }
        },
        "36-build": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f36container",
                    "FGC=f36",
                    "FBR=f36",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "raspberrypi5",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                }
            },
            "created": "2024-04-09T20:01:00.339957354Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:22.742482656Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f36container FGC=f36 FBR=f36",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-04T20:03:43.247035495Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:cee460779f9d1124ed00f2513a5161d8a111efd58c800bb362e4de8ee2ff74c6 in / "
                },
                {
                    "created": "2023-05-04T20:03:44.015472382Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:47.043995781Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:47.043995781Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:47.043995781Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:54:11.154952948Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:28:01.602172722Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-clients \t\tsubversion \t\tautoconf \t\tautomake \t\tbzip2-devel \t\tglib2-devel \t\tgcc \t\tgcc-c++ \t\tImageMagick \t\tImageMagick-devel \t\tkernel-devel \t\tlibcurl-devel \t\tlibevent-devel \t\tlibffi-devel \t\tlibjpeg-devel \t\tlibsqlite3x-devel \t\tlibxml2-devel \t\tlibxslt-devel \t\tlibyaml-devel \t\tmysql-devel \t\tmake \t\tncurses-devel \t\topenssl-devel \t\tpostgresql-devel \t\treadline-devel \t\tsqlite-devel \t\tzlib-devel \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:28:02.669154565Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:28:02.669154565Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T14:28:02.678110994Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:28:02.717145907Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:28:02.725640524Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:28:02.725640524Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T14:28:06.421086055Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 36   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:28:06.57556925Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 36 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T20:01:00.208217232Z",
                    "created_by": "LABEL io.balena.device-type=raspberrypi5",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T20:01:00.208217232Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T20:01:00.339957354Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 36 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:cd2d1f658717e76eb6caf0ebc0408c1c3e79889436d4de8e629563541cf3e3ac",
                    "sha256:0d92bca6cbdd49236d8ab390b5bb6ac41ad1f1c8d23f4e2eff84aa74e6b0a324",
                    "sha256:442f501872df89f0dc6c52cf8b623054b62b6ddedc68f22fc4d39264ea116c96",
                    "sha256:beee18a3a3563db9c8df1d299673d8892105565ce4a0fbc7ab63375155a5150a",
                    "sha256:19fe2308eeb82a5bdd2f562463979e055cd1b238180489f8127d3211082107bf",
                    "sha256:778d1a696f6513942baa52af3e55af5923b1f27ef37c676edafb2601a18fa36c",
                    "sha256:e06d6001a1da448e0bdf9cad4a5e6369a2e23db8b751ed0777b3e274c8de6aca",
                    "sha256:27daa9b0497e60e96c3080049db438971a51b6d95e6a5d96f55f19634ff03934",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:34f73f50614cc4a294d3688662502a33433d888ed3d269d982c05187c0af92df",
                    "sha256:44bb6308bd5d91d603dffb93d9e305fb0a998d350beafc5bc6dc01ad7d3f9c68",
                    "sha256:838ca4bc777f3af5c837bbf0cc8a71dd6f1d5a6914aaaea77ad836e41c58619f"
                ]
            }
        },
        "36-build-20230929": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f36container",
                    "FGC=f36",
                    "FBR=f36",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "raspberrypi5",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2023-10-04T23:33:17.766929498Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:22.742482656Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f36container FGC=f36 FBR=f36",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-04T20:03:43.247035495Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:cee460779f9d1124ed00f2513a5161d8a111efd58c800bb362e4de8ee2ff74c6 in / "
                },
                {
                    "created": "2023-05-04T20:03:44.015472382Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T06:28:26.44141738Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T06:28:26.44141738Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T06:28:26.44141738Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T06:52:10.14333682Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T07:37:48.484161578Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-clients \t\tsubversion \t\tautoconf \t\tautomake \t\tbzip2-devel \t\tglib2-devel \t\tgcc \t\tgcc-c++ \t\tImageMagick \t\tImageMagick-devel \t\tkernel-devel \t\tlibcurl-devel \t\tlibevent-devel \t\tlibffi-devel \t\tlibjpeg-devel \t\tlibsqlite3x-devel \t\tlibxml2-devel \t\tlibxslt-devel \t\tlibyaml-devel \t\tmysql-devel \t\tmake \t\tncurses-devel \t\topenssl-devel \t\tpostgresql-devel \t\treadline-devel \t\tsqlite-devel \t\tzlib-devel \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T07:37:49.864162587Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T07:37:49.864162587Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T07:37:49.92421462Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T07:37:49.942745854Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T07:37:49.952386132Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T07:37:49.952386132Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T07:37:54.836636718Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 36   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T07:37:55.219290743Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 36 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-04T23:33:17.578785977Z",
                    "created_by": "LABEL io.balena.device-type=raspberrypi5",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-04T23:33:17.578785977Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-04T23:33:17.766929498Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 36 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:cd2d1f658717e76eb6caf0ebc0408c1c3e79889436d4de8e629563541cf3e3ac",
                    "sha256:05ce1b7fa6b0ced945e9fc1d7f1f0dfa18b03b07cdd6519f6ea474b052de883b",
                    "sha256:9e9f88eff6885b01860209ee41f449670562ec3746b2b29dd15e691c1bb16b93",
                    "sha256:cc6b9f773af4d7a1fad39b0ce68e4e9ffe1a1deae8b68c8279d243c56ee4bc1d",
                    "sha256:b465eb6a5e606e1cf825f8e7f2e3f07a81434ea9238295342d3c1785259cc4f4",
                    "sha256:a095b0378c335326849a8f8d980fa90f463287d8d30a50d4b2dd422396afb585",
                    "sha256:a3a129cbf4ebc3b5b82f45c931ec7626d8209c16b767280fb845b4ce5a04d78f",
                    "sha256:38ab8a459a656d42e1e011c177efe3094620d10d081c5f3ec0d77dc4baaa5426",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:e96693cd63491fd97c0e7e1a4608caeef679ecf8ef01e8436a578bbe6b707967",
                    "sha256:c91d93df3fd36be499b6f52c56e305a8d7e74e80e8354f2221989db3c1785b2a",
                    "sha256:545fb37dd7ffa309878b77a8c1e4d26769b717a128f543de604c0d779c110610"
                ]
            }
        },
        "36-build-20231103": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f36container",
                    "FGC=f36",
                    "FBR=f36",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "raspberrypi5",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2023-11-04T17:08:46.47898862Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:22.742482656Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f36container FGC=f36 FBR=f36",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-04T20:03:43.247035495Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:cee460779f9d1124ed00f2513a5161d8a111efd58c800bb362e4de8ee2ff74c6 in / "
                },
                {
                    "created": "2023-05-04T20:03:44.015472382Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-04T14:05:50.102623549Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-04T14:05:50.102623549Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-04T14:05:50.102623549Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T14:32:00.021956482Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T15:21:28.43244893Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-clients \t\tsubversion \t\tautoconf \t\tautomake \t\tbzip2-devel \t\tglib2-devel \t\tgcc \t\tgcc-c++ \t\tImageMagick \t\tImageMagick-devel \t\tkernel-devel \t\tlibcurl-devel \t\tlibevent-devel \t\tlibffi-devel \t\tlibjpeg-devel \t\tlibsqlite3x-devel \t\tlibxml2-devel \t\tlibxslt-devel \t\tlibyaml-devel \t\tmysql-devel \t\tmake \t\tncurses-devel \t\topenssl-devel \t\tpostgresql-devel \t\treadline-devel \t\tsqlite-devel \t\tzlib-devel \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T15:21:29.762620973Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T15:21:29.762620973Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-04T15:21:29.779646292Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T15:21:29.961854941Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T15:21:30.0052635Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T15:21:30.0052635Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-04T15:21:35.605993316Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 36   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T15:21:35.825993306Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 36 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T17:08:46.29562705Z",
                    "created_by": "LABEL io.balena.device-type=raspberrypi5",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-04T17:08:46.29562705Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T17:08:46.47898862Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 36 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:cd2d1f658717e76eb6caf0ebc0408c1c3e79889436d4de8e629563541cf3e3ac",
                    "sha256:a63f36746b142a36f746685c04773f6310db178e94ea5b7bb76b9326f367b88f",
                    "sha256:de04dd6def25d680710bb5c91278de75bb0ecb04972e0a93b9a78b6f1ed2ed6c",
                    "sha256:721915a3d74dbf25bfc019117b408a792069e9d53c29bf08977a141703ef85b3",
                    "sha256:98ae1bd34f990b1d47d41e6275c4161a7672c984d3fdbbf3f7d4241aa96f5ee5",
                    "sha256:148a12c1a39c79204120b14418d599c9ec9b0d41e0c4d49421d4aa39a0af2159",
                    "sha256:23889e04df94067eb0674fc436d8fffe74e201acba16b934c164c823e9caf143",
                    "sha256:0db6a26d9ea8af21521bdb6f4e2c29fc06b1a88eabfce4072152fbad73abc802",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:04a7095e882568bf8c72411da171ca7778bcb6ab5344298ebdda62abb3057c02",
                    "sha256:0a0a705bf1d4287e987435ac070409fc14853151dc5e1eb33c53e27c5e0ab7aa",
                    "sha256:00aaa9759781be728e18edf597c5e9769d07f43417fab526b72c2de7633cdda5"
                ]
            }
        },
        "36-build-20231106": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f36container",
                    "FGC=f36",
                    "FBR=f36",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "raspberrypi5",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2023-11-06T12:27:46.145365644Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:22.742482656Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f36container FGC=f36 FBR=f36",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-04T20:03:43.247035495Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:cee460779f9d1124ed00f2513a5161d8a111efd58c800bb362e4de8ee2ff74c6 in / "
                },
                {
                    "created": "2023-05-04T20:03:44.015472382Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T09:12:23.173496596Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T09:12:23.173496596Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T09:12:23.173496596Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T09:31:26.472831476Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T10:05:39.374343645Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-clients \t\tsubversion \t\tautoconf \t\tautomake \t\tbzip2-devel \t\tglib2-devel \t\tgcc \t\tgcc-c++ \t\tImageMagick \t\tImageMagick-devel \t\tkernel-devel \t\tlibcurl-devel \t\tlibevent-devel \t\tlibffi-devel \t\tlibjpeg-devel \t\tlibsqlite3x-devel \t\tlibxml2-devel \t\tlibxslt-devel \t\tlibyaml-devel \t\tmysql-devel \t\tmake \t\tncurses-devel \t\topenssl-devel \t\tpostgresql-devel \t\treadline-devel \t\tsqlite-devel \t\tzlib-devel \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T10:05:40.846202919Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T10:05:40.846202919Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T10:05:40.855350521Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T10:05:40.866126285Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T10:05:40.875330806Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T10:05:40.875330806Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T10:05:44.651612312Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 36   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T10:05:44.828843331Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 36 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T12:27:46.008188041Z",
                    "created_by": "LABEL io.balena.device-type=raspberrypi5",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T12:27:46.008188041Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T12:27:46.145365644Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 36 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:cd2d1f658717e76eb6caf0ebc0408c1c3e79889436d4de8e629563541cf3e3ac",
                    "sha256:732d36c0519b579947e1f3c144efc6bb1c72d6e34b7f88a20650ab53ac987a7c",
                    "sha256:e1e88c85aa4ff52a154ffa0934c27d786bcefb6e19f459952e4aa41d9427523d",
                    "sha256:2701c01331a3bff8a61fbfd8a9af42827a4aa18cae3a6433b22e92ee13f7fe07",
                    "sha256:02ff7fbb70f56fd918909e82b6643ca1ce474b0e6e3dc1875596c17fcdca07d1",
                    "sha256:989437bdcc558a8411fe768b647f798015adedc70b590681c71ce0518764aadf",
                    "sha256:9d13ee0df09beee1635448899d83cb34c171b9e4f5460d37b2b3eee915233054",
                    "sha256:7c32c3ec758ca9553393b3f1df23ffea0d6f72376f96932dc47a66bd6d022874",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:9c73f8e5c0cb7dfe6b412343d5a01f92808092fd0592c3651f78ce50a042afc8",
                    "sha256:ae98988506a5129d47971ccbbdd4603acb5340b318751e96e5d1df67456f9cda",
                    "sha256:50982099c4ff621878f467c48f0ef356bd67e867e13121ba1d0f662464195875"
                ]
            }
        },
        "36-build-20231127": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f36container",
                    "FGC=f36",
                    "FBR=f36",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "raspberrypi5",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2023-12-01T13:07:35.628117333Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:22.742482656Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f36container FGC=f36 FBR=f36",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-04T20:03:43.247035495Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:cee460779f9d1124ed00f2513a5161d8a111efd58c800bb362e4de8ee2ff74c6 in / "
                },
                {
                    "created": "2023-05-04T20:03:44.015472382Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T10:52:06.738067312Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T10:52:06.738067312Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T10:52:06.738067312Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T11:10:24.018253546Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T11:43:00.517543662Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-clients \t\tsubversion \t\tautoconf \t\tautomake \t\tbzip2-devel \t\tglib2-devel \t\tgcc \t\tgcc-c++ \t\tImageMagick \t\tImageMagick-devel \t\tkernel-devel \t\tlibcurl-devel \t\tlibevent-devel \t\tlibffi-devel \t\tlibjpeg-devel \t\tlibsqlite3x-devel \t\tlibxml2-devel \t\tlibxslt-devel \t\tlibyaml-devel \t\tmysql-devel \t\tmake \t\tncurses-devel \t\topenssl-devel \t\tpostgresql-devel \t\treadline-devel \t\tsqlite-devel \t\tzlib-devel \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T11:43:01.545407626Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T11:43:01.545407626Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T11:43:01.55432405Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T11:43:01.563269749Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T11:43:01.5730137Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T11:43:01.5730137Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T11:43:05.285904169Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 36   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T11:43:05.455974871Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 36 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T13:07:35.486674319Z",
                    "created_by": "LABEL io.balena.device-type=raspberrypi5",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T13:07:35.486674319Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T13:07:35.628117333Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 36 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:cd2d1f658717e76eb6caf0ebc0408c1c3e79889436d4de8e629563541cf3e3ac",
                    "sha256:1f177ebf18334e54b3e761ea719b35477d351671e3982d49cf2e6a749ce579ab",
                    "sha256:afd74a54833234407c7b03240f32dfda328d16bb109c75748f3ac560eb0c52a5",
                    "sha256:bf331644daa576fbb5b8586e516df3ef328ac237a48a73b5f5afb464739a535c",
                    "sha256:ae670d766b6e4b32a1516fa15eae5332b1329f8dcda118e46f83957e6b2ec162",
                    "sha256:09ac6fdfa3a43f75284c1ee054ce98e005c21311af2e3df2073ec52f557d769a",
                    "sha256:50dc6ee71681e6566ef126353669d6e44c1e0629ec326ad6482d6f72472d1642",
                    "sha256:4f354d95299d65d7e0b3f7f7563aa26e4ed7416c02c74361bda6c6c93e27863a",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:490bfd3b7c9de41c6dabbaf414009a79d987a5aa837a651fc02b3fdea1e112c5",
                    "sha256:0b4aca8f00844db08b5a8fe0155490d24a21e982991ec656a8aa4b6c21bed89a",
                    "sha256:128a14db8742b5eaaa8cd25751f33a5f021bd4a7bffd08b2c593daf81de313da"
                ]
            }
        },
        "36-build-20231204": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f36container",
                    "FGC=f36",
                    "FBR=f36",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "raspberrypi5",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2023-12-06T22:55:17.904274195Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:22.742482656Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f36container FGC=f36 FBR=f36",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-04T20:03:43.247035495Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:cee460779f9d1124ed00f2513a5161d8a111efd58c800bb362e4de8ee2ff74c6 in / "
                },
                {
                    "created": "2023-05-04T20:03:44.015472382Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T20:40:31.234389525Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T20:40:31.234389525Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T20:40:31.234389525Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T20:58:36.648962471Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T21:31:58.739242472Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-clients \t\tsubversion \t\tautoconf \t\tautomake \t\tbzip2-devel \t\tglib2-devel \t\tgcc \t\tgcc-c++ \t\tImageMagick \t\tImageMagick-devel \t\tkernel-devel \t\tlibcurl-devel \t\tlibevent-devel \t\tlibffi-devel \t\tlibjpeg-devel \t\tlibsqlite3x-devel \t\tlibxml2-devel \t\tlibxslt-devel \t\tlibyaml-devel \t\tmysql-devel \t\tmake \t\tncurses-devel \t\topenssl-devel \t\tpostgresql-devel \t\treadline-devel \t\tsqlite-devel \t\tzlib-devel \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T21:32:00.034569347Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T21:32:00.034569347Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T21:32:00.044089353Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T21:32:00.054426886Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T21:32:00.065207966Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T21:32:00.065207966Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T21:32:03.916974271Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 36   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T21:32:04.094663656Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 36 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T22:55:17.751678632Z",
                    "created_by": "LABEL io.balena.device-type=raspberrypi5",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T22:55:17.751678632Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T22:55:17.904274195Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 36 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:cd2d1f658717e76eb6caf0ebc0408c1c3e79889436d4de8e629563541cf3e3ac",
                    "sha256:e541bc244135f4a534b32755e95a7a7bdae6f9ca9f8e19d4ee67b088ae367b86",
                    "sha256:e0d459eaeacb4f11c42c0d09a1aee8784ac0cb7cb73521999dc7b89e8c49dd26",
                    "sha256:f293b804776311e7b1f117dd5924dcb2ee39e552d9f79aa810c291c6920f66b3",
                    "sha256:5db57094f26aa01f5fcc1f52794e4bebad690560f42dee31fa5bcb39a7cbef8a",
                    "sha256:eed1c18dbf5477d8520287a188ee62280f4c2e2cdbff92b80b9766813ebceda3",
                    "sha256:b48c0406dd70e73ef73cf4c492c93f200a16c5226cdc7d62bd1cb3c085c626d0",
                    "sha256:bc9c45bc0f901ee781a4e34d92a2f1ff3107ffd7ebff1ca12dbdff5eea065640",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:d91b2e517bfe743a83ac51620cfe1cabcf024647c67d01ad2fab6821208b546f",
                    "sha256:2b08a94b6876c2e3eb7b3c959f11ea0bd25de4cf66ddea3ebfce6613aaa3f47c",
                    "sha256:5d368e56ea4ab0efaf5a1b4915d32db76a28d5dd1db89a86256d19d21bdf8dd4"
                ]
            }
        },
        "36-build-20240205": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f36container",
                    "FGC=f36",
                    "FBR=f36",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "raspberrypi5",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2024-02-05T02:47:17.241942359Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:22.742482656Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f36container FGC=f36 FBR=f36",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-04T20:03:43.247035495Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:cee460779f9d1124ed00f2513a5161d8a111efd58c800bb362e4de8ee2ff74c6 in / "
                },
                {
                    "created": "2023-05-04T20:03:44.015472382Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-05T00:26:03.676079915Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-05T00:26:03.676079915Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-05T00:26:03.676079915Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T00:44:07.603291728Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T01:17:03.855255812Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-clients \t\tsubversion \t\tautoconf \t\tautomake \t\tbzip2-devel \t\tglib2-devel \t\tgcc \t\tgcc-c++ \t\tImageMagick \t\tImageMagick-devel \t\tkernel-devel \t\tlibcurl-devel \t\tlibevent-devel \t\tlibffi-devel \t\tlibjpeg-devel \t\tlibsqlite3x-devel \t\tlibxml2-devel \t\tlibxslt-devel \t\tlibyaml-devel \t\tmysql-devel \t\tmake \t\tncurses-devel \t\topenssl-devel \t\tpostgresql-devel \t\treadline-devel \t\tsqlite-devel \t\tzlib-devel \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T01:17:04.801615079Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T01:17:04.801615079Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-05T01:17:04.814085235Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T01:17:04.852162692Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T01:17:04.865067581Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T01:17:04.865067581Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-05T01:17:08.567247082Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 36   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T01:17:08.716497047Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 36 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T02:47:17.119440989Z",
                    "created_by": "LABEL io.balena.device-type=raspberrypi5",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-05T02:47:17.119440989Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T02:47:17.241942359Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 36 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:cd2d1f658717e76eb6caf0ebc0408c1c3e79889436d4de8e629563541cf3e3ac",
                    "sha256:9d44a11c7c4685e63e930874ba8ef98d23158b5146538f8777aea803a5b270aa",
                    "sha256:5744322f01c8168790b60628e81348558acca8bdab38a898297c49c00d70f30d",
                    "sha256:de88869daf243309e0876e6f37b3fb567ae4a6ab9ab5847e4a4233d0c3124858",
                    "sha256:a0bc242521196d2d113fd2d3024cb2195b296cc6c3a29389be7cfa0532e1b8ba",
                    "sha256:8c3c3cab1dadfdb076a40d329bc1382bb67566b5ef01d78198acf8f0b910ffc0",
                    "sha256:39e08dc57ab430c1e1cf9ce3efff02592819c75fc29c50216ef8125c8ee379b1",
                    "sha256:65b5e88f54346eb30ac80009479a7da0370d5a1719b16827ee1f9be87f13b638",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:19f0d68918ebdb8e6f5ec8a789d4e4a43a40e5449a5d8db5ac37cb6ab6ce6731",
                    "sha256:26d98fd59a9a2dd09e5c3745ee09b714b900787a7183a2ea9fc80707c3522ebb",
                    "sha256:af343d7cc04c31c2df8bd17f95c2dd8be7093cf4ed1d5cd19f70abd25d6a0600"
                ]
            }
        },
        "36-build-20240227": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f36container",
                    "FGC=f36",
                    "FBR=f36",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "raspberrypi5",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2024-03-01T23:15:32.127268238Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:22.742482656Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f36container FGC=f36 FBR=f36",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-04T20:03:43.247035495Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:cee460779f9d1124ed00f2513a5161d8a111efd58c800bb362e4de8ee2ff74c6 in / "
                },
                {
                    "created": "2023-05-04T20:03:44.015472382Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T20:49:58.363154019Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T20:49:58.363154019Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T20:49:58.363154019Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:08:04.379900568Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:40:35.627931567Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-clients \t\tsubversion \t\tautoconf \t\tautomake \t\tbzip2-devel \t\tglib2-devel \t\tgcc \t\tgcc-c++ \t\tImageMagick \t\tImageMagick-devel \t\tkernel-devel \t\tlibcurl-devel \t\tlibevent-devel \t\tlibffi-devel \t\tlibjpeg-devel \t\tlibsqlite3x-devel \t\tlibxml2-devel \t\tlibxslt-devel \t\tlibyaml-devel \t\tmysql-devel \t\tmake \t\tncurses-devel \t\topenssl-devel \t\tpostgresql-devel \t\treadline-devel \t\tsqlite-devel \t\tzlib-devel \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:40:36.537714792Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:40:36.537714792Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T21:40:36.546989379Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:40:36.594804758Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:40:36.60416499Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:40:36.60416499Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T21:40:40.28808744Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 36   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:40:40.427106425Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 36 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T23:15:32.008164472Z",
                    "created_by": "LABEL io.balena.device-type=raspberrypi5",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T23:15:32.008164472Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T23:15:32.127268238Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 36 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:cd2d1f658717e76eb6caf0ebc0408c1c3e79889436d4de8e629563541cf3e3ac",
                    "sha256:924511e57d79442e2bf7973c38bf065598299d04b35471eab6955bf1666a94c3",
                    "sha256:d8d421b9ca9350109e786f72e6e2d479a7489487e19e121318feb6a98d6a3c46",
                    "sha256:5f3f667a8c641c7ce78a40b3ed333bb6e0ab87339c88378778963b4d17b2c9fc",
                    "sha256:e4869793269ed6124242bff3bcd0855ddbf1e6efbe60a3c37e3456e6dc608009",
                    "sha256:45eef311cbfd9b312d16fefd5aeb94279dadb57574ed18613752a3c3088c383f",
                    "sha256:9f8687764932f06956ff72250373b745763b1d67354923fbeb20dc2f0b84160a",
                    "sha256:86e05b32052b9fc5471a682b1171640ad6904bc57aab472473741d6e4d43828e",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:a4f57127d58c280ca985f7dd4600d1dcea09b82842510826c8a125dacdb6e204",
                    "sha256:4503356ce9442cb0b83213565dd4c1dbcf3829a1ba51e213e7fbf60e5b403c54",
                    "sha256:31d47b44b681d53ad39d45998ca5a2d95ca2fa2aa69cc2a7556a4bdd5d01a0ef"
                ]
            }
        },
        "36-build-20240304": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f36container",
                    "FGC=f36",
                    "FBR=f36",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "raspberrypi5",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2024-03-05T10:49:49.518796259Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:22.742482656Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f36container FGC=f36 FBR=f36",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-04T20:03:43.247035495Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:cee460779f9d1124ed00f2513a5161d8a111efd58c800bb362e4de8ee2ff74c6 in / "
                },
                {
                    "created": "2023-05-04T20:03:44.015472382Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T08:24:14.448472689Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T08:24:14.448472689Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T08:24:14.448472689Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T08:42:18.25553519Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T09:14:44.522824852Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-clients \t\tsubversion \t\tautoconf \t\tautomake \t\tbzip2-devel \t\tglib2-devel \t\tgcc \t\tgcc-c++ \t\tImageMagick \t\tImageMagick-devel \t\tkernel-devel \t\tlibcurl-devel \t\tlibevent-devel \t\tlibffi-devel \t\tlibjpeg-devel \t\tlibsqlite3x-devel \t\tlibxml2-devel \t\tlibxslt-devel \t\tlibyaml-devel \t\tmysql-devel \t\tmake \t\tncurses-devel \t\topenssl-devel \t\tpostgresql-devel \t\treadline-devel \t\tsqlite-devel \t\tzlib-devel \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T09:14:45.462110722Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T09:14:45.462110722Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T09:14:45.470940956Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T09:14:45.479496771Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T09:14:45.527482553Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T09:14:45.527482553Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T09:14:49.280416402Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 36   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T09:14:49.423571008Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 36 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T10:49:49.395107602Z",
                    "created_by": "LABEL io.balena.device-type=raspberrypi5",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T10:49:49.395107602Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T10:49:49.518796259Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 36 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:cd2d1f658717e76eb6caf0ebc0408c1c3e79889436d4de8e629563541cf3e3ac",
                    "sha256:b4c9dd91c72a81ac4a202ff0748402788349045fe3597c5797e383c96bc6d5b1",
                    "sha256:2f66da14d3d811f096c502aea6eead828344d4261ec5532d960d5a2dcdbb469b",
                    "sha256:23fa17f094d5992d65ab0ef1f99d1fff0d19bb3fd83925b018b1f059aafe38f2",
                    "sha256:f0785819e675537037c3cea9aff10a75f41bed438da722737a4be828f7eefdff",
                    "sha256:042a6a8f10348e05e145155e331a88a844748f5a329d9a555e30c114ec629bda",
                    "sha256:24aae0af27aeacf4ccb8a67c40068bebf526a88e4cafdc8d4ab7ca35789e9843",
                    "sha256:960a300b6cbe4e665c6f83989be25a2cebe6fb08c225ee042d1cc9d97c62359a",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:8eb6e91fbc5c2b79888118e9c2ec63794a5c7a80698d9a85bcc2765b272d4017",
                    "sha256:2fcd00600f28a5e1e676706ccb8cab5afcb9825b51f0b35e655f100f9f2a5e6d",
                    "sha256:5c5688729507a291f01022a0f3f04694c61e4b6d9d12c7efc88b5b616811efff"
                ]
            }
        },
        "36-build-20240401": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f36container",
                    "FGC=f36",
                    "FBR=f36",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "raspberrypi5",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                }
            },
            "created": "2024-04-01T23:47:34.787002535Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:22.742482656Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f36container FGC=f36 FBR=f36",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-04T20:03:43.247035495Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:cee460779f9d1124ed00f2513a5161d8a111efd58c800bb362e4de8ee2ff74c6 in / "
                },
                {
                    "created": "2023-05-04T20:03:44.015472382Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T21:26:33.592232034Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T21:26:33.592232034Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T21:26:33.592232034Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T21:44:56.976355919Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T22:17:59.232940909Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-clients \t\tsubversion \t\tautoconf \t\tautomake \t\tbzip2-devel \t\tglib2-devel \t\tgcc \t\tgcc-c++ \t\tImageMagick \t\tImageMagick-devel \t\tkernel-devel \t\tlibcurl-devel \t\tlibevent-devel \t\tlibffi-devel \t\tlibjpeg-devel \t\tlibsqlite3x-devel \t\tlibxml2-devel \t\tlibxslt-devel \t\tlibyaml-devel \t\tmysql-devel \t\tmake \t\tncurses-devel \t\topenssl-devel \t\tpostgresql-devel \t\treadline-devel \t\tsqlite-devel \t\tzlib-devel \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T22:18:00.64397906Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T22:18:00.64397906Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T22:18:00.656438731Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T22:18:00.709323805Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T22:18:00.721159717Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T22:18:00.721159717Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T22:18:04.549668403Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 36   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T22:18:04.718901613Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 36 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T23:47:34.669446742Z",
                    "created_by": "LABEL io.balena.device-type=raspberrypi5",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T23:47:34.669446742Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T23:47:34.787002535Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 36 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:cd2d1f658717e76eb6caf0ebc0408c1c3e79889436d4de8e629563541cf3e3ac",
                    "sha256:e6fde95adb90fc37e5b5652ab1bad02d60972f7659f2fcbd7bc73b2927bbb4b0",
                    "sha256:373d666da30ff7d663200959ae1ce3843b56ceca76a0eed7bd53ca274da840c0",
                    "sha256:b52cfed2ec76d493b41d4bce85ce238bd70e369d628a9a9fcbc333a0d42f3350",
                    "sha256:0989bf391c4b6d2746e580cc456361f69a21dc59a4bc93b9df4820037790200b",
                    "sha256:a091b1b5298eb3ff3dd802fa8c77cf830fe9bf937bf359254f70135971eabe14",
                    "sha256:0160428d8d81785dcc48e306f2eeb07000e5122a3bc80f3e334a10cdc09baa7b",
                    "sha256:0e99d747dbcdff2971cfeb3a61d830f90d0feb64c9f71297d4197adf8adcde97",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:0625ea4b2bffeedc9748e66239136207a8bfda1fa83bd7da5d23eca35208195c",
                    "sha256:c6eb36cb4c5cbb5bf39052bbc5975654668e44872e97f1dbd7f8d0ea3ef224a5",
                    "sha256:ed844700636cc8707eb846e9398aab70c14fc3921902242003d7a3c41365573d"
                ]
            }
        },
        "36-build-20240408": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f36container",
                    "FGC=f36",
                    "FBR=f36",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "raspberrypi5",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                }
            },
            "created": "2024-04-09T20:01:00.339957354Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:22.742482656Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f36container FGC=f36 FBR=f36",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-04T20:03:43.247035495Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:cee460779f9d1124ed00f2513a5161d8a111efd58c800bb362e4de8ee2ff74c6 in / "
                },
                {
                    "created": "2023-05-04T20:03:44.015472382Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:47.043995781Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:47.043995781Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:47.043995781Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:54:11.154952948Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:28:01.602172722Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-clients \t\tsubversion \t\tautoconf \t\tautomake \t\tbzip2-devel \t\tglib2-devel \t\tgcc \t\tgcc-c++ \t\tImageMagick \t\tImageMagick-devel \t\tkernel-devel \t\tlibcurl-devel \t\tlibevent-devel \t\tlibffi-devel \t\tlibjpeg-devel \t\tlibsqlite3x-devel \t\tlibxml2-devel \t\tlibxslt-devel \t\tlibyaml-devel \t\tmysql-devel \t\tmake \t\tncurses-devel \t\topenssl-devel \t\tpostgresql-devel \t\treadline-devel \t\tsqlite-devel \t\tzlib-devel \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:28:02.669154565Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:28:02.669154565Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T14:28:02.678110994Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:28:02.717145907Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:28:02.725640524Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:28:02.725640524Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T14:28:06.421086055Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 36   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:28:06.57556925Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 36 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T20:01:00.208217232Z",
                    "created_by": "LABEL io.balena.device-type=raspberrypi5",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T20:01:00.208217232Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T20:01:00.339957354Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 36 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:cd2d1f658717e76eb6caf0ebc0408c1c3e79889436d4de8e629563541cf3e3ac",
                    "sha256:0d92bca6cbdd49236d8ab390b5bb6ac41ad1f1c8d23f4e2eff84aa74e6b0a324",
                    "sha256:442f501872df89f0dc6c52cf8b623054b62b6ddedc68f22fc4d39264ea116c96",
                    "sha256:beee18a3a3563db9c8df1d299673d8892105565ce4a0fbc7ab63375155a5150a",
                    "sha256:19fe2308eeb82a5bdd2f562463979e055cd1b238180489f8127d3211082107bf",
                    "sha256:778d1a696f6513942baa52af3e55af5923b1f27ef37c676edafb2601a18fa36c",
                    "sha256:e06d6001a1da448e0bdf9cad4a5e6369a2e23db8b751ed0777b3e274c8de6aca",
                    "sha256:27daa9b0497e60e96c3080049db438971a51b6d95e6a5d96f55f19634ff03934",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:34f73f50614cc4a294d3688662502a33433d888ed3d269d982c05187c0af92df",
                    "sha256:44bb6308bd5d91d603dffb93d9e305fb0a998d350beafc5bc6dc01ad7d3f9c68",
                    "sha256:838ca4bc777f3af5c837bbf0cc8a71dd6f1d5a6914aaaea77ad836e41c58619f"
                ]
            }
        },
        "36-run": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f36container",
                    "FGC=f36",
                    "FBR=f36",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "raspberrypi5",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                }
            },
            "created": "2024-04-09T20:01:07.438256949Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:22.742482656Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f36container FGC=f36 FBR=f36",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-04T20:03:43.247035495Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:cee460779f9d1124ed00f2513a5161d8a111efd58c800bb362e4de8ee2ff74c6 in / "
                },
                {
                    "created": "2023-05-04T20:03:44.015472382Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:44.289415356Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:44.289415356Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:44.289415356Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:52:48.382975748Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:52:49.102483271Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:52:49.102483271Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:52:49.114498269Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:52:49.160258289Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:52:49.171704486Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:52:49.171704486Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:52:52.904600449Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 36   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:52:53.038869737Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 36 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T20:01:07.332215187Z",
                    "created_by": "LABEL io.balena.device-type=raspberrypi5",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T20:01:07.332215187Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T20:01:07.438256949Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 36 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:cd2d1f658717e76eb6caf0ebc0408c1c3e79889436d4de8e629563541cf3e3ac",
                    "sha256:96e8237f4a277db04c955fec05200b74f0da4fc11acef6e970444aa8d1ac4877",
                    "sha256:eebacd7727dd5f1adf1a458419bda175ca082cd8b48b6f5ab3162ceac82ead68",
                    "sha256:6847feafbfe5a6b06d1a3180b2725497fd90858670af4d7e07d859032794fee6",
                    "sha256:2329dcac2e30f4e2a05e85f5b8dbaa8227ee8eb85ef825dd7ac0cb8fad9571fe",
                    "sha256:ca51ce238f812d151cfee4e045e109e016d9a7f7d83543fe8f0f508ebc62399e",
                    "sha256:eaa4fd10880c293c373fc3aa5f36e6d0b2267661144b4b50b13423abdc65b432",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:57d8577708926141837b5cef818df1c257b9d966cce81182c4fbc54c0cf82336",
                    "sha256:7499bb41f0fff1317b528bf463a0b30e83e5515588f56b869e8d2f33bcf9cb6c",
                    "sha256:fdb7961c4c1d5b0360efaae54ebf463383491686a226e64dfaea06dd2aa15545"
                ]
            }
        },
        "36-run-20230929": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f36container",
                    "FGC=f36",
                    "FBR=f36",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "raspberrypi5",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2023-10-04T23:25:08.15992044Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:22.742482656Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f36container FGC=f36 FBR=f36",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-04T20:03:43.247035495Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:cee460779f9d1124ed00f2513a5161d8a111efd58c800bb362e4de8ee2ff74c6 in / "
                },
                {
                    "created": "2023-05-04T20:03:44.015472382Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T06:28:26.44141738Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T06:28:26.44141738Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T06:28:26.44141738Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T06:52:10.14333682Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T06:52:11.560313193Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T06:52:11.560313193Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T06:52:11.59227561Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T06:52:11.60340289Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T06:52:11.619420149Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T06:52:11.619420149Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T06:52:16.486359938Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 36   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T06:52:16.828028478Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 36 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-04T23:25:07.997136698Z",
                    "created_by": "LABEL io.balena.device-type=raspberrypi5",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-04T23:25:07.997136698Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-04T23:25:08.15992044Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 36 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:cd2d1f658717e76eb6caf0ebc0408c1c3e79889436d4de8e629563541cf3e3ac",
                    "sha256:05ce1b7fa6b0ced945e9fc1d7f1f0dfa18b03b07cdd6519f6ea474b052de883b",
                    "sha256:9e9f88eff6885b01860209ee41f449670562ec3746b2b29dd15e691c1bb16b93",
                    "sha256:26962155532afb1cf5af9c8452dabade728ab6dcc317cdc035ba3dfb4a625de3",
                    "sha256:2a8c67bac577afb58a1c7f8027a3ea327157889daade6bc813255fed4b28c7c6",
                    "sha256:19cde6d3569afc75f1fe7aeb1b94ccc4af816b762b0d936c97794daf78ed89de",
                    "sha256:ea7164d23b98002b69a33a0e805eb3371773875a916e8a49ec706c920b856d61",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:6ccdb93e087c02477234e1031bae4936d610cfb73384f3bfce75e3fec5f6865b",
                    "sha256:c62774d665cbe39ad10e9bba533347ebc560ad4fd680b31d42e4e385e084a2b1",
                    "sha256:088d8c081bdc31c93a649f18e64e8281706c8e49b307288da460455c5e260cde"
                ]
            }
        },
        "36-run-20231103": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f36container",
                    "FGC=f36",
                    "FBR=f36",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "raspberrypi5",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2023-11-04T17:04:23.612556367Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:22.742482656Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f36container FGC=f36 FBR=f36",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-04T20:03:43.247035495Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:cee460779f9d1124ed00f2513a5161d8a111efd58c800bb362e4de8ee2ff74c6 in / "
                },
                {
                    "created": "2023-05-04T20:03:44.015472382Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-04T14:05:51.77913656Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-04T14:05:51.77913656Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-04T14:05:51.77913656Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T14:34:52.146138052Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T14:34:53.485981428Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T14:34:53.485981428Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-04T14:34:53.501948442Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T14:34:53.534351296Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T14:34:53.551492077Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T14:34:53.551492077Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-04T14:34:59.163447727Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 36   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T14:34:59.407290408Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 36 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T17:04:23.455059025Z",
                    "created_by": "LABEL io.balena.device-type=raspberrypi5",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-04T17:04:23.455059025Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T17:04:23.612556367Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 36 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:cd2d1f658717e76eb6caf0ebc0408c1c3e79889436d4de8e629563541cf3e3ac",
                    "sha256:0951a032362c378170cff28bd69fda54b2a89b2358a705928c3e0a3e987de581",
                    "sha256:5f9c9ad1eab5caa95a2a457607e654cd1f1cb1ab74681557680887d6c77ced48",
                    "sha256:7226546a0d6b125b34e9ff76b8934bea9bdd152ede8f594fdb7130d1e5064b1d",
                    "sha256:0a83373bac0d6dfd8f735e9ed99ef382ad60478d2238eb196f172bc4f40a3c0b",
                    "sha256:70d6ae4d04a996f3217c4ca7fbc2a9523349cc8ee322d1680f24d9c9a796f04e",
                    "sha256:be43df9660d9c6e41bdf584275d2eb329a1e7e207869c5fc7274df5afd012bc5",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:1c056b9c3a4eaa0d2b14c92dafe4209699e36f30dc450f1fdb21c5503bb9e217",
                    "sha256:e9929a97e92a4f56357bbc7d54289df4dd98031d61d4aeb17ff35b74bdf7ac1f",
                    "sha256:5310b037c354e0da4c7943b5aa53657c8745c68d603901a23eba19ef906c00c3"
                ]
            }
        },
        "36-run-20231106": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f36container",
                    "FGC=f36",
                    "FBR=f36",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "raspberrypi5",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2023-11-06T12:27:47.812318134Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:22.742482656Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f36container FGC=f36 FBR=f36",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-04T20:03:43.247035495Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:cee460779f9d1124ed00f2513a5161d8a111efd58c800bb362e4de8ee2ff74c6 in / "
                },
                {
                    "created": "2023-05-04T20:03:44.015472382Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T09:12:35.649605283Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T09:12:35.649605283Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T09:12:35.649605283Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T09:41:53.130222292Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T09:41:54.435309446Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T09:41:54.435309446Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T09:41:54.44835057Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T09:41:54.477975525Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T09:41:54.492194652Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T09:41:54.492194652Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T09:42:00.200803708Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 36   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T09:42:00.424308379Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 36 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T12:27:47.689316052Z",
                    "created_by": "LABEL io.balena.device-type=raspberrypi5",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T12:27:47.689316052Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T12:27:47.812318134Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 36 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:cd2d1f658717e76eb6caf0ebc0408c1c3e79889436d4de8e629563541cf3e3ac",
                    "sha256:fbca01e85af298fa11995aee1bbd4658369fdb052de565344b04c2d7f69d042d",
                    "sha256:27ae2f7ef624598ce84145a76dbbeb76035333a3abb0bfddc5ab349f480f9827",
                    "sha256:ca23ee149b3d03336f78ece07cc113e5009e34ee3e2596c73ce1b0344a7d2a77",
                    "sha256:991306643e23f5f5fe287d555fb486b7c937395620e97cee8746e907e781f6d8",
                    "sha256:ea9472c023ea625c2ba44ca95f24307cd817e6b46bf9144332ac0b3ef6ee8ffb",
                    "sha256:8e88def0a52dfc3fcfdd1c0d176b0bf4cb0bf7c491ea42a1eda58dbec84ea733",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:0cd95cc22f322bdc8f04e36456eb49b4da908c3bb847d27d32a364f1d6d63253",
                    "sha256:ff65cd5a84b561a80a64cf33f15f8d20e62cc757aacd4e8c7ab7fb8c6e8bb50b",
                    "sha256:899b5a3974f24630fcc07c211651ab84e24ec448c166a4edb153fb6388726d3d"
                ]
            }
        },
        "36-run-20231127": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f36container",
                    "FGC=f36",
                    "FBR=f36",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "raspberrypi5",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2023-12-01T13:07:38.243002994Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:22.742482656Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f36container FGC=f36 FBR=f36",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-04T20:03:43.247035495Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:cee460779f9d1124ed00f2513a5161d8a111efd58c800bb362e4de8ee2ff74c6 in / "
                },
                {
                    "created": "2023-05-04T20:03:44.015472382Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T10:52:16.234962769Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T10:52:16.234962769Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T10:52:16.234962769Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T11:10:25.32890941Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T11:10:26.409909941Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T11:10:26.409909941Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T11:10:26.419491063Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T11:10:26.428051209Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T11:10:26.43866507Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T11:10:26.43866507Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T11:10:30.344632509Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 36   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T11:10:30.508603857Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 36 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T13:07:38.096515992Z",
                    "created_by": "LABEL io.balena.device-type=raspberrypi5",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T13:07:38.096515992Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T13:07:38.243002994Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 36 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:cd2d1f658717e76eb6caf0ebc0408c1c3e79889436d4de8e629563541cf3e3ac",
                    "sha256:0988f5f003f0969108012f5d711269905aec30d22188d5f4f22f4806dffd83f5",
                    "sha256:6f4d35bad817db05463cdf3f43efd0862bdcab6e32ac7ab7a209c80048b3efa8",
                    "sha256:2cfb6e873f60f5ac84cabbf2304479d35de5ed6331cac9864aea1c0750b921f6",
                    "sha256:2ab48a6044f5f632d11728a70bfa1bf43fb88d3317b8a40a2871a3705ebf2bcd",
                    "sha256:7d8f3f0a00baddeca1dd73dda6026927206e5cec4531c9a682738b03fdd89845",
                    "sha256:9e8204a91a6fe42ae072bf8eca34adcbc454e46b72d65d5447362acd18c9bf6b",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:8445a4f8bc7491031f472014e64b8bcf637d32adcb86e6d9d61e6ecc0752c75a",
                    "sha256:04a66bbf050836af667b6b1acb9bfbdc58a42894d41825c2c2528ccd5dd84e54",
                    "sha256:cd58339b3e9106d18f21a2b125352f70582589792325b90f9dfd165e52e19280"
                ]
            }
        },
        "36-run-20231204": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f36container",
                    "FGC=f36",
                    "FBR=f36",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "raspberrypi5",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2023-12-06T22:54:53.300344252Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:22.742482656Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f36container FGC=f36 FBR=f36",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-04T20:03:43.247035495Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:cee460779f9d1124ed00f2513a5161d8a111efd58c800bb362e4de8ee2ff74c6 in / "
                },
                {
                    "created": "2023-05-04T20:03:44.015472382Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T20:40:18.714260335Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T20:40:18.714260335Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T20:40:18.714260335Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T20:58:20.290618266Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T20:58:21.05068733Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T20:58:21.05068733Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T20:58:21.063806516Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T20:58:21.103887941Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T20:58:21.118444605Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T20:58:21.118444605Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T20:58:24.947450657Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 36   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T20:58:25.0897754Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 36 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T22:54:53.165129121Z",
                    "created_by": "LABEL io.balena.device-type=raspberrypi5",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T22:54:53.165129121Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T22:54:53.300344252Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 36 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:cd2d1f658717e76eb6caf0ebc0408c1c3e79889436d4de8e629563541cf3e3ac",
                    "sha256:1c7db62dcfa18c79ff9899c266455d694030ff0f9a08cad5af263ccac7d5cfb2",
                    "sha256:6efaa96a298fa27a660499947df886ec2f9e28ca5c4c0696dc54c0daf012da13",
                    "sha256:7142d44abc28c8bbe2807baa567da519550742fd5824b6f07639b65ad8fdecca",
                    "sha256:1a40531135766009c0fa215d24e3e159db54a27d0a2a6c63d0b81504a20a4c89",
                    "sha256:ef2c2ed26c2c5681e957e761dc1ba1ffd9dcfdcf670bf1725173cb6a2a5866ce",
                    "sha256:998e969a67a9b686d7306559e3f40f25832ed04628aa75927315b8675a972f9a",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:8d72956b9828c889d2dbb87697fb117ef08f3865d27dc2aba86a25d15a369dae",
                    "sha256:587a4b0614520c092d6592c0e3f99ec5406dc3bb9257ff97068ae0a4aef2605d",
                    "sha256:bfe7b1486ea178190a1f0142bf44103c184f8d862306645153f6d2478a27176b"
                ]
            }
        },
        "36-run-20240205": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f36container",
                    "FGC=f36",
                    "FBR=f36",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "raspberrypi5",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2024-02-05T02:46:50.686334671Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:22.742482656Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f36container FGC=f36 FBR=f36",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-04T20:03:43.247035495Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:cee460779f9d1124ed00f2513a5161d8a111efd58c800bb362e4de8ee2ff74c6 in / "
                },
                {
                    "created": "2023-05-04T20:03:44.015472382Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-05T00:26:02.331567977Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-05T00:26:02.331567977Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-05T00:26:02.331567977Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T00:45:30.731081444Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T00:45:31.728887582Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T00:45:31.728887582Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-05T00:45:31.769327849Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T00:45:31.793427983Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T00:45:31.805803761Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T00:45:31.805803761Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-05T00:45:35.639168025Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 36   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T00:45:35.801238853Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 36 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T02:46:50.567257619Z",
                    "created_by": "LABEL io.balena.device-type=raspberrypi5",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-05T02:46:50.567257619Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T02:46:50.686334671Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 36 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:cd2d1f658717e76eb6caf0ebc0408c1c3e79889436d4de8e629563541cf3e3ac",
                    "sha256:70bec8b60420945ed68778b7651fdae5be1e762a544bda7cfe8646d3cfa496a8",
                    "sha256:46bb4885e89f9818f246467a6d6c22a4015e68ba76feafc7a95c2654ba1a864c",
                    "sha256:ffe006fc0417220624c7603f50db7af8cbaeb87775b8cad8121584dbc82190e0",
                    "sha256:7a426c3f2c3daf0a3a7b703c8810230c4f76ec54a5b3972aaf2ac4b44ed3c031",
                    "sha256:a17d3939a40b03dcd2d31f8b949632c3056d1fd7ba90b808bdcb69574f106cea",
                    "sha256:3a167f245df36cafb1689d9e83280f92db3a94410899c634a0e4eeb1278e12b2",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:7aefa85f0b6c07f7b79a8e1608f00c6e8d38f86e4d0051968c2fbf9587955bf2",
                    "sha256:b32a101fc609317c68ec2e0940fde6c115acd2c20594d7357a041ece472caf93",
                    "sha256:28ec11d5e5bbb4690b442a8fb282ba3f57567b60537fbfdacac9d6f7542fb559"
                ]
            }
        },
        "36-run-20240227": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f36container",
                    "FGC=f36",
                    "FBR=f36",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "raspberrypi5",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2024-03-01T23:15:17.297755543Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:22.742482656Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f36container FGC=f36 FBR=f36",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-04T20:03:43.247035495Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:cee460779f9d1124ed00f2513a5161d8a111efd58c800bb362e4de8ee2ff74c6 in / "
                },
                {
                    "created": "2023-05-04T20:03:44.015472382Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T20:50:02.277291954Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T20:50:02.277291954Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T20:50:02.277291954Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:08:19.727432623Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:08:20.493667027Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:08:20.493667027Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T21:08:20.504558637Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:08:20.53410244Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:08:20.54393228Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:08:20.54393228Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T21:08:24.266191717Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 36   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:08:24.405560095Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 36 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T23:15:17.179839426Z",
                    "created_by": "LABEL io.balena.device-type=raspberrypi5",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T23:15:17.179839426Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T23:15:17.297755543Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 36 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:cd2d1f658717e76eb6caf0ebc0408c1c3e79889436d4de8e629563541cf3e3ac",
                    "sha256:e864a5fd5a85ea7de7c429ad3786adc43add7b3bad7605a5267f71b74ef4f46d",
                    "sha256:f9745bfda56c8769e29c7fe4418ec400bda3547d6f7e2b94cf1578c853decfb1",
                    "sha256:3b0bb44987d7ed3bb758a262b1cdb5cc89a8bb7caa6cf17d171ec9ffab456784",
                    "sha256:b668db57138d2f4d3a3a4fe2a4fca77d7a33a1147ea5193bc7f088a29bc3df6e",
                    "sha256:4fb9cef9cd8dfd649c46b33c2804e0ed65b39895160fd2940fa1e823a207137b",
                    "sha256:bf049f60667eee7c3ab494a865bbe46c948b2953f52aa4768f5eeb0ab3e7035f",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:9c4d3515b2ac6333e066ae20a1676f1c14cfa2e4013e83e034c0bfd5bce0137e",
                    "sha256:715c907c50fff879ceb6e347f85804ff62167abe73c25840f8a8b60b830add4e",
                    "sha256:18db654c6dceae793e9e242533a895dd4ef393b29eb83905eae3c015cec11869"
                ]
            }
        },
        "36-run-20240304": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f36container",
                    "FGC=f36",
                    "FBR=f36",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "raspberrypi5",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2024-03-05T10:49:25.0166149Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:22.742482656Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f36container FGC=f36 FBR=f36",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-04T20:03:43.247035495Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:cee460779f9d1124ed00f2513a5161d8a111efd58c800bb362e4de8ee2ff74c6 in / "
                },
                {
                    "created": "2023-05-04T20:03:44.015472382Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T08:24:14.922279421Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T08:24:14.922279421Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T08:24:14.922279421Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T08:42:21.859759897Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T08:42:23.326242746Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T08:42:23.326242746Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T08:42:23.336383154Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T08:42:23.346622195Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T08:42:23.377651932Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T08:42:23.377651932Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T08:42:27.266843534Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 36   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T08:42:27.402142548Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 36 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T10:49:24.879401975Z",
                    "created_by": "LABEL io.balena.device-type=raspberrypi5",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T10:49:24.879401975Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T10:49:25.0166149Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 36 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:cd2d1f658717e76eb6caf0ebc0408c1c3e79889436d4de8e629563541cf3e3ac",
                    "sha256:b59a6b5e1477f2c1760b9fafd534430e1b3e627940f206e2a912fc7cc99e8b5f",
                    "sha256:9d921ab8193391974ec2825bcb16b8687c1a495d839300d5976a46254f5cd319",
                    "sha256:357859910e787423ff442861725cd291a1d55ae5384cd316b21cac31999aed1e",
                    "sha256:41fb44363c3ee3098b05a3a643a8fe49f2a04b7ad67bcadf125aa1c2114bfece",
                    "sha256:34423e69f4515ba4a00b47bbfdf43063c6c1a46f6ec4f63ccb4a8f263d2854b1",
                    "sha256:2fcd075d152d2c1213ae41f4155e55bdab5602455031af70a1d006c325b4f722",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:d6c771aa19b713b8429a249e0328e601b8714348b76f00b828e7ae21393eedba",
                    "sha256:c100613e0efd000865edd39ff22e13d8505ca049ef546d89e48039e7255eed37",
                    "sha256:bdb48ec1b8a6dc247770fbb3494a21b4bead3a04bc0a515a288d051cf405867f"
                ]
            }
        },
        "36-run-20240401": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f36container",
                    "FGC=f36",
                    "FBR=f36",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "raspberrypi5",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                }
            },
            "created": "2024-04-01T23:46:15.253227085Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:22.742482656Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f36container FGC=f36 FBR=f36",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-04T20:03:43.247035495Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:cee460779f9d1124ed00f2513a5161d8a111efd58c800bb362e4de8ee2ff74c6 in / "
                },
                {
                    "created": "2023-05-04T20:03:44.015472382Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T21:26:28.405977148Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T21:26:28.405977148Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T21:26:28.405977148Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T21:46:06.484116098Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T21:46:07.353362908Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T21:46:07.353362908Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T21:46:07.362716446Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T21:46:07.371056132Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T21:46:07.40557557Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T21:46:07.40557557Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T21:46:11.057940603Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 36   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T21:46:11.196274302Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 36 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T23:46:15.128616353Z",
                    "created_by": "LABEL io.balena.device-type=raspberrypi5",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T23:46:15.128616353Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T23:46:15.253227085Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 36 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:cd2d1f658717e76eb6caf0ebc0408c1c3e79889436d4de8e629563541cf3e3ac",
                    "sha256:0bcb93467a71db1d91f97206ca3d53ef7ed8325e886870c4f93254125506ccaf",
                    "sha256:ee5232de64f68e282c5152a2cf1ee54bf9a7144c661bb3f52975ed782c2f34c5",
                    "sha256:b5750ef0a3421417ee1aa11017b9e9cf5c58cb301c449b82d5c1db7ba06a1245",
                    "sha256:9e654b7993325650e6bdfe739d4519434ff8635d924db824318bd59c3052690a",
                    "sha256:6e0af07b0964b4201fcde2932ac07b59991415f655867d6e2b04e392114e6ef1",
                    "sha256:1a3e17d9bd0848c60750171e33d97cb75a1915a92f35b4c29e2e8e8088cbacf3",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:d024288ac0c97e8389226f634bba57c43cfd5b66544ada9f536ae4dc909264f6",
                    "sha256:c8ef89446bdffde0d481a0dbe7be75451c661bea8ab3662519b693a5c252858f",
                    "sha256:b6f0854d2828b675a1e2ec61f5643426d9b1bd445fd31def9d8a210165afde16"
                ]
            }
        },
        "36-run-20240408": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f36container",
                    "FGC=f36",
                    "FBR=f36",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "raspberrypi5",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                }
            },
            "created": "2024-04-09T20:01:07.438256949Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:22.742482656Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f36container FGC=f36 FBR=f36",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-04T20:03:43.247035495Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:cee460779f9d1124ed00f2513a5161d8a111efd58c800bb362e4de8ee2ff74c6 in / "
                },
                {
                    "created": "2023-05-04T20:03:44.015472382Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:44.289415356Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:44.289415356Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:44.289415356Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:52:48.382975748Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:52:49.102483271Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:52:49.102483271Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:52:49.114498269Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:52:49.160258289Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:52:49.171704486Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:52:49.171704486Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:52:52.904600449Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 36   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:52:53.038869737Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 36 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T20:01:07.332215187Z",
                    "created_by": "LABEL io.balena.device-type=raspberrypi5",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T20:01:07.332215187Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T20:01:07.438256949Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 36 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:cd2d1f658717e76eb6caf0ebc0408c1c3e79889436d4de8e629563541cf3e3ac",
                    "sha256:96e8237f4a277db04c955fec05200b74f0da4fc11acef6e970444aa8d1ac4877",
                    "sha256:eebacd7727dd5f1adf1a458419bda175ca082cd8b48b6f5ab3162ceac82ead68",
                    "sha256:6847feafbfe5a6b06d1a3180b2725497fd90858670af4d7e07d859032794fee6",
                    "sha256:2329dcac2e30f4e2a05e85f5b8dbaa8227ee8eb85ef825dd7ac0cb8fad9571fe",
                    "sha256:ca51ce238f812d151cfee4e045e109e016d9a7f7d83543fe8f0f508ebc62399e",
                    "sha256:eaa4fd10880c293c373fc3aa5f36e6d0b2267661144b4b50b13423abdc65b432",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:57d8577708926141837b5cef818df1c257b9d966cce81182c4fbc54c0cf82336",
                    "sha256:7499bb41f0fff1317b528bf463a0b30e83e5515588f56b869e8d2f33bcf9cb6c",
                    "sha256:fdb7961c4c1d5b0360efaae54ebf463383491686a226e64dfaea06dd2aa15545"
                ]
            }
        },
        "37": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "raspberrypi5",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                }
            },
            "created": "2024-05-06T10:38:45.538160132Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:31.895761202Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-29T00:47:03.16713451Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:270e11b4c18af1c1efb8b8579be7fbda5255d56dd69f83ef7d933cfd2c685e5c in / "
                },
                {
                    "created": "2023-11-29T00:47:04.125919026Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T09:28:47.993183335Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T09:28:47.993183335Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T09:28:47.993183335Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T09:47:56.501476974Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T09:47:57.631980985Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T09:47:57.631980985Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T09:47:57.644124262Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T09:47:57.678847981Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T09:47:57.688494096Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T09:47:57.688494096Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T09:48:01.526529414Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T09:48:01.665893428Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T10:38:45.395029597Z",
                    "created_by": "LABEL io.balena.device-type=raspberrypi5",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T10:38:45.395029597Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T10:38:45.538160132Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:22de68abb450063be7e40efd22fd3b41bec469efafdd95e25c65998648e52b28",
                    "sha256:ef64ad49ccf58709af070779ae49d014558d78a8b6a21fcc279c09ddac79e6c9",
                    "sha256:486e799e950e2b998ed0a1a7221aed44130002259c2b437524c7a8a72b725a56",
                    "sha256:5ad52f9d14deab1b2c3a79dfb68bf730440e209f5926a2cd2ebd561c519a08de",
                    "sha256:73001e4334a2e5a98b50faf87e712eaf851af09ac903e83a569150844ce9eda1",
                    "sha256:696c197b14bb7731bf0a36bbdc5e5272937b693f192b143e02dac747a1305ba1",
                    "sha256:f27b4f97c199fdc59cc49eb91fc7a348daf160285ca6bfce88ede5b64e4bb0a9",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:22341517b8222bb5810db07c816fbd0de10749523856c0263caf14789e77d27d",
                    "sha256:814378e6a74f147b97de86dbedb021279d972677e845a91c72091b86b4dcd6d5",
                    "sha256:07672fdc7d8d9779da09498cf20a8b017e6d3ee8d7e8b681424c91d8c94d3f67"
                ]
            }
        },
        "37-20230929": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "raspberrypi5",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2023-10-04T23:25:26.883353446Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:31.895761202Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-04T18:40:58.001277299Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:614dff70ca4206841645edfd3dab48901efeefccc8ef99772f475ee9bac861ff in / "
                },
                {
                    "created": "2023-08-04T18:40:59.951513662Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T05:16:42.403188583Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T05:16:42.403188583Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T05:16:42.403188583Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T05:41:14.882541843Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T05:41:16.309377049Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T05:41:16.309377049Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T05:41:16.340188202Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T05:41:16.351150734Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T05:41:16.360211026Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T05:41:16.360211026Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T05:41:21.389664273Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T05:41:21.747711571Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-04T23:25:26.738925718Z",
                    "created_by": "LABEL io.balena.device-type=raspberrypi5",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-04T23:25:26.738925718Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-04T23:25:26.883353446Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:cf819d1f191d71ce750fc0b9ca71726d50fc052d7c695682165a84c2bd1eb716",
                    "sha256:2c61372b1614282bfdb58c104252b37a61be492de5c3298dffc56376adfe0a8f",
                    "sha256:3892fad87609c0724cb700c7b327865d8b642316f214825299540678c84e007b",
                    "sha256:47b1691c56a15153e34460e97d0615abbde7eb4128cffd187b3c4507be55c4a0",
                    "sha256:526255e20ebb75f4e4a9cd0b179342ccc59ea09dfb95f916aad1dfd38903c411",
                    "sha256:10a91abc01c07dd01c837dc1a35597c3030ffee89a81f6dcc760a204a2da9e5a",
                    "sha256:fb61a502b5a7e114c0e1b65ffbf1f5d42041b65c52f9ecb41e2fb9a1cdcdbd97",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:cc06c053add61653ccca8a1d621c01df905dfb240d202ad2f7452d1777852952",
                    "sha256:d4eb19f941ac91799d9d6198e4fe925d23b49332e47400690cf7b3c2d9295b5d",
                    "sha256:59e1a00a1db05f912e0325907ea2f23a8be8f071617bd4b6a6101c339749e0fb"
                ]
            }
        },
        "37-20231103": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "raspberrypi5",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2023-11-04T17:03:19.763869192Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:31.895761202Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-06T18:42:53.905315575Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:a506790441a5cd056fb456111da480939a46667d520b519dcb9b2e2aa16aae70 in / "
                },
                {
                    "created": "2023-10-06T18:42:54.852939758Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-04T14:05:43.22598589Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-04T14:05:43.22598589Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-04T14:05:43.22598589Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T14:34:18.977818495Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T14:34:20.236374739Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T14:34:20.236374739Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-04T14:34:20.246502673Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T14:34:20.255833503Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T14:34:20.26399513Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T14:34:20.26399513Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-04T14:34:25.601224907Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T14:34:25.783838009Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T17:03:19.593865165Z",
                    "created_by": "LABEL io.balena.device-type=raspberrypi5",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-04T17:03:19.593865165Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T17:03:19.763869192Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:a37bac7c99baeb556998a67a51775b34aa6df7829fa1ff19323033c5e19837b3",
                    "sha256:768fbcc1112a55954ab49021af3e5b3e77d06892f0018801cb6a68567a441e44",
                    "sha256:b339e6005ff8696452b8a5daf08c04afc137c0da129e399cf294d19b6213af01",
                    "sha256:80e7fcb77b05762cb4af7a336c31edd97b255eb9c5e68b5e2d99fcd0c0941c00",
                    "sha256:faa025149da6c8af6245b9feb2dfa133869871b24b83291212a581a8ac861951",
                    "sha256:85fb00c475997eaa7bf88fdc4a78bd8ad8ecfcafaa4870eb4c2e610747381ba2",
                    "sha256:707dbcf7ea87fd75e1d03a7f275e36d8fcfc1b4ea1f3c867ab6830318bf147e9",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:2509d1d7a240f88f51a41393363e38c35b81e3edf67fa356b59390c21617a3ab",
                    "sha256:171429e7f6504ee1e18052a76bfe8bba842c7c6431ef9aace42dec71ec4b4f87",
                    "sha256:2f738c2c60a7541836ab6cba290bbf92fadc59c7087650523f34270dfd060022"
                ]
            }
        },
        "37-20231106": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "raspberrypi5",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2023-11-06T12:34:47.835870966Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:31.895761202Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-06T18:42:53.905315575Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:a506790441a5cd056fb456111da480939a46667d520b519dcb9b2e2aa16aae70 in / "
                },
                {
                    "created": "2023-10-06T18:42:54.852939758Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T09:12:27.261337628Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T09:12:27.261337628Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T09:12:27.261337628Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T09:44:07.194449485Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T09:44:08.356242913Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T09:44:08.356242913Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T09:44:08.370923209Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T09:44:08.383861082Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T09:44:08.401598819Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T09:44:08.401598819Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T09:44:14.097449997Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T09:44:14.33458648Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T12:34:47.673440252Z",
                    "created_by": "LABEL io.balena.device-type=raspberrypi5",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T12:34:47.673440252Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T12:34:47.835870966Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:a37bac7c99baeb556998a67a51775b34aa6df7829fa1ff19323033c5e19837b3",
                    "sha256:bb42b2b57488a97c34e8f0aa9c9a04b6b5ddc51428a7f869c902e262985533fa",
                    "sha256:f41e2d07027059a658a46da06111805a1c38c357d7a263b65a57906a413afcb8",
                    "sha256:6dfd1348c7cf846716582db5414652bd266c84c3ceb084217d2c1faaa43610bd",
                    "sha256:1ef3bd9e556e1fe5e94ee5fc778405d0e160b3b2f911f7b73b841e3f2947d4ec",
                    "sha256:b00ab734246e3ab0a163af225efd04d30fbb893167c4883967444d8739b0a28b",
                    "sha256:505040d84b751f1b80aad25e47e2b5770da95393e303943d0e90452bb789625d",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:3de7d77508b1af83bfd44b6a7776ab5e9c687ecfe948f5f9d8f15802beed22b0",
                    "sha256:472ace270ccea41c14f9933f0ae960d9532fe6435435172037ed71643d1a40fe",
                    "sha256:b852d3e7cabdbb835dd738b4c9527990b0b1ff959e4bf050462c494b30c51dc0"
                ]
            }
        },
        "37-20231127": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "raspberrypi5",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2023-12-01T13:07:49.854569597Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:31.895761202Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-29T00:47:03.16713451Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:270e11b4c18af1c1efb8b8579be7fbda5255d56dd69f83ef7d933cfd2c685e5c in / "
                },
                {
                    "created": "2023-11-29T00:47:04.125919026Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T10:52:09.172740458Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T10:52:09.172740458Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T10:52:09.172740458Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T11:10:46.008255947Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T11:10:47.111959762Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T11:10:47.111959762Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T11:10:47.123059062Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T11:10:47.148503741Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T11:10:47.157133896Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T11:10:47.157133896Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T11:10:50.883923644Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T11:10:51.046020579Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T13:07:49.720770039Z",
                    "created_by": "LABEL io.balena.device-type=raspberrypi5",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T13:07:49.720770039Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T13:07:49.854569597Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:22de68abb450063be7e40efd22fd3b41bec469efafdd95e25c65998648e52b28",
                    "sha256:60f2f571d3fb1d1d2155d703033185efdcb8fd06f11360aff3752c6009ddbba5",
                    "sha256:8bb3ecdba476409248d260241fff01266e4176e947fe811a5efe5456870e671e",
                    "sha256:6852dc1f1a771f4a7632382350c1dbaa2ae3e16802b4884d04618e03763e8376",
                    "sha256:9db2458df0d1ffca59509d5dbd49436ef952483f1042d53531ca90ba7d6de9e9",
                    "sha256:8d401a597be69855ebfaf84921f07b57da8bb7a5c49c370999b998f6062358a2",
                    "sha256:05f9f870334e6de793d303f103d1f1b35f7df1ff21724f7ebaeb6fc561bccc2c",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:24546f46791bf568236132bceae1cdf41c9ca9f6d3e09077cab2bc32ee6bb76c",
                    "sha256:24ce1f5be0535d16b93594731aca9f7680b480d54b2a5820055e1580b872afe6",
                    "sha256:2b6dc1653ae6cb200b6663e6156cbdd3bdc518b03fac893f19869e9e8855682c"
                ]
            }
        },
        "37-20231204": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "raspberrypi5",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2023-12-06T22:55:22.373508696Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:31.895761202Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-29T00:47:03.16713451Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:270e11b4c18af1c1efb8b8579be7fbda5255d56dd69f83ef7d933cfd2c685e5c in / "
                },
                {
                    "created": "2023-11-29T00:47:04.125919026Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T20:40:21.575448793Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T20:40:21.575448793Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T20:40:21.575448793Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T20:59:06.4416038Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T20:59:07.14149679Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T20:59:07.14149679Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T20:59:07.150718208Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T20:59:07.159290685Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T20:59:07.187587582Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T20:59:07.187587582Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T20:59:10.850419463Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T20:59:11.010511508Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T22:55:22.243882328Z",
                    "created_by": "LABEL io.balena.device-type=raspberrypi5",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T22:55:22.243882328Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T22:55:22.373508696Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:22de68abb450063be7e40efd22fd3b41bec469efafdd95e25c65998648e52b28",
                    "sha256:2c6b0df21f9efd51a24a59463b9265452ccc9cf8a26908c50d2742c0e67683bd",
                    "sha256:906012c4f278d0d6c4a614afd4c812fc55bc367d28aac2c10cbdd33ac6ec80b8",
                    "sha256:34fc306b51c5f84676518d54cf67a097f48bfc8e79fb8c0ffc71ed9b2d1b5def",
                    "sha256:aa005d370b40094b326443ce4f1b6d04a780598588bd8f8fa1dc601171d59314",
                    "sha256:e580b4505982459166845d47c3159777541e000c8826a05635c6f84f62f03011",
                    "sha256:79990d4ff119d7188fd5fdcaaa04c391747be11fefbbe682a6a2c495c8ca3a6b",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:0aff9ccfdfd88ab9194d2d15e49264900a8942406276260bf5fb479d637d2075",
                    "sha256:6d3c0215ae8da55215b0e456b5d4b89a26cb450350fe5507c5eaf7bd88c8e132",
                    "sha256:e29791cd9f4ed15e18ea8be26b30c0de9a5af5048774d06e28ebf84d9800b573"
                ]
            }
        },
        "37-20240227": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "raspberrypi5",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2024-03-01T23:15:37.22340042Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:31.895761202Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-29T00:47:03.16713451Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:270e11b4c18af1c1efb8b8579be7fbda5255d56dd69f83ef7d933cfd2c685e5c in / "
                },
                {
                    "created": "2023-11-29T00:47:04.125919026Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T20:49:58.705358685Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T20:49:58.705358685Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T20:49:58.705358685Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:08:24.834287933Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:08:25.565567755Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:08:25.565567755Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T21:08:25.579271093Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:08:25.617204263Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:08:25.629384601Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:08:25.629384601Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T21:08:29.321790107Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:08:29.46619614Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T23:15:37.108481029Z",
                    "created_by": "LABEL io.balena.device-type=raspberrypi5",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T23:15:37.108481029Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T23:15:37.22340042Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:22de68abb450063be7e40efd22fd3b41bec469efafdd95e25c65998648e52b28",
                    "sha256:bfe341409759f9ccd364ecb2d335246560d19282f3ecf321c53836e101a82d2a",
                    "sha256:22279a1bcbb3b6a49c8d9ada414e0b58c5c83f35e20c9a33acc65e0aedb733a1",
                    "sha256:59b3dbe842a8cbc03ed09e65a15a87e8c46f6653b87eb93c5b37d8ab77060acf",
                    "sha256:2ad87538d509ffa4457cec4d29a36d570c8392257dab445452209d4097b7bf52",
                    "sha256:4b3f303bc53eefd36ad3db9ee937836bf0e5855a96ec2546c67cb8238fa8c5bc",
                    "sha256:27f44cee2cfb128916d178e2e1dd253065b766fcffe0f37cdb2588702c65bd5f",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:7f5845d6da8e4b02efd4b375c5222854a386a7b02c491fe3b96307345b96014d",
                    "sha256:aa61cf5f3f2942560cb632dd38548d7fd159cf0a4b737535c92836aa99ca1f52",
                    "sha256:9bd02f5806da6e3ef9c204b8c1b4ff3a20f9a32e3329966bb482123a9c47dee3"
                ]
            }
        },
        "37-20240304": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "raspberrypi5",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2024-03-05T10:50:26.53777156Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:31.895761202Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-29T00:47:03.16713451Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:270e11b4c18af1c1efb8b8579be7fbda5255d56dd69f83ef7d933cfd2c685e5c in / "
                },
                {
                    "created": "2023-11-29T00:47:04.125919026Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T08:24:13.360409226Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T08:24:13.360409226Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T08:24:13.360409226Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T08:43:22.770169859Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T08:43:23.650621519Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T08:43:23.650621519Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T08:43:23.66033272Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T08:43:23.670216283Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T08:43:23.695421657Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T08:43:23.695421657Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T08:43:27.455502812Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T08:43:27.593974423Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T10:50:26.413272107Z",
                    "created_by": "LABEL io.balena.device-type=raspberrypi5",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T10:50:26.413272107Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T10:50:26.53777156Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:22de68abb450063be7e40efd22fd3b41bec469efafdd95e25c65998648e52b28",
                    "sha256:28463901e499aa0a1515b57d0fbafa9cb9a2cc02cc10ed1687c180941c557184",
                    "sha256:0ca6f2444de4ad55ab4af4fd74364d376cec4fab74ebda60cba78c9fa2d7e649",
                    "sha256:cfc10fd96b96916769b790f45b5a4f0a1a17202f2532d659330de963d4494ebf",
                    "sha256:d2c34fbda1de7685d96923948d480fbe0ebab10b9087bfebda73744dbe2a6f9a",
                    "sha256:0d88f38f1e25f8d79cc6f17c26de206e21378fdd492c88062ab3e718003d32df",
                    "sha256:01e1144fabf916d9df9dbc69c087247ccbb1e57b391ed28f7dac24153a50d7b2",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:7ad9ead66349340e94a99303f594e85c786a6fabee7368153801d079722794bc",
                    "sha256:277971ea1ea290467dd51b95c3577111463f5dc7077258efb29b337ec37f92ca",
                    "sha256:c50f7b67b899b950301dce6815e76581bd6eadf166ce724064342aafc78db096"
                ]
            }
        },
        "37-20240401": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "raspberrypi5",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                }
            },
            "created": "2024-04-01T23:46:43.192266903Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:31.895761202Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-29T00:47:03.16713451Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:270e11b4c18af1c1efb8b8579be7fbda5255d56dd69f83ef7d933cfd2c685e5c in / "
                },
                {
                    "created": "2023-11-29T00:47:04.125919026Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T21:26:29.343455526Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T21:26:29.343455526Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T21:26:29.343455526Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T21:45:10.957762154Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T21:45:11.852141047Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T21:45:11.852141047Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T21:45:11.862471903Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T21:45:11.872331413Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T21:45:11.898584749Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T21:45:11.898584749Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T21:45:15.686171825Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T21:45:15.820771715Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T23:46:43.076294289Z",
                    "created_by": "LABEL io.balena.device-type=raspberrypi5",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T23:46:43.076294289Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T23:46:43.192266903Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:22de68abb450063be7e40efd22fd3b41bec469efafdd95e25c65998648e52b28",
                    "sha256:3a6d39f67382783e2c69d9a448aa59d1d7654260210364d05c2cae2ef469e3c8",
                    "sha256:8b316e0949cd1905304ca774963ddae530565f690a65de9db1a2dafa9aed0363",
                    "sha256:7fa4949a4c79caf7d749cc4abcbc241a5dd3a5c8d0155458cf6d4d83ac483646",
                    "sha256:0a0eea417236fa5be4e06c1d20766fd9f3b0e064419a66f356dea0f1f6d794df",
                    "sha256:ad31ce618fd1f26b74bc2900fbd27319ed86917e85375f90b57d28b291156d51",
                    "sha256:7b8582873ef4cde2aca83ece090a3993ca7c4f8fe0b13c3b0b064f08c7b21c21",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:8050b5f7d3d161f91b3bad0576691d8640130b32c0b8f23db87cdd4fee47c82e",
                    "sha256:31ab2d2b151011b640236ef0b2d0b2cf3b5928aff282a614c0affce35da9ea37",
                    "sha256:b6d8f2a786c666058d591d1a9eae9808f450684bad88d50400cbbadcda61a90c"
                ]
            }
        },
        "37-20240408": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "raspberrypi5",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                }
            },
            "created": "2024-04-09T20:00:01.596559907Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:31.895761202Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-29T00:47:03.16713451Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:270e11b4c18af1c1efb8b8579be7fbda5255d56dd69f83ef7d933cfd2c685e5c in / "
                },
                {
                    "created": "2023-11-29T00:47:04.125919026Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:52.915602222Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:52.915602222Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:52.915602222Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:54:04.100191166Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:54:04.963844501Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:54:04.963844501Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:54:04.973366628Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:54:05.001513857Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:54:05.024710968Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:54:05.024710968Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:54:08.797015979Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:54:08.943058393Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T20:00:01.48497321Z",
                    "created_by": "LABEL io.balena.device-type=raspberrypi5",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T20:00:01.48497321Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T20:00:01.596559907Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:22de68abb450063be7e40efd22fd3b41bec469efafdd95e25c65998648e52b28",
                    "sha256:03dd9a4ed991dc43e9a504ad71941782bb6fd4cd57f8ade649bbe25b622e3902",
                    "sha256:d24e8e6aec171dc7068d2c19b85d8c6341381b2f0cf4e1d1a20d5419f2d1ec53",
                    "sha256:e743a07ebcce27b755341d992eb4148fe86bd04481c6d8f2b6fe7364a942af19",
                    "sha256:1c988fbb0bdd3374b1f72bebc1953bd62853c7e33608dbc885ff64eba44dc1eb",
                    "sha256:7fad6968fdbdd1afee5f76e3b2f3df1829677bc85be4fa920cb57db14562699c",
                    "sha256:2999088cf700c485af0973e03dd5e2ff9d96b3f604f5908307f3edb5377c6d58",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:a75c43802eb36b20a7183fe5c30e33ef495a904237a7483d5c73c1df1691887b",
                    "sha256:5317fa65bc7c35c38c442c90f849cc95fc28d4aa5eb818b916e1a8116119211a",
                    "sha256:01008a19db5ef632d2ed55d56cefe9f631cc0c1484a447ea200434f527fe9280"
                ]
            }
        },
        "37-20240429": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "raspberrypi5",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                }
            },
            "created": "2024-05-06T10:38:45.538160132Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:31.895761202Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-29T00:47:03.16713451Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:270e11b4c18af1c1efb8b8579be7fbda5255d56dd69f83ef7d933cfd2c685e5c in / "
                },
                {
                    "created": "2023-11-29T00:47:04.125919026Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T09:28:47.993183335Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T09:28:47.993183335Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T09:28:47.993183335Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T09:47:56.501476974Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T09:47:57.631980985Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T09:47:57.631980985Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T09:47:57.644124262Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T09:47:57.678847981Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T09:47:57.688494096Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T09:47:57.688494096Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T09:48:01.526529414Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T09:48:01.665893428Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T10:38:45.395029597Z",
                    "created_by": "LABEL io.balena.device-type=raspberrypi5",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T10:38:45.395029597Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T10:38:45.538160132Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:22de68abb450063be7e40efd22fd3b41bec469efafdd95e25c65998648e52b28",
                    "sha256:ef64ad49ccf58709af070779ae49d014558d78a8b6a21fcc279c09ddac79e6c9",
                    "sha256:486e799e950e2b998ed0a1a7221aed44130002259c2b437524c7a8a72b725a56",
                    "sha256:5ad52f9d14deab1b2c3a79dfb68bf730440e209f5926a2cd2ebd561c519a08de",
                    "sha256:73001e4334a2e5a98b50faf87e712eaf851af09ac903e83a569150844ce9eda1",
                    "sha256:696c197b14bb7731bf0a36bbdc5e5272937b693f192b143e02dac747a1305ba1",
                    "sha256:f27b4f97c199fdc59cc49eb91fc7a348daf160285ca6bfce88ede5b64e4bb0a9",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:22341517b8222bb5810db07c816fbd0de10749523856c0263caf14789e77d27d",
                    "sha256:814378e6a74f147b97de86dbedb021279d972677e845a91c72091b86b4dcd6d5",
                    "sha256:07672fdc7d8d9779da09498cf20a8b017e6d3ee8d7e8b681424c91d8c94d3f67"
                ]
            }
        },
        "37-build": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "raspberrypi5",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                }
            },
            "created": "2024-05-06T10:39:05.745247919Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:31.895761202Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-29T00:47:03.16713451Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:270e11b4c18af1c1efb8b8579be7fbda5255d56dd69f83ef7d933cfd2c685e5c in / "
                },
                {
                    "created": "2023-11-29T00:47:04.125919026Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T09:28:43.57977131Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T09:28:43.57977131Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T09:28:43.57977131Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T09:47:19.941756159Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T10:20:57.000511545Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-clients \t\tsubversion \t\tautoconf \t\tautomake \t\tbzip2-devel \t\tglib2-devel \t\tgcc \t\tgcc-c++ \t\tImageMagick \t\tImageMagick-devel \t\tkernel-devel \t\tlibcurl-devel \t\tlibevent-devel \t\tlibffi-devel \t\tlibjpeg-devel \t\tlibsqlite3x-devel \t\tlibxml2-devel \t\tlibxslt-devel \t\tlibyaml-devel \t\tmysql-devel \t\tmake \t\tncurses-devel \t\topenssl-devel \t\tpostgresql-devel \t\treadline-devel \t\tsqlite-devel \t\tzlib-devel \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T10:20:58.118390256Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T10:20:58.118390256Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T10:20:58.12798187Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T10:20:58.136722317Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T10:20:58.164403522Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T10:20:58.164403522Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T10:21:01.984279759Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T10:21:02.133999332Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T10:39:05.631903588Z",
                    "created_by": "LABEL io.balena.device-type=raspberrypi5",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T10:39:05.631903588Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T10:39:05.745247919Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:22de68abb450063be7e40efd22fd3b41bec469efafdd95e25c65998648e52b28",
                    "sha256:40252cde73a60fe319f0dc295c7b1e421631974cfbe16656b81f7c86e773254e",
                    "sha256:4a4de46c8a70d5743384977bb42ebacdec5e3cb5490677a398f1d36366084aab",
                    "sha256:1523c4d5a73b8f8409b03635be1be78f6592c3915fd459908ffe5c04fb7ca684",
                    "sha256:3165ae98a25560d143d61c6f8a3cc9b4f73d0c009bfd9de33cefc4747c481229",
                    "sha256:802383c11ce70505808614d078d961ddc3cfaf46a58ac795624520a44e2a7860",
                    "sha256:0590d31cf7630143e0d0e5677bb4407b0d1c0b49a56ef3a87a860603dcea1282",
                    "sha256:6f5ffd7cbb1f8862606014326bb38c35022c8eb43d2a0aff0af32878db49dbdc",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:8c0b4113e6a87b2271a715a924b205a5c9534f5b51c4f3d05b39a48bb6ad75be",
                    "sha256:dfe8b7206657f70248c3af557761da865df3d0ccf1a3d5c0483af6659a3f7679",
                    "sha256:a41538cee7e19fc56d8b85adabf2df104f7856ddaa10d8d87900dcb7e8e56df8"
                ]
            }
        },
        "37-build-20230929": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "raspberrypi5",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2023-10-04T23:26:29.321215037Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:31.895761202Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-04T18:40:58.001277299Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:614dff70ca4206841645edfd3dab48901efeefccc8ef99772f475ee9bac861ff in / "
                },
                {
                    "created": "2023-08-04T18:40:59.951513662Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T05:16:42.403188583Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T05:16:42.403188583Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T05:16:42.403188583Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T05:41:14.882541843Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T06:27:10.219323725Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-clients \t\tsubversion \t\tautoconf \t\tautomake \t\tbzip2-devel \t\tglib2-devel \t\tgcc \t\tgcc-c++ \t\tImageMagick \t\tImageMagick-devel \t\tkernel-devel \t\tlibcurl-devel \t\tlibevent-devel \t\tlibffi-devel \t\tlibjpeg-devel \t\tlibsqlite3x-devel \t\tlibxml2-devel \t\tlibxslt-devel \t\tlibyaml-devel \t\tmysql-devel \t\tmake \t\tncurses-devel \t\topenssl-devel \t\tpostgresql-devel \t\treadline-devel \t\tsqlite-devel \t\tzlib-devel \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T06:27:11.639619237Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T06:27:11.639619237Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T06:27:11.672307839Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T06:27:11.703609828Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T06:27:11.752254777Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T06:27:11.752254777Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T06:27:16.692189405Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T06:27:17.113557601Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-04T23:26:29.150520161Z",
                    "created_by": "LABEL io.balena.device-type=raspberrypi5",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-04T23:26:29.150520161Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-04T23:26:29.321215037Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:cf819d1f191d71ce750fc0b9ca71726d50fc052d7c695682165a84c2bd1eb716",
                    "sha256:2c61372b1614282bfdb58c104252b37a61be492de5c3298dffc56376adfe0a8f",
                    "sha256:3892fad87609c0724cb700c7b327865d8b642316f214825299540678c84e007b",
                    "sha256:0f4a521d2c6cf8cad7b2eb4df330989890e4ec58bcdb8c8d3f1e7b953bbbd9cf",
                    "sha256:8d6c3fbf20d052b4dfc381066e982bdd6112441240ae7ffbc2e5e89595e79a0c",
                    "sha256:561d71383dd66b871476f9e5ff3274483fb9574952685d747d4e55904f1ee3fb",
                    "sha256:b19528952c8ac1375dbbc0465be58dc121fb846ce4e1e89645c716509faaf601",
                    "sha256:c8b95dba26be42e442fdec1f2fd5073216020274f421a0e7cf5b4abe1599f822",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:bf40c484f55f8935bf800843234fd2cadb1c9404047d95d9143e806f44edeae5",
                    "sha256:0b0b11cb509069dc3e0bbad4298bd363fc0e8f73d27fe05a251e505ae55a83d1",
                    "sha256:7c58687f9b5454d4f5308a81a9ba79092803e3ed23a3854aaf238e5d75e4ab16"
                ]
            }
        },
        "37-build-20231103": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "raspberrypi5",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2023-11-04T16:59:29.98236115Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:31.895761202Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-06T18:42:53.905315575Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:a506790441a5cd056fb456111da480939a46667d520b519dcb9b2e2aa16aae70 in / "
                },
                {
                    "created": "2023-10-06T18:42:54.852939758Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-04T14:05:46.127555575Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-04T14:05:46.127555575Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-04T14:05:46.127555575Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T14:32:34.985281581Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T15:17:05.03121789Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-clients \t\tsubversion \t\tautoconf \t\tautomake \t\tbzip2-devel \t\tglib2-devel \t\tgcc \t\tgcc-c++ \t\tImageMagick \t\tImageMagick-devel \t\tkernel-devel \t\tlibcurl-devel \t\tlibevent-devel \t\tlibffi-devel \t\tlibjpeg-devel \t\tlibsqlite3x-devel \t\tlibxml2-devel \t\tlibxslt-devel \t\tlibyaml-devel \t\tmysql-devel \t\tmake \t\tncurses-devel \t\topenssl-devel \t\tpostgresql-devel \t\treadline-devel \t\tsqlite-devel \t\tzlib-devel \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T15:17:06.534956571Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T15:17:06.534956571Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-04T15:17:06.547775032Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T15:17:06.562169912Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T15:17:06.584452792Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T15:17:06.584452792Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-04T15:17:11.437649746Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T15:17:11.624485751Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T16:59:29.837917707Z",
                    "created_by": "LABEL io.balena.device-type=raspberrypi5",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-04T16:59:29.837917707Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T16:59:29.98236115Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:a37bac7c99baeb556998a67a51775b34aa6df7829fa1ff19323033c5e19837b3",
                    "sha256:b803e34ece3fff5f3d20cfa0d3e1cf3d2f8eeb660544fa7d9d823be8aaca720f",
                    "sha256:6cd425edf3bbba0627f88702e763514480d7cc186cdcf9fba97078a67b67ff15",
                    "sha256:3b47068608b1d7e0db2398b9a01f8b7334b03f0b6e860606846319db5bca3e6d",
                    "sha256:cd9302fb8f7c40436d216b427838f33470983f6d503ff317690d5147f2ac7af4",
                    "sha256:3ee1780fbb8bd15cb0d9c1f09542dd9bfd3ad0b2b19f329060fb3864d9f08437",
                    "sha256:818589d5e5232c469d55d13e3c611a19ae9fbd09e1eab7d8d5a5cbc2d7a5364a",
                    "sha256:12e7cf1e010caa525ada8d183482cca1144de22e3bdeb8c3f63e13d7f4d27c83",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:24e8fe7f4ce600f415f5a229e1303c9bab9afc61a2cb00bfe838cf9af0b10c57",
                    "sha256:923dcc0bcf37a34781267da6a51a1c70dec7909f17cd41e9257aab971f8e1326",
                    "sha256:660cd340f23568f560e7687cef68bb4acb41438e6f93dec12e671181deff0993"
                ]
            }
        },
        "37-build-20231106": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "raspberrypi5",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2023-11-06T12:32:29.711635984Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:31.895761202Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-06T18:42:53.905315575Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:a506790441a5cd056fb456111da480939a46667d520b519dcb9b2e2aa16aae70 in / "
                },
                {
                    "created": "2023-10-06T18:42:54.852939758Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T09:12:33.793766866Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T09:12:33.793766866Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T09:12:33.793766866Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T09:41:28.803094869Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T10:28:03.430768422Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-clients \t\tsubversion \t\tautoconf \t\tautomake \t\tbzip2-devel \t\tglib2-devel \t\tgcc \t\tgcc-c++ \t\tImageMagick \t\tImageMagick-devel \t\tkernel-devel \t\tlibcurl-devel \t\tlibevent-devel \t\tlibffi-devel \t\tlibjpeg-devel \t\tlibsqlite3x-devel \t\tlibxml2-devel \t\tlibxslt-devel \t\tlibyaml-devel \t\tmysql-devel \t\tmake \t\tncurses-devel \t\topenssl-devel \t\tpostgresql-devel \t\treadline-devel \t\tsqlite-devel \t\tzlib-devel \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T10:28:04.971243325Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T10:28:04.971243325Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T10:28:04.981842152Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T10:28:04.990882375Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T10:28:04.999524597Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T10:28:04.999524597Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T10:28:10.325096726Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T10:28:10.509330565Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T12:32:29.54634105Z",
                    "created_by": "LABEL io.balena.device-type=raspberrypi5",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T12:32:29.54634105Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T12:32:29.711635984Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:a37bac7c99baeb556998a67a51775b34aa6df7829fa1ff19323033c5e19837b3",
                    "sha256:079d7cf39afa9d578a9d23346f411400794c3af330d6d28f819e9df742fd510f",
                    "sha256:953f9299839dea166062dc15ad557aaded1976123a8e68748f4c2b9bda013445",
                    "sha256:91484c3183f81de3b5df4fd7282fa21e976e1bfebc491b6bbfbf04e93c1894a0",
                    "sha256:8a86f91b095531cde383c2059c806a3e41d2784a850acb0074b3c05e00a92b22",
                    "sha256:72afd198025d5dd3f0441d9c45c59c4856bb515bdfd96241abc1821082e51634",
                    "sha256:dbd652ad088f975924c2188af549f2f10b92c01b6fe522387771c28ab9f9a3d1",
                    "sha256:b34bfc4dadfdc58a35b02f2a10f1cceab912215f6d83c03887fd10915a43740f",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:60d7cb78f7dbd6e4fd7284fde027f33371b8a35defbb6d0b64e611e5b79e547c",
                    "sha256:017327ad44610209b00c9a0b15918c88c8f12cffb3d0ae6bda17b044bf6a03c0",
                    "sha256:fc01bffa334f1aa9b857f8937b4c22dce59305d6a4044a1cc1aadf82d1a332b9"
                ]
            }
        },
        "37-build-20231127": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "raspberrypi5",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2023-12-01T13:08:05.310763079Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:31.895761202Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-29T00:47:03.16713451Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:270e11b4c18af1c1efb8b8579be7fbda5255d56dd69f83ef7d933cfd2c685e5c in / "
                },
                {
                    "created": "2023-11-29T00:47:04.125919026Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T10:52:02.657157896Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T10:52:02.657157896Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T10:52:02.657157896Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T11:10:52.835476629Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T11:44:38.992624697Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-clients \t\tsubversion \t\tautoconf \t\tautomake \t\tbzip2-devel \t\tglib2-devel \t\tgcc \t\tgcc-c++ \t\tImageMagick \t\tImageMagick-devel \t\tkernel-devel \t\tlibcurl-devel \t\tlibevent-devel \t\tlibffi-devel \t\tlibjpeg-devel \t\tlibsqlite3x-devel \t\tlibxml2-devel \t\tlibxslt-devel \t\tlibyaml-devel \t\tmysql-devel \t\tmake \t\tncurses-devel \t\topenssl-devel \t\tpostgresql-devel \t\treadline-devel \t\tsqlite-devel \t\tzlib-devel \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T11:44:39.990821654Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T11:44:39.990821654Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T11:44:40.000073844Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T11:44:40.01005454Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T11:44:40.019402748Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T11:44:40.019402748Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T11:44:43.689339656Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T11:44:43.868535084Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T13:08:05.159475326Z",
                    "created_by": "LABEL io.balena.device-type=raspberrypi5",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T13:08:05.159475326Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T13:08:05.310763079Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:22de68abb450063be7e40efd22fd3b41bec469efafdd95e25c65998648e52b28",
                    "sha256:1a3ad77cbdd5f3702cdc33e853ab9cc8a4bce3da55a32efb4239959bb0066d2c",
                    "sha256:ea8f95f5ee1d9a415da767f8f70e84219a783234faedbe934f7073d313c2a329",
                    "sha256:9859ba47080992b582231890261ade8c1615c538267fb38ef5346a7dc2b9b28c",
                    "sha256:4d00d92f327d89e6a8e173c3756ae21408423470ec789b7f26433277cb4a4765",
                    "sha256:b15db2ec924b64fd8d760db1a34d1a7bf1ee73795d67229df34a932fa2462fce",
                    "sha256:f426d5ef2263d711158432d852d2fd7bbac8b2a130d414a43053e03ea7af15cc",
                    "sha256:7e257b2f172d14765138a78493e82b46dc74628b411d96599cf2d23254ad0931",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:7465c77da1867ca9eddcdddd673828c00680f5a8f2980663f3dc74004cfee96e",
                    "sha256:939e720c2de34adf3195b05f7a36a0046c35d53323ec9b2b77b0b0f581d0f436",
                    "sha256:aeff95cd6808adabefc1e51772074ec52a71f6a425be152a5dda2446f401c21a"
                ]
            }
        },
        "37-build-20231204": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "raspberrypi5",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2023-12-06T22:56:03.043931325Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:31.895761202Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-29T00:47:03.16713451Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:270e11b4c18af1c1efb8b8579be7fbda5255d56dd69f83ef7d933cfd2c685e5c in / "
                },
                {
                    "created": "2023-11-29T00:47:04.125919026Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T20:40:26.374589955Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T20:40:26.374589955Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T20:40:26.374589955Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T20:59:24.426343965Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T21:33:22.338987204Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-clients \t\tsubversion \t\tautoconf \t\tautomake \t\tbzip2-devel \t\tglib2-devel \t\tgcc \t\tgcc-c++ \t\tImageMagick \t\tImageMagick-devel \t\tkernel-devel \t\tlibcurl-devel \t\tlibevent-devel \t\tlibffi-devel \t\tlibjpeg-devel \t\tlibsqlite3x-devel \t\tlibxml2-devel \t\tlibxslt-devel \t\tlibyaml-devel \t\tmysql-devel \t\tmake \t\tncurses-devel \t\topenssl-devel \t\tpostgresql-devel \t\treadline-devel \t\tsqlite-devel \t\tzlib-devel \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T21:33:24.154561262Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T21:33:24.154561262Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T21:33:24.162768682Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T21:33:24.171000628Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T21:33:24.179542448Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T21:33:24.179542448Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T21:33:28.121782119Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T21:33:28.270944579Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T22:56:02.889996431Z",
                    "created_by": "LABEL io.balena.device-type=raspberrypi5",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T22:56:02.889996431Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T22:56:03.043931325Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:22de68abb450063be7e40efd22fd3b41bec469efafdd95e25c65998648e52b28",
                    "sha256:25274df56d5e2d3d66833b3c1612e29d23730e6cc6ec37a78ee71d4e85b76404",
                    "sha256:d04cc6ad4633afbe1d3e0b00b156a425046a32b30dac7662e12874b696c4cfef",
                    "sha256:43377beeefc0287b77d294288faa7109bb3ce0bc36e475dfbd1d0e36067efadb",
                    "sha256:fec686f840ea96c83b8309deabe344d2dad4f89944098fafba92079f3168bea0",
                    "sha256:8a1c26a8af1d218a1a631e9eed97294a2a87ace87904af0512704b5ba5f905a0",
                    "sha256:f0e217e2e36898bc78b63b7998c0d53052ce478f4a9e28eb3acaa57455c20e2f",
                    "sha256:168aa23d85e63ec5786a95750332d5f9e1806211b6e527d7644ac532221069f1",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:536faba4d9280af162caf34aaa2fbf324ea707d1b058d74696885ed191a6eafd",
                    "sha256:97a87d38c79dd086898572162eb050cd601e449bd0441c2ea2a50bd9025c1517",
                    "sha256:3c4d9f9acb24b5d0ac43f8e1e88c4d0e6140712960f95416f5912a74cb1c29cb"
                ]
            }
        },
        "37-build-20240205": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "raspberrypi5",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2024-02-05T02:47:24.263268341Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:31.895761202Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-29T00:47:03.16713451Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:270e11b4c18af1c1efb8b8579be7fbda5255d56dd69f83ef7d933cfd2c685e5c in / "
                },
                {
                    "created": "2023-11-29T00:47:04.125919026Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-05T00:26:13.859309536Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-05T00:26:13.859309536Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-05T00:26:13.859309536Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T00:45:10.8092517Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T01:18:49.392328016Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-clients \t\tsubversion \t\tautoconf \t\tautomake \t\tbzip2-devel \t\tglib2-devel \t\tgcc \t\tgcc-c++ \t\tImageMagick \t\tImageMagick-devel \t\tkernel-devel \t\tlibcurl-devel \t\tlibevent-devel \t\tlibffi-devel \t\tlibjpeg-devel \t\tlibsqlite3x-devel \t\tlibxml2-devel \t\tlibxslt-devel \t\tlibyaml-devel \t\tmysql-devel \t\tmake \t\tncurses-devel \t\topenssl-devel \t\tpostgresql-devel \t\treadline-devel \t\tsqlite-devel \t\tzlib-devel \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T01:18:50.514115933Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T01:18:50.514115933Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-05T01:18:50.523617988Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T01:18:50.557647649Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T01:18:50.568553425Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T01:18:50.568553425Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-05T01:18:54.352613602Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T01:18:54.484309683Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T02:47:24.147502881Z",
                    "created_by": "LABEL io.balena.device-type=raspberrypi5",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-05T02:47:24.147502881Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T02:47:24.263268341Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:22de68abb450063be7e40efd22fd3b41bec469efafdd95e25c65998648e52b28",
                    "sha256:9391b38776fe1a447956db381646ee109343bd22183a6c607d66c26dac722850",
                    "sha256:2ff3e8a40fae975f72250e96f2c01345768ef0a3dbcfbf6084bc542211223c04",
                    "sha256:38432aa17028b7bdb0c9d5c2b22fb4207811641298965ba6771cd989d6a19daa",
                    "sha256:3efdb146c34f8f1ff3c22b490e72b097196f8cf3a214dfc51628ba81f402eeb1",
                    "sha256:bf38ccf74068b318ec44fb671d7f71d3454fb8ab9304451042334e972b5fa0ec",
                    "sha256:50fbc93a18898e758d8a4426c13b8cdb844e98e4fe11dbc5e9409eb7f1466e43",
                    "sha256:21e4e77425952b2bdbb4f06e327bd295156461fc4fe3e31ed324ba59b04a3712",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:5f653a5aac8e7aec60e0930415cf5cfc3ee9a054c6b5996f3e8bcd9c24b11e54",
                    "sha256:b59f4e2498047775dd297317776553677e1605d59f5500f58949633510d86916",
                    "sha256:67476f7bb55e59ea57e471cd8af69e2dce530a51e3358d7ff9fc88102756aa31"
                ]
            }
        },
        "37-build-20240227": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "raspberrypi5",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2024-03-01T23:15:35.935052095Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:31.895761202Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-29T00:47:03.16713451Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:270e11b4c18af1c1efb8b8579be7fbda5255d56dd69f83ef7d933cfd2c685e5c in / "
                },
                {
                    "created": "2023-11-29T00:47:04.125919026Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T20:49:59.807334412Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T20:49:59.807334412Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T20:49:59.807334412Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:10:56.098365397Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:45:26.894768836Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-clients \t\tsubversion \t\tautoconf \t\tautomake \t\tbzip2-devel \t\tglib2-devel \t\tgcc \t\tgcc-c++ \t\tImageMagick \t\tImageMagick-devel \t\tkernel-devel \t\tlibcurl-devel \t\tlibevent-devel \t\tlibffi-devel \t\tlibjpeg-devel \t\tlibsqlite3x-devel \t\tlibxml2-devel \t\tlibxslt-devel \t\tlibyaml-devel \t\tmysql-devel \t\tmake \t\tncurses-devel \t\topenssl-devel \t\tpostgresql-devel \t\treadline-devel \t\tsqlite-devel \t\tzlib-devel \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:45:27.831671197Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:45:27.831671197Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T21:45:27.841017293Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:45:27.850413212Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:45:27.858829391Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:45:27.858829391Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T21:45:31.607983559Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:45:31.757692693Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T23:15:35.816479252Z",
                    "created_by": "LABEL io.balena.device-type=raspberrypi5",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T23:15:35.816479252Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T23:15:35.935052095Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:22de68abb450063be7e40efd22fd3b41bec469efafdd95e25c65998648e52b28",
                    "sha256:153f603c3b6b2529b45b12c9cb3de69de633d99488c4aac6cb5e04c6784e284c",
                    "sha256:fcda31efe0f90abdb3be0e2cc3050fddb745d7db41b962e3a08d908b3fe90c76",
                    "sha256:168e7cb2c07cd77fe30fd104d59f5ac49b7a43775f04c196367fa588f2159f11",
                    "sha256:3e98c7cf4c63c439e9045cd721cc19c243588d17804a57358309accf40b5249c",
                    "sha256:8aeb044849aef9a674a8ebde259f830df38faaa43b11f80b3bec5085ace3c264",
                    "sha256:691ea9dfdaf44533ac36d1341c6822b6735744922c3d5c304e657357f4babe33",
                    "sha256:072ee65b31efbe2110bc15922159f609d9d9c933715bc4429aeb7f4c5da9d425",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:bd215b090f3f370a73aa2871e3e123516169ed4db9f68a876a6be0d4a288d6d4",
                    "sha256:0295e4b5500da95845ba586d9b4dda33a96a9ed048edbd0037f39dfa7e0a0d8f",
                    "sha256:670f0d67f733810a4c9141187e6af3bfc29dee35a9757616a46cd08b2e630adc"
                ]
            }
        },
        "37-build-20240304": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "raspberrypi5",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2024-03-05T10:49:48.940549603Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:31.895761202Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-29T00:47:03.16713451Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:270e11b4c18af1c1efb8b8579be7fbda5255d56dd69f83ef7d933cfd2c685e5c in / "
                },
                {
                    "created": "2023-11-29T00:47:04.125919026Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T08:24:07.032483717Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T08:24:07.032483717Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T08:24:07.032483717Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T08:43:07.560394223Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T09:18:33.168342892Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-clients \t\tsubversion \t\tautoconf \t\tautomake \t\tbzip2-devel \t\tglib2-devel \t\tgcc \t\tgcc-c++ \t\tImageMagick \t\tImageMagick-devel \t\tkernel-devel \t\tlibcurl-devel \t\tlibevent-devel \t\tlibffi-devel \t\tlibjpeg-devel \t\tlibsqlite3x-devel \t\tlibxml2-devel \t\tlibxslt-devel \t\tlibyaml-devel \t\tmysql-devel \t\tmake \t\tncurses-devel \t\topenssl-devel \t\tpostgresql-devel \t\treadline-devel \t\tsqlite-devel \t\tzlib-devel \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T09:18:34.140220764Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T09:18:34.140220764Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T09:18:34.153622864Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T09:18:34.190278048Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T09:18:34.204411016Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T09:18:34.204411016Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T09:18:37.906466695Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T09:18:38.054385621Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T10:49:48.813104442Z",
                    "created_by": "LABEL io.balena.device-type=raspberrypi5",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T10:49:48.813104442Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T10:49:48.940549603Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:22de68abb450063be7e40efd22fd3b41bec469efafdd95e25c65998648e52b28",
                    "sha256:5b32c6607b8e7ea89ed5bb72a3578bb0d4723f5496d0a8e7dc688bf6a3a167d6",
                    "sha256:90da55fed465de8a873bf3e2bcdea7dca9a0be400a66dfa4c0efde5fa5ad1712",
                    "sha256:d5b90a049cc6b8b6a297f2e6f8a012847c545187714f13feb3004077215fe790",
                    "sha256:ac341c2760f8397f739500c811ea7bfc967bee43cae3b5bccbc3bc6263562d17",
                    "sha256:383c3fcfa865391817fdec807ce0f15866c08261ec20642c87fdde447997f846",
                    "sha256:d8c138867fdbf59da6040e42db8f659089ae32f509c4809cd61e7b817c68284d",
                    "sha256:59113e489ab1305fec7cc3fd646933122fb6f8dfeb9f3e8146b36687dd3f8ce0",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:3e090112138683d3816cd9299b41c91f8e2961f75a329ef3583c678904c6aa0c",
                    "sha256:6c82dde303f558bc49a46126a6aa066523092239f9e2829d3dc28c59a8f8d95f",
                    "sha256:6a7194d3cd0dfee732081c5cbe614a70c493752d797dc8146ecc7ca9b388c3d3"
                ]
            }
        },
        "37-build-20240401": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "raspberrypi5",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                }
            },
            "created": "2024-04-01T23:46:22.834424824Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:31.895761202Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-29T00:47:03.16713451Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:270e11b4c18af1c1efb8b8579be7fbda5255d56dd69f83ef7d933cfd2c685e5c in / "
                },
                {
                    "created": "2023-11-29T00:47:04.125919026Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T21:26:32.436538725Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T21:26:32.436538725Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T21:26:32.436538725Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T21:44:46.483219966Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T22:18:11.966182353Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-clients \t\tsubversion \t\tautoconf \t\tautomake \t\tbzip2-devel \t\tglib2-devel \t\tgcc \t\tgcc-c++ \t\tImageMagick \t\tImageMagick-devel \t\tkernel-devel \t\tlibcurl-devel \t\tlibevent-devel \t\tlibffi-devel \t\tlibjpeg-devel \t\tlibsqlite3x-devel \t\tlibxml2-devel \t\tlibxslt-devel \t\tlibyaml-devel \t\tmysql-devel \t\tmake \t\tncurses-devel \t\topenssl-devel \t\tpostgresql-devel \t\treadline-devel \t\tsqlite-devel \t\tzlib-devel \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T22:18:13.396726412Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T22:18:13.396726412Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T22:18:13.40948656Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T22:18:13.42436327Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T22:18:13.435538637Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T22:18:13.435538637Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T22:18:17.292242645Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T22:18:17.441252547Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T23:46:22.718527176Z",
                    "created_by": "LABEL io.balena.device-type=raspberrypi5",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T23:46:22.718527176Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T23:46:22.834424824Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:22de68abb450063be7e40efd22fd3b41bec469efafdd95e25c65998648e52b28",
                    "sha256:2bc63a4a3e163679c8a2399342b1daf3e005320d94db933ce217a0f80d1b4537",
                    "sha256:d75154443a45cab05ca4a85ddd827b962fedcff91b702d791e6ef9404f6c85d3",
                    "sha256:ed61218e50e513b23bae8d31f72e7c8e7a3d0090e48e2ff087a536ac362cfb81",
                    "sha256:23faadc341a4670f586fccbfa7d9b0c5a5e56be8ab46b55a4067df82e5569a5c",
                    "sha256:26696ab075f5bb87eee8a46b41f2091a3f9d7edb2116147001a7677757eaaca5",
                    "sha256:61d65d5da4322b148f9078fa00914c14291b0bdf48b073091e08240ed72a9f7c",
                    "sha256:879d60f10dea3318ceaedb2814160c1ae4cc919d4f04d2e62152d05c1ea7011a",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:0428822e1d59c6db13038f6502cd2c9a69bd7e2d2a033cb20fc19071849b112e",
                    "sha256:3c8f1509f3c7add36b43b389148cb9fe7868ecb33ac89281c10cea89cf2f85c0",
                    "sha256:b8c4910781ac9990d7b2091b55601b234403b8a2028a6fad85d5ce48189f7b37"
                ]
            }
        },
        "37-build-20240408": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "raspberrypi5",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                }
            },
            "created": "2024-04-09T20:00:09.747910783Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:31.895761202Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-29T00:47:03.16713451Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:270e11b4c18af1c1efb8b8579be7fbda5255d56dd69f83ef7d933cfd2c685e5c in / "
                },
                {
                    "created": "2023-11-29T00:47:04.125919026Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:50.964198867Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:50.964198867Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:50.964198867Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:54:06.695861539Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:30:31.267198079Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-clients \t\tsubversion \t\tautoconf \t\tautomake \t\tbzip2-devel \t\tglib2-devel \t\tgcc \t\tgcc-c++ \t\tImageMagick \t\tImageMagick-devel \t\tkernel-devel \t\tlibcurl-devel \t\tlibevent-devel \t\tlibffi-devel \t\tlibjpeg-devel \t\tlibsqlite3x-devel \t\tlibxml2-devel \t\tlibxslt-devel \t\tlibyaml-devel \t\tmysql-devel \t\tmake \t\tncurses-devel \t\topenssl-devel \t\tpostgresql-devel \t\treadline-devel \t\tsqlite-devel \t\tzlib-devel \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:30:32.683562935Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:30:32.683562935Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T14:30:32.694247574Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:30:32.719346978Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:30:32.730408486Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:30:32.730408486Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T14:30:36.547683782Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:30:36.691463904Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T20:00:09.635479315Z",
                    "created_by": "LABEL io.balena.device-type=raspberrypi5",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T20:00:09.635479315Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T20:00:09.747910783Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:22de68abb450063be7e40efd22fd3b41bec469efafdd95e25c65998648e52b28",
                    "sha256:3f054b5308bf8dbf3abb2dac1bc72fac6b6e9569c5d0c4d1733c57b40f98d68c",
                    "sha256:9a408e5130d5761269a2f78fe14c41bfad96906f19a9b6f231ba27a0e270536b",
                    "sha256:ce27ddfda0b79dba438fc400e0d24f635fec12b6b0b2e61ff692ddfb273b5fe9",
                    "sha256:251af411a33440438f0b2f94cdfb89f2f9ffdbc97319bda046932d48df33eb89",
                    "sha256:5482afbecbaab7a5c1e492cf2a2f03aafdc9012c4dc853b5b5c1ed9fde902db7",
                    "sha256:5d6da048fbb12c4062ff5b76617e555654e7b2043bfca3f0791046007fc79bb6",
                    "sha256:c6c5906dcd307ca53496f54734925e883c2e43f758510871473e5490706bf6a8",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:42adbbc0741061b3fa0e1fde61c20ae07301f416423df023d7264ef090febb62",
                    "sha256:551053d99240d13304d31a3b4871a3ef49b72d4699ff8731bbcab9e76f3f66e5",
                    "sha256:1b923f601eecb1bebcac374b13f2fa33bd5703d365f060934d22ed144db5adc1"
                ]
            }
        },
        "37-build-20240429": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "raspberrypi5",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                }
            },
            "created": "2024-05-06T10:39:05.745247919Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:31.895761202Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-29T00:47:03.16713451Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:270e11b4c18af1c1efb8b8579be7fbda5255d56dd69f83ef7d933cfd2c685e5c in / "
                },
                {
                    "created": "2023-11-29T00:47:04.125919026Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T09:28:43.57977131Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T09:28:43.57977131Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T09:28:43.57977131Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T09:47:19.941756159Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T10:20:57.000511545Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-clients \t\tsubversion \t\tautoconf \t\tautomake \t\tbzip2-devel \t\tglib2-devel \t\tgcc \t\tgcc-c++ \t\tImageMagick \t\tImageMagick-devel \t\tkernel-devel \t\tlibcurl-devel \t\tlibevent-devel \t\tlibffi-devel \t\tlibjpeg-devel \t\tlibsqlite3x-devel \t\tlibxml2-devel \t\tlibxslt-devel \t\tlibyaml-devel \t\tmysql-devel \t\tmake \t\tncurses-devel \t\topenssl-devel \t\tpostgresql-devel \t\treadline-devel \t\tsqlite-devel \t\tzlib-devel \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T10:20:58.118390256Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T10:20:58.118390256Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T10:20:58.12798187Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T10:20:58.136722317Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T10:20:58.164403522Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T10:20:58.164403522Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T10:21:01.984279759Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T10:21:02.133999332Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T10:39:05.631903588Z",
                    "created_by": "LABEL io.balena.device-type=raspberrypi5",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T10:39:05.631903588Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T10:39:05.745247919Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:22de68abb450063be7e40efd22fd3b41bec469efafdd95e25c65998648e52b28",
                    "sha256:40252cde73a60fe319f0dc295c7b1e421631974cfbe16656b81f7c86e773254e",
                    "sha256:4a4de46c8a70d5743384977bb42ebacdec5e3cb5490677a398f1d36366084aab",
                    "sha256:1523c4d5a73b8f8409b03635be1be78f6592c3915fd459908ffe5c04fb7ca684",
                    "sha256:3165ae98a25560d143d61c6f8a3cc9b4f73d0c009bfd9de33cefc4747c481229",
                    "sha256:802383c11ce70505808614d078d961ddc3cfaf46a58ac795624520a44e2a7860",
                    "sha256:0590d31cf7630143e0d0e5677bb4407b0d1c0b49a56ef3a87a860603dcea1282",
                    "sha256:6f5ffd7cbb1f8862606014326bb38c35022c8eb43d2a0aff0af32878db49dbdc",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:8c0b4113e6a87b2271a715a924b205a5c9534f5b51c4f3d05b39a48bb6ad75be",
                    "sha256:dfe8b7206657f70248c3af557761da865df3d0ccf1a3d5c0483af6659a3f7679",
                    "sha256:a41538cee7e19fc56d8b85adabf2df104f7856ddaa10d8d87900dcb7e8e56df8"
                ]
            }
        },
        "37-run": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "raspberrypi5",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                }
            },
            "created": "2024-05-06T10:38:45.538160132Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:31.895761202Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-29T00:47:03.16713451Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:270e11b4c18af1c1efb8b8579be7fbda5255d56dd69f83ef7d933cfd2c685e5c in / "
                },
                {
                    "created": "2023-11-29T00:47:04.125919026Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T09:28:47.993183335Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T09:28:47.993183335Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T09:28:47.993183335Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T09:47:56.501476974Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T09:47:57.631980985Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T09:47:57.631980985Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T09:47:57.644124262Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T09:47:57.678847981Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T09:47:57.688494096Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T09:47:57.688494096Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T09:48:01.526529414Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T09:48:01.665893428Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T10:38:45.395029597Z",
                    "created_by": "LABEL io.balena.device-type=raspberrypi5",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T10:38:45.395029597Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T10:38:45.538160132Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:22de68abb450063be7e40efd22fd3b41bec469efafdd95e25c65998648e52b28",
                    "sha256:ef64ad49ccf58709af070779ae49d014558d78a8b6a21fcc279c09ddac79e6c9",
                    "sha256:486e799e950e2b998ed0a1a7221aed44130002259c2b437524c7a8a72b725a56",
                    "sha256:5ad52f9d14deab1b2c3a79dfb68bf730440e209f5926a2cd2ebd561c519a08de",
                    "sha256:73001e4334a2e5a98b50faf87e712eaf851af09ac903e83a569150844ce9eda1",
                    "sha256:696c197b14bb7731bf0a36bbdc5e5272937b693f192b143e02dac747a1305ba1",
                    "sha256:f27b4f97c199fdc59cc49eb91fc7a348daf160285ca6bfce88ede5b64e4bb0a9",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:22341517b8222bb5810db07c816fbd0de10749523856c0263caf14789e77d27d",
                    "sha256:814378e6a74f147b97de86dbedb021279d972677e845a91c72091b86b4dcd6d5",
                    "sha256:07672fdc7d8d9779da09498cf20a8b017e6d3ee8d7e8b681424c91d8c94d3f67"
                ]
            }
        },
        "37-run-20230929": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "raspberrypi5",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2023-10-04T23:25:26.883353446Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:31.895761202Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-04T18:40:58.001277299Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:614dff70ca4206841645edfd3dab48901efeefccc8ef99772f475ee9bac861ff in / "
                },
                {
                    "created": "2023-08-04T18:40:59.951513662Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T05:16:42.403188583Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T05:16:42.403188583Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T05:16:42.403188583Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T05:41:14.882541843Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T05:41:16.309377049Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T05:41:16.309377049Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T05:41:16.340188202Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T05:41:16.351150734Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T05:41:16.360211026Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T05:41:16.360211026Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T05:41:21.389664273Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T05:41:21.747711571Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-04T23:25:26.738925718Z",
                    "created_by": "LABEL io.balena.device-type=raspberrypi5",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-04T23:25:26.738925718Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-04T23:25:26.883353446Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:cf819d1f191d71ce750fc0b9ca71726d50fc052d7c695682165a84c2bd1eb716",
                    "sha256:2c61372b1614282bfdb58c104252b37a61be492de5c3298dffc56376adfe0a8f",
                    "sha256:3892fad87609c0724cb700c7b327865d8b642316f214825299540678c84e007b",
                    "sha256:47b1691c56a15153e34460e97d0615abbde7eb4128cffd187b3c4507be55c4a0",
                    "sha256:526255e20ebb75f4e4a9cd0b179342ccc59ea09dfb95f916aad1dfd38903c411",
                    "sha256:10a91abc01c07dd01c837dc1a35597c3030ffee89a81f6dcc760a204a2da9e5a",
                    "sha256:fb61a502b5a7e114c0e1b65ffbf1f5d42041b65c52f9ecb41e2fb9a1cdcdbd97",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:cc06c053add61653ccca8a1d621c01df905dfb240d202ad2f7452d1777852952",
                    "sha256:d4eb19f941ac91799d9d6198e4fe925d23b49332e47400690cf7b3c2d9295b5d",
                    "sha256:59e1a00a1db05f912e0325907ea2f23a8be8f071617bd4b6a6101c339749e0fb"
                ]
            }
        },
        "37-run-20231103": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "raspberrypi5",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2023-11-04T17:03:19.763869192Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:31.895761202Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-06T18:42:53.905315575Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:a506790441a5cd056fb456111da480939a46667d520b519dcb9b2e2aa16aae70 in / "
                },
                {
                    "created": "2023-10-06T18:42:54.852939758Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-04T14:05:43.22598589Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-04T14:05:43.22598589Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-04T14:05:43.22598589Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T14:34:18.977818495Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T14:34:20.236374739Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T14:34:20.236374739Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-04T14:34:20.246502673Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T14:34:20.255833503Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T14:34:20.26399513Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T14:34:20.26399513Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-04T14:34:25.601224907Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T14:34:25.783838009Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T17:03:19.593865165Z",
                    "created_by": "LABEL io.balena.device-type=raspberrypi5",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-04T17:03:19.593865165Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T17:03:19.763869192Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:a37bac7c99baeb556998a67a51775b34aa6df7829fa1ff19323033c5e19837b3",
                    "sha256:768fbcc1112a55954ab49021af3e5b3e77d06892f0018801cb6a68567a441e44",
                    "sha256:b339e6005ff8696452b8a5daf08c04afc137c0da129e399cf294d19b6213af01",
                    "sha256:80e7fcb77b05762cb4af7a336c31edd97b255eb9c5e68b5e2d99fcd0c0941c00",
                    "sha256:faa025149da6c8af6245b9feb2dfa133869871b24b83291212a581a8ac861951",
                    "sha256:85fb00c475997eaa7bf88fdc4a78bd8ad8ecfcafaa4870eb4c2e610747381ba2",
                    "sha256:707dbcf7ea87fd75e1d03a7f275e36d8fcfc1b4ea1f3c867ab6830318bf147e9",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:2509d1d7a240f88f51a41393363e38c35b81e3edf67fa356b59390c21617a3ab",
                    "sha256:171429e7f6504ee1e18052a76bfe8bba842c7c6431ef9aace42dec71ec4b4f87",
                    "sha256:2f738c2c60a7541836ab6cba290bbf92fadc59c7087650523f34270dfd060022"
                ]
            }
        },
        "37-run-20231106": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "raspberrypi5",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2023-11-06T12:34:47.835870966Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:31.895761202Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-06T18:42:53.905315575Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:a506790441a5cd056fb456111da480939a46667d520b519dcb9b2e2aa16aae70 in / "
                },
                {
                    "created": "2023-10-06T18:42:54.852939758Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T09:12:27.261337628Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T09:12:27.261337628Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T09:12:27.261337628Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T09:44:07.194449485Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T09:44:08.356242913Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T09:44:08.356242913Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T09:44:08.370923209Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T09:44:08.383861082Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T09:44:08.401598819Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T09:44:08.401598819Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T09:44:14.097449997Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T09:44:14.33458648Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T12:34:47.673440252Z",
                    "created_by": "LABEL io.balena.device-type=raspberrypi5",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T12:34:47.673440252Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T12:34:47.835870966Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:a37bac7c99baeb556998a67a51775b34aa6df7829fa1ff19323033c5e19837b3",
                    "sha256:bb42b2b57488a97c34e8f0aa9c9a04b6b5ddc51428a7f869c902e262985533fa",
                    "sha256:f41e2d07027059a658a46da06111805a1c38c357d7a263b65a57906a413afcb8",
                    "sha256:6dfd1348c7cf846716582db5414652bd266c84c3ceb084217d2c1faaa43610bd",
                    "sha256:1ef3bd9e556e1fe5e94ee5fc778405d0e160b3b2f911f7b73b841e3f2947d4ec",
                    "sha256:b00ab734246e3ab0a163af225efd04d30fbb893167c4883967444d8739b0a28b",
                    "sha256:505040d84b751f1b80aad25e47e2b5770da95393e303943d0e90452bb789625d",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:3de7d77508b1af83bfd44b6a7776ab5e9c687ecfe948f5f9d8f15802beed22b0",
                    "sha256:472ace270ccea41c14f9933f0ae960d9532fe6435435172037ed71643d1a40fe",
                    "sha256:b852d3e7cabdbb835dd738b4c9527990b0b1ff959e4bf050462c494b30c51dc0"
                ]
            }
        },
        "37-run-20231127": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "raspberrypi5",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2023-12-01T13:07:49.854569597Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:31.895761202Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-29T00:47:03.16713451Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:270e11b4c18af1c1efb8b8579be7fbda5255d56dd69f83ef7d933cfd2c685e5c in / "
                },
                {
                    "created": "2023-11-29T00:47:04.125919026Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T10:52:09.172740458Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T10:52:09.172740458Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T10:52:09.172740458Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T11:10:46.008255947Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T11:10:47.111959762Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T11:10:47.111959762Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T11:10:47.123059062Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T11:10:47.148503741Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T11:10:47.157133896Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T11:10:47.157133896Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T11:10:50.883923644Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T11:10:51.046020579Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T13:07:49.720770039Z",
                    "created_by": "LABEL io.balena.device-type=raspberrypi5",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T13:07:49.720770039Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T13:07:49.854569597Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:22de68abb450063be7e40efd22fd3b41bec469efafdd95e25c65998648e52b28",
                    "sha256:60f2f571d3fb1d1d2155d703033185efdcb8fd06f11360aff3752c6009ddbba5",
                    "sha256:8bb3ecdba476409248d260241fff01266e4176e947fe811a5efe5456870e671e",
                    "sha256:6852dc1f1a771f4a7632382350c1dbaa2ae3e16802b4884d04618e03763e8376",
                    "sha256:9db2458df0d1ffca59509d5dbd49436ef952483f1042d53531ca90ba7d6de9e9",
                    "sha256:8d401a597be69855ebfaf84921f07b57da8bb7a5c49c370999b998f6062358a2",
                    "sha256:05f9f870334e6de793d303f103d1f1b35f7df1ff21724f7ebaeb6fc561bccc2c",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:24546f46791bf568236132bceae1cdf41c9ca9f6d3e09077cab2bc32ee6bb76c",
                    "sha256:24ce1f5be0535d16b93594731aca9f7680b480d54b2a5820055e1580b872afe6",
                    "sha256:2b6dc1653ae6cb200b6663e6156cbdd3bdc518b03fac893f19869e9e8855682c"
                ]
            }
        },
        "37-run-20231204": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "raspberrypi5",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2023-12-06T22:55:22.373508696Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:31.895761202Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-29T00:47:03.16713451Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:270e11b4c18af1c1efb8b8579be7fbda5255d56dd69f83ef7d933cfd2c685e5c in / "
                },
                {
                    "created": "2023-11-29T00:47:04.125919026Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T20:40:21.575448793Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T20:40:21.575448793Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T20:40:21.575448793Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T20:59:06.4416038Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T20:59:07.14149679Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T20:59:07.14149679Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T20:59:07.150718208Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T20:59:07.159290685Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T20:59:07.187587582Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T20:59:07.187587582Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T20:59:10.850419463Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T20:59:11.010511508Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T22:55:22.243882328Z",
                    "created_by": "LABEL io.balena.device-type=raspberrypi5",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T22:55:22.243882328Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T22:55:22.373508696Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:22de68abb450063be7e40efd22fd3b41bec469efafdd95e25c65998648e52b28",
                    "sha256:2c6b0df21f9efd51a24a59463b9265452ccc9cf8a26908c50d2742c0e67683bd",
                    "sha256:906012c4f278d0d6c4a614afd4c812fc55bc367d28aac2c10cbdd33ac6ec80b8",
                    "sha256:34fc306b51c5f84676518d54cf67a097f48bfc8e79fb8c0ffc71ed9b2d1b5def",
                    "sha256:aa005d370b40094b326443ce4f1b6d04a780598588bd8f8fa1dc601171d59314",
                    "sha256:e580b4505982459166845d47c3159777541e000c8826a05635c6f84f62f03011",
                    "sha256:79990d4ff119d7188fd5fdcaaa04c391747be11fefbbe682a6a2c495c8ca3a6b",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:0aff9ccfdfd88ab9194d2d15e49264900a8942406276260bf5fb479d637d2075",
                    "sha256:6d3c0215ae8da55215b0e456b5d4b89a26cb450350fe5507c5eaf7bd88c8e132",
                    "sha256:e29791cd9f4ed15e18ea8be26b30c0de9a5af5048774d06e28ebf84d9800b573"
                ]
            }
        },
        "37-run-20240227": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "raspberrypi5",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2024-03-01T23:15:37.22340042Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:31.895761202Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-29T00:47:03.16713451Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:270e11b4c18af1c1efb8b8579be7fbda5255d56dd69f83ef7d933cfd2c685e5c in / "
                },
                {
                    "created": "2023-11-29T00:47:04.125919026Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T20:49:58.705358685Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T20:49:58.705358685Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T20:49:58.705358685Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:08:24.834287933Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:08:25.565567755Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:08:25.565567755Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T21:08:25.579271093Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:08:25.617204263Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:08:25.629384601Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:08:25.629384601Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T21:08:29.321790107Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:08:29.46619614Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T23:15:37.108481029Z",
                    "created_by": "LABEL io.balena.device-type=raspberrypi5",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T23:15:37.108481029Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T23:15:37.22340042Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:22de68abb450063be7e40efd22fd3b41bec469efafdd95e25c65998648e52b28",
                    "sha256:bfe341409759f9ccd364ecb2d335246560d19282f3ecf321c53836e101a82d2a",
                    "sha256:22279a1bcbb3b6a49c8d9ada414e0b58c5c83f35e20c9a33acc65e0aedb733a1",
                    "sha256:59b3dbe842a8cbc03ed09e65a15a87e8c46f6653b87eb93c5b37d8ab77060acf",
                    "sha256:2ad87538d509ffa4457cec4d29a36d570c8392257dab445452209d4097b7bf52",
                    "sha256:4b3f303bc53eefd36ad3db9ee937836bf0e5855a96ec2546c67cb8238fa8c5bc",
                    "sha256:27f44cee2cfb128916d178e2e1dd253065b766fcffe0f37cdb2588702c65bd5f",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:7f5845d6da8e4b02efd4b375c5222854a386a7b02c491fe3b96307345b96014d",
                    "sha256:aa61cf5f3f2942560cb632dd38548d7fd159cf0a4b737535c92836aa99ca1f52",
                    "sha256:9bd02f5806da6e3ef9c204b8c1b4ff3a20f9a32e3329966bb482123a9c47dee3"
                ]
            }
        },
        "37-run-20240304": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "raspberrypi5",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2024-03-05T10:50:26.53777156Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:31.895761202Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-29T00:47:03.16713451Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:270e11b4c18af1c1efb8b8579be7fbda5255d56dd69f83ef7d933cfd2c685e5c in / "
                },
                {
                    "created": "2023-11-29T00:47:04.125919026Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T08:24:13.360409226Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T08:24:13.360409226Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T08:24:13.360409226Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T08:43:22.770169859Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T08:43:23.650621519Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T08:43:23.650621519Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T08:43:23.66033272Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T08:43:23.670216283Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T08:43:23.695421657Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T08:43:23.695421657Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T08:43:27.455502812Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T08:43:27.593974423Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T10:50:26.413272107Z",
                    "created_by": "LABEL io.balena.device-type=raspberrypi5",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T10:50:26.413272107Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T10:50:26.53777156Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:22de68abb450063be7e40efd22fd3b41bec469efafdd95e25c65998648e52b28",
                    "sha256:28463901e499aa0a1515b57d0fbafa9cb9a2cc02cc10ed1687c180941c557184",
                    "sha256:0ca6f2444de4ad55ab4af4fd74364d376cec4fab74ebda60cba78c9fa2d7e649",
                    "sha256:cfc10fd96b96916769b790f45b5a4f0a1a17202f2532d659330de963d4494ebf",
                    "sha256:d2c34fbda1de7685d96923948d480fbe0ebab10b9087bfebda73744dbe2a6f9a",
                    "sha256:0d88f38f1e25f8d79cc6f17c26de206e21378fdd492c88062ab3e718003d32df",
                    "sha256:01e1144fabf916d9df9dbc69c087247ccbb1e57b391ed28f7dac24153a50d7b2",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:7ad9ead66349340e94a99303f594e85c786a6fabee7368153801d079722794bc",
                    "sha256:277971ea1ea290467dd51b95c3577111463f5dc7077258efb29b337ec37f92ca",
                    "sha256:c50f7b67b899b950301dce6815e76581bd6eadf166ce724064342aafc78db096"
                ]
            }
        },
        "37-run-20240401": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "raspberrypi5",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                }
            },
            "created": "2024-04-01T23:46:43.192266903Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:31.895761202Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-29T00:47:03.16713451Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:270e11b4c18af1c1efb8b8579be7fbda5255d56dd69f83ef7d933cfd2c685e5c in / "
                },
                {
                    "created": "2023-11-29T00:47:04.125919026Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T21:26:29.343455526Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T21:26:29.343455526Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T21:26:29.343455526Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T21:45:10.957762154Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T21:45:11.852141047Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T21:45:11.852141047Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T21:45:11.862471903Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T21:45:11.872331413Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T21:45:11.898584749Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T21:45:11.898584749Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T21:45:15.686171825Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T21:45:15.820771715Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T23:46:43.076294289Z",
                    "created_by": "LABEL io.balena.device-type=raspberrypi5",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T23:46:43.076294289Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T23:46:43.192266903Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:22de68abb450063be7e40efd22fd3b41bec469efafdd95e25c65998648e52b28",
                    "sha256:3a6d39f67382783e2c69d9a448aa59d1d7654260210364d05c2cae2ef469e3c8",
                    "sha256:8b316e0949cd1905304ca774963ddae530565f690a65de9db1a2dafa9aed0363",
                    "sha256:7fa4949a4c79caf7d749cc4abcbc241a5dd3a5c8d0155458cf6d4d83ac483646",
                    "sha256:0a0eea417236fa5be4e06c1d20766fd9f3b0e064419a66f356dea0f1f6d794df",
                    "sha256:ad31ce618fd1f26b74bc2900fbd27319ed86917e85375f90b57d28b291156d51",
                    "sha256:7b8582873ef4cde2aca83ece090a3993ca7c4f8fe0b13c3b0b064f08c7b21c21",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:8050b5f7d3d161f91b3bad0576691d8640130b32c0b8f23db87cdd4fee47c82e",
                    "sha256:31ab2d2b151011b640236ef0b2d0b2cf3b5928aff282a614c0affce35da9ea37",
                    "sha256:b6d8f2a786c666058d591d1a9eae9808f450684bad88d50400cbbadcda61a90c"
                ]
            }
        },
        "37-run-20240408": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "raspberrypi5",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                }
            },
            "created": "2024-04-09T20:00:01.596559907Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:31.895761202Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-29T00:47:03.16713451Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:270e11b4c18af1c1efb8b8579be7fbda5255d56dd69f83ef7d933cfd2c685e5c in / "
                },
                {
                    "created": "2023-11-29T00:47:04.125919026Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:52.915602222Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:52.915602222Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:52.915602222Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:54:04.100191166Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:54:04.963844501Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:54:04.963844501Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:54:04.973366628Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:54:05.001513857Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:54:05.024710968Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:54:05.024710968Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:54:08.797015979Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:54:08.943058393Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T20:00:01.48497321Z",
                    "created_by": "LABEL io.balena.device-type=raspberrypi5",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T20:00:01.48497321Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T20:00:01.596559907Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:22de68abb450063be7e40efd22fd3b41bec469efafdd95e25c65998648e52b28",
                    "sha256:03dd9a4ed991dc43e9a504ad71941782bb6fd4cd57f8ade649bbe25b622e3902",
                    "sha256:d24e8e6aec171dc7068d2c19b85d8c6341381b2f0cf4e1d1a20d5419f2d1ec53",
                    "sha256:e743a07ebcce27b755341d992eb4148fe86bd04481c6d8f2b6fe7364a942af19",
                    "sha256:1c988fbb0bdd3374b1f72bebc1953bd62853c7e33608dbc885ff64eba44dc1eb",
                    "sha256:7fad6968fdbdd1afee5f76e3b2f3df1829677bc85be4fa920cb57db14562699c",
                    "sha256:2999088cf700c485af0973e03dd5e2ff9d96b3f604f5908307f3edb5377c6d58",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:a75c43802eb36b20a7183fe5c30e33ef495a904237a7483d5c73c1df1691887b",
                    "sha256:5317fa65bc7c35c38c442c90f849cc95fc28d4aa5eb818b916e1a8116119211a",
                    "sha256:01008a19db5ef632d2ed55d56cefe9f631cc0c1484a447ea200434f527fe9280"
                ]
            }
        },
        "37-run-20240429": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "raspberrypi5",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                }
            },
            "created": "2024-05-06T10:38:45.538160132Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:31.895761202Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-29T00:47:03.16713451Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:270e11b4c18af1c1efb8b8579be7fbda5255d56dd69f83ef7d933cfd2c685e5c in / "
                },
                {
                    "created": "2023-11-29T00:47:04.125919026Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T09:28:47.993183335Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T09:28:47.993183335Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T09:28:47.993183335Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T09:47:56.501476974Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T09:47:57.631980985Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T09:47:57.631980985Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T09:47:57.644124262Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T09:47:57.678847981Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T09:47:57.688494096Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T09:47:57.688494096Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T09:48:01.526529414Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T09:48:01.665893428Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T10:38:45.395029597Z",
                    "created_by": "LABEL io.balena.device-type=raspberrypi5",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T10:38:45.395029597Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T10:38:45.538160132Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:22de68abb450063be7e40efd22fd3b41bec469efafdd95e25c65998648e52b28",
                    "sha256:ef64ad49ccf58709af070779ae49d014558d78a8b6a21fcc279c09ddac79e6c9",
                    "sha256:486e799e950e2b998ed0a1a7221aed44130002259c2b437524c7a8a72b725a56",
                    "sha256:5ad52f9d14deab1b2c3a79dfb68bf730440e209f5926a2cd2ebd561c519a08de",
                    "sha256:73001e4334a2e5a98b50faf87e712eaf851af09ac903e83a569150844ce9eda1",
                    "sha256:696c197b14bb7731bf0a36bbdc5e5272937b693f192b143e02dac747a1305ba1",
                    "sha256:f27b4f97c199fdc59cc49eb91fc7a348daf160285ca6bfce88ede5b64e4bb0a9",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:22341517b8222bb5810db07c816fbd0de10749523856c0263caf14789e77d27d",
                    "sha256:814378e6a74f147b97de86dbedb021279d972677e845a91c72091b86b4dcd6d5",
                    "sha256:07672fdc7d8d9779da09498cf20a8b017e6d3ee8d7e8b681424c91d8c94d3f67"
                ]
            }
        },
        "38": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f38container",
                    "FGC=f38",
                    "FBR=f38",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "raspberrypi5",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                }
            },
            "created": "2024-05-06T10:45:43.895216528Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:41.041894598Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f38container FGC=f38 FBR=f38",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-20T23:39:45.493041732Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:50f76cb2e29e780d80bbc023f0bbb552e413a0191d6fab7fedce9f032d7c55ec in / "
                },
                {
                    "created": "2024-02-20T23:39:46.885294079Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:45.909708183Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:45.909708183Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:45.909708183Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:02:01.590555751Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:02:02.351225239Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:02:02.351225239Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T14:02:02.360749405Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:02:02.369270986Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:02:02.405864798Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:02:02.405864798Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T14:02:07.899966098Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 38   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:02:08.045611622Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 38 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T10:45:43.78288428Z",
                    "created_by": "LABEL io.balena.device-type=raspberrypi5",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T10:45:43.78288428Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T10:45:43.895216528Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 38 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:d9224901c4254002370ad869c45d487779ce52e983554fc3c651d1283143025c",
                    "sha256:ebcf910b3bd968c69298ac824583cd1528883f4a382541565a04a486c658c20b",
                    "sha256:c24ea502f2f1577b4278e978c5db52a3b01de7a26e6f4724887ceeba23daeba2",
                    "sha256:793d820a1dccf3d247ece3546ff7db37debcbeed40e828cb75bb4cb13b7aebab",
                    "sha256:553772b6df64fc5ba696a001383c6ffd5b481fb5f850cde63456cadf5cca043f",
                    "sha256:f4ac866915cc972c7c4d1726ddc5effabb4cc90debfacebc71ef6f4541bf63ef",
                    "sha256:8e85cb2120afad8b568aebbb01c8c1d2a29b17f9b8f160299e7d4c9843c607d2",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:2579e5f7d4e51b9a0d613c0c3be4660311f4b1324ea68a59aa3c2a222a1785eb",
                    "sha256:34c487b1e47dc15d8265c2af5b6daf788607588c1435ca9476d8d78b233c7b1e",
                    "sha256:fe7b10e9ad0ea8feebd92286e1aa40e420977b107142b094fa7c2386871bc289"
                ]
            }
        },
        "38-20230929": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f38container",
                    "FGC=f38",
                    "FBR=f38",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "raspberrypi5",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2023-10-04T23:38:26.280396602Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:41.041894598Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f38container FGC=f38 FBR=f38",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-04T18:41:08.203631801Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:50785841137152691ca6dd92200a0457ea325f9f4aa41c79dec9b254878dd456 in / "
                },
                {
                    "created": "2023-08-04T18:41:09.71120441Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T03:50:47.966318693Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T03:50:47.966318693Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T03:50:47.966318693Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:22:05.312577476Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T07:38:47.339540805Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T07:38:47.339540805Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T07:38:47.36437758Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T07:38:47.378289214Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T07:38:47.400334302Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T07:38:47.400334302Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T07:38:54.288974783Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 38   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T07:38:54.706047119Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 38 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-04T23:38:26.098001422Z",
                    "created_by": "LABEL io.balena.device-type=raspberrypi5",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-04T23:38:26.098001422Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-04T23:38:26.280396602Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 38 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:babdc27db7e2fbe287cb3f027c67c3a67bd9a8b9d89b01cce2dc884785c9e431",
                    "sha256:a0731afcd2c8d5368a134e5790c454b64b22976c083086a24640d9ef6aa0075e",
                    "sha256:420cc142d6ee365450904d65a94be7051adeebac2a3b9a384ca145c9a8a28029",
                    "sha256:e1319cc780fd12b1b3d63d3f7a138b3edf39a1ae6a7c1670656acf9b60c1d0b9",
                    "sha256:1522c5e1b65e43da1802a19f2a02344ee236f3e391dce20632f8c5c30d00929c",
                    "sha256:d745b7003041d17e1c4fababe413658716518d7d23a4cadf0daa8208ca8115c5",
                    "sha256:b8bfddca6ff0c7ee1788d5dcc5a32bb7820376376177ee9cba1b2a2c313e7507",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:d4fe2ae2c5a66072049f2207f21240b0a0c1328f04423f8886e86335ddd47abc",
                    "sha256:50309ada79986c5141ef3436570d9f9abc4671dc366f3005c66aa0c83612c2f1",
                    "sha256:86a5427cd2aaad940931e15c020164fd73290b6246a5b0f78efd1cdd0caf84ae"
                ]
            }
        },
        "38-20231103": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f38container",
                    "FGC=f38",
                    "FBR=f38",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "raspberrypi5",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2023-11-04T17:04:16.799221372Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:41.041894598Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f38container FGC=f38 FBR=f38",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-06T18:43:02.449416883Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:b0b9f1fa4d90583e2728f8359f6d2f98198fa564a48a493ac3938082a4180724 in / "
                },
                {
                    "created": "2023-10-06T18:43:04.271082122Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-04T14:05:44.131779502Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-04T14:05:44.131779502Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-04T14:05:44.131779502Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T14:43:55.158323453Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T14:43:57.315900893Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T14:43:57.315900893Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-04T14:43:57.325120653Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T14:43:57.333974114Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T14:43:57.352409034Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T14:43:57.352409034Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-04T14:44:05.155422355Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 38   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T14:44:05.359127743Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 38 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T17:04:16.652764911Z",
                    "created_by": "LABEL io.balena.device-type=raspberrypi5",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-04T17:04:16.652764911Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T17:04:16.799221372Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 38 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:f1d4814332771f9e7ca854a6a297b5c75ceff99a0ae64bd8822337e826d49073",
                    "sha256:0bccca922a892d5aa4c088c02038026d68fafb3a7f614fc1c0db995cf1890779",
                    "sha256:2b7cd3c685926706b0199140fea791ac7753518db92138766ccc4bc9827f3d68",
                    "sha256:5e2ed28829eda26e065b3f9a78ad0f47edcf6d743edd5bbc5c2fc730546a9e47",
                    "sha256:c15dcfd3685089cc9c439fb2115f9255c4e4d3ad885e9cad9901066740f79ca9",
                    "sha256:8d6a9b04859afa4fc18d56950955c986eab6de919bfa6312935dd81af5301335",
                    "sha256:448330a20f6a3fba2984503bed4c07d0e41bafad7ab960f0a9386721fd3b3a1d",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:717bf92c44b0be0acbb18b42508625580b2ad0f540b00e8e19e11f9f5bec025d",
                    "sha256:36f8509287e19ead9ea747674fd97ccef79c3f12d47f3e0e583d416451fee88a",
                    "sha256:a784fb1df205e91d96f45ca18e85e23de9950f2a60f3d262f3b2656e39d2c96e"
                ]
            }
        },
        "38-20231106": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f38container",
                    "FGC=f38",
                    "FBR=f38",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "raspberrypi5",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2023-11-06T12:32:14.55409055Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:41.041894598Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f38container FGC=f38 FBR=f38",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-06T18:43:02.449416883Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:b0b9f1fa4d90583e2728f8359f6d2f98198fa564a48a493ac3938082a4180724 in / "
                },
                {
                    "created": "2023-10-06T18:43:04.271082122Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T09:12:24.373696779Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T09:12:24.373696779Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T09:12:24.373696779Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T09:40:03.866592528Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T09:40:05.05480729Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T09:40:05.05480729Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T09:40:05.067525056Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T09:40:05.080368698Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T09:40:05.09192886Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T09:40:05.09192886Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T09:40:10.682476779Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 38   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T09:40:10.854158569Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 38 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T12:32:14.42503642Z",
                    "created_by": "LABEL io.balena.device-type=raspberrypi5",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T12:32:14.42503642Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T12:32:14.55409055Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 38 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:f1d4814332771f9e7ca854a6a297b5c75ceff99a0ae64bd8822337e826d49073",
                    "sha256:5a48b2864c1414aa1920c0b0810a38ec32acb5ca14e2de09d3dfe54f1994b7ab",
                    "sha256:7d025699647d357035320f6733ddce0b0fb0c3833cadebad2b3682451308e93b",
                    "sha256:27ca0065e4f4805a604acc7bc4ad9df0047808f3306f957b1a1fcc66aa4f9b1d",
                    "sha256:128e2a62004cfc82684ba2679f14a1e0b3bc7738f8a994c36eae30e0d28a7893",
                    "sha256:45ec6c560d5a90df5eba1bff84a4a8ca5e63aaba7e85e2ba1369e862abcc64d6",
                    "sha256:efc86bb1982e1b3392b56a19451122d7402088ffbbbd4e02f65020a56fa4c32f",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:973bbd2506ec0a26704cbf8153609044757818fdde2b452543ec1793c432bd62",
                    "sha256:c94bba941e1b674e5c4ac5de8b4f4dba6a03112b6cc7d59d24ae1f0da4f041ef",
                    "sha256:96de3979961d76e5b3140617df69e895041faf4445152919d2dfc00055c67a53"
                ]
            }
        },
        "38-20231127": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f38container",
                    "FGC=f38",
                    "FBR=f38",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "raspberrypi5",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2023-12-01T13:13:24.42728982Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:41.041894598Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f38container FGC=f38 FBR=f38",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-29T00:47:11.412948906Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:bf926d1cd75117e6300e5b83c1a9f3dc935a0a4a1afd183c94c5ab427119d058 in / "
                },
                {
                    "created": "2023-11-29T00:47:13.088493574Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T10:52:03.115117234Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T10:52:03.115117234Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T10:52:03.115117234Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T11:16:47.728963247Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T11:16:48.486024995Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T11:16:48.486024995Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T11:16:48.498276188Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T11:16:48.512658091Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T11:16:48.524349935Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T11:16:48.524349935Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T11:16:54.156435504Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 38   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T11:16:54.314713811Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 38 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T13:13:24.303016369Z",
                    "created_by": "LABEL io.balena.device-type=raspberrypi5",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T13:13:24.303016369Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T13:13:24.42728982Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 38 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:35f4bab08b96e91cc0f7f401be5805fb037bd6e3d4eb1af238340706b9cd0a3e",
                    "sha256:9051a15d589df97279221a4efec80a8450c6bc2058ae17721276d555326b33fe",
                    "sha256:f26c2122cb7d826231a78504bf73a326017233b52ecb911e6624628eaddfb0be",
                    "sha256:ef43e4d211352a22a0c10cc03ef2d365126609597085c57b213d34c0c04179df",
                    "sha256:2d3f59edb238952cc50ac74c46d5e6485d475fb47829eed97ab1448816b959ba",
                    "sha256:a31db5a21c41fbc40c8fa7ba30c8bbb8e906931e477d2d358f6dca40b8f358b3",
                    "sha256:aa10d6eeaa52364861226a12826a3a2ea676c211206d4f3a2680e0ba05d9f33f",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:7d348d824235181cb9293dbb5802653c13f056cfd31f764283e02da722b92a9e",
                    "sha256:8eee651d089c19d549a97f6062a325b505f35715e7aae7b797adf4b78bea3913",
                    "sha256:1ed5613c43f78aa3a6207d8211c1a7fdcc18d3a6e9c0ba57c354a2684c88f074"
                ]
            }
        },
        "38-20231204": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f38container",
                    "FGC=f38",
                    "FBR=f38",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "raspberrypi5",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2023-12-06T23:00:28.479233205Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:41.041894598Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f38container FGC=f38 FBR=f38",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-29T00:47:11.412948906Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:bf926d1cd75117e6300e5b83c1a9f3dc935a0a4a1afd183c94c5ab427119d058 in / "
                },
                {
                    "created": "2023-11-29T00:47:13.088493574Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T20:40:27.571890331Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T20:40:27.571890331Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T20:40:27.571890331Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T21:05:52.460646066Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T21:05:53.697602634Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T21:05:53.697602634Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T21:05:53.72907232Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T21:05:53.73766608Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T21:05:53.784935919Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T21:05:53.784935919Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T21:05:59.464238317Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 38   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T21:05:59.633985585Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 38 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T23:00:28.347961697Z",
                    "created_by": "LABEL io.balena.device-type=raspberrypi5",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T23:00:28.347961697Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T23:00:28.479233205Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 38 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:35f4bab08b96e91cc0f7f401be5805fb037bd6e3d4eb1af238340706b9cd0a3e",
                    "sha256:7af9d3e66dc47c88df168c57e6bbf3bf441b84f864d9fd704e0889ac77dd645b",
                    "sha256:b52587f45451994117f2d4e9754f102fef88b048deea62290f382798927cfbc1",
                    "sha256:7bf81e0ac98a4ea7f63a0fce6df544ff53238af29c3a6212866bcbaa5d7f9649",
                    "sha256:2f6ef3c9e2791170ecac3c21ceaf5dbcd0aaa56ca679f701efde7ccd5ede33d6",
                    "sha256:4a5ec467e104c8b720b6bb9d044b578693e795c08eb1119417b0e73ea4712df5",
                    "sha256:36f1d93758ea9464369624e538df0c4941f14a8c6a009b3556534d8981696ae0",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:1a75df63308478d0e6a9a2dad62406133ce2fdb0cda42ceae25fc18101f203f0",
                    "sha256:e7d5f27d5e2f484a20515cd7a8381444179845835c92dd2c3ace486ae640388f",
                    "sha256:bbf95a21c0fda51e906bd1ffa04057359c7d4df221c64212c6b91c2d8d617ffa"
                ]
            }
        },
        "38-20240205": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f38container",
                    "FGC=f38",
                    "FBR=f38",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "raspberrypi5",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2024-02-05T02:54:15.943300397Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:41.041894598Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f38container FGC=f38 FBR=f38",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-29T00:47:11.412948906Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:bf926d1cd75117e6300e5b83c1a9f3dc935a0a4a1afd183c94c5ab427119d058 in / "
                },
                {
                    "created": "2023-11-29T00:47:13.088493574Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-05T00:26:05.223615023Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-05T00:26:05.223615023Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-05T00:26:05.223615023Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T00:52:22.02695632Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T00:52:22.769786602Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T00:52:22.769786602Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-05T00:52:22.781178587Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T00:52:22.808356935Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T00:52:22.817879552Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T00:52:22.817879552Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-05T00:52:28.311630714Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 38   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T00:52:28.461665008Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 38 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T02:54:15.815770089Z",
                    "created_by": "LABEL io.balena.device-type=raspberrypi5",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-05T02:54:15.815770089Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T02:54:15.943300397Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 38 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:35f4bab08b96e91cc0f7f401be5805fb037bd6e3d4eb1af238340706b9cd0a3e",
                    "sha256:9a0bea4247baec631951f1c12c7fc5e31aef00f9f94fa6500789dd41065dab08",
                    "sha256:8ea115299209cadf8dc81735c2e245e6e1c628e3e6486326a42d431e000ad1d9",
                    "sha256:81ffb1609a528e20e002ea96acab5a3f2db491584d03f99adb651ba5d38707b3",
                    "sha256:dd667c60ecc52fbdc7e0e476262643b15f185497cb053f94c29b2ea0f20d4532",
                    "sha256:9e0a1177327862e9e8614499429cf719307afc6deb4d6bd9d73f1339d5113ab0",
                    "sha256:6cbd6b5c83f0e41ed8ecedf532eae321661bb02d09a80d622a2de713dc3f1998",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:492bf5ced8bd1f23c728665cd29dba12cd7877883ff04c3620df7b90d4f32e63",
                    "sha256:849b31fa019cfd0b22008b6e8bc822668ceadcfd78fbfad5ce6e38c4feb2c7eb",
                    "sha256:903f794a10bbc00c52199b7bc5f84f2efa1b07fe51fef179cbb7598a0cdc70b5"
                ]
            }
        },
        "38-20240227": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f38container",
                    "FGC=f38",
                    "FBR=f38",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "raspberrypi5",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2024-03-01T23:22:43.823358273Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:41.041894598Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f38container FGC=f38 FBR=f38",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-20T23:39:45.493041732Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:50f76cb2e29e780d80bbc023f0bbb552e413a0191d6fab7fedce9f032d7c55ec in / "
                },
                {
                    "created": "2024-02-20T23:39:46.885294079Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T20:50:11.174745295Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T20:50:11.174745295Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T20:50:11.174745295Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:17:06.032783443Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:17:06.794960795Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:17:06.794960795Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T21:17:06.805447066Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:17:06.814310203Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:17:06.84911684Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:17:06.84911684Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T21:17:12.388615628Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 38   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:17:12.526606922Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 38 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T23:22:43.705900284Z",
                    "created_by": "LABEL io.balena.device-type=raspberrypi5",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T23:22:43.705900284Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T23:22:43.823358273Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 38 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:d9224901c4254002370ad869c45d487779ce52e983554fc3c651d1283143025c",
                    "sha256:80960cca51c97684b3a9cec28adb8fae3034898f76cc4de09b5756e99bab5f4d",
                    "sha256:ebcf328ef783f06a08c6855ef399097abd7849454cb754d92656f855c8e72f7b",
                    "sha256:ed8c17efb3a45a5c116d8b29102ee94853c6c7d78b68917765166a90efdbe456",
                    "sha256:4c2fcb2aa7c87c35350e78cfb39cc8d48e14a39322897c5816cbba6875385aeb",
                    "sha256:9fb9429b38105cbccdabce561ae817ae56aa3fbe6943dabf073a3e077a0a4726",
                    "sha256:5e5d3ed39b0bae147112243675b89add16961c507d1a96d8c12543619f3631ab",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:9659c666f25fc0ca79916fc32cd405a174b567f47816d637061022910382150c",
                    "sha256:31d9b2a17e269eeb7697ca79bd61746fd0fc592be1ec873f28678fec74b90981",
                    "sha256:d39058d0a60a8e8b9d281b67af4087a8d28541c254696c6781c1e6d1d0ac10d0"
                ]
            }
        },
        "38-20240304": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f38container",
                    "FGC=f38",
                    "FBR=f38",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "raspberrypi5",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2024-03-05T10:56:15.779548825Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:41.041894598Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f38container FGC=f38 FBR=f38",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-20T23:39:45.493041732Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:50f76cb2e29e780d80bbc023f0bbb552e413a0191d6fab7fedce9f032d7c55ec in / "
                },
                {
                    "created": "2024-02-20T23:39:46.885294079Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T08:24:19.415187376Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T08:24:19.415187376Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T08:24:19.415187376Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T08:56:00.912192201Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T08:56:02.006895963Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T08:56:02.006895963Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T08:56:02.016355085Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T08:56:02.026794369Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T08:56:02.060541718Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T08:56:02.060541718Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T08:56:07.655736223Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 38   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T08:56:07.807291644Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 38 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T10:56:15.661602398Z",
                    "created_by": "LABEL io.balena.device-type=raspberrypi5",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T10:56:15.661602398Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T10:56:15.779548825Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 38 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:d9224901c4254002370ad869c45d487779ce52e983554fc3c651d1283143025c",
                    "sha256:ea79a218147f67e84cc5ebc832b9460a07c042175b9c6c064e2b46cc1dc1a3a4",
                    "sha256:30e3fbd8e717f3b8a564afd4ee36b43ec6b6d86b01c9f556f1c1569211d3f246",
                    "sha256:4f6c240ccf870cc5e7845a32d4625252e557b98a1ca959ee903a50fae49f5292",
                    "sha256:52333195f351cb7f05d374c425fd2d08bfc9a7b292673ba1bc72b65cfc337fda",
                    "sha256:8fa793cc56273ff76f01fe7a2fa04001b8a835021eb98a84aac458c70142805b",
                    "sha256:2d3cbcbb63899f70da15473b7e05cdcb41b7bb7057040d80f9a5a063821b0133",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:5bb1ea72b4125dbbfb8204982aadcd3846bffd331433fe0e24dc13c017b2badd",
                    "sha256:25da138118f3049b1c6993e2f79932a56570a63344a07266cd4ebbd65291e4de",
                    "sha256:65ffcd404456f0c33530b11d32f5f852688504256d41257883c598f103223c06"
                ]
            }
        },
        "38-20240401": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f38container",
                    "FGC=f38",
                    "FBR=f38",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "raspberrypi5",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                }
            },
            "created": "2024-04-01T23:53:27.014912005Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:41.041894598Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f38container FGC=f38 FBR=f38",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-20T23:39:45.493041732Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:50f76cb2e29e780d80bbc023f0bbb552e413a0191d6fab7fedce9f032d7c55ec in / "
                },
                {
                    "created": "2024-02-20T23:39:46.885294079Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T21:26:30.063655578Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T21:26:30.063655578Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T21:26:30.063655578Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T21:53:18.953503933Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T21:53:19.727911729Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T21:53:19.727911729Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T21:53:19.739193593Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T21:53:19.779094073Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T21:53:19.789079698Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T21:53:19.789079698Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T21:53:25.296074915Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 38   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T21:53:25.441838461Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 38 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T23:53:26.896968689Z",
                    "created_by": "LABEL io.balena.device-type=raspberrypi5",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T23:53:26.896968689Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T23:53:27.014912005Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 38 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:d9224901c4254002370ad869c45d487779ce52e983554fc3c651d1283143025c",
                    "sha256:b20e668d1a141e0d94ea1512d98fa306aef98b2f4894ff4310a4b368ecae46f1",
                    "sha256:8d53a1ae6a6876501ddfee3882f044e95cf4bbb5c5ee113c33b6a630df50f37d",
                    "sha256:9b2f37627416daf809729f9b7b129b588d6d27b685e6a6f70b7efd53604d8c77",
                    "sha256:58e2ad029c294aaf061847a738e97e4ee92cfcc02568fde36d2c42014b29bc2a",
                    "sha256:0370b041d7751b62b4759a10fd68fe5d529500000af334c432dda8ff0e6bdc19",
                    "sha256:4fda59f91c1283cdc0171b9d775c4c59aed809bf6eb8969c1dab000deccefbfb",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:0fbb16bb412f29fbd6bf22b0270c66acce1dfff1273a68ab07e7a24a347da177",
                    "sha256:4a77dfe381b787340e32950bfef183f475c76e1d1e47231726672a7485c5168d",
                    "sha256:fd6253f45c521380c5eb1c2ba7c60c027d59f745d370d1b07e49e4ba75459e7e"
                ]
            }
        },
        "38-20240408": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f38container",
                    "FGC=f38",
                    "FBR=f38",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "raspberrypi5",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                }
            },
            "created": "2024-04-09T20:06:58.422435097Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:41.041894598Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f38container FGC=f38 FBR=f38",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-20T23:39:45.493041732Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:50f76cb2e29e780d80bbc023f0bbb552e413a0191d6fab7fedce9f032d7c55ec in / "
                },
                {
                    "created": "2024-02-20T23:39:46.885294079Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:45.909708183Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:45.909708183Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:45.909708183Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:02:01.590555751Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:02:02.351225239Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:02:02.351225239Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T14:02:02.360749405Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:02:02.369270986Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:02:02.405864798Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:02:02.405864798Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T14:02:07.899966098Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 38   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:02:08.045611622Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 38 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T20:06:58.305374693Z",
                    "created_by": "LABEL io.balena.device-type=raspberrypi5",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T20:06:58.305374693Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T20:06:58.422435097Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 38 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:d9224901c4254002370ad869c45d487779ce52e983554fc3c651d1283143025c",
                    "sha256:ebcf910b3bd968c69298ac824583cd1528883f4a382541565a04a486c658c20b",
                    "sha256:c24ea502f2f1577b4278e978c5db52a3b01de7a26e6f4724887ceeba23daeba2",
                    "sha256:793d820a1dccf3d247ece3546ff7db37debcbeed40e828cb75bb4cb13b7aebab",
                    "sha256:553772b6df64fc5ba696a001383c6ffd5b481fb5f850cde63456cadf5cca043f",
                    "sha256:f4ac866915cc972c7c4d1726ddc5effabb4cc90debfacebc71ef6f4541bf63ef",
                    "sha256:8e85cb2120afad8b568aebbb01c8c1d2a29b17f9b8f160299e7d4c9843c607d2",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:2579e5f7d4e51b9a0d613c0c3be4660311f4b1324ea68a59aa3c2a222a1785eb",
                    "sha256:1616d3f03a41928840d1a97dc30d8abfed539ea443bc39cb553814f666c7901e",
                    "sha256:68c49320b0e5f84230ac39d2f99b2f32df9d00e92427a8087b8413b89f365ca9"
                ]
            }
        },
        "38-20240429": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f38container",
                    "FGC=f38",
                    "FBR=f38",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "raspberrypi5",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                }
            },
            "created": "2024-05-06T10:45:43.895216528Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:41.041894598Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f38container FGC=f38 FBR=f38",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-20T23:39:45.493041732Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:50f76cb2e29e780d80bbc023f0bbb552e413a0191d6fab7fedce9f032d7c55ec in / "
                },
                {
                    "created": "2024-02-20T23:39:46.885294079Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:45.909708183Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:45.909708183Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:45.909708183Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:02:01.590555751Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:02:02.351225239Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:02:02.351225239Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T14:02:02.360749405Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:02:02.369270986Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:02:02.405864798Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:02:02.405864798Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T14:02:07.899966098Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 38   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:02:08.045611622Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 38 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T10:45:43.78288428Z",
                    "created_by": "LABEL io.balena.device-type=raspberrypi5",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T10:45:43.78288428Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T10:45:43.895216528Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 38 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:d9224901c4254002370ad869c45d487779ce52e983554fc3c651d1283143025c",
                    "sha256:ebcf910b3bd968c69298ac824583cd1528883f4a382541565a04a486c658c20b",
                    "sha256:c24ea502f2f1577b4278e978c5db52a3b01de7a26e6f4724887ceeba23daeba2",
                    "sha256:793d820a1dccf3d247ece3546ff7db37debcbeed40e828cb75bb4cb13b7aebab",
                    "sha256:553772b6df64fc5ba696a001383c6ffd5b481fb5f850cde63456cadf5cca043f",
                    "sha256:f4ac866915cc972c7c4d1726ddc5effabb4cc90debfacebc71ef6f4541bf63ef",
                    "sha256:8e85cb2120afad8b568aebbb01c8c1d2a29b17f9b8f160299e7d4c9843c607d2",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:2579e5f7d4e51b9a0d613c0c3be4660311f4b1324ea68a59aa3c2a222a1785eb",
                    "sha256:34c487b1e47dc15d8265c2af5b6daf788607588c1435ca9476d8d78b233c7b1e",
                    "sha256:fe7b10e9ad0ea8feebd92286e1aa40e420977b107142b094fa7c2386871bc289"
                ]
            }
        },
        "38-build": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f38container",
                    "FGC=f38",
                    "FBR=f38",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "raspberrypi5",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                }
            },
            "created": "2024-05-06T10:46:30.120310127Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:41.041894598Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f38container FGC=f38 FBR=f38",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-20T23:39:45.493041732Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:50f76cb2e29e780d80bbc023f0bbb552e413a0191d6fab7fedce9f032d7c55ec in / "
                },
                {
                    "created": "2024-02-20T23:39:46.885294079Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:53.014397748Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:53.014397748Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:53.014397748Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:02:01.028048975Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:45:21.757628005Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-clients \t\tsubversion \t\tautoconf \t\tautomake \t\tbzip2-devel \t\tglib2-devel \t\tgcc \t\tgcc-c++ \t\tImageMagick \t\tImageMagick-devel \t\tkernel-devel \t\tlibcurl-devel \t\tlibevent-devel \t\tlibffi-devel \t\tlibjpeg-devel \t\tlibsqlite3x-devel \t\tlibxml2-devel \t\tlibxslt-devel \t\tlibyaml-devel \t\tmysql-devel \t\tmake \t\tncurses-devel \t\topenssl-devel \t\tpostgresql-devel \t\treadline-devel \t\tsqlite-devel \t\tzlib-devel \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:45:23.21693759Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:45:23.21693759Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T14:45:23.226391702Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:45:23.30237909Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:45:23.312751251Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:45:23.312751251Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T14:45:29.124459273Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 38   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:45:29.273317952Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 38 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T10:46:29.996720768Z",
                    "created_by": "LABEL io.balena.device-type=raspberrypi5",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T10:46:29.996720768Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T10:46:30.120310127Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 38 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:d9224901c4254002370ad869c45d487779ce52e983554fc3c651d1283143025c",
                    "sha256:63a7727c4e76d8980cf4568202bf9297aab0020244e4d7a59ff628633c5c379a",
                    "sha256:8764364fcb36a10eca0e326c313d32654e5e4cc55abfe0014974d53c364de48b",
                    "sha256:281dd00215836c81475c699f61f89c9eb55c5d69014f819f8772cffe433ace26",
                    "sha256:abb63b2c733f69ae08cbb6bfe1f32da0004658166581cc3bdb67901ede1ad33a",
                    "sha256:763bebfde6ac1ad7e8b6195d9c95001b4b273ad9936cd9971295674105101ac6",
                    "sha256:f67b7e4a6f4e48584da11a524adbebbbeeac629a1cb524f5df51ee88bdd71055",
                    "sha256:74f1d6cf90e9f178497078c8e6f3941cbb3265478d0f1a806521824a183837a9",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:c7319dfdfe03afc9fe26d4be768e94cfc2d546d63404d22deff0f8426aec9488",
                    "sha256:4652da8aeda12fd1aa9ebea808d198d7d33579e4581a0d9058b3847454e01b1b",
                    "sha256:145ee5c07de3fa0dba7472108d1d492785ec2ddc3fd32b8b66cbbd596766ec80"
                ]
            }
        },
        "38-build-20230929": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f38container",
                    "FGC=f38",
                    "FBR=f38",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "raspberrypi5",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2023-10-04T23:31:30.07345497Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:41.041894598Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f38container FGC=f38 FBR=f38",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-04T18:41:08.203631801Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:50785841137152691ca6dd92200a0457ea325f9f4aa41c79dec9b254878dd456 in / "
                },
                {
                    "created": "2023-08-04T18:41:09.71120441Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T03:50:47.966318693Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T03:50:47.966318693Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T03:50:47.966318693Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:22:05.312577476Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T05:15:28.451897601Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-clients \t\tsubversion \t\tautoconf \t\tautomake \t\tbzip2-devel \t\tglib2-devel \t\tgcc \t\tgcc-c++ \t\tImageMagick \t\tImageMagick-devel \t\tkernel-devel \t\tlibcurl-devel \t\tlibevent-devel \t\tlibffi-devel \t\tlibjpeg-devel \t\tlibsqlite3x-devel \t\tlibxml2-devel \t\tlibxslt-devel \t\tlibyaml-devel \t\tmysql-devel \t\tmake \t\tncurses-devel \t\topenssl-devel \t\tpostgresql-devel \t\treadline-devel \t\tsqlite-devel \t\tzlib-devel \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T05:15:29.967632863Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T05:15:29.967632863Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T05:15:29.988606782Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T05:15:30.006253165Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T05:15:30.029662008Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T05:15:30.029662008Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T05:15:37.144411755Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 38   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T05:15:37.568640346Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 38 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-04T23:31:29.931995544Z",
                    "created_by": "LABEL io.balena.device-type=raspberrypi5",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-04T23:31:29.931995544Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-04T23:31:30.07345497Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 38 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:babdc27db7e2fbe287cb3f027c67c3a67bd9a8b9d89b01cce2dc884785c9e431",
                    "sha256:a0731afcd2c8d5368a134e5790c454b64b22976c083086a24640d9ef6aa0075e",
                    "sha256:420cc142d6ee365450904d65a94be7051adeebac2a3b9a384ca145c9a8a28029",
                    "sha256:e6af332eb3e1a9078b9cecd7a22bd639682393611fc23fa51c0481604199e55e",
                    "sha256:f30f0ce6ef4a889d901d6fb135906f85e4608b7cca8478752288bf0f795f5c20",
                    "sha256:c872c917a97a653938d5330aaecae1350d29556297a8930d1770d5ab205080c2",
                    "sha256:eed2feea09daac7279013006cc32d46e23f70620beeb2f9f6135be153b62f9f5",
                    "sha256:cb6b401af3e1fa56ed153b17370e5bde9c1fb52fa935eeca34e4d4209b1c5b95",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:b661245fb18d04968fd3dc597c8a59767653fc07b0d95a3b5314490ae36d87d7",
                    "sha256:7c843b19d0d1455750a3219a0d9646bce7bf3ed694fcf2c49c4c46fbdf433337",
                    "sha256:34819833a5922e6e3124e805f70e906081acb5c0423122aec2d70bc5574fd8c6"
                ]
            }
        },
        "38-build-20231103": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f38container",
                    "FGC=f38",
                    "FBR=f38",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "raspberrypi5",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2023-11-04T17:15:35.361315602Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:41.041894598Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f38container FGC=f38 FBR=f38",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-06T18:43:02.449416883Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:b0b9f1fa4d90583e2728f8359f6d2f98198fa564a48a493ac3938082a4180724 in / "
                },
                {
                    "created": "2023-10-06T18:43:04.271082122Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-04T14:05:37.918776318Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-04T14:05:37.918776318Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-04T14:05:37.918776318Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T14:33:19.189618093Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T15:14:18.016277278Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-clients \t\tsubversion \t\tautoconf \t\tautomake \t\tbzip2-devel \t\tglib2-devel \t\tgcc \t\tgcc-c++ \t\tImageMagick \t\tImageMagick-devel \t\tkernel-devel \t\tlibcurl-devel \t\tlibevent-devel \t\tlibffi-devel \t\tlibjpeg-devel \t\tlibsqlite3x-devel \t\tlibxml2-devel \t\tlibxslt-devel \t\tlibyaml-devel \t\tmysql-devel \t\tmake \t\tncurses-devel \t\topenssl-devel \t\tpostgresql-devel \t\treadline-devel \t\tsqlite-devel \t\tzlib-devel \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T15:14:19.195349579Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T15:14:19.195349579Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-04T15:14:19.20637024Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T15:14:19.216495327Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T15:14:19.242663104Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T15:14:19.242663104Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-04T15:14:24.898160647Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 38   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T15:14:25.064945348Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 38 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T17:15:35.178413629Z",
                    "created_by": "LABEL io.balena.device-type=raspberrypi5",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-04T17:15:35.178413629Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T17:15:35.361315602Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 38 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:f1d4814332771f9e7ca854a6a297b5c75ceff99a0ae64bd8822337e826d49073",
                    "sha256:5ca147608c23c8a579b45f84370de84ec90b93cc9776ccdd6f08315fdc276a3f",
                    "sha256:0416d527435405a6e0e8ccbf8a44e8202e94d6f74a66a0c08c0be13ebd5b9ad5",
                    "sha256:24220b836985bd625e916238c348fdac9e4996309f4f61cdfc5031a4ac412653",
                    "sha256:b44ee2634062cdf1ab458b427497676ded756f3fec66fa4e952a739c5c857f3a",
                    "sha256:998adde8ef7854c92626b008bf6f6211c2f8f3e65257a63c67c8b3fbe0a08cfc",
                    "sha256:4c8d15192ff2810d59bf9c2b19d6f8a7f95369ce23f59c4c148c12408ccd8963",
                    "sha256:461335ebf0546a2ce56bc930763d7ef1add62d71382b2907c552da932209b5b7",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:989785633fe3e42f8ee4cc22e2dc3333c8aae93500ddf398fd712b7b2f342608",
                    "sha256:be4c69158fa0d751e91cd082738531e5b6e673619c8455569c60566b06bd3fda",
                    "sha256:d61a62d70636773593a16d7d55f660d79147541bf9d8fa0d6d7c869109105d83"
                ]
            }
        },
        "38-build-20231106": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f38container",
                    "FGC=f38",
                    "FBR=f38",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "raspberrypi5",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2023-11-06T12:42:53.778911908Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:41.041894598Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f38container FGC=f38 FBR=f38",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-06T18:43:02.449416883Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:b0b9f1fa4d90583e2728f8359f6d2f98198fa564a48a493ac3938082a4180724 in / "
                },
                {
                    "created": "2023-10-06T18:43:04.271082122Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T09:12:23.450706038Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T09:12:23.450706038Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T09:12:23.450706038Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T09:50:16.7751833Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T10:47:00.988755557Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-clients \t\tsubversion \t\tautoconf \t\tautomake \t\tbzip2-devel \t\tglib2-devel \t\tgcc \t\tgcc-c++ \t\tImageMagick \t\tImageMagick-devel \t\tkernel-devel \t\tlibcurl-devel \t\tlibevent-devel \t\tlibffi-devel \t\tlibjpeg-devel \t\tlibsqlite3x-devel \t\tlibxml2-devel \t\tlibxslt-devel \t\tlibyaml-devel \t\tmysql-devel \t\tmake \t\tncurses-devel \t\topenssl-devel \t\tpostgresql-devel \t\treadline-devel \t\tsqlite-devel \t\tzlib-devel \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T10:47:02.222465463Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T10:47:02.222465463Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T10:47:02.231375683Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T10:47:02.240526604Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T10:47:02.274484381Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T10:47:02.274484381Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T10:47:10.01477719Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 38   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T10:47:10.190567794Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 38 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T12:42:53.608684226Z",
                    "created_by": "LABEL io.balena.device-type=raspberrypi5",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T12:42:53.608684226Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T12:42:53.778911908Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 38 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:f1d4814332771f9e7ca854a6a297b5c75ceff99a0ae64bd8822337e826d49073",
                    "sha256:39bbb341468da05ffbfaae2477db2bbb5f51a4a2fa37d6cd8a45e02465961d4e",
                    "sha256:efceb8e8746a29d66b0be57e588d9e1d0988697cb2ba207ee32f9563a2094144",
                    "sha256:bc53bfed3574a483f021369daae6b87d20a0294f197afcc46a00d79722d56472",
                    "sha256:424e27e29080a7a102f9d03e2817cd0aaaedfabbaddeffc8c5a60e59529f9784",
                    "sha256:a954f4019e1ee996f3c97b93a64666e29791d34675583286ffe196e45884759b",
                    "sha256:efb8808635155c55275ef8af4c6316d9abcbea0526dbce3a6249dce6ced03749",
                    "sha256:b3b4a262a2cfc0d5f92cfe300657d0c5d095998ba8e6faa5bfed57b6b4f85e3a",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:66244eba671ce04674fd8447ec746017c2be661488c5214da32771a03c669608",
                    "sha256:4b4c74e47f204acde8cfb5f02a574b4648c8b8339ceb6bc849b2ba29472f59eb",
                    "sha256:4cb6805406699a8100ca5a9821a76a687a6aaf734aa9cc0bee8709e7eb5e2d7f"
                ]
            }
        },
        "38-build-20231127": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f38container",
                    "FGC=f38",
                    "FBR=f38",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "raspberrypi5",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2023-12-01T13:14:48.862688243Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:41.041894598Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f38container FGC=f38 FBR=f38",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-29T00:47:11.412948906Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:bf926d1cd75117e6300e5b83c1a9f3dc935a0a4a1afd183c94c5ab427119d058 in / "
                },
                {
                    "created": "2023-11-29T00:47:13.088493574Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T10:52:08.848900647Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T10:52:08.848900647Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T10:52:08.848900647Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T11:16:49.627151128Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T11:58:22.063890258Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-clients \t\tsubversion \t\tautoconf \t\tautomake \t\tbzip2-devel \t\tglib2-devel \t\tgcc \t\tgcc-c++ \t\tImageMagick \t\tImageMagick-devel \t\tkernel-devel \t\tlibcurl-devel \t\tlibevent-devel \t\tlibffi-devel \t\tlibjpeg-devel \t\tlibsqlite3x-devel \t\tlibxml2-devel \t\tlibxslt-devel \t\tlibyaml-devel \t\tmysql-devel \t\tmake \t\tncurses-devel \t\topenssl-devel \t\tpostgresql-devel \t\treadline-devel \t\tsqlite-devel \t\tzlib-devel \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T11:58:23.529242312Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T11:58:23.529242312Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T11:58:23.553712145Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T11:58:23.587284609Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T11:58:23.600056059Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T11:58:23.600056059Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T11:58:29.259523498Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 38   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T11:58:29.421339771Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 38 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T13:14:48.732431799Z",
                    "created_by": "LABEL io.balena.device-type=raspberrypi5",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T13:14:48.732431799Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T13:14:48.862688243Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 38 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:35f4bab08b96e91cc0f7f401be5805fb037bd6e3d4eb1af238340706b9cd0a3e",
                    "sha256:f89dcf27c1312a0e888eb882435b02b92d7b0966d3543bcb40c7e911da238725",
                    "sha256:068cdbd9a400b12c2f5cebc80282d0d1b29c6339a80a3e587e0f896fcba1a8a5",
                    "sha256:b8e6e93110f76839aaa5a9a15e6f63d9b9395f98c141b49db73e8e4a5aa1422d",
                    "sha256:b3ed990b98bc1b9c3f69c913b400e68fbafdb692d258d0d5a7de75c720d962df",
                    "sha256:0a915892bdc1d58685b3c4100ab19ff03d5767a71339b1844a544052f9c4034c",
                    "sha256:6da8827f504229dc4f421d12fa4c4aa58166b8377db7d2c03d3b8946af26422a",
                    "sha256:5bedc2cef057b68d6bf31fdf534ebfb75b10323045043f20eb4e619a201b0c04",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:a25ae23bcf7e3b0ddf23b49da9f22f3fe464fe6e058a68914880919055009ada",
                    "sha256:06e596bbaa33fef51ce63061d66766f46e6eaa86e88d7f268111f84de0dabd2e",
                    "sha256:23355b9bdddbbc84d060a0c0aa193fe9433299f73dc30f2ddc24328be2f288a3"
                ]
            }
        },
        "38-build-20231204": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f38container",
                    "FGC=f38",
                    "FBR=f38",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "raspberrypi5",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2023-12-06T23:00:51.247167834Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:41.041894598Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f38container FGC=f38 FBR=f38",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-29T00:47:11.412948906Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:bf926d1cd75117e6300e5b83c1a9f3dc935a0a4a1afd183c94c5ab427119d058 in / "
                },
                {
                    "created": "2023-11-29T00:47:13.088493574Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T20:40:21.099049635Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T20:40:21.099049635Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T20:40:21.099049635Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T21:05:24.023517776Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T21:47:27.057302323Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-clients \t\tsubversion \t\tautoconf \t\tautomake \t\tbzip2-devel \t\tglib2-devel \t\tgcc \t\tgcc-c++ \t\tImageMagick \t\tImageMagick-devel \t\tkernel-devel \t\tlibcurl-devel \t\tlibevent-devel \t\tlibffi-devel \t\tlibjpeg-devel \t\tlibsqlite3x-devel \t\tlibxml2-devel \t\tlibxslt-devel \t\tlibyaml-devel \t\tmysql-devel \t\tmake \t\tncurses-devel \t\topenssl-devel \t\tpostgresql-devel \t\treadline-devel \t\tsqlite-devel \t\tzlib-devel \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T21:47:28.091863636Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T21:47:28.091863636Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T21:47:28.10218924Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T21:47:28.111511993Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T21:47:28.12152315Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T21:47:28.12152315Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T21:47:33.69355991Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 38   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T21:47:33.880160682Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 38 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T23:00:51.10254592Z",
                    "created_by": "LABEL io.balena.device-type=raspberrypi5",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T23:00:51.10254592Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T23:00:51.247167834Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 38 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:35f4bab08b96e91cc0f7f401be5805fb037bd6e3d4eb1af238340706b9cd0a3e",
                    "sha256:86598db2064696162f124b5a1c072b650bee12731f1bff33dcf7da989d1c4993",
                    "sha256:3db1690e74a01c4997efb46bb52278c8f3701d99f8dae92db3efe85e49aca754",
                    "sha256:6e238fdbf0f3db32039f484d577f323318fda897e8436045e2d628e5855af8ee",
                    "sha256:8739eaf76eff782ab247f13ae621367d2d5dcf0151937da80b4a44df76a964e5",
                    "sha256:2c1a32c56fe9d497ceb8d6e15324de12ec75d5c3ef2f0ea08a4844fc0cc7490a",
                    "sha256:c4d16c249e5240fdcb7a7f840b4eeb43b32d2ab03d7f81a339ab3ed38ff1b918",
                    "sha256:73db3a4534adfcd8df1d30200617dff79f905a84e1b2487e5e36151228dd5b54",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:a5c6851de90974e50273b162c26e1857a6a0da7f408acb92368ab1f7057bb377",
                    "sha256:09f23cb07254fc84f73cf8267e885cdefaaf2559cfabe1388ca2fd1fe1bc8052",
                    "sha256:05e2105ea4a5e0db7f4ec1db8ca7d334b7c84dc689b8fa8c4090883a0ff14739"
                ]
            }
        },
        "38-build-20240205": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f38container",
                    "FGC=f38",
                    "FBR=f38",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "raspberrypi5",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2024-02-05T02:54:12.501469361Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:41.041894598Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f38container FGC=f38 FBR=f38",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-29T00:47:11.412948906Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:bf926d1cd75117e6300e5b83c1a9f3dc935a0a4a1afd183c94c5ab427119d058 in / "
                },
                {
                    "created": "2023-11-29T00:47:13.088493574Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-05T00:26:07.283522649Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-05T00:26:07.283522649Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-05T00:26:07.283522649Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T00:52:22.648480886Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T01:34:57.549929554Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-clients \t\tsubversion \t\tautoconf \t\tautomake \t\tbzip2-devel \t\tglib2-devel \t\tgcc \t\tgcc-c++ \t\tImageMagick \t\tImageMagick-devel \t\tkernel-devel \t\tlibcurl-devel \t\tlibevent-devel \t\tlibffi-devel \t\tlibjpeg-devel \t\tlibsqlite3x-devel \t\tlibxml2-devel \t\tlibxslt-devel \t\tlibyaml-devel \t\tmysql-devel \t\tmake \t\tncurses-devel \t\topenssl-devel \t\tpostgresql-devel \t\treadline-devel \t\tsqlite-devel \t\tzlib-devel \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T01:34:58.698426062Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T01:34:58.698426062Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-05T01:34:58.709288494Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T01:34:58.742302253Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T01:34:58.759202078Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T01:34:58.759202078Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-05T01:35:04.305086577Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 38   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T01:35:04.450493146Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 38 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T02:54:12.374342812Z",
                    "created_by": "LABEL io.balena.device-type=raspberrypi5",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-05T02:54:12.374342812Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T02:54:12.501469361Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 38 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:35f4bab08b96e91cc0f7f401be5805fb037bd6e3d4eb1af238340706b9cd0a3e",
                    "sha256:25c5d26dde6a709e8fe04204ce06152cc9ff7c61b9e653229623e53208e92d9d",
                    "sha256:3a9052b286e7d0c4dbc0ecc4d1d5c24fa97e984dea4ce1540cb2c7a43b234714",
                    "sha256:a209f70a3c48accae069781977d34d7ece605bdf9b01bf655de0a4b3a0d815ae",
                    "sha256:ea9f209506961ead49cec2c8a6e9c6cbdf3da2d8a254f4fab54979bfb372a936",
                    "sha256:8525ac0e0fa3498ca378500e2199c3dba3db2cf6dbdfdb332ab61c9a875ca323",
                    "sha256:6481f52cf34a73dda86006ba06420bdf2f4cc997c51e46579ca35f02ebda598a",
                    "sha256:2ac438114f9401b05874baa8c192b7fc6ce3c0da423292bc40309a87397bb0b5",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:cb80e1d55729478c8c073f8b8fa5bd0ab0d1d7d9352694530e9479a8f0a6133c",
                    "sha256:0f0214095e4d712a979255bf56e8bd53c490a7024433e369e70487d1f787615b",
                    "sha256:35be404ef1f3f7cc5f729c4eb3b3d2c2e968b5053b811ee81ae4fd5e89db5a56"
                ]
            }
        },
        "38-build-20240227": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f38container",
                    "FGC=f38",
                    "FBR=f38",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "raspberrypi5",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2024-03-01T23:22:27.495065492Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:41.041894598Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f38container FGC=f38 FBR=f38",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-20T23:39:45.493041732Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:50f76cb2e29e780d80bbc023f0bbb552e413a0191d6fab7fedce9f032d7c55ec in / "
                },
                {
                    "created": "2024-02-20T23:39:46.885294079Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T20:50:09.897108948Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T20:50:09.897108948Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T20:50:09.897108948Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:17:41.622789278Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T22:00:05.447968861Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-clients \t\tsubversion \t\tautoconf \t\tautomake \t\tbzip2-devel \t\tglib2-devel \t\tgcc \t\tgcc-c++ \t\tImageMagick \t\tImageMagick-devel \t\tkernel-devel \t\tlibcurl-devel \t\tlibevent-devel \t\tlibffi-devel \t\tlibjpeg-devel \t\tlibsqlite3x-devel \t\tlibxml2-devel \t\tlibxslt-devel \t\tlibyaml-devel \t\tmysql-devel \t\tmake \t\tncurses-devel \t\topenssl-devel \t\tpostgresql-devel \t\treadline-devel \t\tsqlite-devel \t\tzlib-devel \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T22:00:06.868381508Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T22:00:06.868381508Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T22:00:06.876880217Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T22:00:06.884443525Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T22:00:06.89206315Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T22:00:06.89206315Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T22:00:12.313673259Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 38   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T22:00:12.450188912Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 38 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T23:22:27.385072913Z",
                    "created_by": "LABEL io.balena.device-type=raspberrypi5",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T23:22:27.385072913Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T23:22:27.495065492Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 38 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:d9224901c4254002370ad869c45d487779ce52e983554fc3c651d1283143025c",
                    "sha256:dcd8bb5e551d78e1a7df5e9cdd2248b7d42057d58efd29aa1ad3efe95e0913c5",
                    "sha256:2696167d857e43eb0db4659dede3b81939d5154ee8a5e6d12e113a040b6747d2",
                    "sha256:56cfe201bf279dd8fd7504ca76ce1b5094b6f3161e9777ba459f906286d57fdf",
                    "sha256:0b8997bfc9afb5b27ee51157a08242a25874b2dd0976ed9e47b36c4f7b14b297",
                    "sha256:86c439966c35d3ab8165dcf9633e6b36cfcf033ae4c29d365ebe695d8bc58942",
                    "sha256:10f572daecac3c558b319d28232e1173f0858776886df6b1cdc424c42f8e8e3f",
                    "sha256:aa5e3449d39b98667137cf1c65cae973283bd3121a9ca13218cb0d36b77e58dd",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:8c660f1c1924d53f2e4fc005f2651b9934e150d1d84904a166b2dcb9346f00b9",
                    "sha256:7ed1faafb606dc54c39a0a36f4df09757031638d6cb2dade77536a21d7753cbc",
                    "sha256:bc34a02c4d78483100e63644ad1465c81f5018bd8d4874053532e02a67967288"
                ]
            }
        },
        "38-build-20240304": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f38container",
                    "FGC=f38",
                    "FBR=f38",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "raspberrypi5",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2024-03-05T10:57:04.921864831Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:41.041894598Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f38container FGC=f38 FBR=f38",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-20T23:39:45.493041732Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:50f76cb2e29e780d80bbc023f0bbb552e413a0191d6fab7fedce9f032d7c55ec in / "
                },
                {
                    "created": "2024-02-20T23:39:46.885294079Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T08:24:16.349458836Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T08:24:16.349458836Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T08:24:16.349458836Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T08:55:05.687723743Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T09:37:49.378748765Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-clients \t\tsubversion \t\tautoconf \t\tautomake \t\tbzip2-devel \t\tglib2-devel \t\tgcc \t\tgcc-c++ \t\tImageMagick \t\tImageMagick-devel \t\tkernel-devel \t\tlibcurl-devel \t\tlibevent-devel \t\tlibffi-devel \t\tlibjpeg-devel \t\tlibsqlite3x-devel \t\tlibxml2-devel \t\tlibxslt-devel \t\tlibyaml-devel \t\tmysql-devel \t\tmake \t\tncurses-devel \t\topenssl-devel \t\tpostgresql-devel \t\treadline-devel \t\tsqlite-devel \t\tzlib-devel \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T09:37:50.702042504Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T09:37:50.702042504Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T09:37:50.714635736Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T09:37:50.725004801Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T09:37:50.754135385Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T09:37:50.754135385Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T09:37:56.380991734Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 38   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T09:37:56.522737005Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 38 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T10:57:04.799970314Z",
                    "created_by": "LABEL io.balena.device-type=raspberrypi5",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T10:57:04.799970314Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T10:57:04.921864831Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 38 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:d9224901c4254002370ad869c45d487779ce52e983554fc3c651d1283143025c",
                    "sha256:f48c9eddbc1f2401f9c01b5f49d65066cc6736cd10bf3d6367fa58871aa67da8",
                    "sha256:16ce41fd80fa45ee8fcdc2ca2d70fad8b5097608f6c8a9b4145ffae05c23c76f",
                    "sha256:e4dcc4fba13876e7b4a37d11f0c7383b33585abc7f3abdc003ba562492baed50",
                    "sha256:0cb56a3846c1330baad18db7d66a457ecdf321da02638674f8809d5f4aa9661b",
                    "sha256:d9a6ad25b762536264befadb27fc4671eb2a4a02541698ad56a0ae82e259f86f",
                    "sha256:4ee7f0074669d7ed543f5d236c4459720df4ba65c94ce074a89e3992a3d607ba",
                    "sha256:fd299532500fa1f9ce624643d5c5045d99e44584dba65bc545b8a0af95e50cb5",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:16908c6f2ecc55d57fc82a43723b3cda63502febd87f5703334949536ff29731",
                    "sha256:0a6395575cbc2f459b74a2f5692fcd1bab877120f6a5e47fdad59ed476daed80",
                    "sha256:a01fb1c017e8cdfa47cf89fcf95e3ff9f9485e81f0eed5d136908face885f31e"
                ]
            }
        },
        "38-build-20240401": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f38container",
                    "FGC=f38",
                    "FBR=f38",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "raspberrypi5",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                }
            },
            "created": "2024-04-01T23:53:36.852854042Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:41.041894598Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f38container FGC=f38 FBR=f38",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-20T23:39:45.493041732Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:50f76cb2e29e780d80bbc023f0bbb552e413a0191d6fab7fedce9f032d7c55ec in / "
                },
                {
                    "created": "2024-02-20T23:39:46.885294079Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T21:26:27.794199455Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T21:26:27.794199455Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T21:26:27.794199455Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T21:53:24.859684991Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T22:35:54.53195295Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-clients \t\tsubversion \t\tautoconf \t\tautomake \t\tbzip2-devel \t\tglib2-devel \t\tgcc \t\tgcc-c++ \t\tImageMagick \t\tImageMagick-devel \t\tkernel-devel \t\tlibcurl-devel \t\tlibevent-devel \t\tlibffi-devel \t\tlibjpeg-devel \t\tlibsqlite3x-devel \t\tlibxml2-devel \t\tlibxslt-devel \t\tlibyaml-devel \t\tmysql-devel \t\tmake \t\tncurses-devel \t\topenssl-devel \t\tpostgresql-devel \t\treadline-devel \t\tsqlite-devel \t\tzlib-devel \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T22:35:55.573159674Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T22:35:55.573159674Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T22:35:55.583778037Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T22:35:55.619703511Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T22:35:55.631911386Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T22:35:55.631911386Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T22:36:01.151366691Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 38   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T22:36:01.327877549Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 38 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T23:53:36.726951205Z",
                    "created_by": "LABEL io.balena.device-type=raspberrypi5",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T23:53:36.726951205Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T23:53:36.852854042Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 38 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:d9224901c4254002370ad869c45d487779ce52e983554fc3c651d1283143025c",
                    "sha256:94a2eb048e21c8e71a8f03f32b564849ffd038b53e0ec2f2f7a1b037864e56b7",
                    "sha256:59a91752dfc62cd44359a2f8bc83b2f25cbbfebc3353272c6e2ba1956b7424e6",
                    "sha256:0cc5d557067682c6f19a068bdb4478439103c75b9281bb3ab05b99facd1edade",
                    "sha256:b08f87d0f885239dd0932f0486855fd95c77870fef393f1df0c6bcc0f6f6896c",
                    "sha256:a757830347f79113e6a42976e11710e4ffcacb6ee62436dce15f86ebbdb45e8a",
                    "sha256:07c5e99401dfe47101d29db3d9a891b806e9a404bb3045c237045f7ea0f67196",
                    "sha256:a9360846f37548f0498d091863fef7f0c43471e0580eb2749779262e309b8136",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:fe231abe20b0907f6e177a0aef47202b43250922d34794deb46c1b9a765db26a",
                    "sha256:cea16eaa599c0381dcc4de453b9cc97c73eed771b129dbb4c576adad4b136c4c",
                    "sha256:f10a7e50ef93cb8dab7ecdaa9e78c83ce89627fd75ebbb0353831a4b95d41c5c"
                ]
            }
        },
        "38-build-20240408": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f38container",
                    "FGC=f38",
                    "FBR=f38",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "raspberrypi5",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                }
            },
            "created": "2024-04-09T20:07:50.187461458Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:41.041894598Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f38container FGC=f38 FBR=f38",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-20T23:39:45.493041732Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:50f76cb2e29e780d80bbc023f0bbb552e413a0191d6fab7fedce9f032d7c55ec in / "
                },
                {
                    "created": "2024-02-20T23:39:46.885294079Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:53.014397748Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:53.014397748Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:53.014397748Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:02:01.028048975Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:45:21.757628005Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-clients \t\tsubversion \t\tautoconf \t\tautomake \t\tbzip2-devel \t\tglib2-devel \t\tgcc \t\tgcc-c++ \t\tImageMagick \t\tImageMagick-devel \t\tkernel-devel \t\tlibcurl-devel \t\tlibevent-devel \t\tlibffi-devel \t\tlibjpeg-devel \t\tlibsqlite3x-devel \t\tlibxml2-devel \t\tlibxslt-devel \t\tlibyaml-devel \t\tmysql-devel \t\tmake \t\tncurses-devel \t\topenssl-devel \t\tpostgresql-devel \t\treadline-devel \t\tsqlite-devel \t\tzlib-devel \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:45:23.21693759Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:45:23.21693759Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T14:45:23.226391702Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:45:23.30237909Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:45:23.312751251Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:45:23.312751251Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T14:45:29.124459273Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 38   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:45:29.273317952Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 38 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T20:07:50.057523845Z",
                    "created_by": "LABEL io.balena.device-type=raspberrypi5",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T20:07:50.057523845Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T20:07:50.187461458Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 38 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:d9224901c4254002370ad869c45d487779ce52e983554fc3c651d1283143025c",
                    "sha256:63a7727c4e76d8980cf4568202bf9297aab0020244e4d7a59ff628633c5c379a",
                    "sha256:8764364fcb36a10eca0e326c313d32654e5e4cc55abfe0014974d53c364de48b",
                    "sha256:281dd00215836c81475c699f61f89c9eb55c5d69014f819f8772cffe433ace26",
                    "sha256:abb63b2c733f69ae08cbb6bfe1f32da0004658166581cc3bdb67901ede1ad33a",
                    "sha256:763bebfde6ac1ad7e8b6195d9c95001b4b273ad9936cd9971295674105101ac6",
                    "sha256:f67b7e4a6f4e48584da11a524adbebbbeeac629a1cb524f5df51ee88bdd71055",
                    "sha256:74f1d6cf90e9f178497078c8e6f3941cbb3265478d0f1a806521824a183837a9",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:c7319dfdfe03afc9fe26d4be768e94cfc2d546d63404d22deff0f8426aec9488",
                    "sha256:e1fa8b64d852fb598f1cde4dada9faf77af16480936c1161d44100ccf17c01a2",
                    "sha256:7e064d6a3a6b87f49b5c0f2e368dc2dbcefe2454af927b5b30ec550d7b985540"
                ]
            }
        },
        "38-build-20240429": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f38container",
                    "FGC=f38",
                    "FBR=f38",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "raspberrypi5",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                }
            },
            "created": "2024-05-06T10:46:30.120310127Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:41.041894598Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f38container FGC=f38 FBR=f38",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-20T23:39:45.493041732Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:50f76cb2e29e780d80bbc023f0bbb552e413a0191d6fab7fedce9f032d7c55ec in / "
                },
                {
                    "created": "2024-02-20T23:39:46.885294079Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:53.014397748Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:53.014397748Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:53.014397748Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:02:01.028048975Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:45:21.757628005Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-clients \t\tsubversion \t\tautoconf \t\tautomake \t\tbzip2-devel \t\tglib2-devel \t\tgcc \t\tgcc-c++ \t\tImageMagick \t\tImageMagick-devel \t\tkernel-devel \t\tlibcurl-devel \t\tlibevent-devel \t\tlibffi-devel \t\tlibjpeg-devel \t\tlibsqlite3x-devel \t\tlibxml2-devel \t\tlibxslt-devel \t\tlibyaml-devel \t\tmysql-devel \t\tmake \t\tncurses-devel \t\topenssl-devel \t\tpostgresql-devel \t\treadline-devel \t\tsqlite-devel \t\tzlib-devel \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:45:23.21693759Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:45:23.21693759Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T14:45:23.226391702Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:45:23.30237909Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:45:23.312751251Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:45:23.312751251Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T14:45:29.124459273Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 38   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:45:29.273317952Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 38 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T10:46:29.996720768Z",
                    "created_by": "LABEL io.balena.device-type=raspberrypi5",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T10:46:29.996720768Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T10:46:30.120310127Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 38 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:d9224901c4254002370ad869c45d487779ce52e983554fc3c651d1283143025c",
                    "sha256:63a7727c4e76d8980cf4568202bf9297aab0020244e4d7a59ff628633c5c379a",
                    "sha256:8764364fcb36a10eca0e326c313d32654e5e4cc55abfe0014974d53c364de48b",
                    "sha256:281dd00215836c81475c699f61f89c9eb55c5d69014f819f8772cffe433ace26",
                    "sha256:abb63b2c733f69ae08cbb6bfe1f32da0004658166581cc3bdb67901ede1ad33a",
                    "sha256:763bebfde6ac1ad7e8b6195d9c95001b4b273ad9936cd9971295674105101ac6",
                    "sha256:f67b7e4a6f4e48584da11a524adbebbbeeac629a1cb524f5df51ee88bdd71055",
                    "sha256:74f1d6cf90e9f178497078c8e6f3941cbb3265478d0f1a806521824a183837a9",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:c7319dfdfe03afc9fe26d4be768e94cfc2d546d63404d22deff0f8426aec9488",
                    "sha256:4652da8aeda12fd1aa9ebea808d198d7d33579e4581a0d9058b3847454e01b1b",
                    "sha256:145ee5c07de3fa0dba7472108d1d492785ec2ddc3fd32b8b66cbbd596766ec80"
                ]
            }
        },
        "38-run": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f38container",
                    "FGC=f38",
                    "FBR=f38",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "raspberrypi5",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                }
            },
            "created": "2024-05-06T10:45:43.895216528Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:41.041894598Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f38container FGC=f38 FBR=f38",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-20T23:39:45.493041732Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:50f76cb2e29e780d80bbc023f0bbb552e413a0191d6fab7fedce9f032d7c55ec in / "
                },
                {
                    "created": "2024-02-20T23:39:46.885294079Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:45.909708183Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:45.909708183Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:45.909708183Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:02:01.590555751Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:02:02.351225239Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:02:02.351225239Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T14:02:02.360749405Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:02:02.369270986Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:02:02.405864798Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:02:02.405864798Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T14:02:07.899966098Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 38   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:02:08.045611622Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 38 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T10:45:43.78288428Z",
                    "created_by": "LABEL io.balena.device-type=raspberrypi5",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T10:45:43.78288428Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T10:45:43.895216528Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 38 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:d9224901c4254002370ad869c45d487779ce52e983554fc3c651d1283143025c",
                    "sha256:ebcf910b3bd968c69298ac824583cd1528883f4a382541565a04a486c658c20b",
                    "sha256:c24ea502f2f1577b4278e978c5db52a3b01de7a26e6f4724887ceeba23daeba2",
                    "sha256:793d820a1dccf3d247ece3546ff7db37debcbeed40e828cb75bb4cb13b7aebab",
                    "sha256:553772b6df64fc5ba696a001383c6ffd5b481fb5f850cde63456cadf5cca043f",
                    "sha256:f4ac866915cc972c7c4d1726ddc5effabb4cc90debfacebc71ef6f4541bf63ef",
                    "sha256:8e85cb2120afad8b568aebbb01c8c1d2a29b17f9b8f160299e7d4c9843c607d2",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:2579e5f7d4e51b9a0d613c0c3be4660311f4b1324ea68a59aa3c2a222a1785eb",
                    "sha256:34c487b1e47dc15d8265c2af5b6daf788607588c1435ca9476d8d78b233c7b1e",
                    "sha256:fe7b10e9ad0ea8feebd92286e1aa40e420977b107142b094fa7c2386871bc289"
                ]
            }
        },
        "38-run-20230929": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f38container",
                    "FGC=f38",
                    "FBR=f38",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "raspberrypi5",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2023-10-04T23:38:26.280396602Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:41.041894598Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f38container FGC=f38 FBR=f38",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-04T18:41:08.203631801Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:50785841137152691ca6dd92200a0457ea325f9f4aa41c79dec9b254878dd456 in / "
                },
                {
                    "created": "2023-08-04T18:41:09.71120441Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T03:50:47.966318693Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T03:50:47.966318693Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T03:50:47.966318693Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T04:22:05.312577476Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T07:38:47.339540805Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T07:38:47.339540805Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T07:38:47.36437758Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T07:38:47.378289214Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T07:38:47.400334302Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T07:38:47.400334302Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T07:38:54.288974783Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 38   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T07:38:54.706047119Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 38 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-04T23:38:26.098001422Z",
                    "created_by": "LABEL io.balena.device-type=raspberrypi5",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-04T23:38:26.098001422Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-04T23:38:26.280396602Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 38 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:babdc27db7e2fbe287cb3f027c67c3a67bd9a8b9d89b01cce2dc884785c9e431",
                    "sha256:a0731afcd2c8d5368a134e5790c454b64b22976c083086a24640d9ef6aa0075e",
                    "sha256:420cc142d6ee365450904d65a94be7051adeebac2a3b9a384ca145c9a8a28029",
                    "sha256:e1319cc780fd12b1b3d63d3f7a138b3edf39a1ae6a7c1670656acf9b60c1d0b9",
                    "sha256:1522c5e1b65e43da1802a19f2a02344ee236f3e391dce20632f8c5c30d00929c",
                    "sha256:d745b7003041d17e1c4fababe413658716518d7d23a4cadf0daa8208ca8115c5",
                    "sha256:b8bfddca6ff0c7ee1788d5dcc5a32bb7820376376177ee9cba1b2a2c313e7507",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:d4fe2ae2c5a66072049f2207f21240b0a0c1328f04423f8886e86335ddd47abc",
                    "sha256:50309ada79986c5141ef3436570d9f9abc4671dc366f3005c66aa0c83612c2f1",
                    "sha256:86a5427cd2aaad940931e15c020164fd73290b6246a5b0f78efd1cdd0caf84ae"
                ]
            }
        },
        "38-run-20231103": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f38container",
                    "FGC=f38",
                    "FBR=f38",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "raspberrypi5",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2023-11-04T17:04:16.799221372Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:41.041894598Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f38container FGC=f38 FBR=f38",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-06T18:43:02.449416883Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:b0b9f1fa4d90583e2728f8359f6d2f98198fa564a48a493ac3938082a4180724 in / "
                },
                {
                    "created": "2023-10-06T18:43:04.271082122Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-04T14:05:44.131779502Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-04T14:05:44.131779502Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-04T14:05:44.131779502Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T14:43:55.158323453Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T14:43:57.315900893Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T14:43:57.315900893Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-04T14:43:57.325120653Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T14:43:57.333974114Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T14:43:57.352409034Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T14:43:57.352409034Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-04T14:44:05.155422355Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 38   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T14:44:05.359127743Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 38 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T17:04:16.652764911Z",
                    "created_by": "LABEL io.balena.device-type=raspberrypi5",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-04T17:04:16.652764911Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T17:04:16.799221372Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 38 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:f1d4814332771f9e7ca854a6a297b5c75ceff99a0ae64bd8822337e826d49073",
                    "sha256:0bccca922a892d5aa4c088c02038026d68fafb3a7f614fc1c0db995cf1890779",
                    "sha256:2b7cd3c685926706b0199140fea791ac7753518db92138766ccc4bc9827f3d68",
                    "sha256:5e2ed28829eda26e065b3f9a78ad0f47edcf6d743edd5bbc5c2fc730546a9e47",
                    "sha256:c15dcfd3685089cc9c439fb2115f9255c4e4d3ad885e9cad9901066740f79ca9",
                    "sha256:8d6a9b04859afa4fc18d56950955c986eab6de919bfa6312935dd81af5301335",
                    "sha256:448330a20f6a3fba2984503bed4c07d0e41bafad7ab960f0a9386721fd3b3a1d",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:717bf92c44b0be0acbb18b42508625580b2ad0f540b00e8e19e11f9f5bec025d",
                    "sha256:36f8509287e19ead9ea747674fd97ccef79c3f12d47f3e0e583d416451fee88a",
                    "sha256:a784fb1df205e91d96f45ca18e85e23de9950f2a60f3d262f3b2656e39d2c96e"
                ]
            }
        },
        "38-run-20231106": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f38container",
                    "FGC=f38",
                    "FBR=f38",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "raspberrypi5",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2023-11-06T12:32:14.55409055Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:41.041894598Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f38container FGC=f38 FBR=f38",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-06T18:43:02.449416883Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:b0b9f1fa4d90583e2728f8359f6d2f98198fa564a48a493ac3938082a4180724 in / "
                },
                {
                    "created": "2023-10-06T18:43:04.271082122Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T09:12:24.373696779Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T09:12:24.373696779Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T09:12:24.373696779Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T09:40:03.866592528Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T09:40:05.05480729Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T09:40:05.05480729Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T09:40:05.067525056Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T09:40:05.080368698Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T09:40:05.09192886Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T09:40:05.09192886Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T09:40:10.682476779Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 38   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T09:40:10.854158569Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 38 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T12:32:14.42503642Z",
                    "created_by": "LABEL io.balena.device-type=raspberrypi5",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T12:32:14.42503642Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T12:32:14.55409055Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 38 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:f1d4814332771f9e7ca854a6a297b5c75ceff99a0ae64bd8822337e826d49073",
                    "sha256:5a48b2864c1414aa1920c0b0810a38ec32acb5ca14e2de09d3dfe54f1994b7ab",
                    "sha256:7d025699647d357035320f6733ddce0b0fb0c3833cadebad2b3682451308e93b",
                    "sha256:27ca0065e4f4805a604acc7bc4ad9df0047808f3306f957b1a1fcc66aa4f9b1d",
                    "sha256:128e2a62004cfc82684ba2679f14a1e0b3bc7738f8a994c36eae30e0d28a7893",
                    "sha256:45ec6c560d5a90df5eba1bff84a4a8ca5e63aaba7e85e2ba1369e862abcc64d6",
                    "sha256:efc86bb1982e1b3392b56a19451122d7402088ffbbbd4e02f65020a56fa4c32f",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:973bbd2506ec0a26704cbf8153609044757818fdde2b452543ec1793c432bd62",
                    "sha256:c94bba941e1b674e5c4ac5de8b4f4dba6a03112b6cc7d59d24ae1f0da4f041ef",
                    "sha256:96de3979961d76e5b3140617df69e895041faf4445152919d2dfc00055c67a53"
                ]
            }
        },
        "38-run-20231127": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f38container",
                    "FGC=f38",
                    "FBR=f38",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "raspberrypi5",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2023-12-01T13:13:24.42728982Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:41.041894598Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f38container FGC=f38 FBR=f38",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-29T00:47:11.412948906Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:bf926d1cd75117e6300e5b83c1a9f3dc935a0a4a1afd183c94c5ab427119d058 in / "
                },
                {
                    "created": "2023-11-29T00:47:13.088493574Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T10:52:03.115117234Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T10:52:03.115117234Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T10:52:03.115117234Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T11:16:47.728963247Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T11:16:48.486024995Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T11:16:48.486024995Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T11:16:48.498276188Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T11:16:48.512658091Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T11:16:48.524349935Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T11:16:48.524349935Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T11:16:54.156435504Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 38   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T11:16:54.314713811Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 38 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T13:13:24.303016369Z",
                    "created_by": "LABEL io.balena.device-type=raspberrypi5",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T13:13:24.303016369Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T13:13:24.42728982Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 38 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:35f4bab08b96e91cc0f7f401be5805fb037bd6e3d4eb1af238340706b9cd0a3e",
                    "sha256:9051a15d589df97279221a4efec80a8450c6bc2058ae17721276d555326b33fe",
                    "sha256:f26c2122cb7d826231a78504bf73a326017233b52ecb911e6624628eaddfb0be",
                    "sha256:ef43e4d211352a22a0c10cc03ef2d365126609597085c57b213d34c0c04179df",
                    "sha256:2d3f59edb238952cc50ac74c46d5e6485d475fb47829eed97ab1448816b959ba",
                    "sha256:a31db5a21c41fbc40c8fa7ba30c8bbb8e906931e477d2d358f6dca40b8f358b3",
                    "sha256:aa10d6eeaa52364861226a12826a3a2ea676c211206d4f3a2680e0ba05d9f33f",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:7d348d824235181cb9293dbb5802653c13f056cfd31f764283e02da722b92a9e",
                    "sha256:8eee651d089c19d549a97f6062a325b505f35715e7aae7b797adf4b78bea3913",
                    "sha256:1ed5613c43f78aa3a6207d8211c1a7fdcc18d3a6e9c0ba57c354a2684c88f074"
                ]
            }
        },
        "38-run-20231204": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f38container",
                    "FGC=f38",
                    "FBR=f38",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "raspberrypi5",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2023-12-06T23:00:28.479233205Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:41.041894598Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f38container FGC=f38 FBR=f38",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-29T00:47:11.412948906Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:bf926d1cd75117e6300e5b83c1a9f3dc935a0a4a1afd183c94c5ab427119d058 in / "
                },
                {
                    "created": "2023-11-29T00:47:13.088493574Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T20:40:27.571890331Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T20:40:27.571890331Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T20:40:27.571890331Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T21:05:52.460646066Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T21:05:53.697602634Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T21:05:53.697602634Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T21:05:53.72907232Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T21:05:53.73766608Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T21:05:53.784935919Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T21:05:53.784935919Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T21:05:59.464238317Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 38   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T21:05:59.633985585Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 38 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T23:00:28.347961697Z",
                    "created_by": "LABEL io.balena.device-type=raspberrypi5",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T23:00:28.347961697Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T23:00:28.479233205Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 38 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:35f4bab08b96e91cc0f7f401be5805fb037bd6e3d4eb1af238340706b9cd0a3e",
                    "sha256:7af9d3e66dc47c88df168c57e6bbf3bf441b84f864d9fd704e0889ac77dd645b",
                    "sha256:b52587f45451994117f2d4e9754f102fef88b048deea62290f382798927cfbc1",
                    "sha256:7bf81e0ac98a4ea7f63a0fce6df544ff53238af29c3a6212866bcbaa5d7f9649",
                    "sha256:2f6ef3c9e2791170ecac3c21ceaf5dbcd0aaa56ca679f701efde7ccd5ede33d6",
                    "sha256:4a5ec467e104c8b720b6bb9d044b578693e795c08eb1119417b0e73ea4712df5",
                    "sha256:36f1d93758ea9464369624e538df0c4941f14a8c6a009b3556534d8981696ae0",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:1a75df63308478d0e6a9a2dad62406133ce2fdb0cda42ceae25fc18101f203f0",
                    "sha256:e7d5f27d5e2f484a20515cd7a8381444179845835c92dd2c3ace486ae640388f",
                    "sha256:bbf95a21c0fda51e906bd1ffa04057359c7d4df221c64212c6b91c2d8d617ffa"
                ]
            }
        },
        "38-run-20240205": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f38container",
                    "FGC=f38",
                    "FBR=f38",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "raspberrypi5",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2024-02-05T02:54:15.943300397Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:41.041894598Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f38container FGC=f38 FBR=f38",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-29T00:47:11.412948906Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:bf926d1cd75117e6300e5b83c1a9f3dc935a0a4a1afd183c94c5ab427119d058 in / "
                },
                {
                    "created": "2023-11-29T00:47:13.088493574Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-05T00:26:05.223615023Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-05T00:26:05.223615023Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-05T00:26:05.223615023Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T00:52:22.02695632Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T00:52:22.769786602Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T00:52:22.769786602Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-05T00:52:22.781178587Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T00:52:22.808356935Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T00:52:22.817879552Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T00:52:22.817879552Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-05T00:52:28.311630714Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 38   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T00:52:28.461665008Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 38 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T02:54:15.815770089Z",
                    "created_by": "LABEL io.balena.device-type=raspberrypi5",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-05T02:54:15.815770089Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T02:54:15.943300397Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 38 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:35f4bab08b96e91cc0f7f401be5805fb037bd6e3d4eb1af238340706b9cd0a3e",
                    "sha256:9a0bea4247baec631951f1c12c7fc5e31aef00f9f94fa6500789dd41065dab08",
                    "sha256:8ea115299209cadf8dc81735c2e245e6e1c628e3e6486326a42d431e000ad1d9",
                    "sha256:81ffb1609a528e20e002ea96acab5a3f2db491584d03f99adb651ba5d38707b3",
                    "sha256:dd667c60ecc52fbdc7e0e476262643b15f185497cb053f94c29b2ea0f20d4532",
                    "sha256:9e0a1177327862e9e8614499429cf719307afc6deb4d6bd9d73f1339d5113ab0",
                    "sha256:6cbd6b5c83f0e41ed8ecedf532eae321661bb02d09a80d622a2de713dc3f1998",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:492bf5ced8bd1f23c728665cd29dba12cd7877883ff04c3620df7b90d4f32e63",
                    "sha256:849b31fa019cfd0b22008b6e8bc822668ceadcfd78fbfad5ce6e38c4feb2c7eb",
                    "sha256:903f794a10bbc00c52199b7bc5f84f2efa1b07fe51fef179cbb7598a0cdc70b5"
                ]
            }
        },
        "38-run-20240227": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f38container",
                    "FGC=f38",
                    "FBR=f38",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "raspberrypi5",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2024-03-01T23:22:43.823358273Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:41.041894598Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f38container FGC=f38 FBR=f38",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-20T23:39:45.493041732Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:50f76cb2e29e780d80bbc023f0bbb552e413a0191d6fab7fedce9f032d7c55ec in / "
                },
                {
                    "created": "2024-02-20T23:39:46.885294079Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T20:50:11.174745295Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T20:50:11.174745295Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T20:50:11.174745295Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:17:06.032783443Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:17:06.794960795Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:17:06.794960795Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T21:17:06.805447066Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:17:06.814310203Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:17:06.84911684Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:17:06.84911684Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T21:17:12.388615628Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 38   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:17:12.526606922Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 38 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T23:22:43.705900284Z",
                    "created_by": "LABEL io.balena.device-type=raspberrypi5",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T23:22:43.705900284Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T23:22:43.823358273Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 38 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:d9224901c4254002370ad869c45d487779ce52e983554fc3c651d1283143025c",
                    "sha256:80960cca51c97684b3a9cec28adb8fae3034898f76cc4de09b5756e99bab5f4d",
                    "sha256:ebcf328ef783f06a08c6855ef399097abd7849454cb754d92656f855c8e72f7b",
                    "sha256:ed8c17efb3a45a5c116d8b29102ee94853c6c7d78b68917765166a90efdbe456",
                    "sha256:4c2fcb2aa7c87c35350e78cfb39cc8d48e14a39322897c5816cbba6875385aeb",
                    "sha256:9fb9429b38105cbccdabce561ae817ae56aa3fbe6943dabf073a3e077a0a4726",
                    "sha256:5e5d3ed39b0bae147112243675b89add16961c507d1a96d8c12543619f3631ab",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:9659c666f25fc0ca79916fc32cd405a174b567f47816d637061022910382150c",
                    "sha256:31d9b2a17e269eeb7697ca79bd61746fd0fc592be1ec873f28678fec74b90981",
                    "sha256:d39058d0a60a8e8b9d281b67af4087a8d28541c254696c6781c1e6d1d0ac10d0"
                ]
            }
        },
        "38-run-20240304": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f38container",
                    "FGC=f38",
                    "FBR=f38",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "raspberrypi5",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2024-03-05T10:56:15.779548825Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:41.041894598Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f38container FGC=f38 FBR=f38",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-20T23:39:45.493041732Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:50f76cb2e29e780d80bbc023f0bbb552e413a0191d6fab7fedce9f032d7c55ec in / "
                },
                {
                    "created": "2024-02-20T23:39:46.885294079Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T08:24:19.415187376Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T08:24:19.415187376Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T08:24:19.415187376Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T08:56:00.912192201Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T08:56:02.006895963Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T08:56:02.006895963Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T08:56:02.016355085Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T08:56:02.026794369Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T08:56:02.060541718Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T08:56:02.060541718Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T08:56:07.655736223Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 38   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T08:56:07.807291644Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 38 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T10:56:15.661602398Z",
                    "created_by": "LABEL io.balena.device-type=raspberrypi5",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T10:56:15.661602398Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T10:56:15.779548825Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 38 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:d9224901c4254002370ad869c45d487779ce52e983554fc3c651d1283143025c",
                    "sha256:ea79a218147f67e84cc5ebc832b9460a07c042175b9c6c064e2b46cc1dc1a3a4",
                    "sha256:30e3fbd8e717f3b8a564afd4ee36b43ec6b6d86b01c9f556f1c1569211d3f246",
                    "sha256:4f6c240ccf870cc5e7845a32d4625252e557b98a1ca959ee903a50fae49f5292",
                    "sha256:52333195f351cb7f05d374c425fd2d08bfc9a7b292673ba1bc72b65cfc337fda",
                    "sha256:8fa793cc56273ff76f01fe7a2fa04001b8a835021eb98a84aac458c70142805b",
                    "sha256:2d3cbcbb63899f70da15473b7e05cdcb41b7bb7057040d80f9a5a063821b0133",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:5bb1ea72b4125dbbfb8204982aadcd3846bffd331433fe0e24dc13c017b2badd",
                    "sha256:25da138118f3049b1c6993e2f79932a56570a63344a07266cd4ebbd65291e4de",
                    "sha256:65ffcd404456f0c33530b11d32f5f852688504256d41257883c598f103223c06"
                ]
            }
        },
        "38-run-20240401": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f38container",
                    "FGC=f38",
                    "FBR=f38",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "raspberrypi5",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                }
            },
            "created": "2024-04-01T23:53:27.014912005Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:41.041894598Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f38container FGC=f38 FBR=f38",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-20T23:39:45.493041732Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:50f76cb2e29e780d80bbc023f0bbb552e413a0191d6fab7fedce9f032d7c55ec in / "
                },
                {
                    "created": "2024-02-20T23:39:46.885294079Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T21:26:30.063655578Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T21:26:30.063655578Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T21:26:30.063655578Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T21:53:18.953503933Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T21:53:19.727911729Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T21:53:19.727911729Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T21:53:19.739193593Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T21:53:19.779094073Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T21:53:19.789079698Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T21:53:19.789079698Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T21:53:25.296074915Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 38   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T21:53:25.441838461Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 38 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T23:53:26.896968689Z",
                    "created_by": "LABEL io.balena.device-type=raspberrypi5",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T23:53:26.896968689Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T23:53:27.014912005Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 38 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:d9224901c4254002370ad869c45d487779ce52e983554fc3c651d1283143025c",
                    "sha256:b20e668d1a141e0d94ea1512d98fa306aef98b2f4894ff4310a4b368ecae46f1",
                    "sha256:8d53a1ae6a6876501ddfee3882f044e95cf4bbb5c5ee113c33b6a630df50f37d",
                    "sha256:9b2f37627416daf809729f9b7b129b588d6d27b685e6a6f70b7efd53604d8c77",
                    "sha256:58e2ad029c294aaf061847a738e97e4ee92cfcc02568fde36d2c42014b29bc2a",
                    "sha256:0370b041d7751b62b4759a10fd68fe5d529500000af334c432dda8ff0e6bdc19",
                    "sha256:4fda59f91c1283cdc0171b9d775c4c59aed809bf6eb8969c1dab000deccefbfb",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:0fbb16bb412f29fbd6bf22b0270c66acce1dfff1273a68ab07e7a24a347da177",
                    "sha256:4a77dfe381b787340e32950bfef183f475c76e1d1e47231726672a7485c5168d",
                    "sha256:fd6253f45c521380c5eb1c2ba7c60c027d59f745d370d1b07e49e4ba75459e7e"
                ]
            }
        },
        "38-run-20240408": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f38container",
                    "FGC=f38",
                    "FBR=f38",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "raspberrypi5",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                }
            },
            "created": "2024-04-09T20:06:58.422435097Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:41.041894598Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f38container FGC=f38 FBR=f38",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-20T23:39:45.493041732Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:50f76cb2e29e780d80bbc023f0bbb552e413a0191d6fab7fedce9f032d7c55ec in / "
                },
                {
                    "created": "2024-02-20T23:39:46.885294079Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:45.909708183Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:45.909708183Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:45.909708183Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:02:01.590555751Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:02:02.351225239Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:02:02.351225239Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T14:02:02.360749405Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:02:02.369270986Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:02:02.405864798Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:02:02.405864798Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T14:02:07.899966098Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 38   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:02:08.045611622Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 38 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T20:06:58.305374693Z",
                    "created_by": "LABEL io.balena.device-type=raspberrypi5",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T20:06:58.305374693Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T20:06:58.422435097Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 38 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:d9224901c4254002370ad869c45d487779ce52e983554fc3c651d1283143025c",
                    "sha256:ebcf910b3bd968c69298ac824583cd1528883f4a382541565a04a486c658c20b",
                    "sha256:c24ea502f2f1577b4278e978c5db52a3b01de7a26e6f4724887ceeba23daeba2",
                    "sha256:793d820a1dccf3d247ece3546ff7db37debcbeed40e828cb75bb4cb13b7aebab",
                    "sha256:553772b6df64fc5ba696a001383c6ffd5b481fb5f850cde63456cadf5cca043f",
                    "sha256:f4ac866915cc972c7c4d1726ddc5effabb4cc90debfacebc71ef6f4541bf63ef",
                    "sha256:8e85cb2120afad8b568aebbb01c8c1d2a29b17f9b8f160299e7d4c9843c607d2",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:2579e5f7d4e51b9a0d613c0c3be4660311f4b1324ea68a59aa3c2a222a1785eb",
                    "sha256:1616d3f03a41928840d1a97dc30d8abfed539ea443bc39cb553814f666c7901e",
                    "sha256:68c49320b0e5f84230ac39d2f99b2f32df9d00e92427a8087b8413b89f365ca9"
                ]
            }
        },
        "38-run-20240429": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f38container",
                    "FGC=f38",
                    "FBR=f38",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "raspberrypi5",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                }
            },
            "created": "2024-05-06T10:45:43.895216528Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:41.041894598Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f38container FGC=f38 FBR=f38",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-20T23:39:45.493041732Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:50f76cb2e29e780d80bbc023f0bbb552e413a0191d6fab7fedce9f032d7c55ec in / "
                },
                {
                    "created": "2024-02-20T23:39:46.885294079Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:45.909708183Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:45.909708183Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:45.909708183Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:02:01.590555751Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:02:02.351225239Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:02:02.351225239Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T14:02:02.360749405Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:02:02.369270986Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:02:02.405864798Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:02:02.405864798Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T14:02:07.899966098Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 38   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:02:08.045611622Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 38 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T10:45:43.78288428Z",
                    "created_by": "LABEL io.balena.device-type=raspberrypi5",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T10:45:43.78288428Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T10:45:43.895216528Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 38 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:d9224901c4254002370ad869c45d487779ce52e983554fc3c651d1283143025c",
                    "sha256:ebcf910b3bd968c69298ac824583cd1528883f4a382541565a04a486c658c20b",
                    "sha256:c24ea502f2f1577b4278e978c5db52a3b01de7a26e6f4724887ceeba23daeba2",
                    "sha256:793d820a1dccf3d247ece3546ff7db37debcbeed40e828cb75bb4cb13b7aebab",
                    "sha256:553772b6df64fc5ba696a001383c6ffd5b481fb5f850cde63456cadf5cca043f",
                    "sha256:f4ac866915cc972c7c4d1726ddc5effabb4cc90debfacebc71ef6f4541bf63ef",
                    "sha256:8e85cb2120afad8b568aebbb01c8c1d2a29b17f9b8f160299e7d4c9843c607d2",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:2579e5f7d4e51b9a0d613c0c3be4660311f4b1324ea68a59aa3c2a222a1785eb",
                    "sha256:34c487b1e47dc15d8265c2af5b6daf788607588c1435ca9476d8d78b233c7b1e",
                    "sha256:fe7b10e9ad0ea8feebd92286e1aa40e420977b107142b094fa7c2386871bc289"
                ]
            }
        },
        "build": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "raspberrypi5",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                }
            },
            "created": "2024-05-06T10:39:05.745247919Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:31.895761202Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-29T00:47:03.16713451Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:270e11b4c18af1c1efb8b8579be7fbda5255d56dd69f83ef7d933cfd2c685e5c in / "
                },
                {
                    "created": "2023-11-29T00:47:04.125919026Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T09:28:43.57977131Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T09:28:43.57977131Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T09:28:43.57977131Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T09:47:19.941756159Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T10:20:57.000511545Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-clients \t\tsubversion \t\tautoconf \t\tautomake \t\tbzip2-devel \t\tglib2-devel \t\tgcc \t\tgcc-c++ \t\tImageMagick \t\tImageMagick-devel \t\tkernel-devel \t\tlibcurl-devel \t\tlibevent-devel \t\tlibffi-devel \t\tlibjpeg-devel \t\tlibsqlite3x-devel \t\tlibxml2-devel \t\tlibxslt-devel \t\tlibyaml-devel \t\tmysql-devel \t\tmake \t\tncurses-devel \t\topenssl-devel \t\tpostgresql-devel \t\treadline-devel \t\tsqlite-devel \t\tzlib-devel \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T10:20:58.118390256Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T10:20:58.118390256Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T10:20:58.12798187Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T10:20:58.136722317Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T10:20:58.164403522Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T10:20:58.164403522Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T10:21:01.984279759Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T10:21:02.133999332Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T10:39:05.631903588Z",
                    "created_by": "LABEL io.balena.device-type=raspberrypi5",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T10:39:05.631903588Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T10:39:05.745247919Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:22de68abb450063be7e40efd22fd3b41bec469efafdd95e25c65998648e52b28",
                    "sha256:40252cde73a60fe319f0dc295c7b1e421631974cfbe16656b81f7c86e773254e",
                    "sha256:4a4de46c8a70d5743384977bb42ebacdec5e3cb5490677a398f1d36366084aab",
                    "sha256:1523c4d5a73b8f8409b03635be1be78f6592c3915fd459908ffe5c04fb7ca684",
                    "sha256:3165ae98a25560d143d61c6f8a3cc9b4f73d0c009bfd9de33cefc4747c481229",
                    "sha256:802383c11ce70505808614d078d961ddc3cfaf46a58ac795624520a44e2a7860",
                    "sha256:0590d31cf7630143e0d0e5677bb4407b0d1c0b49a56ef3a87a860603dcea1282",
                    "sha256:6f5ffd7cbb1f8862606014326bb38c35022c8eb43d2a0aff0af32878db49dbdc",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:8c0b4113e6a87b2271a715a924b205a5c9534f5b51c4f3d05b39a48bb6ad75be",
                    "sha256:dfe8b7206657f70248c3af557761da865df3d0ccf1a3d5c0483af6659a3f7679",
                    "sha256:a41538cee7e19fc56d8b85adabf2df104f7856ddaa10d8d87900dcb7e8e56df8"
                ]
            }
        },
        "build-20230929": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "raspberrypi5",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2023-10-04T23:26:29.321215037Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:31.895761202Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-04T18:40:58.001277299Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:614dff70ca4206841645edfd3dab48901efeefccc8ef99772f475ee9bac861ff in / "
                },
                {
                    "created": "2023-08-04T18:40:59.951513662Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T05:16:42.403188583Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T05:16:42.403188583Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T05:16:42.403188583Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T05:41:14.882541843Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T06:27:10.219323725Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-clients \t\tsubversion \t\tautoconf \t\tautomake \t\tbzip2-devel \t\tglib2-devel \t\tgcc \t\tgcc-c++ \t\tImageMagick \t\tImageMagick-devel \t\tkernel-devel \t\tlibcurl-devel \t\tlibevent-devel \t\tlibffi-devel \t\tlibjpeg-devel \t\tlibsqlite3x-devel \t\tlibxml2-devel \t\tlibxslt-devel \t\tlibyaml-devel \t\tmysql-devel \t\tmake \t\tncurses-devel \t\topenssl-devel \t\tpostgresql-devel \t\treadline-devel \t\tsqlite-devel \t\tzlib-devel \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T06:27:11.639619237Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T06:27:11.639619237Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T06:27:11.672307839Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T06:27:11.703609828Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T06:27:11.752254777Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T06:27:11.752254777Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T06:27:16.692189405Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T06:27:17.113557601Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-04T23:26:29.150520161Z",
                    "created_by": "LABEL io.balena.device-type=raspberrypi5",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-04T23:26:29.150520161Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-04T23:26:29.321215037Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:cf819d1f191d71ce750fc0b9ca71726d50fc052d7c695682165a84c2bd1eb716",
                    "sha256:2c61372b1614282bfdb58c104252b37a61be492de5c3298dffc56376adfe0a8f",
                    "sha256:3892fad87609c0724cb700c7b327865d8b642316f214825299540678c84e007b",
                    "sha256:0f4a521d2c6cf8cad7b2eb4df330989890e4ec58bcdb8c8d3f1e7b953bbbd9cf",
                    "sha256:8d6c3fbf20d052b4dfc381066e982bdd6112441240ae7ffbc2e5e89595e79a0c",
                    "sha256:561d71383dd66b871476f9e5ff3274483fb9574952685d747d4e55904f1ee3fb",
                    "sha256:b19528952c8ac1375dbbc0465be58dc121fb846ce4e1e89645c716509faaf601",
                    "sha256:c8b95dba26be42e442fdec1f2fd5073216020274f421a0e7cf5b4abe1599f822",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:bf40c484f55f8935bf800843234fd2cadb1c9404047d95d9143e806f44edeae5",
                    "sha256:0b0b11cb509069dc3e0bbad4298bd363fc0e8f73d27fe05a251e505ae55a83d1",
                    "sha256:7c58687f9b5454d4f5308a81a9ba79092803e3ed23a3854aaf238e5d75e4ab16"
                ]
            }
        },
        "build-20231103": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "raspberrypi5",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2023-11-04T16:59:29.98236115Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:31.895761202Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-06T18:42:53.905315575Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:a506790441a5cd056fb456111da480939a46667d520b519dcb9b2e2aa16aae70 in / "
                },
                {
                    "created": "2023-10-06T18:42:54.852939758Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-04T14:05:46.127555575Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-04T14:05:46.127555575Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-04T14:05:46.127555575Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T14:32:34.985281581Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T15:17:05.03121789Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-clients \t\tsubversion \t\tautoconf \t\tautomake \t\tbzip2-devel \t\tglib2-devel \t\tgcc \t\tgcc-c++ \t\tImageMagick \t\tImageMagick-devel \t\tkernel-devel \t\tlibcurl-devel \t\tlibevent-devel \t\tlibffi-devel \t\tlibjpeg-devel \t\tlibsqlite3x-devel \t\tlibxml2-devel \t\tlibxslt-devel \t\tlibyaml-devel \t\tmysql-devel \t\tmake \t\tncurses-devel \t\topenssl-devel \t\tpostgresql-devel \t\treadline-devel \t\tsqlite-devel \t\tzlib-devel \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T15:17:06.534956571Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T15:17:06.534956571Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-04T15:17:06.547775032Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T15:17:06.562169912Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T15:17:06.584452792Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T15:17:06.584452792Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-04T15:17:11.437649746Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T15:17:11.624485751Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T16:59:29.837917707Z",
                    "created_by": "LABEL io.balena.device-type=raspberrypi5",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-04T16:59:29.837917707Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T16:59:29.98236115Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:a37bac7c99baeb556998a67a51775b34aa6df7829fa1ff19323033c5e19837b3",
                    "sha256:b803e34ece3fff5f3d20cfa0d3e1cf3d2f8eeb660544fa7d9d823be8aaca720f",
                    "sha256:6cd425edf3bbba0627f88702e763514480d7cc186cdcf9fba97078a67b67ff15",
                    "sha256:3b47068608b1d7e0db2398b9a01f8b7334b03f0b6e860606846319db5bca3e6d",
                    "sha256:cd9302fb8f7c40436d216b427838f33470983f6d503ff317690d5147f2ac7af4",
                    "sha256:3ee1780fbb8bd15cb0d9c1f09542dd9bfd3ad0b2b19f329060fb3864d9f08437",
                    "sha256:818589d5e5232c469d55d13e3c611a19ae9fbd09e1eab7d8d5a5cbc2d7a5364a",
                    "sha256:12e7cf1e010caa525ada8d183482cca1144de22e3bdeb8c3f63e13d7f4d27c83",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:24e8fe7f4ce600f415f5a229e1303c9bab9afc61a2cb00bfe838cf9af0b10c57",
                    "sha256:923dcc0bcf37a34781267da6a51a1c70dec7909f17cd41e9257aab971f8e1326",
                    "sha256:660cd340f23568f560e7687cef68bb4acb41438e6f93dec12e671181deff0993"
                ]
            }
        },
        "build-20231106": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "raspberrypi5",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2023-11-06T12:32:29.711635984Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:31.895761202Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-06T18:42:53.905315575Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:a506790441a5cd056fb456111da480939a46667d520b519dcb9b2e2aa16aae70 in / "
                },
                {
                    "created": "2023-10-06T18:42:54.852939758Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T09:12:33.793766866Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T09:12:33.793766866Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T09:12:33.793766866Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T09:41:28.803094869Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T10:28:03.430768422Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-clients \t\tsubversion \t\tautoconf \t\tautomake \t\tbzip2-devel \t\tglib2-devel \t\tgcc \t\tgcc-c++ \t\tImageMagick \t\tImageMagick-devel \t\tkernel-devel \t\tlibcurl-devel \t\tlibevent-devel \t\tlibffi-devel \t\tlibjpeg-devel \t\tlibsqlite3x-devel \t\tlibxml2-devel \t\tlibxslt-devel \t\tlibyaml-devel \t\tmysql-devel \t\tmake \t\tncurses-devel \t\topenssl-devel \t\tpostgresql-devel \t\treadline-devel \t\tsqlite-devel \t\tzlib-devel \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T10:28:04.971243325Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T10:28:04.971243325Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T10:28:04.981842152Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T10:28:04.990882375Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T10:28:04.999524597Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T10:28:04.999524597Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T10:28:10.325096726Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T10:28:10.509330565Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T12:32:29.54634105Z",
                    "created_by": "LABEL io.balena.device-type=raspberrypi5",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T12:32:29.54634105Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T12:32:29.711635984Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:a37bac7c99baeb556998a67a51775b34aa6df7829fa1ff19323033c5e19837b3",
                    "sha256:079d7cf39afa9d578a9d23346f411400794c3af330d6d28f819e9df742fd510f",
                    "sha256:953f9299839dea166062dc15ad557aaded1976123a8e68748f4c2b9bda013445",
                    "sha256:91484c3183f81de3b5df4fd7282fa21e976e1bfebc491b6bbfbf04e93c1894a0",
                    "sha256:8a86f91b095531cde383c2059c806a3e41d2784a850acb0074b3c05e00a92b22",
                    "sha256:72afd198025d5dd3f0441d9c45c59c4856bb515bdfd96241abc1821082e51634",
                    "sha256:dbd652ad088f975924c2188af549f2f10b92c01b6fe522387771c28ab9f9a3d1",
                    "sha256:b34bfc4dadfdc58a35b02f2a10f1cceab912215f6d83c03887fd10915a43740f",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:60d7cb78f7dbd6e4fd7284fde027f33371b8a35defbb6d0b64e611e5b79e547c",
                    "sha256:017327ad44610209b00c9a0b15918c88c8f12cffb3d0ae6bda17b044bf6a03c0",
                    "sha256:fc01bffa334f1aa9b857f8937b4c22dce59305d6a4044a1cc1aadf82d1a332b9"
                ]
            }
        },
        "build-20231127": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "raspberrypi5",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2023-12-01T13:08:05.310763079Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:31.895761202Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-29T00:47:03.16713451Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:270e11b4c18af1c1efb8b8579be7fbda5255d56dd69f83ef7d933cfd2c685e5c in / "
                },
                {
                    "created": "2023-11-29T00:47:04.125919026Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T10:52:02.657157896Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T10:52:02.657157896Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T10:52:02.657157896Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T11:10:52.835476629Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T11:44:38.992624697Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-clients \t\tsubversion \t\tautoconf \t\tautomake \t\tbzip2-devel \t\tglib2-devel \t\tgcc \t\tgcc-c++ \t\tImageMagick \t\tImageMagick-devel \t\tkernel-devel \t\tlibcurl-devel \t\tlibevent-devel \t\tlibffi-devel \t\tlibjpeg-devel \t\tlibsqlite3x-devel \t\tlibxml2-devel \t\tlibxslt-devel \t\tlibyaml-devel \t\tmysql-devel \t\tmake \t\tncurses-devel \t\topenssl-devel \t\tpostgresql-devel \t\treadline-devel \t\tsqlite-devel \t\tzlib-devel \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T11:44:39.990821654Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T11:44:39.990821654Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T11:44:40.000073844Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T11:44:40.01005454Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T11:44:40.019402748Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T11:44:40.019402748Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T11:44:43.689339656Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T11:44:43.868535084Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T13:08:05.159475326Z",
                    "created_by": "LABEL io.balena.device-type=raspberrypi5",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T13:08:05.159475326Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T13:08:05.310763079Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:22de68abb450063be7e40efd22fd3b41bec469efafdd95e25c65998648e52b28",
                    "sha256:1a3ad77cbdd5f3702cdc33e853ab9cc8a4bce3da55a32efb4239959bb0066d2c",
                    "sha256:ea8f95f5ee1d9a415da767f8f70e84219a783234faedbe934f7073d313c2a329",
                    "sha256:9859ba47080992b582231890261ade8c1615c538267fb38ef5346a7dc2b9b28c",
                    "sha256:4d00d92f327d89e6a8e173c3756ae21408423470ec789b7f26433277cb4a4765",
                    "sha256:b15db2ec924b64fd8d760db1a34d1a7bf1ee73795d67229df34a932fa2462fce",
                    "sha256:f426d5ef2263d711158432d852d2fd7bbac8b2a130d414a43053e03ea7af15cc",
                    "sha256:7e257b2f172d14765138a78493e82b46dc74628b411d96599cf2d23254ad0931",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:7465c77da1867ca9eddcdddd673828c00680f5a8f2980663f3dc74004cfee96e",
                    "sha256:939e720c2de34adf3195b05f7a36a0046c35d53323ec9b2b77b0b0f581d0f436",
                    "sha256:aeff95cd6808adabefc1e51772074ec52a71f6a425be152a5dda2446f401c21a"
                ]
            }
        },
        "build-20231204": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "raspberrypi5",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2023-12-06T22:56:03.043931325Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:31.895761202Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-29T00:47:03.16713451Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:270e11b4c18af1c1efb8b8579be7fbda5255d56dd69f83ef7d933cfd2c685e5c in / "
                },
                {
                    "created": "2023-11-29T00:47:04.125919026Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T20:40:26.374589955Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T20:40:26.374589955Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T20:40:26.374589955Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T20:59:24.426343965Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T21:33:22.338987204Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-clients \t\tsubversion \t\tautoconf \t\tautomake \t\tbzip2-devel \t\tglib2-devel \t\tgcc \t\tgcc-c++ \t\tImageMagick \t\tImageMagick-devel \t\tkernel-devel \t\tlibcurl-devel \t\tlibevent-devel \t\tlibffi-devel \t\tlibjpeg-devel \t\tlibsqlite3x-devel \t\tlibxml2-devel \t\tlibxslt-devel \t\tlibyaml-devel \t\tmysql-devel \t\tmake \t\tncurses-devel \t\topenssl-devel \t\tpostgresql-devel \t\treadline-devel \t\tsqlite-devel \t\tzlib-devel \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T21:33:24.154561262Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T21:33:24.154561262Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T21:33:24.162768682Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T21:33:24.171000628Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T21:33:24.179542448Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T21:33:24.179542448Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T21:33:28.121782119Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T21:33:28.270944579Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T22:56:02.889996431Z",
                    "created_by": "LABEL io.balena.device-type=raspberrypi5",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T22:56:02.889996431Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T22:56:03.043931325Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:22de68abb450063be7e40efd22fd3b41bec469efafdd95e25c65998648e52b28",
                    "sha256:25274df56d5e2d3d66833b3c1612e29d23730e6cc6ec37a78ee71d4e85b76404",
                    "sha256:d04cc6ad4633afbe1d3e0b00b156a425046a32b30dac7662e12874b696c4cfef",
                    "sha256:43377beeefc0287b77d294288faa7109bb3ce0bc36e475dfbd1d0e36067efadb",
                    "sha256:fec686f840ea96c83b8309deabe344d2dad4f89944098fafba92079f3168bea0",
                    "sha256:8a1c26a8af1d218a1a631e9eed97294a2a87ace87904af0512704b5ba5f905a0",
                    "sha256:f0e217e2e36898bc78b63b7998c0d53052ce478f4a9e28eb3acaa57455c20e2f",
                    "sha256:168aa23d85e63ec5786a95750332d5f9e1806211b6e527d7644ac532221069f1",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:536faba4d9280af162caf34aaa2fbf324ea707d1b058d74696885ed191a6eafd",
                    "sha256:97a87d38c79dd086898572162eb050cd601e449bd0441c2ea2a50bd9025c1517",
                    "sha256:3c4d9f9acb24b5d0ac43f8e1e88c4d0e6140712960f95416f5912a74cb1c29cb"
                ]
            }
        },
        "build-20240205": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "raspberrypi5",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2024-02-05T02:47:24.263268341Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:31.895761202Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-29T00:47:03.16713451Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:270e11b4c18af1c1efb8b8579be7fbda5255d56dd69f83ef7d933cfd2c685e5c in / "
                },
                {
                    "created": "2023-11-29T00:47:04.125919026Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-05T00:26:13.859309536Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-05T00:26:13.859309536Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-05T00:26:13.859309536Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T00:45:10.8092517Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T01:18:49.392328016Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-clients \t\tsubversion \t\tautoconf \t\tautomake \t\tbzip2-devel \t\tglib2-devel \t\tgcc \t\tgcc-c++ \t\tImageMagick \t\tImageMagick-devel \t\tkernel-devel \t\tlibcurl-devel \t\tlibevent-devel \t\tlibffi-devel \t\tlibjpeg-devel \t\tlibsqlite3x-devel \t\tlibxml2-devel \t\tlibxslt-devel \t\tlibyaml-devel \t\tmysql-devel \t\tmake \t\tncurses-devel \t\topenssl-devel \t\tpostgresql-devel \t\treadline-devel \t\tsqlite-devel \t\tzlib-devel \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T01:18:50.514115933Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T01:18:50.514115933Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-05T01:18:50.523617988Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T01:18:50.557647649Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T01:18:50.568553425Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T01:18:50.568553425Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-05T01:18:54.352613602Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T01:18:54.484309683Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T02:47:24.147502881Z",
                    "created_by": "LABEL io.balena.device-type=raspberrypi5",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-05T02:47:24.147502881Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T02:47:24.263268341Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:22de68abb450063be7e40efd22fd3b41bec469efafdd95e25c65998648e52b28",
                    "sha256:9391b38776fe1a447956db381646ee109343bd22183a6c607d66c26dac722850",
                    "sha256:2ff3e8a40fae975f72250e96f2c01345768ef0a3dbcfbf6084bc542211223c04",
                    "sha256:38432aa17028b7bdb0c9d5c2b22fb4207811641298965ba6771cd989d6a19daa",
                    "sha256:3efdb146c34f8f1ff3c22b490e72b097196f8cf3a214dfc51628ba81f402eeb1",
                    "sha256:bf38ccf74068b318ec44fb671d7f71d3454fb8ab9304451042334e972b5fa0ec",
                    "sha256:50fbc93a18898e758d8a4426c13b8cdb844e98e4fe11dbc5e9409eb7f1466e43",
                    "sha256:21e4e77425952b2bdbb4f06e327bd295156461fc4fe3e31ed324ba59b04a3712",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:5f653a5aac8e7aec60e0930415cf5cfc3ee9a054c6b5996f3e8bcd9c24b11e54",
                    "sha256:b59f4e2498047775dd297317776553677e1605d59f5500f58949633510d86916",
                    "sha256:67476f7bb55e59ea57e471cd8af69e2dce530a51e3358d7ff9fc88102756aa31"
                ]
            }
        },
        "build-20240227": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "raspberrypi5",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2024-03-01T23:15:35.935052095Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:31.895761202Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-29T00:47:03.16713451Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:270e11b4c18af1c1efb8b8579be7fbda5255d56dd69f83ef7d933cfd2c685e5c in / "
                },
                {
                    "created": "2023-11-29T00:47:04.125919026Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T20:49:59.807334412Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T20:49:59.807334412Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T20:49:59.807334412Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:10:56.098365397Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:45:26.894768836Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-clients \t\tsubversion \t\tautoconf \t\tautomake \t\tbzip2-devel \t\tglib2-devel \t\tgcc \t\tgcc-c++ \t\tImageMagick \t\tImageMagick-devel \t\tkernel-devel \t\tlibcurl-devel \t\tlibevent-devel \t\tlibffi-devel \t\tlibjpeg-devel \t\tlibsqlite3x-devel \t\tlibxml2-devel \t\tlibxslt-devel \t\tlibyaml-devel \t\tmysql-devel \t\tmake \t\tncurses-devel \t\topenssl-devel \t\tpostgresql-devel \t\treadline-devel \t\tsqlite-devel \t\tzlib-devel \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:45:27.831671197Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:45:27.831671197Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T21:45:27.841017293Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:45:27.850413212Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:45:27.858829391Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:45:27.858829391Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T21:45:31.607983559Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:45:31.757692693Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T23:15:35.816479252Z",
                    "created_by": "LABEL io.balena.device-type=raspberrypi5",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T23:15:35.816479252Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T23:15:35.935052095Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:22de68abb450063be7e40efd22fd3b41bec469efafdd95e25c65998648e52b28",
                    "sha256:153f603c3b6b2529b45b12c9cb3de69de633d99488c4aac6cb5e04c6784e284c",
                    "sha256:fcda31efe0f90abdb3be0e2cc3050fddb745d7db41b962e3a08d908b3fe90c76",
                    "sha256:168e7cb2c07cd77fe30fd104d59f5ac49b7a43775f04c196367fa588f2159f11",
                    "sha256:3e98c7cf4c63c439e9045cd721cc19c243588d17804a57358309accf40b5249c",
                    "sha256:8aeb044849aef9a674a8ebde259f830df38faaa43b11f80b3bec5085ace3c264",
                    "sha256:691ea9dfdaf44533ac36d1341c6822b6735744922c3d5c304e657357f4babe33",
                    "sha256:072ee65b31efbe2110bc15922159f609d9d9c933715bc4429aeb7f4c5da9d425",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:bd215b090f3f370a73aa2871e3e123516169ed4db9f68a876a6be0d4a288d6d4",
                    "sha256:0295e4b5500da95845ba586d9b4dda33a96a9ed048edbd0037f39dfa7e0a0d8f",
                    "sha256:670f0d67f733810a4c9141187e6af3bfc29dee35a9757616a46cd08b2e630adc"
                ]
            }
        },
        "build-20240304": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "raspberrypi5",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2024-03-05T10:49:48.940549603Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:31.895761202Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-29T00:47:03.16713451Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:270e11b4c18af1c1efb8b8579be7fbda5255d56dd69f83ef7d933cfd2c685e5c in / "
                },
                {
                    "created": "2023-11-29T00:47:04.125919026Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T08:24:07.032483717Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T08:24:07.032483717Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T08:24:07.032483717Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T08:43:07.560394223Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T09:18:33.168342892Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-clients \t\tsubversion \t\tautoconf \t\tautomake \t\tbzip2-devel \t\tglib2-devel \t\tgcc \t\tgcc-c++ \t\tImageMagick \t\tImageMagick-devel \t\tkernel-devel \t\tlibcurl-devel \t\tlibevent-devel \t\tlibffi-devel \t\tlibjpeg-devel \t\tlibsqlite3x-devel \t\tlibxml2-devel \t\tlibxslt-devel \t\tlibyaml-devel \t\tmysql-devel \t\tmake \t\tncurses-devel \t\topenssl-devel \t\tpostgresql-devel \t\treadline-devel \t\tsqlite-devel \t\tzlib-devel \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T09:18:34.140220764Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T09:18:34.140220764Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T09:18:34.153622864Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T09:18:34.190278048Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T09:18:34.204411016Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T09:18:34.204411016Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T09:18:37.906466695Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T09:18:38.054385621Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T10:49:48.813104442Z",
                    "created_by": "LABEL io.balena.device-type=raspberrypi5",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T10:49:48.813104442Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T10:49:48.940549603Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:22de68abb450063be7e40efd22fd3b41bec469efafdd95e25c65998648e52b28",
                    "sha256:5b32c6607b8e7ea89ed5bb72a3578bb0d4723f5496d0a8e7dc688bf6a3a167d6",
                    "sha256:90da55fed465de8a873bf3e2bcdea7dca9a0be400a66dfa4c0efde5fa5ad1712",
                    "sha256:d5b90a049cc6b8b6a297f2e6f8a012847c545187714f13feb3004077215fe790",
                    "sha256:ac341c2760f8397f739500c811ea7bfc967bee43cae3b5bccbc3bc6263562d17",
                    "sha256:383c3fcfa865391817fdec807ce0f15866c08261ec20642c87fdde447997f846",
                    "sha256:d8c138867fdbf59da6040e42db8f659089ae32f509c4809cd61e7b817c68284d",
                    "sha256:59113e489ab1305fec7cc3fd646933122fb6f8dfeb9f3e8146b36687dd3f8ce0",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:3e090112138683d3816cd9299b41c91f8e2961f75a329ef3583c678904c6aa0c",
                    "sha256:6c82dde303f558bc49a46126a6aa066523092239f9e2829d3dc28c59a8f8d95f",
                    "sha256:6a7194d3cd0dfee732081c5cbe614a70c493752d797dc8146ecc7ca9b388c3d3"
                ]
            }
        },
        "build-20240401": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "raspberrypi5",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                }
            },
            "created": "2024-04-01T23:46:22.834424824Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:31.895761202Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-29T00:47:03.16713451Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:270e11b4c18af1c1efb8b8579be7fbda5255d56dd69f83ef7d933cfd2c685e5c in / "
                },
                {
                    "created": "2023-11-29T00:47:04.125919026Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T21:26:32.436538725Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T21:26:32.436538725Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T21:26:32.436538725Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T21:44:46.483219966Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T22:18:11.966182353Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-clients \t\tsubversion \t\tautoconf \t\tautomake \t\tbzip2-devel \t\tglib2-devel \t\tgcc \t\tgcc-c++ \t\tImageMagick \t\tImageMagick-devel \t\tkernel-devel \t\tlibcurl-devel \t\tlibevent-devel \t\tlibffi-devel \t\tlibjpeg-devel \t\tlibsqlite3x-devel \t\tlibxml2-devel \t\tlibxslt-devel \t\tlibyaml-devel \t\tmysql-devel \t\tmake \t\tncurses-devel \t\topenssl-devel \t\tpostgresql-devel \t\treadline-devel \t\tsqlite-devel \t\tzlib-devel \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T22:18:13.396726412Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T22:18:13.396726412Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T22:18:13.40948656Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T22:18:13.42436327Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T22:18:13.435538637Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T22:18:13.435538637Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T22:18:17.292242645Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T22:18:17.441252547Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T23:46:22.718527176Z",
                    "created_by": "LABEL io.balena.device-type=raspberrypi5",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T23:46:22.718527176Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T23:46:22.834424824Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:22de68abb450063be7e40efd22fd3b41bec469efafdd95e25c65998648e52b28",
                    "sha256:2bc63a4a3e163679c8a2399342b1daf3e005320d94db933ce217a0f80d1b4537",
                    "sha256:d75154443a45cab05ca4a85ddd827b962fedcff91b702d791e6ef9404f6c85d3",
                    "sha256:ed61218e50e513b23bae8d31f72e7c8e7a3d0090e48e2ff087a536ac362cfb81",
                    "sha256:23faadc341a4670f586fccbfa7d9b0c5a5e56be8ab46b55a4067df82e5569a5c",
                    "sha256:26696ab075f5bb87eee8a46b41f2091a3f9d7edb2116147001a7677757eaaca5",
                    "sha256:61d65d5da4322b148f9078fa00914c14291b0bdf48b073091e08240ed72a9f7c",
                    "sha256:879d60f10dea3318ceaedb2814160c1ae4cc919d4f04d2e62152d05c1ea7011a",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:0428822e1d59c6db13038f6502cd2c9a69bd7e2d2a033cb20fc19071849b112e",
                    "sha256:3c8f1509f3c7add36b43b389148cb9fe7868ecb33ac89281c10cea89cf2f85c0",
                    "sha256:b8c4910781ac9990d7b2091b55601b234403b8a2028a6fad85d5ce48189f7b37"
                ]
            }
        },
        "build-20240408": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "raspberrypi5",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                }
            },
            "created": "2024-04-09T20:00:09.747910783Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:31.895761202Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-29T00:47:03.16713451Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:270e11b4c18af1c1efb8b8579be7fbda5255d56dd69f83ef7d933cfd2c685e5c in / "
                },
                {
                    "created": "2023-11-29T00:47:04.125919026Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:50.964198867Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:50.964198867Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:50.964198867Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:54:06.695861539Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:30:31.267198079Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-clients \t\tsubversion \t\tautoconf \t\tautomake \t\tbzip2-devel \t\tglib2-devel \t\tgcc \t\tgcc-c++ \t\tImageMagick \t\tImageMagick-devel \t\tkernel-devel \t\tlibcurl-devel \t\tlibevent-devel \t\tlibffi-devel \t\tlibjpeg-devel \t\tlibsqlite3x-devel \t\tlibxml2-devel \t\tlibxslt-devel \t\tlibyaml-devel \t\tmysql-devel \t\tmake \t\tncurses-devel \t\topenssl-devel \t\tpostgresql-devel \t\treadline-devel \t\tsqlite-devel \t\tzlib-devel \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:30:32.683562935Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:30:32.683562935Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T14:30:32.694247574Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:30:32.719346978Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:30:32.730408486Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:30:32.730408486Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T14:30:36.547683782Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:30:36.691463904Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T20:00:09.635479315Z",
                    "created_by": "LABEL io.balena.device-type=raspberrypi5",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T20:00:09.635479315Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T20:00:09.747910783Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:22de68abb450063be7e40efd22fd3b41bec469efafdd95e25c65998648e52b28",
                    "sha256:3f054b5308bf8dbf3abb2dac1bc72fac6b6e9569c5d0c4d1733c57b40f98d68c",
                    "sha256:9a408e5130d5761269a2f78fe14c41bfad96906f19a9b6f231ba27a0e270536b",
                    "sha256:ce27ddfda0b79dba438fc400e0d24f635fec12b6b0b2e61ff692ddfb273b5fe9",
                    "sha256:251af411a33440438f0b2f94cdfb89f2f9ffdbc97319bda046932d48df33eb89",
                    "sha256:5482afbecbaab7a5c1e492cf2a2f03aafdc9012c4dc853b5b5c1ed9fde902db7",
                    "sha256:5d6da048fbb12c4062ff5b76617e555654e7b2043bfca3f0791046007fc79bb6",
                    "sha256:c6c5906dcd307ca53496f54734925e883c2e43f758510871473e5490706bf6a8",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:42adbbc0741061b3fa0e1fde61c20ae07301f416423df023d7264ef090febb62",
                    "sha256:551053d99240d13304d31a3b4871a3ef49b72d4699ff8731bbcab9e76f3f66e5",
                    "sha256:1b923f601eecb1bebcac374b13f2fa33bd5703d365f060934d22ed144db5adc1"
                ]
            }
        },
        "build-20240429": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "raspberrypi5",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                }
            },
            "created": "2024-05-06T10:39:05.745247919Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:31.895761202Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-29T00:47:03.16713451Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:270e11b4c18af1c1efb8b8579be7fbda5255d56dd69f83ef7d933cfd2c685e5c in / "
                },
                {
                    "created": "2023-11-29T00:47:04.125919026Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T09:28:43.57977131Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T09:28:43.57977131Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T09:28:43.57977131Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T09:47:19.941756159Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T10:20:57.000511545Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-clients \t\tsubversion \t\tautoconf \t\tautomake \t\tbzip2-devel \t\tglib2-devel \t\tgcc \t\tgcc-c++ \t\tImageMagick \t\tImageMagick-devel \t\tkernel-devel \t\tlibcurl-devel \t\tlibevent-devel \t\tlibffi-devel \t\tlibjpeg-devel \t\tlibsqlite3x-devel \t\tlibxml2-devel \t\tlibxslt-devel \t\tlibyaml-devel \t\tmysql-devel \t\tmake \t\tncurses-devel \t\topenssl-devel \t\tpostgresql-devel \t\treadline-devel \t\tsqlite-devel \t\tzlib-devel \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T10:20:58.118390256Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T10:20:58.118390256Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T10:20:58.12798187Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T10:20:58.136722317Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T10:20:58.164403522Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T10:20:58.164403522Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T10:21:01.984279759Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T10:21:02.133999332Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T10:39:05.631903588Z",
                    "created_by": "LABEL io.balena.device-type=raspberrypi5",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T10:39:05.631903588Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T10:39:05.745247919Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:22de68abb450063be7e40efd22fd3b41bec469efafdd95e25c65998648e52b28",
                    "sha256:40252cde73a60fe319f0dc295c7b1e421631974cfbe16656b81f7c86e773254e",
                    "sha256:4a4de46c8a70d5743384977bb42ebacdec5e3cb5490677a398f1d36366084aab",
                    "sha256:1523c4d5a73b8f8409b03635be1be78f6592c3915fd459908ffe5c04fb7ca684",
                    "sha256:3165ae98a25560d143d61c6f8a3cc9b4f73d0c009bfd9de33cefc4747c481229",
                    "sha256:802383c11ce70505808614d078d961ddc3cfaf46a58ac795624520a44e2a7860",
                    "sha256:0590d31cf7630143e0d0e5677bb4407b0d1c0b49a56ef3a87a860603dcea1282",
                    "sha256:6f5ffd7cbb1f8862606014326bb38c35022c8eb43d2a0aff0af32878db49dbdc",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:8c0b4113e6a87b2271a715a924b205a5c9534f5b51c4f3d05b39a48bb6ad75be",
                    "sha256:dfe8b7206657f70248c3af557761da865df3d0ccf1a3d5c0483af6659a3f7679",
                    "sha256:a41538cee7e19fc56d8b85adabf2df104f7856ddaa10d8d87900dcb7e8e56df8"
                ]
            }
        },
        "latest": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "raspberrypi5",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                }
            },
            "created": "2024-05-06T10:38:45.538160132Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:31.895761202Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-29T00:47:03.16713451Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:270e11b4c18af1c1efb8b8579be7fbda5255d56dd69f83ef7d933cfd2c685e5c in / "
                },
                {
                    "created": "2023-11-29T00:47:04.125919026Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T09:28:47.993183335Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T09:28:47.993183335Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T09:28:47.993183335Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T09:47:56.501476974Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T09:47:57.631980985Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T09:47:57.631980985Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T09:47:57.644124262Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T09:47:57.678847981Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T09:47:57.688494096Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T09:47:57.688494096Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T09:48:01.526529414Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T09:48:01.665893428Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T10:38:45.395029597Z",
                    "created_by": "LABEL io.balena.device-type=raspberrypi5",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T10:38:45.395029597Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T10:38:45.538160132Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:22de68abb450063be7e40efd22fd3b41bec469efafdd95e25c65998648e52b28",
                    "sha256:ef64ad49ccf58709af070779ae49d014558d78a8b6a21fcc279c09ddac79e6c9",
                    "sha256:486e799e950e2b998ed0a1a7221aed44130002259c2b437524c7a8a72b725a56",
                    "sha256:5ad52f9d14deab1b2c3a79dfb68bf730440e209f5926a2cd2ebd561c519a08de",
                    "sha256:73001e4334a2e5a98b50faf87e712eaf851af09ac903e83a569150844ce9eda1",
                    "sha256:696c197b14bb7731bf0a36bbdc5e5272937b693f192b143e02dac747a1305ba1",
                    "sha256:f27b4f97c199fdc59cc49eb91fc7a348daf160285ca6bfce88ede5b64e4bb0a9",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:22341517b8222bb5810db07c816fbd0de10749523856c0263caf14789e77d27d",
                    "sha256:814378e6a74f147b97de86dbedb021279d972677e845a91c72091b86b4dcd6d5",
                    "sha256:07672fdc7d8d9779da09498cf20a8b017e6d3ee8d7e8b681424c91d8c94d3f67"
                ]
            }
        },
        "latest-20230929": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "raspberrypi5",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2023-10-04T23:25:26.883353446Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:31.895761202Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-04T18:40:58.001277299Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:614dff70ca4206841645edfd3dab48901efeefccc8ef99772f475ee9bac861ff in / "
                },
                {
                    "created": "2023-08-04T18:40:59.951513662Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T05:16:42.403188583Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T05:16:42.403188583Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T05:16:42.403188583Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T05:41:14.882541843Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T05:41:16.309377049Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T05:41:16.309377049Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T05:41:16.340188202Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T05:41:16.351150734Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T05:41:16.360211026Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T05:41:16.360211026Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T05:41:21.389664273Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T05:41:21.747711571Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-04T23:25:26.738925718Z",
                    "created_by": "LABEL io.balena.device-type=raspberrypi5",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-04T23:25:26.738925718Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-04T23:25:26.883353446Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:cf819d1f191d71ce750fc0b9ca71726d50fc052d7c695682165a84c2bd1eb716",
                    "sha256:2c61372b1614282bfdb58c104252b37a61be492de5c3298dffc56376adfe0a8f",
                    "sha256:3892fad87609c0724cb700c7b327865d8b642316f214825299540678c84e007b",
                    "sha256:47b1691c56a15153e34460e97d0615abbde7eb4128cffd187b3c4507be55c4a0",
                    "sha256:526255e20ebb75f4e4a9cd0b179342ccc59ea09dfb95f916aad1dfd38903c411",
                    "sha256:10a91abc01c07dd01c837dc1a35597c3030ffee89a81f6dcc760a204a2da9e5a",
                    "sha256:fb61a502b5a7e114c0e1b65ffbf1f5d42041b65c52f9ecb41e2fb9a1cdcdbd97",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:cc06c053add61653ccca8a1d621c01df905dfb240d202ad2f7452d1777852952",
                    "sha256:d4eb19f941ac91799d9d6198e4fe925d23b49332e47400690cf7b3c2d9295b5d",
                    "sha256:59e1a00a1db05f912e0325907ea2f23a8be8f071617bd4b6a6101c339749e0fb"
                ]
            }
        },
        "latest-20231103": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "raspberrypi5",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2023-11-04T17:03:19.763869192Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:31.895761202Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-06T18:42:53.905315575Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:a506790441a5cd056fb456111da480939a46667d520b519dcb9b2e2aa16aae70 in / "
                },
                {
                    "created": "2023-10-06T18:42:54.852939758Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-04T14:05:43.22598589Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-04T14:05:43.22598589Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-04T14:05:43.22598589Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T14:34:18.977818495Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T14:34:20.236374739Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T14:34:20.236374739Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-04T14:34:20.246502673Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T14:34:20.255833503Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T14:34:20.26399513Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T14:34:20.26399513Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-04T14:34:25.601224907Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T14:34:25.783838009Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T17:03:19.593865165Z",
                    "created_by": "LABEL io.balena.device-type=raspberrypi5",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-04T17:03:19.593865165Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T17:03:19.763869192Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:a37bac7c99baeb556998a67a51775b34aa6df7829fa1ff19323033c5e19837b3",
                    "sha256:768fbcc1112a55954ab49021af3e5b3e77d06892f0018801cb6a68567a441e44",
                    "sha256:b339e6005ff8696452b8a5daf08c04afc137c0da129e399cf294d19b6213af01",
                    "sha256:80e7fcb77b05762cb4af7a336c31edd97b255eb9c5e68b5e2d99fcd0c0941c00",
                    "sha256:faa025149da6c8af6245b9feb2dfa133869871b24b83291212a581a8ac861951",
                    "sha256:85fb00c475997eaa7bf88fdc4a78bd8ad8ecfcafaa4870eb4c2e610747381ba2",
                    "sha256:707dbcf7ea87fd75e1d03a7f275e36d8fcfc1b4ea1f3c867ab6830318bf147e9",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:2509d1d7a240f88f51a41393363e38c35b81e3edf67fa356b59390c21617a3ab",
                    "sha256:171429e7f6504ee1e18052a76bfe8bba842c7c6431ef9aace42dec71ec4b4f87",
                    "sha256:2f738c2c60a7541836ab6cba290bbf92fadc59c7087650523f34270dfd060022"
                ]
            }
        },
        "latest-20231106": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "raspberrypi5",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2023-11-06T12:34:47.835870966Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:31.895761202Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-06T18:42:53.905315575Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:a506790441a5cd056fb456111da480939a46667d520b519dcb9b2e2aa16aae70 in / "
                },
                {
                    "created": "2023-10-06T18:42:54.852939758Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T09:12:27.261337628Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T09:12:27.261337628Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T09:12:27.261337628Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T09:44:07.194449485Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T09:44:08.356242913Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T09:44:08.356242913Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T09:44:08.370923209Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T09:44:08.383861082Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T09:44:08.401598819Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T09:44:08.401598819Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T09:44:14.097449997Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T09:44:14.33458648Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T12:34:47.673440252Z",
                    "created_by": "LABEL io.balena.device-type=raspberrypi5",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T12:34:47.673440252Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T12:34:47.835870966Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:a37bac7c99baeb556998a67a51775b34aa6df7829fa1ff19323033c5e19837b3",
                    "sha256:bb42b2b57488a97c34e8f0aa9c9a04b6b5ddc51428a7f869c902e262985533fa",
                    "sha256:f41e2d07027059a658a46da06111805a1c38c357d7a263b65a57906a413afcb8",
                    "sha256:6dfd1348c7cf846716582db5414652bd266c84c3ceb084217d2c1faaa43610bd",
                    "sha256:1ef3bd9e556e1fe5e94ee5fc778405d0e160b3b2f911f7b73b841e3f2947d4ec",
                    "sha256:b00ab734246e3ab0a163af225efd04d30fbb893167c4883967444d8739b0a28b",
                    "sha256:505040d84b751f1b80aad25e47e2b5770da95393e303943d0e90452bb789625d",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:3de7d77508b1af83bfd44b6a7776ab5e9c687ecfe948f5f9d8f15802beed22b0",
                    "sha256:472ace270ccea41c14f9933f0ae960d9532fe6435435172037ed71643d1a40fe",
                    "sha256:b852d3e7cabdbb835dd738b4c9527990b0b1ff959e4bf050462c494b30c51dc0"
                ]
            }
        },
        "latest-20231127": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "raspberrypi5",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2023-12-01T13:07:49.854569597Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:31.895761202Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-29T00:47:03.16713451Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:270e11b4c18af1c1efb8b8579be7fbda5255d56dd69f83ef7d933cfd2c685e5c in / "
                },
                {
                    "created": "2023-11-29T00:47:04.125919026Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T10:52:09.172740458Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T10:52:09.172740458Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T10:52:09.172740458Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T11:10:46.008255947Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T11:10:47.111959762Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T11:10:47.111959762Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T11:10:47.123059062Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T11:10:47.148503741Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T11:10:47.157133896Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T11:10:47.157133896Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T11:10:50.883923644Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T11:10:51.046020579Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T13:07:49.720770039Z",
                    "created_by": "LABEL io.balena.device-type=raspberrypi5",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T13:07:49.720770039Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T13:07:49.854569597Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:22de68abb450063be7e40efd22fd3b41bec469efafdd95e25c65998648e52b28",
                    "sha256:60f2f571d3fb1d1d2155d703033185efdcb8fd06f11360aff3752c6009ddbba5",
                    "sha256:8bb3ecdba476409248d260241fff01266e4176e947fe811a5efe5456870e671e",
                    "sha256:6852dc1f1a771f4a7632382350c1dbaa2ae3e16802b4884d04618e03763e8376",
                    "sha256:9db2458df0d1ffca59509d5dbd49436ef952483f1042d53531ca90ba7d6de9e9",
                    "sha256:8d401a597be69855ebfaf84921f07b57da8bb7a5c49c370999b998f6062358a2",
                    "sha256:05f9f870334e6de793d303f103d1f1b35f7df1ff21724f7ebaeb6fc561bccc2c",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:24546f46791bf568236132bceae1cdf41c9ca9f6d3e09077cab2bc32ee6bb76c",
                    "sha256:24ce1f5be0535d16b93594731aca9f7680b480d54b2a5820055e1580b872afe6",
                    "sha256:2b6dc1653ae6cb200b6663e6156cbdd3bdc518b03fac893f19869e9e8855682c"
                ]
            }
        },
        "latest-20231204": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "raspberrypi5",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2023-12-06T22:55:22.373508696Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:31.895761202Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-29T00:47:03.16713451Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:270e11b4c18af1c1efb8b8579be7fbda5255d56dd69f83ef7d933cfd2c685e5c in / "
                },
                {
                    "created": "2023-11-29T00:47:04.125919026Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T20:40:21.575448793Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T20:40:21.575448793Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T20:40:21.575448793Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T20:59:06.4416038Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T20:59:07.14149679Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T20:59:07.14149679Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T20:59:07.150718208Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T20:59:07.159290685Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T20:59:07.187587582Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T20:59:07.187587582Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T20:59:10.850419463Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T20:59:11.010511508Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T22:55:22.243882328Z",
                    "created_by": "LABEL io.balena.device-type=raspberrypi5",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T22:55:22.243882328Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T22:55:22.373508696Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:22de68abb450063be7e40efd22fd3b41bec469efafdd95e25c65998648e52b28",
                    "sha256:2c6b0df21f9efd51a24a59463b9265452ccc9cf8a26908c50d2742c0e67683bd",
                    "sha256:906012c4f278d0d6c4a614afd4c812fc55bc367d28aac2c10cbdd33ac6ec80b8",
                    "sha256:34fc306b51c5f84676518d54cf67a097f48bfc8e79fb8c0ffc71ed9b2d1b5def",
                    "sha256:aa005d370b40094b326443ce4f1b6d04a780598588bd8f8fa1dc601171d59314",
                    "sha256:e580b4505982459166845d47c3159777541e000c8826a05635c6f84f62f03011",
                    "sha256:79990d4ff119d7188fd5fdcaaa04c391747be11fefbbe682a6a2c495c8ca3a6b",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:0aff9ccfdfd88ab9194d2d15e49264900a8942406276260bf5fb479d637d2075",
                    "sha256:6d3c0215ae8da55215b0e456b5d4b89a26cb450350fe5507c5eaf7bd88c8e132",
                    "sha256:e29791cd9f4ed15e18ea8be26b30c0de9a5af5048774d06e28ebf84d9800b573"
                ]
            }
        },
        "latest-20240227": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "raspberrypi5",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2024-03-01T23:15:37.22340042Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:31.895761202Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-29T00:47:03.16713451Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:270e11b4c18af1c1efb8b8579be7fbda5255d56dd69f83ef7d933cfd2c685e5c in / "
                },
                {
                    "created": "2023-11-29T00:47:04.125919026Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T20:49:58.705358685Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T20:49:58.705358685Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T20:49:58.705358685Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:08:24.834287933Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:08:25.565567755Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:08:25.565567755Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T21:08:25.579271093Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:08:25.617204263Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:08:25.629384601Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:08:25.629384601Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T21:08:29.321790107Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:08:29.46619614Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T23:15:37.108481029Z",
                    "created_by": "LABEL io.balena.device-type=raspberrypi5",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T23:15:37.108481029Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T23:15:37.22340042Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:22de68abb450063be7e40efd22fd3b41bec469efafdd95e25c65998648e52b28",
                    "sha256:bfe341409759f9ccd364ecb2d335246560d19282f3ecf321c53836e101a82d2a",
                    "sha256:22279a1bcbb3b6a49c8d9ada414e0b58c5c83f35e20c9a33acc65e0aedb733a1",
                    "sha256:59b3dbe842a8cbc03ed09e65a15a87e8c46f6653b87eb93c5b37d8ab77060acf",
                    "sha256:2ad87538d509ffa4457cec4d29a36d570c8392257dab445452209d4097b7bf52",
                    "sha256:4b3f303bc53eefd36ad3db9ee937836bf0e5855a96ec2546c67cb8238fa8c5bc",
                    "sha256:27f44cee2cfb128916d178e2e1dd253065b766fcffe0f37cdb2588702c65bd5f",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:7f5845d6da8e4b02efd4b375c5222854a386a7b02c491fe3b96307345b96014d",
                    "sha256:aa61cf5f3f2942560cb632dd38548d7fd159cf0a4b737535c92836aa99ca1f52",
                    "sha256:9bd02f5806da6e3ef9c204b8c1b4ff3a20f9a32e3329966bb482123a9c47dee3"
                ]
            }
        },
        "latest-20240304": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "raspberrypi5",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2024-03-05T10:50:26.53777156Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:31.895761202Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-29T00:47:03.16713451Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:270e11b4c18af1c1efb8b8579be7fbda5255d56dd69f83ef7d933cfd2c685e5c in / "
                },
                {
                    "created": "2023-11-29T00:47:04.125919026Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T08:24:13.360409226Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T08:24:13.360409226Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T08:24:13.360409226Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T08:43:22.770169859Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T08:43:23.650621519Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T08:43:23.650621519Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T08:43:23.66033272Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T08:43:23.670216283Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T08:43:23.695421657Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T08:43:23.695421657Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T08:43:27.455502812Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T08:43:27.593974423Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T10:50:26.413272107Z",
                    "created_by": "LABEL io.balena.device-type=raspberrypi5",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T10:50:26.413272107Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T10:50:26.53777156Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:22de68abb450063be7e40efd22fd3b41bec469efafdd95e25c65998648e52b28",
                    "sha256:28463901e499aa0a1515b57d0fbafa9cb9a2cc02cc10ed1687c180941c557184",
                    "sha256:0ca6f2444de4ad55ab4af4fd74364d376cec4fab74ebda60cba78c9fa2d7e649",
                    "sha256:cfc10fd96b96916769b790f45b5a4f0a1a17202f2532d659330de963d4494ebf",
                    "sha256:d2c34fbda1de7685d96923948d480fbe0ebab10b9087bfebda73744dbe2a6f9a",
                    "sha256:0d88f38f1e25f8d79cc6f17c26de206e21378fdd492c88062ab3e718003d32df",
                    "sha256:01e1144fabf916d9df9dbc69c087247ccbb1e57b391ed28f7dac24153a50d7b2",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:7ad9ead66349340e94a99303f594e85c786a6fabee7368153801d079722794bc",
                    "sha256:277971ea1ea290467dd51b95c3577111463f5dc7077258efb29b337ec37f92ca",
                    "sha256:c50f7b67b899b950301dce6815e76581bd6eadf166ce724064342aafc78db096"
                ]
            }
        },
        "latest-20240401": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "raspberrypi5",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                }
            },
            "created": "2024-04-01T23:46:43.192266903Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:31.895761202Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-29T00:47:03.16713451Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:270e11b4c18af1c1efb8b8579be7fbda5255d56dd69f83ef7d933cfd2c685e5c in / "
                },
                {
                    "created": "2023-11-29T00:47:04.125919026Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T21:26:29.343455526Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T21:26:29.343455526Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T21:26:29.343455526Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T21:45:10.957762154Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T21:45:11.852141047Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T21:45:11.852141047Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T21:45:11.862471903Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T21:45:11.872331413Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T21:45:11.898584749Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T21:45:11.898584749Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T21:45:15.686171825Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T21:45:15.820771715Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T23:46:43.076294289Z",
                    "created_by": "LABEL io.balena.device-type=raspberrypi5",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T23:46:43.076294289Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T23:46:43.192266903Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:22de68abb450063be7e40efd22fd3b41bec469efafdd95e25c65998648e52b28",
                    "sha256:3a6d39f67382783e2c69d9a448aa59d1d7654260210364d05c2cae2ef469e3c8",
                    "sha256:8b316e0949cd1905304ca774963ddae530565f690a65de9db1a2dafa9aed0363",
                    "sha256:7fa4949a4c79caf7d749cc4abcbc241a5dd3a5c8d0155458cf6d4d83ac483646",
                    "sha256:0a0eea417236fa5be4e06c1d20766fd9f3b0e064419a66f356dea0f1f6d794df",
                    "sha256:ad31ce618fd1f26b74bc2900fbd27319ed86917e85375f90b57d28b291156d51",
                    "sha256:7b8582873ef4cde2aca83ece090a3993ca7c4f8fe0b13c3b0b064f08c7b21c21",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:8050b5f7d3d161f91b3bad0576691d8640130b32c0b8f23db87cdd4fee47c82e",
                    "sha256:31ab2d2b151011b640236ef0b2d0b2cf3b5928aff282a614c0affce35da9ea37",
                    "sha256:b6d8f2a786c666058d591d1a9eae9808f450684bad88d50400cbbadcda61a90c"
                ]
            }
        },
        "latest-20240408": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "raspberrypi5",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                }
            },
            "created": "2024-04-09T20:00:01.596559907Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:31.895761202Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-29T00:47:03.16713451Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:270e11b4c18af1c1efb8b8579be7fbda5255d56dd69f83ef7d933cfd2c685e5c in / "
                },
                {
                    "created": "2023-11-29T00:47:04.125919026Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:52.915602222Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:52.915602222Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:52.915602222Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:54:04.100191166Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:54:04.963844501Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:54:04.963844501Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:54:04.973366628Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:54:05.001513857Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:54:05.024710968Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:54:05.024710968Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:54:08.797015979Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:54:08.943058393Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T20:00:01.48497321Z",
                    "created_by": "LABEL io.balena.device-type=raspberrypi5",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T20:00:01.48497321Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T20:00:01.596559907Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:22de68abb450063be7e40efd22fd3b41bec469efafdd95e25c65998648e52b28",
                    "sha256:03dd9a4ed991dc43e9a504ad71941782bb6fd4cd57f8ade649bbe25b622e3902",
                    "sha256:d24e8e6aec171dc7068d2c19b85d8c6341381b2f0cf4e1d1a20d5419f2d1ec53",
                    "sha256:e743a07ebcce27b755341d992eb4148fe86bd04481c6d8f2b6fe7364a942af19",
                    "sha256:1c988fbb0bdd3374b1f72bebc1953bd62853c7e33608dbc885ff64eba44dc1eb",
                    "sha256:7fad6968fdbdd1afee5f76e3b2f3df1829677bc85be4fa920cb57db14562699c",
                    "sha256:2999088cf700c485af0973e03dd5e2ff9d96b3f604f5908307f3edb5377c6d58",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:a75c43802eb36b20a7183fe5c30e33ef495a904237a7483d5c73c1df1691887b",
                    "sha256:5317fa65bc7c35c38c442c90f849cc95fc28d4aa5eb818b916e1a8116119211a",
                    "sha256:01008a19db5ef632d2ed55d56cefe9f631cc0c1484a447ea200434f527fe9280"
                ]
            }
        },
        "latest-20240429": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "raspberrypi5",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                }
            },
            "created": "2024-05-06T10:38:45.538160132Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:31.895761202Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-29T00:47:03.16713451Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:270e11b4c18af1c1efb8b8579be7fbda5255d56dd69f83ef7d933cfd2c685e5c in / "
                },
                {
                    "created": "2023-11-29T00:47:04.125919026Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T09:28:47.993183335Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T09:28:47.993183335Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T09:28:47.993183335Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T09:47:56.501476974Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T09:47:57.631980985Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T09:47:57.631980985Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T09:47:57.644124262Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T09:47:57.678847981Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T09:47:57.688494096Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T09:47:57.688494096Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T09:48:01.526529414Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T09:48:01.665893428Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T10:38:45.395029597Z",
                    "created_by": "LABEL io.balena.device-type=raspberrypi5",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T10:38:45.395029597Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T10:38:45.538160132Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:22de68abb450063be7e40efd22fd3b41bec469efafdd95e25c65998648e52b28",
                    "sha256:ef64ad49ccf58709af070779ae49d014558d78a8b6a21fcc279c09ddac79e6c9",
                    "sha256:486e799e950e2b998ed0a1a7221aed44130002259c2b437524c7a8a72b725a56",
                    "sha256:5ad52f9d14deab1b2c3a79dfb68bf730440e209f5926a2cd2ebd561c519a08de",
                    "sha256:73001e4334a2e5a98b50faf87e712eaf851af09ac903e83a569150844ce9eda1",
                    "sha256:696c197b14bb7731bf0a36bbdc5e5272937b693f192b143e02dac747a1305ba1",
                    "sha256:f27b4f97c199fdc59cc49eb91fc7a348daf160285ca6bfce88ede5b64e4bb0a9",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:22341517b8222bb5810db07c816fbd0de10749523856c0263caf14789e77d27d",
                    "sha256:814378e6a74f147b97de86dbedb021279d972677e845a91c72091b86b4dcd6d5",
                    "sha256:07672fdc7d8d9779da09498cf20a8b017e6d3ee8d7e8b681424c91d8c94d3f67"
                ]
            }
        },
        "latest-build": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "raspberrypi5",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                }
            },
            "created": "2024-05-06T10:39:05.745247919Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:31.895761202Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-29T00:47:03.16713451Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:270e11b4c18af1c1efb8b8579be7fbda5255d56dd69f83ef7d933cfd2c685e5c in / "
                },
                {
                    "created": "2023-11-29T00:47:04.125919026Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T09:28:43.57977131Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T09:28:43.57977131Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T09:28:43.57977131Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T09:47:19.941756159Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T10:20:57.000511545Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-clients \t\tsubversion \t\tautoconf \t\tautomake \t\tbzip2-devel \t\tglib2-devel \t\tgcc \t\tgcc-c++ \t\tImageMagick \t\tImageMagick-devel \t\tkernel-devel \t\tlibcurl-devel \t\tlibevent-devel \t\tlibffi-devel \t\tlibjpeg-devel \t\tlibsqlite3x-devel \t\tlibxml2-devel \t\tlibxslt-devel \t\tlibyaml-devel \t\tmysql-devel \t\tmake \t\tncurses-devel \t\topenssl-devel \t\tpostgresql-devel \t\treadline-devel \t\tsqlite-devel \t\tzlib-devel \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T10:20:58.118390256Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T10:20:58.118390256Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T10:20:58.12798187Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T10:20:58.136722317Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T10:20:58.164403522Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T10:20:58.164403522Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T10:21:01.984279759Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T10:21:02.133999332Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T10:39:05.631903588Z",
                    "created_by": "LABEL io.balena.device-type=raspberrypi5",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T10:39:05.631903588Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T10:39:05.745247919Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:22de68abb450063be7e40efd22fd3b41bec469efafdd95e25c65998648e52b28",
                    "sha256:40252cde73a60fe319f0dc295c7b1e421631974cfbe16656b81f7c86e773254e",
                    "sha256:4a4de46c8a70d5743384977bb42ebacdec5e3cb5490677a398f1d36366084aab",
                    "sha256:1523c4d5a73b8f8409b03635be1be78f6592c3915fd459908ffe5c04fb7ca684",
                    "sha256:3165ae98a25560d143d61c6f8a3cc9b4f73d0c009bfd9de33cefc4747c481229",
                    "sha256:802383c11ce70505808614d078d961ddc3cfaf46a58ac795624520a44e2a7860",
                    "sha256:0590d31cf7630143e0d0e5677bb4407b0d1c0b49a56ef3a87a860603dcea1282",
                    "sha256:6f5ffd7cbb1f8862606014326bb38c35022c8eb43d2a0aff0af32878db49dbdc",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:8c0b4113e6a87b2271a715a924b205a5c9534f5b51c4f3d05b39a48bb6ad75be",
                    "sha256:dfe8b7206657f70248c3af557761da865df3d0ccf1a3d5c0483af6659a3f7679",
                    "sha256:a41538cee7e19fc56d8b85adabf2df104f7856ddaa10d8d87900dcb7e8e56df8"
                ]
            }
        },
        "latest-build-20230929": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "raspberrypi5",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2023-10-04T23:26:29.321215037Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:31.895761202Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-04T18:40:58.001277299Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:614dff70ca4206841645edfd3dab48901efeefccc8ef99772f475ee9bac861ff in / "
                },
                {
                    "created": "2023-08-04T18:40:59.951513662Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T05:16:42.403188583Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T05:16:42.403188583Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T05:16:42.403188583Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T05:41:14.882541843Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T06:27:10.219323725Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-clients \t\tsubversion \t\tautoconf \t\tautomake \t\tbzip2-devel \t\tglib2-devel \t\tgcc \t\tgcc-c++ \t\tImageMagick \t\tImageMagick-devel \t\tkernel-devel \t\tlibcurl-devel \t\tlibevent-devel \t\tlibffi-devel \t\tlibjpeg-devel \t\tlibsqlite3x-devel \t\tlibxml2-devel \t\tlibxslt-devel \t\tlibyaml-devel \t\tmysql-devel \t\tmake \t\tncurses-devel \t\topenssl-devel \t\tpostgresql-devel \t\treadline-devel \t\tsqlite-devel \t\tzlib-devel \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T06:27:11.639619237Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T06:27:11.639619237Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T06:27:11.672307839Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T06:27:11.703609828Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T06:27:11.752254777Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T06:27:11.752254777Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T06:27:16.692189405Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T06:27:17.113557601Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-04T23:26:29.150520161Z",
                    "created_by": "LABEL io.balena.device-type=raspberrypi5",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-04T23:26:29.150520161Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-04T23:26:29.321215037Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:cf819d1f191d71ce750fc0b9ca71726d50fc052d7c695682165a84c2bd1eb716",
                    "sha256:2c61372b1614282bfdb58c104252b37a61be492de5c3298dffc56376adfe0a8f",
                    "sha256:3892fad87609c0724cb700c7b327865d8b642316f214825299540678c84e007b",
                    "sha256:0f4a521d2c6cf8cad7b2eb4df330989890e4ec58bcdb8c8d3f1e7b953bbbd9cf",
                    "sha256:8d6c3fbf20d052b4dfc381066e982bdd6112441240ae7ffbc2e5e89595e79a0c",
                    "sha256:561d71383dd66b871476f9e5ff3274483fb9574952685d747d4e55904f1ee3fb",
                    "sha256:b19528952c8ac1375dbbc0465be58dc121fb846ce4e1e89645c716509faaf601",
                    "sha256:c8b95dba26be42e442fdec1f2fd5073216020274f421a0e7cf5b4abe1599f822",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:bf40c484f55f8935bf800843234fd2cadb1c9404047d95d9143e806f44edeae5",
                    "sha256:0b0b11cb509069dc3e0bbad4298bd363fc0e8f73d27fe05a251e505ae55a83d1",
                    "sha256:7c58687f9b5454d4f5308a81a9ba79092803e3ed23a3854aaf238e5d75e4ab16"
                ]
            }
        },
        "latest-build-20231103": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "raspberrypi5",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2023-11-04T16:59:29.98236115Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:31.895761202Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-06T18:42:53.905315575Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:a506790441a5cd056fb456111da480939a46667d520b519dcb9b2e2aa16aae70 in / "
                },
                {
                    "created": "2023-10-06T18:42:54.852939758Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-04T14:05:46.127555575Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-04T14:05:46.127555575Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-04T14:05:46.127555575Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T14:32:34.985281581Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T15:17:05.03121789Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-clients \t\tsubversion \t\tautoconf \t\tautomake \t\tbzip2-devel \t\tglib2-devel \t\tgcc \t\tgcc-c++ \t\tImageMagick \t\tImageMagick-devel \t\tkernel-devel \t\tlibcurl-devel \t\tlibevent-devel \t\tlibffi-devel \t\tlibjpeg-devel \t\tlibsqlite3x-devel \t\tlibxml2-devel \t\tlibxslt-devel \t\tlibyaml-devel \t\tmysql-devel \t\tmake \t\tncurses-devel \t\topenssl-devel \t\tpostgresql-devel \t\treadline-devel \t\tsqlite-devel \t\tzlib-devel \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T15:17:06.534956571Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T15:17:06.534956571Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-04T15:17:06.547775032Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T15:17:06.562169912Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T15:17:06.584452792Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T15:17:06.584452792Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-04T15:17:11.437649746Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T15:17:11.624485751Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T16:59:29.837917707Z",
                    "created_by": "LABEL io.balena.device-type=raspberrypi5",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-04T16:59:29.837917707Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T16:59:29.98236115Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:a37bac7c99baeb556998a67a51775b34aa6df7829fa1ff19323033c5e19837b3",
                    "sha256:b803e34ece3fff5f3d20cfa0d3e1cf3d2f8eeb660544fa7d9d823be8aaca720f",
                    "sha256:6cd425edf3bbba0627f88702e763514480d7cc186cdcf9fba97078a67b67ff15",
                    "sha256:3b47068608b1d7e0db2398b9a01f8b7334b03f0b6e860606846319db5bca3e6d",
                    "sha256:cd9302fb8f7c40436d216b427838f33470983f6d503ff317690d5147f2ac7af4",
                    "sha256:3ee1780fbb8bd15cb0d9c1f09542dd9bfd3ad0b2b19f329060fb3864d9f08437",
                    "sha256:818589d5e5232c469d55d13e3c611a19ae9fbd09e1eab7d8d5a5cbc2d7a5364a",
                    "sha256:12e7cf1e010caa525ada8d183482cca1144de22e3bdeb8c3f63e13d7f4d27c83",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:24e8fe7f4ce600f415f5a229e1303c9bab9afc61a2cb00bfe838cf9af0b10c57",
                    "sha256:923dcc0bcf37a34781267da6a51a1c70dec7909f17cd41e9257aab971f8e1326",
                    "sha256:660cd340f23568f560e7687cef68bb4acb41438e6f93dec12e671181deff0993"
                ]
            }
        },
        "latest-build-20231106": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "raspberrypi5",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2023-11-06T12:32:29.711635984Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:31.895761202Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-06T18:42:53.905315575Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:a506790441a5cd056fb456111da480939a46667d520b519dcb9b2e2aa16aae70 in / "
                },
                {
                    "created": "2023-10-06T18:42:54.852939758Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T09:12:33.793766866Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T09:12:33.793766866Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T09:12:33.793766866Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T09:41:28.803094869Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T10:28:03.430768422Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-clients \t\tsubversion \t\tautoconf \t\tautomake \t\tbzip2-devel \t\tglib2-devel \t\tgcc \t\tgcc-c++ \t\tImageMagick \t\tImageMagick-devel \t\tkernel-devel \t\tlibcurl-devel \t\tlibevent-devel \t\tlibffi-devel \t\tlibjpeg-devel \t\tlibsqlite3x-devel \t\tlibxml2-devel \t\tlibxslt-devel \t\tlibyaml-devel \t\tmysql-devel \t\tmake \t\tncurses-devel \t\topenssl-devel \t\tpostgresql-devel \t\treadline-devel \t\tsqlite-devel \t\tzlib-devel \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T10:28:04.971243325Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T10:28:04.971243325Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T10:28:04.981842152Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T10:28:04.990882375Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T10:28:04.999524597Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T10:28:04.999524597Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T10:28:10.325096726Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T10:28:10.509330565Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T12:32:29.54634105Z",
                    "created_by": "LABEL io.balena.device-type=raspberrypi5",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T12:32:29.54634105Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T12:32:29.711635984Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:a37bac7c99baeb556998a67a51775b34aa6df7829fa1ff19323033c5e19837b3",
                    "sha256:079d7cf39afa9d578a9d23346f411400794c3af330d6d28f819e9df742fd510f",
                    "sha256:953f9299839dea166062dc15ad557aaded1976123a8e68748f4c2b9bda013445",
                    "sha256:91484c3183f81de3b5df4fd7282fa21e976e1bfebc491b6bbfbf04e93c1894a0",
                    "sha256:8a86f91b095531cde383c2059c806a3e41d2784a850acb0074b3c05e00a92b22",
                    "sha256:72afd198025d5dd3f0441d9c45c59c4856bb515bdfd96241abc1821082e51634",
                    "sha256:dbd652ad088f975924c2188af549f2f10b92c01b6fe522387771c28ab9f9a3d1",
                    "sha256:b34bfc4dadfdc58a35b02f2a10f1cceab912215f6d83c03887fd10915a43740f",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:60d7cb78f7dbd6e4fd7284fde027f33371b8a35defbb6d0b64e611e5b79e547c",
                    "sha256:017327ad44610209b00c9a0b15918c88c8f12cffb3d0ae6bda17b044bf6a03c0",
                    "sha256:fc01bffa334f1aa9b857f8937b4c22dce59305d6a4044a1cc1aadf82d1a332b9"
                ]
            }
        },
        "latest-build-20231127": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "raspberrypi5",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2023-12-01T13:08:05.310763079Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:31.895761202Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-29T00:47:03.16713451Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:270e11b4c18af1c1efb8b8579be7fbda5255d56dd69f83ef7d933cfd2c685e5c in / "
                },
                {
                    "created": "2023-11-29T00:47:04.125919026Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T10:52:02.657157896Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T10:52:02.657157896Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T10:52:02.657157896Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T11:10:52.835476629Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T11:44:38.992624697Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-clients \t\tsubversion \t\tautoconf \t\tautomake \t\tbzip2-devel \t\tglib2-devel \t\tgcc \t\tgcc-c++ \t\tImageMagick \t\tImageMagick-devel \t\tkernel-devel \t\tlibcurl-devel \t\tlibevent-devel \t\tlibffi-devel \t\tlibjpeg-devel \t\tlibsqlite3x-devel \t\tlibxml2-devel \t\tlibxslt-devel \t\tlibyaml-devel \t\tmysql-devel \t\tmake \t\tncurses-devel \t\topenssl-devel \t\tpostgresql-devel \t\treadline-devel \t\tsqlite-devel \t\tzlib-devel \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T11:44:39.990821654Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T11:44:39.990821654Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T11:44:40.000073844Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T11:44:40.01005454Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T11:44:40.019402748Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T11:44:40.019402748Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T11:44:43.689339656Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T11:44:43.868535084Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T13:08:05.159475326Z",
                    "created_by": "LABEL io.balena.device-type=raspberrypi5",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T13:08:05.159475326Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T13:08:05.310763079Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:22de68abb450063be7e40efd22fd3b41bec469efafdd95e25c65998648e52b28",
                    "sha256:1a3ad77cbdd5f3702cdc33e853ab9cc8a4bce3da55a32efb4239959bb0066d2c",
                    "sha256:ea8f95f5ee1d9a415da767f8f70e84219a783234faedbe934f7073d313c2a329",
                    "sha256:9859ba47080992b582231890261ade8c1615c538267fb38ef5346a7dc2b9b28c",
                    "sha256:4d00d92f327d89e6a8e173c3756ae21408423470ec789b7f26433277cb4a4765",
                    "sha256:b15db2ec924b64fd8d760db1a34d1a7bf1ee73795d67229df34a932fa2462fce",
                    "sha256:f426d5ef2263d711158432d852d2fd7bbac8b2a130d414a43053e03ea7af15cc",
                    "sha256:7e257b2f172d14765138a78493e82b46dc74628b411d96599cf2d23254ad0931",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:7465c77da1867ca9eddcdddd673828c00680f5a8f2980663f3dc74004cfee96e",
                    "sha256:939e720c2de34adf3195b05f7a36a0046c35d53323ec9b2b77b0b0f581d0f436",
                    "sha256:aeff95cd6808adabefc1e51772074ec52a71f6a425be152a5dda2446f401c21a"
                ]
            }
        },
        "latest-build-20231204": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "raspberrypi5",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2023-12-06T22:56:03.043931325Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:31.895761202Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-29T00:47:03.16713451Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:270e11b4c18af1c1efb8b8579be7fbda5255d56dd69f83ef7d933cfd2c685e5c in / "
                },
                {
                    "created": "2023-11-29T00:47:04.125919026Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T20:40:26.374589955Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T20:40:26.374589955Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T20:40:26.374589955Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T20:59:24.426343965Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T21:33:22.338987204Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-clients \t\tsubversion \t\tautoconf \t\tautomake \t\tbzip2-devel \t\tglib2-devel \t\tgcc \t\tgcc-c++ \t\tImageMagick \t\tImageMagick-devel \t\tkernel-devel \t\tlibcurl-devel \t\tlibevent-devel \t\tlibffi-devel \t\tlibjpeg-devel \t\tlibsqlite3x-devel \t\tlibxml2-devel \t\tlibxslt-devel \t\tlibyaml-devel \t\tmysql-devel \t\tmake \t\tncurses-devel \t\topenssl-devel \t\tpostgresql-devel \t\treadline-devel \t\tsqlite-devel \t\tzlib-devel \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T21:33:24.154561262Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T21:33:24.154561262Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T21:33:24.162768682Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T21:33:24.171000628Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T21:33:24.179542448Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T21:33:24.179542448Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T21:33:28.121782119Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T21:33:28.270944579Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T22:56:02.889996431Z",
                    "created_by": "LABEL io.balena.device-type=raspberrypi5",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T22:56:02.889996431Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T22:56:03.043931325Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:22de68abb450063be7e40efd22fd3b41bec469efafdd95e25c65998648e52b28",
                    "sha256:25274df56d5e2d3d66833b3c1612e29d23730e6cc6ec37a78ee71d4e85b76404",
                    "sha256:d04cc6ad4633afbe1d3e0b00b156a425046a32b30dac7662e12874b696c4cfef",
                    "sha256:43377beeefc0287b77d294288faa7109bb3ce0bc36e475dfbd1d0e36067efadb",
                    "sha256:fec686f840ea96c83b8309deabe344d2dad4f89944098fafba92079f3168bea0",
                    "sha256:8a1c26a8af1d218a1a631e9eed97294a2a87ace87904af0512704b5ba5f905a0",
                    "sha256:f0e217e2e36898bc78b63b7998c0d53052ce478f4a9e28eb3acaa57455c20e2f",
                    "sha256:168aa23d85e63ec5786a95750332d5f9e1806211b6e527d7644ac532221069f1",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:536faba4d9280af162caf34aaa2fbf324ea707d1b058d74696885ed191a6eafd",
                    "sha256:97a87d38c79dd086898572162eb050cd601e449bd0441c2ea2a50bd9025c1517",
                    "sha256:3c4d9f9acb24b5d0ac43f8e1e88c4d0e6140712960f95416f5912a74cb1c29cb"
                ]
            }
        },
        "latest-build-20240205": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "raspberrypi5",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2024-02-05T02:47:24.263268341Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:31.895761202Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-29T00:47:03.16713451Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:270e11b4c18af1c1efb8b8579be7fbda5255d56dd69f83ef7d933cfd2c685e5c in / "
                },
                {
                    "created": "2023-11-29T00:47:04.125919026Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-05T00:26:13.859309536Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-05T00:26:13.859309536Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-05T00:26:13.859309536Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T00:45:10.8092517Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T01:18:49.392328016Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-clients \t\tsubversion \t\tautoconf \t\tautomake \t\tbzip2-devel \t\tglib2-devel \t\tgcc \t\tgcc-c++ \t\tImageMagick \t\tImageMagick-devel \t\tkernel-devel \t\tlibcurl-devel \t\tlibevent-devel \t\tlibffi-devel \t\tlibjpeg-devel \t\tlibsqlite3x-devel \t\tlibxml2-devel \t\tlibxslt-devel \t\tlibyaml-devel \t\tmysql-devel \t\tmake \t\tncurses-devel \t\topenssl-devel \t\tpostgresql-devel \t\treadline-devel \t\tsqlite-devel \t\tzlib-devel \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T01:18:50.514115933Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T01:18:50.514115933Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-05T01:18:50.523617988Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T01:18:50.557647649Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T01:18:50.568553425Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T01:18:50.568553425Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-05T01:18:54.352613602Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T01:18:54.484309683Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T02:47:24.147502881Z",
                    "created_by": "LABEL io.balena.device-type=raspberrypi5",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-05T02:47:24.147502881Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T02:47:24.263268341Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:22de68abb450063be7e40efd22fd3b41bec469efafdd95e25c65998648e52b28",
                    "sha256:9391b38776fe1a447956db381646ee109343bd22183a6c607d66c26dac722850",
                    "sha256:2ff3e8a40fae975f72250e96f2c01345768ef0a3dbcfbf6084bc542211223c04",
                    "sha256:38432aa17028b7bdb0c9d5c2b22fb4207811641298965ba6771cd989d6a19daa",
                    "sha256:3efdb146c34f8f1ff3c22b490e72b097196f8cf3a214dfc51628ba81f402eeb1",
                    "sha256:bf38ccf74068b318ec44fb671d7f71d3454fb8ab9304451042334e972b5fa0ec",
                    "sha256:50fbc93a18898e758d8a4426c13b8cdb844e98e4fe11dbc5e9409eb7f1466e43",
                    "sha256:21e4e77425952b2bdbb4f06e327bd295156461fc4fe3e31ed324ba59b04a3712",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:5f653a5aac8e7aec60e0930415cf5cfc3ee9a054c6b5996f3e8bcd9c24b11e54",
                    "sha256:b59f4e2498047775dd297317776553677e1605d59f5500f58949633510d86916",
                    "sha256:67476f7bb55e59ea57e471cd8af69e2dce530a51e3358d7ff9fc88102756aa31"
                ]
            }
        },
        "latest-build-20240227": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "raspberrypi5",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2024-03-01T23:15:35.935052095Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:31.895761202Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-29T00:47:03.16713451Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:270e11b4c18af1c1efb8b8579be7fbda5255d56dd69f83ef7d933cfd2c685e5c in / "
                },
                {
                    "created": "2023-11-29T00:47:04.125919026Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T20:49:59.807334412Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T20:49:59.807334412Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T20:49:59.807334412Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:10:56.098365397Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:45:26.894768836Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-clients \t\tsubversion \t\tautoconf \t\tautomake \t\tbzip2-devel \t\tglib2-devel \t\tgcc \t\tgcc-c++ \t\tImageMagick \t\tImageMagick-devel \t\tkernel-devel \t\tlibcurl-devel \t\tlibevent-devel \t\tlibffi-devel \t\tlibjpeg-devel \t\tlibsqlite3x-devel \t\tlibxml2-devel \t\tlibxslt-devel \t\tlibyaml-devel \t\tmysql-devel \t\tmake \t\tncurses-devel \t\topenssl-devel \t\tpostgresql-devel \t\treadline-devel \t\tsqlite-devel \t\tzlib-devel \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:45:27.831671197Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:45:27.831671197Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T21:45:27.841017293Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:45:27.850413212Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:45:27.858829391Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:45:27.858829391Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T21:45:31.607983559Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:45:31.757692693Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T23:15:35.816479252Z",
                    "created_by": "LABEL io.balena.device-type=raspberrypi5",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T23:15:35.816479252Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T23:15:35.935052095Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:22de68abb450063be7e40efd22fd3b41bec469efafdd95e25c65998648e52b28",
                    "sha256:153f603c3b6b2529b45b12c9cb3de69de633d99488c4aac6cb5e04c6784e284c",
                    "sha256:fcda31efe0f90abdb3be0e2cc3050fddb745d7db41b962e3a08d908b3fe90c76",
                    "sha256:168e7cb2c07cd77fe30fd104d59f5ac49b7a43775f04c196367fa588f2159f11",
                    "sha256:3e98c7cf4c63c439e9045cd721cc19c243588d17804a57358309accf40b5249c",
                    "sha256:8aeb044849aef9a674a8ebde259f830df38faaa43b11f80b3bec5085ace3c264",
                    "sha256:691ea9dfdaf44533ac36d1341c6822b6735744922c3d5c304e657357f4babe33",
                    "sha256:072ee65b31efbe2110bc15922159f609d9d9c933715bc4429aeb7f4c5da9d425",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:bd215b090f3f370a73aa2871e3e123516169ed4db9f68a876a6be0d4a288d6d4",
                    "sha256:0295e4b5500da95845ba586d9b4dda33a96a9ed048edbd0037f39dfa7e0a0d8f",
                    "sha256:670f0d67f733810a4c9141187e6af3bfc29dee35a9757616a46cd08b2e630adc"
                ]
            }
        },
        "latest-build-20240304": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "raspberrypi5",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2024-03-05T10:49:48.940549603Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:31.895761202Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-29T00:47:03.16713451Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:270e11b4c18af1c1efb8b8579be7fbda5255d56dd69f83ef7d933cfd2c685e5c in / "
                },
                {
                    "created": "2023-11-29T00:47:04.125919026Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T08:24:07.032483717Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T08:24:07.032483717Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T08:24:07.032483717Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T08:43:07.560394223Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T09:18:33.168342892Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-clients \t\tsubversion \t\tautoconf \t\tautomake \t\tbzip2-devel \t\tglib2-devel \t\tgcc \t\tgcc-c++ \t\tImageMagick \t\tImageMagick-devel \t\tkernel-devel \t\tlibcurl-devel \t\tlibevent-devel \t\tlibffi-devel \t\tlibjpeg-devel \t\tlibsqlite3x-devel \t\tlibxml2-devel \t\tlibxslt-devel \t\tlibyaml-devel \t\tmysql-devel \t\tmake \t\tncurses-devel \t\topenssl-devel \t\tpostgresql-devel \t\treadline-devel \t\tsqlite-devel \t\tzlib-devel \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T09:18:34.140220764Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T09:18:34.140220764Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T09:18:34.153622864Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T09:18:34.190278048Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T09:18:34.204411016Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T09:18:34.204411016Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T09:18:37.906466695Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T09:18:38.054385621Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T10:49:48.813104442Z",
                    "created_by": "LABEL io.balena.device-type=raspberrypi5",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T10:49:48.813104442Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T10:49:48.940549603Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:22de68abb450063be7e40efd22fd3b41bec469efafdd95e25c65998648e52b28",
                    "sha256:5b32c6607b8e7ea89ed5bb72a3578bb0d4723f5496d0a8e7dc688bf6a3a167d6",
                    "sha256:90da55fed465de8a873bf3e2bcdea7dca9a0be400a66dfa4c0efde5fa5ad1712",
                    "sha256:d5b90a049cc6b8b6a297f2e6f8a012847c545187714f13feb3004077215fe790",
                    "sha256:ac341c2760f8397f739500c811ea7bfc967bee43cae3b5bccbc3bc6263562d17",
                    "sha256:383c3fcfa865391817fdec807ce0f15866c08261ec20642c87fdde447997f846",
                    "sha256:d8c138867fdbf59da6040e42db8f659089ae32f509c4809cd61e7b817c68284d",
                    "sha256:59113e489ab1305fec7cc3fd646933122fb6f8dfeb9f3e8146b36687dd3f8ce0",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:3e090112138683d3816cd9299b41c91f8e2961f75a329ef3583c678904c6aa0c",
                    "sha256:6c82dde303f558bc49a46126a6aa066523092239f9e2829d3dc28c59a8f8d95f",
                    "sha256:6a7194d3cd0dfee732081c5cbe614a70c493752d797dc8146ecc7ca9b388c3d3"
                ]
            }
        },
        "latest-build-20240401": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "raspberrypi5",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                }
            },
            "created": "2024-04-01T23:46:22.834424824Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:31.895761202Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-29T00:47:03.16713451Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:270e11b4c18af1c1efb8b8579be7fbda5255d56dd69f83ef7d933cfd2c685e5c in / "
                },
                {
                    "created": "2023-11-29T00:47:04.125919026Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T21:26:32.436538725Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T21:26:32.436538725Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T21:26:32.436538725Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T21:44:46.483219966Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T22:18:11.966182353Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-clients \t\tsubversion \t\tautoconf \t\tautomake \t\tbzip2-devel \t\tglib2-devel \t\tgcc \t\tgcc-c++ \t\tImageMagick \t\tImageMagick-devel \t\tkernel-devel \t\tlibcurl-devel \t\tlibevent-devel \t\tlibffi-devel \t\tlibjpeg-devel \t\tlibsqlite3x-devel \t\tlibxml2-devel \t\tlibxslt-devel \t\tlibyaml-devel \t\tmysql-devel \t\tmake \t\tncurses-devel \t\topenssl-devel \t\tpostgresql-devel \t\treadline-devel \t\tsqlite-devel \t\tzlib-devel \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T22:18:13.396726412Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T22:18:13.396726412Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T22:18:13.40948656Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T22:18:13.42436327Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T22:18:13.435538637Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T22:18:13.435538637Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T22:18:17.292242645Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T22:18:17.441252547Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T23:46:22.718527176Z",
                    "created_by": "LABEL io.balena.device-type=raspberrypi5",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T23:46:22.718527176Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T23:46:22.834424824Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:22de68abb450063be7e40efd22fd3b41bec469efafdd95e25c65998648e52b28",
                    "sha256:2bc63a4a3e163679c8a2399342b1daf3e005320d94db933ce217a0f80d1b4537",
                    "sha256:d75154443a45cab05ca4a85ddd827b962fedcff91b702d791e6ef9404f6c85d3",
                    "sha256:ed61218e50e513b23bae8d31f72e7c8e7a3d0090e48e2ff087a536ac362cfb81",
                    "sha256:23faadc341a4670f586fccbfa7d9b0c5a5e56be8ab46b55a4067df82e5569a5c",
                    "sha256:26696ab075f5bb87eee8a46b41f2091a3f9d7edb2116147001a7677757eaaca5",
                    "sha256:61d65d5da4322b148f9078fa00914c14291b0bdf48b073091e08240ed72a9f7c",
                    "sha256:879d60f10dea3318ceaedb2814160c1ae4cc919d4f04d2e62152d05c1ea7011a",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:0428822e1d59c6db13038f6502cd2c9a69bd7e2d2a033cb20fc19071849b112e",
                    "sha256:3c8f1509f3c7add36b43b389148cb9fe7868ecb33ac89281c10cea89cf2f85c0",
                    "sha256:b8c4910781ac9990d7b2091b55601b234403b8a2028a6fad85d5ce48189f7b37"
                ]
            }
        },
        "latest-build-20240408": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "raspberrypi5",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                }
            },
            "created": "2024-04-09T20:00:09.747910783Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:31.895761202Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-29T00:47:03.16713451Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:270e11b4c18af1c1efb8b8579be7fbda5255d56dd69f83ef7d933cfd2c685e5c in / "
                },
                {
                    "created": "2023-11-29T00:47:04.125919026Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:50.964198867Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:50.964198867Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:50.964198867Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:54:06.695861539Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:30:31.267198079Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-clients \t\tsubversion \t\tautoconf \t\tautomake \t\tbzip2-devel \t\tglib2-devel \t\tgcc \t\tgcc-c++ \t\tImageMagick \t\tImageMagick-devel \t\tkernel-devel \t\tlibcurl-devel \t\tlibevent-devel \t\tlibffi-devel \t\tlibjpeg-devel \t\tlibsqlite3x-devel \t\tlibxml2-devel \t\tlibxslt-devel \t\tlibyaml-devel \t\tmysql-devel \t\tmake \t\tncurses-devel \t\topenssl-devel \t\tpostgresql-devel \t\treadline-devel \t\tsqlite-devel \t\tzlib-devel \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:30:32.683562935Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:30:32.683562935Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T14:30:32.694247574Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:30:32.719346978Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:30:32.730408486Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:30:32.730408486Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T14:30:36.547683782Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:30:36.691463904Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T20:00:09.635479315Z",
                    "created_by": "LABEL io.balena.device-type=raspberrypi5",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T20:00:09.635479315Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T20:00:09.747910783Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:22de68abb450063be7e40efd22fd3b41bec469efafdd95e25c65998648e52b28",
                    "sha256:3f054b5308bf8dbf3abb2dac1bc72fac6b6e9569c5d0c4d1733c57b40f98d68c",
                    "sha256:9a408e5130d5761269a2f78fe14c41bfad96906f19a9b6f231ba27a0e270536b",
                    "sha256:ce27ddfda0b79dba438fc400e0d24f635fec12b6b0b2e61ff692ddfb273b5fe9",
                    "sha256:251af411a33440438f0b2f94cdfb89f2f9ffdbc97319bda046932d48df33eb89",
                    "sha256:5482afbecbaab7a5c1e492cf2a2f03aafdc9012c4dc853b5b5c1ed9fde902db7",
                    "sha256:5d6da048fbb12c4062ff5b76617e555654e7b2043bfca3f0791046007fc79bb6",
                    "sha256:c6c5906dcd307ca53496f54734925e883c2e43f758510871473e5490706bf6a8",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:42adbbc0741061b3fa0e1fde61c20ae07301f416423df023d7264ef090febb62",
                    "sha256:551053d99240d13304d31a3b4871a3ef49b72d4699ff8731bbcab9e76f3f66e5",
                    "sha256:1b923f601eecb1bebcac374b13f2fa33bd5703d365f060934d22ed144db5adc1"
                ]
            }
        },
        "latest-build-20240429": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "raspberrypi5",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                }
            },
            "created": "2024-05-06T10:39:05.745247919Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:31.895761202Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-29T00:47:03.16713451Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:270e11b4c18af1c1efb8b8579be7fbda5255d56dd69f83ef7d933cfd2c685e5c in / "
                },
                {
                    "created": "2023-11-29T00:47:04.125919026Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T09:28:43.57977131Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T09:28:43.57977131Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T09:28:43.57977131Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T09:47:19.941756159Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T10:20:57.000511545Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-clients \t\tsubversion \t\tautoconf \t\tautomake \t\tbzip2-devel \t\tglib2-devel \t\tgcc \t\tgcc-c++ \t\tImageMagick \t\tImageMagick-devel \t\tkernel-devel \t\tlibcurl-devel \t\tlibevent-devel \t\tlibffi-devel \t\tlibjpeg-devel \t\tlibsqlite3x-devel \t\tlibxml2-devel \t\tlibxslt-devel \t\tlibyaml-devel \t\tmysql-devel \t\tmake \t\tncurses-devel \t\topenssl-devel \t\tpostgresql-devel \t\treadline-devel \t\tsqlite-devel \t\tzlib-devel \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T10:20:58.118390256Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T10:20:58.118390256Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T10:20:58.12798187Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T10:20:58.136722317Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T10:20:58.164403522Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T10:20:58.164403522Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T10:21:01.984279759Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T10:21:02.133999332Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T10:39:05.631903588Z",
                    "created_by": "LABEL io.balena.device-type=raspberrypi5",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T10:39:05.631903588Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T10:39:05.745247919Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:22de68abb450063be7e40efd22fd3b41bec469efafdd95e25c65998648e52b28",
                    "sha256:40252cde73a60fe319f0dc295c7b1e421631974cfbe16656b81f7c86e773254e",
                    "sha256:4a4de46c8a70d5743384977bb42ebacdec5e3cb5490677a398f1d36366084aab",
                    "sha256:1523c4d5a73b8f8409b03635be1be78f6592c3915fd459908ffe5c04fb7ca684",
                    "sha256:3165ae98a25560d143d61c6f8a3cc9b4f73d0c009bfd9de33cefc4747c481229",
                    "sha256:802383c11ce70505808614d078d961ddc3cfaf46a58ac795624520a44e2a7860",
                    "sha256:0590d31cf7630143e0d0e5677bb4407b0d1c0b49a56ef3a87a860603dcea1282",
                    "sha256:6f5ffd7cbb1f8862606014326bb38c35022c8eb43d2a0aff0af32878db49dbdc",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:8c0b4113e6a87b2271a715a924b205a5c9534f5b51c4f3d05b39a48bb6ad75be",
                    "sha256:dfe8b7206657f70248c3af557761da865df3d0ccf1a3d5c0483af6659a3f7679",
                    "sha256:a41538cee7e19fc56d8b85adabf2df104f7856ddaa10d8d87900dcb7e8e56df8"
                ]
            }
        },
        "latest-run": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "raspberrypi5",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                }
            },
            "created": "2024-05-06T10:38:45.538160132Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:31.895761202Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-29T00:47:03.16713451Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:270e11b4c18af1c1efb8b8579be7fbda5255d56dd69f83ef7d933cfd2c685e5c in / "
                },
                {
                    "created": "2023-11-29T00:47:04.125919026Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T09:28:47.993183335Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T09:28:47.993183335Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T09:28:47.993183335Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T09:47:56.501476974Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T09:47:57.631980985Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T09:47:57.631980985Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T09:47:57.644124262Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T09:47:57.678847981Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T09:47:57.688494096Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T09:47:57.688494096Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T09:48:01.526529414Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T09:48:01.665893428Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T10:38:45.395029597Z",
                    "created_by": "LABEL io.balena.device-type=raspberrypi5",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T10:38:45.395029597Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T10:38:45.538160132Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:22de68abb450063be7e40efd22fd3b41bec469efafdd95e25c65998648e52b28",
                    "sha256:ef64ad49ccf58709af070779ae49d014558d78a8b6a21fcc279c09ddac79e6c9",
                    "sha256:486e799e950e2b998ed0a1a7221aed44130002259c2b437524c7a8a72b725a56",
                    "sha256:5ad52f9d14deab1b2c3a79dfb68bf730440e209f5926a2cd2ebd561c519a08de",
                    "sha256:73001e4334a2e5a98b50faf87e712eaf851af09ac903e83a569150844ce9eda1",
                    "sha256:696c197b14bb7731bf0a36bbdc5e5272937b693f192b143e02dac747a1305ba1",
                    "sha256:f27b4f97c199fdc59cc49eb91fc7a348daf160285ca6bfce88ede5b64e4bb0a9",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:22341517b8222bb5810db07c816fbd0de10749523856c0263caf14789e77d27d",
                    "sha256:814378e6a74f147b97de86dbedb021279d972677e845a91c72091b86b4dcd6d5",
                    "sha256:07672fdc7d8d9779da09498cf20a8b017e6d3ee8d7e8b681424c91d8c94d3f67"
                ]
            }
        },
        "latest-run-20230929": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "raspberrypi5",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2023-10-04T23:25:26.883353446Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:31.895761202Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-04T18:40:58.001277299Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:614dff70ca4206841645edfd3dab48901efeefccc8ef99772f475ee9bac861ff in / "
                },
                {
                    "created": "2023-08-04T18:40:59.951513662Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T05:16:42.403188583Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T05:16:42.403188583Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T05:16:42.403188583Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T05:41:14.882541843Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T05:41:16.309377049Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T05:41:16.309377049Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T05:41:16.340188202Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T05:41:16.351150734Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T05:41:16.360211026Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T05:41:16.360211026Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T05:41:21.389664273Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T05:41:21.747711571Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-04T23:25:26.738925718Z",
                    "created_by": "LABEL io.balena.device-type=raspberrypi5",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-04T23:25:26.738925718Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-04T23:25:26.883353446Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:cf819d1f191d71ce750fc0b9ca71726d50fc052d7c695682165a84c2bd1eb716",
                    "sha256:2c61372b1614282bfdb58c104252b37a61be492de5c3298dffc56376adfe0a8f",
                    "sha256:3892fad87609c0724cb700c7b327865d8b642316f214825299540678c84e007b",
                    "sha256:47b1691c56a15153e34460e97d0615abbde7eb4128cffd187b3c4507be55c4a0",
                    "sha256:526255e20ebb75f4e4a9cd0b179342ccc59ea09dfb95f916aad1dfd38903c411",
                    "sha256:10a91abc01c07dd01c837dc1a35597c3030ffee89a81f6dcc760a204a2da9e5a",
                    "sha256:fb61a502b5a7e114c0e1b65ffbf1f5d42041b65c52f9ecb41e2fb9a1cdcdbd97",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:cc06c053add61653ccca8a1d621c01df905dfb240d202ad2f7452d1777852952",
                    "sha256:d4eb19f941ac91799d9d6198e4fe925d23b49332e47400690cf7b3c2d9295b5d",
                    "sha256:59e1a00a1db05f912e0325907ea2f23a8be8f071617bd4b6a6101c339749e0fb"
                ]
            }
        },
        "latest-run-20231103": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "raspberrypi5",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2023-11-04T17:03:19.763869192Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:31.895761202Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-06T18:42:53.905315575Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:a506790441a5cd056fb456111da480939a46667d520b519dcb9b2e2aa16aae70 in / "
                },
                {
                    "created": "2023-10-06T18:42:54.852939758Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-04T14:05:43.22598589Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-04T14:05:43.22598589Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-04T14:05:43.22598589Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T14:34:18.977818495Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T14:34:20.236374739Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T14:34:20.236374739Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-04T14:34:20.246502673Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T14:34:20.255833503Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T14:34:20.26399513Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T14:34:20.26399513Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-04T14:34:25.601224907Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T14:34:25.783838009Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T17:03:19.593865165Z",
                    "created_by": "LABEL io.balena.device-type=raspberrypi5",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-04T17:03:19.593865165Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T17:03:19.763869192Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:a37bac7c99baeb556998a67a51775b34aa6df7829fa1ff19323033c5e19837b3",
                    "sha256:768fbcc1112a55954ab49021af3e5b3e77d06892f0018801cb6a68567a441e44",
                    "sha256:b339e6005ff8696452b8a5daf08c04afc137c0da129e399cf294d19b6213af01",
                    "sha256:80e7fcb77b05762cb4af7a336c31edd97b255eb9c5e68b5e2d99fcd0c0941c00",
                    "sha256:faa025149da6c8af6245b9feb2dfa133869871b24b83291212a581a8ac861951",
                    "sha256:85fb00c475997eaa7bf88fdc4a78bd8ad8ecfcafaa4870eb4c2e610747381ba2",
                    "sha256:707dbcf7ea87fd75e1d03a7f275e36d8fcfc1b4ea1f3c867ab6830318bf147e9",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:2509d1d7a240f88f51a41393363e38c35b81e3edf67fa356b59390c21617a3ab",
                    "sha256:171429e7f6504ee1e18052a76bfe8bba842c7c6431ef9aace42dec71ec4b4f87",
                    "sha256:2f738c2c60a7541836ab6cba290bbf92fadc59c7087650523f34270dfd060022"
                ]
            }
        },
        "latest-run-20231106": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "raspberrypi5",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2023-11-06T12:34:47.835870966Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:31.895761202Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-06T18:42:53.905315575Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:a506790441a5cd056fb456111da480939a46667d520b519dcb9b2e2aa16aae70 in / "
                },
                {
                    "created": "2023-10-06T18:42:54.852939758Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T09:12:27.261337628Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T09:12:27.261337628Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T09:12:27.261337628Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T09:44:07.194449485Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T09:44:08.356242913Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T09:44:08.356242913Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T09:44:08.370923209Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T09:44:08.383861082Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T09:44:08.401598819Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T09:44:08.401598819Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T09:44:14.097449997Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T09:44:14.33458648Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T12:34:47.673440252Z",
                    "created_by": "LABEL io.balena.device-type=raspberrypi5",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T12:34:47.673440252Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T12:34:47.835870966Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:a37bac7c99baeb556998a67a51775b34aa6df7829fa1ff19323033c5e19837b3",
                    "sha256:bb42b2b57488a97c34e8f0aa9c9a04b6b5ddc51428a7f869c902e262985533fa",
                    "sha256:f41e2d07027059a658a46da06111805a1c38c357d7a263b65a57906a413afcb8",
                    "sha256:6dfd1348c7cf846716582db5414652bd266c84c3ceb084217d2c1faaa43610bd",
                    "sha256:1ef3bd9e556e1fe5e94ee5fc778405d0e160b3b2f911f7b73b841e3f2947d4ec",
                    "sha256:b00ab734246e3ab0a163af225efd04d30fbb893167c4883967444d8739b0a28b",
                    "sha256:505040d84b751f1b80aad25e47e2b5770da95393e303943d0e90452bb789625d",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:3de7d77508b1af83bfd44b6a7776ab5e9c687ecfe948f5f9d8f15802beed22b0",
                    "sha256:472ace270ccea41c14f9933f0ae960d9532fe6435435172037ed71643d1a40fe",
                    "sha256:b852d3e7cabdbb835dd738b4c9527990b0b1ff959e4bf050462c494b30c51dc0"
                ]
            }
        },
        "latest-run-20231127": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "raspberrypi5",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2023-12-01T13:07:49.854569597Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:31.895761202Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-29T00:47:03.16713451Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:270e11b4c18af1c1efb8b8579be7fbda5255d56dd69f83ef7d933cfd2c685e5c in / "
                },
                {
                    "created": "2023-11-29T00:47:04.125919026Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T10:52:09.172740458Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T10:52:09.172740458Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T10:52:09.172740458Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T11:10:46.008255947Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T11:10:47.111959762Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T11:10:47.111959762Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T11:10:47.123059062Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T11:10:47.148503741Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T11:10:47.157133896Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T11:10:47.157133896Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T11:10:50.883923644Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T11:10:51.046020579Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T13:07:49.720770039Z",
                    "created_by": "LABEL io.balena.device-type=raspberrypi5",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T13:07:49.720770039Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T13:07:49.854569597Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:22de68abb450063be7e40efd22fd3b41bec469efafdd95e25c65998648e52b28",
                    "sha256:60f2f571d3fb1d1d2155d703033185efdcb8fd06f11360aff3752c6009ddbba5",
                    "sha256:8bb3ecdba476409248d260241fff01266e4176e947fe811a5efe5456870e671e",
                    "sha256:6852dc1f1a771f4a7632382350c1dbaa2ae3e16802b4884d04618e03763e8376",
                    "sha256:9db2458df0d1ffca59509d5dbd49436ef952483f1042d53531ca90ba7d6de9e9",
                    "sha256:8d401a597be69855ebfaf84921f07b57da8bb7a5c49c370999b998f6062358a2",
                    "sha256:05f9f870334e6de793d303f103d1f1b35f7df1ff21724f7ebaeb6fc561bccc2c",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:24546f46791bf568236132bceae1cdf41c9ca9f6d3e09077cab2bc32ee6bb76c",
                    "sha256:24ce1f5be0535d16b93594731aca9f7680b480d54b2a5820055e1580b872afe6",
                    "sha256:2b6dc1653ae6cb200b6663e6156cbdd3bdc518b03fac893f19869e9e8855682c"
                ]
            }
        },
        "latest-run-20231204": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "raspberrypi5",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2023-12-06T22:55:22.373508696Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:31.895761202Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-29T00:47:03.16713451Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:270e11b4c18af1c1efb8b8579be7fbda5255d56dd69f83ef7d933cfd2c685e5c in / "
                },
                {
                    "created": "2023-11-29T00:47:04.125919026Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T20:40:21.575448793Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T20:40:21.575448793Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T20:40:21.575448793Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T20:59:06.4416038Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T20:59:07.14149679Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T20:59:07.14149679Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T20:59:07.150718208Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T20:59:07.159290685Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T20:59:07.187587582Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T20:59:07.187587582Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T20:59:10.850419463Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T20:59:11.010511508Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T22:55:22.243882328Z",
                    "created_by": "LABEL io.balena.device-type=raspberrypi5",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T22:55:22.243882328Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T22:55:22.373508696Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:22de68abb450063be7e40efd22fd3b41bec469efafdd95e25c65998648e52b28",
                    "sha256:2c6b0df21f9efd51a24a59463b9265452ccc9cf8a26908c50d2742c0e67683bd",
                    "sha256:906012c4f278d0d6c4a614afd4c812fc55bc367d28aac2c10cbdd33ac6ec80b8",
                    "sha256:34fc306b51c5f84676518d54cf67a097f48bfc8e79fb8c0ffc71ed9b2d1b5def",
                    "sha256:aa005d370b40094b326443ce4f1b6d04a780598588bd8f8fa1dc601171d59314",
                    "sha256:e580b4505982459166845d47c3159777541e000c8826a05635c6f84f62f03011",
                    "sha256:79990d4ff119d7188fd5fdcaaa04c391747be11fefbbe682a6a2c495c8ca3a6b",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:0aff9ccfdfd88ab9194d2d15e49264900a8942406276260bf5fb479d637d2075",
                    "sha256:6d3c0215ae8da55215b0e456b5d4b89a26cb450350fe5507c5eaf7bd88c8e132",
                    "sha256:e29791cd9f4ed15e18ea8be26b30c0de9a5af5048774d06e28ebf84d9800b573"
                ]
            }
        },
        "latest-run-20240227": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "raspberrypi5",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2024-03-01T23:15:37.22340042Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:31.895761202Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-29T00:47:03.16713451Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:270e11b4c18af1c1efb8b8579be7fbda5255d56dd69f83ef7d933cfd2c685e5c in / "
                },
                {
                    "created": "2023-11-29T00:47:04.125919026Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T20:49:58.705358685Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T20:49:58.705358685Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T20:49:58.705358685Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:08:24.834287933Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:08:25.565567755Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:08:25.565567755Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T21:08:25.579271093Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:08:25.617204263Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:08:25.629384601Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:08:25.629384601Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T21:08:29.321790107Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:08:29.46619614Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T23:15:37.108481029Z",
                    "created_by": "LABEL io.balena.device-type=raspberrypi5",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T23:15:37.108481029Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T23:15:37.22340042Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:22de68abb450063be7e40efd22fd3b41bec469efafdd95e25c65998648e52b28",
                    "sha256:bfe341409759f9ccd364ecb2d335246560d19282f3ecf321c53836e101a82d2a",
                    "sha256:22279a1bcbb3b6a49c8d9ada414e0b58c5c83f35e20c9a33acc65e0aedb733a1",
                    "sha256:59b3dbe842a8cbc03ed09e65a15a87e8c46f6653b87eb93c5b37d8ab77060acf",
                    "sha256:2ad87538d509ffa4457cec4d29a36d570c8392257dab445452209d4097b7bf52",
                    "sha256:4b3f303bc53eefd36ad3db9ee937836bf0e5855a96ec2546c67cb8238fa8c5bc",
                    "sha256:27f44cee2cfb128916d178e2e1dd253065b766fcffe0f37cdb2588702c65bd5f",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:7f5845d6da8e4b02efd4b375c5222854a386a7b02c491fe3b96307345b96014d",
                    "sha256:aa61cf5f3f2942560cb632dd38548d7fd159cf0a4b737535c92836aa99ca1f52",
                    "sha256:9bd02f5806da6e3ef9c204b8c1b4ff3a20f9a32e3329966bb482123a9c47dee3"
                ]
            }
        },
        "latest-run-20240304": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "raspberrypi5",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2024-03-05T10:50:26.53777156Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:31.895761202Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-29T00:47:03.16713451Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:270e11b4c18af1c1efb8b8579be7fbda5255d56dd69f83ef7d933cfd2c685e5c in / "
                },
                {
                    "created": "2023-11-29T00:47:04.125919026Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T08:24:13.360409226Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T08:24:13.360409226Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T08:24:13.360409226Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T08:43:22.770169859Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T08:43:23.650621519Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T08:43:23.650621519Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T08:43:23.66033272Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T08:43:23.670216283Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T08:43:23.695421657Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T08:43:23.695421657Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T08:43:27.455502812Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T08:43:27.593974423Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T10:50:26.413272107Z",
                    "created_by": "LABEL io.balena.device-type=raspberrypi5",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T10:50:26.413272107Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T10:50:26.53777156Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:22de68abb450063be7e40efd22fd3b41bec469efafdd95e25c65998648e52b28",
                    "sha256:28463901e499aa0a1515b57d0fbafa9cb9a2cc02cc10ed1687c180941c557184",
                    "sha256:0ca6f2444de4ad55ab4af4fd74364d376cec4fab74ebda60cba78c9fa2d7e649",
                    "sha256:cfc10fd96b96916769b790f45b5a4f0a1a17202f2532d659330de963d4494ebf",
                    "sha256:d2c34fbda1de7685d96923948d480fbe0ebab10b9087bfebda73744dbe2a6f9a",
                    "sha256:0d88f38f1e25f8d79cc6f17c26de206e21378fdd492c88062ab3e718003d32df",
                    "sha256:01e1144fabf916d9df9dbc69c087247ccbb1e57b391ed28f7dac24153a50d7b2",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:7ad9ead66349340e94a99303f594e85c786a6fabee7368153801d079722794bc",
                    "sha256:277971ea1ea290467dd51b95c3577111463f5dc7077258efb29b337ec37f92ca",
                    "sha256:c50f7b67b899b950301dce6815e76581bd6eadf166ce724064342aafc78db096"
                ]
            }
        },
        "latest-run-20240401": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "raspberrypi5",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                }
            },
            "created": "2024-04-01T23:46:43.192266903Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:31.895761202Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-29T00:47:03.16713451Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:270e11b4c18af1c1efb8b8579be7fbda5255d56dd69f83ef7d933cfd2c685e5c in / "
                },
                {
                    "created": "2023-11-29T00:47:04.125919026Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T21:26:29.343455526Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T21:26:29.343455526Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T21:26:29.343455526Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T21:45:10.957762154Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T21:45:11.852141047Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T21:45:11.852141047Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T21:45:11.862471903Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T21:45:11.872331413Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T21:45:11.898584749Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T21:45:11.898584749Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T21:45:15.686171825Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T21:45:15.820771715Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T23:46:43.076294289Z",
                    "created_by": "LABEL io.balena.device-type=raspberrypi5",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T23:46:43.076294289Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T23:46:43.192266903Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:22de68abb450063be7e40efd22fd3b41bec469efafdd95e25c65998648e52b28",
                    "sha256:3a6d39f67382783e2c69d9a448aa59d1d7654260210364d05c2cae2ef469e3c8",
                    "sha256:8b316e0949cd1905304ca774963ddae530565f690a65de9db1a2dafa9aed0363",
                    "sha256:7fa4949a4c79caf7d749cc4abcbc241a5dd3a5c8d0155458cf6d4d83ac483646",
                    "sha256:0a0eea417236fa5be4e06c1d20766fd9f3b0e064419a66f356dea0f1f6d794df",
                    "sha256:ad31ce618fd1f26b74bc2900fbd27319ed86917e85375f90b57d28b291156d51",
                    "sha256:7b8582873ef4cde2aca83ece090a3993ca7c4f8fe0b13c3b0b064f08c7b21c21",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:8050b5f7d3d161f91b3bad0576691d8640130b32c0b8f23db87cdd4fee47c82e",
                    "sha256:31ab2d2b151011b640236ef0b2d0b2cf3b5928aff282a614c0affce35da9ea37",
                    "sha256:b6d8f2a786c666058d591d1a9eae9808f450684bad88d50400cbbadcda61a90c"
                ]
            }
        },
        "latest-run-20240408": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "raspberrypi5",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                }
            },
            "created": "2024-04-09T20:00:01.596559907Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:31.895761202Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-29T00:47:03.16713451Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:270e11b4c18af1c1efb8b8579be7fbda5255d56dd69f83ef7d933cfd2c685e5c in / "
                },
                {
                    "created": "2023-11-29T00:47:04.125919026Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:52.915602222Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:52.915602222Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:52.915602222Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:54:04.100191166Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:54:04.963844501Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:54:04.963844501Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:54:04.973366628Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:54:05.001513857Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:54:05.024710968Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:54:05.024710968Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:54:08.797015979Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:54:08.943058393Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T20:00:01.48497321Z",
                    "created_by": "LABEL io.balena.device-type=raspberrypi5",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T20:00:01.48497321Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T20:00:01.596559907Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:22de68abb450063be7e40efd22fd3b41bec469efafdd95e25c65998648e52b28",
                    "sha256:03dd9a4ed991dc43e9a504ad71941782bb6fd4cd57f8ade649bbe25b622e3902",
                    "sha256:d24e8e6aec171dc7068d2c19b85d8c6341381b2f0cf4e1d1a20d5419f2d1ec53",
                    "sha256:e743a07ebcce27b755341d992eb4148fe86bd04481c6d8f2b6fe7364a942af19",
                    "sha256:1c988fbb0bdd3374b1f72bebc1953bd62853c7e33608dbc885ff64eba44dc1eb",
                    "sha256:7fad6968fdbdd1afee5f76e3b2f3df1829677bc85be4fa920cb57db14562699c",
                    "sha256:2999088cf700c485af0973e03dd5e2ff9d96b3f604f5908307f3edb5377c6d58",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:a75c43802eb36b20a7183fe5c30e33ef495a904237a7483d5c73c1df1691887b",
                    "sha256:5317fa65bc7c35c38c442c90f849cc95fc28d4aa5eb818b916e1a8116119211a",
                    "sha256:01008a19db5ef632d2ed55d56cefe9f631cc0c1484a447ea200434f527fe9280"
                ]
            }
        },
        "latest-run-20240429": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "raspberrypi5",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                }
            },
            "created": "2024-05-06T10:38:45.538160132Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:31.895761202Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-29T00:47:03.16713451Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:270e11b4c18af1c1efb8b8579be7fbda5255d56dd69f83ef7d933cfd2c685e5c in / "
                },
                {
                    "created": "2023-11-29T00:47:04.125919026Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T09:28:47.993183335Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T09:28:47.993183335Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T09:28:47.993183335Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T09:47:56.501476974Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T09:47:57.631980985Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T09:47:57.631980985Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T09:47:57.644124262Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T09:47:57.678847981Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T09:47:57.688494096Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T09:47:57.688494096Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T09:48:01.526529414Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T09:48:01.665893428Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T10:38:45.395029597Z",
                    "created_by": "LABEL io.balena.device-type=raspberrypi5",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T10:38:45.395029597Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T10:38:45.538160132Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:22de68abb450063be7e40efd22fd3b41bec469efafdd95e25c65998648e52b28",
                    "sha256:ef64ad49ccf58709af070779ae49d014558d78a8b6a21fcc279c09ddac79e6c9",
                    "sha256:486e799e950e2b998ed0a1a7221aed44130002259c2b437524c7a8a72b725a56",
                    "sha256:5ad52f9d14deab1b2c3a79dfb68bf730440e209f5926a2cd2ebd561c519a08de",
                    "sha256:73001e4334a2e5a98b50faf87e712eaf851af09ac903e83a569150844ce9eda1",
                    "sha256:696c197b14bb7731bf0a36bbdc5e5272937b693f192b143e02dac747a1305ba1",
                    "sha256:f27b4f97c199fdc59cc49eb91fc7a348daf160285ca6bfce88ede5b64e4bb0a9",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:22341517b8222bb5810db07c816fbd0de10749523856c0263caf14789e77d27d",
                    "sha256:814378e6a74f147b97de86dbedb021279d972677e845a91c72091b86b4dcd6d5",
                    "sha256:07672fdc7d8d9779da09498cf20a8b017e6d3ee8d7e8b681424c91d8c94d3f67"
                ]
            }
        },
        "run": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "raspberrypi5",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                }
            },
            "created": "2024-05-06T10:38:45.538160132Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:31.895761202Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-29T00:47:03.16713451Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:270e11b4c18af1c1efb8b8579be7fbda5255d56dd69f83ef7d933cfd2c685e5c in / "
                },
                {
                    "created": "2023-11-29T00:47:04.125919026Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T09:28:47.993183335Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T09:28:47.993183335Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T09:28:47.993183335Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T09:47:56.501476974Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T09:47:57.631980985Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T09:47:57.631980985Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T09:47:57.644124262Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T09:47:57.678847981Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T09:47:57.688494096Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T09:47:57.688494096Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T09:48:01.526529414Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T09:48:01.665893428Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T10:38:45.395029597Z",
                    "created_by": "LABEL io.balena.device-type=raspberrypi5",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T10:38:45.395029597Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T10:38:45.538160132Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:22de68abb450063be7e40efd22fd3b41bec469efafdd95e25c65998648e52b28",
                    "sha256:ef64ad49ccf58709af070779ae49d014558d78a8b6a21fcc279c09ddac79e6c9",
                    "sha256:486e799e950e2b998ed0a1a7221aed44130002259c2b437524c7a8a72b725a56",
                    "sha256:5ad52f9d14deab1b2c3a79dfb68bf730440e209f5926a2cd2ebd561c519a08de",
                    "sha256:73001e4334a2e5a98b50faf87e712eaf851af09ac903e83a569150844ce9eda1",
                    "sha256:696c197b14bb7731bf0a36bbdc5e5272937b693f192b143e02dac747a1305ba1",
                    "sha256:f27b4f97c199fdc59cc49eb91fc7a348daf160285ca6bfce88ede5b64e4bb0a9",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:22341517b8222bb5810db07c816fbd0de10749523856c0263caf14789e77d27d",
                    "sha256:814378e6a74f147b97de86dbedb021279d972677e845a91c72091b86b4dcd6d5",
                    "sha256:07672fdc7d8d9779da09498cf20a8b017e6d3ee8d7e8b681424c91d8c94d3f67"
                ]
            }
        },
        "run-20230929": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "raspberrypi5",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2023-10-04T23:25:26.883353446Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:31.895761202Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-04T18:40:58.001277299Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:614dff70ca4206841645edfd3dab48901efeefccc8ef99772f475ee9bac861ff in / "
                },
                {
                    "created": "2023-08-04T18:40:59.951513662Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T05:16:42.403188583Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T05:16:42.403188583Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T05:16:42.403188583Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T05:41:14.882541843Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T05:41:16.309377049Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T05:41:16.309377049Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T05:41:16.340188202Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T05:41:16.351150734Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T05:41:16.360211026Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T05:41:16.360211026Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-09T05:41:21.389664273Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-09T05:41:21.747711571Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-04T23:25:26.738925718Z",
                    "created_by": "LABEL io.balena.device-type=raspberrypi5",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-04T23:25:26.738925718Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-04T23:25:26.883353446Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:cf819d1f191d71ce750fc0b9ca71726d50fc052d7c695682165a84c2bd1eb716",
                    "sha256:2c61372b1614282bfdb58c104252b37a61be492de5c3298dffc56376adfe0a8f",
                    "sha256:3892fad87609c0724cb700c7b327865d8b642316f214825299540678c84e007b",
                    "sha256:47b1691c56a15153e34460e97d0615abbde7eb4128cffd187b3c4507be55c4a0",
                    "sha256:526255e20ebb75f4e4a9cd0b179342ccc59ea09dfb95f916aad1dfd38903c411",
                    "sha256:10a91abc01c07dd01c837dc1a35597c3030ffee89a81f6dcc760a204a2da9e5a",
                    "sha256:fb61a502b5a7e114c0e1b65ffbf1f5d42041b65c52f9ecb41e2fb9a1cdcdbd97",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:cc06c053add61653ccca8a1d621c01df905dfb240d202ad2f7452d1777852952",
                    "sha256:d4eb19f941ac91799d9d6198e4fe925d23b49332e47400690cf7b3c2d9295b5d",
                    "sha256:59e1a00a1db05f912e0325907ea2f23a8be8f071617bd4b6a6101c339749e0fb"
                ]
            }
        },
        "run-20231103": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "raspberrypi5",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2023-11-04T17:03:19.763869192Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:31.895761202Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-06T18:42:53.905315575Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:a506790441a5cd056fb456111da480939a46667d520b519dcb9b2e2aa16aae70 in / "
                },
                {
                    "created": "2023-10-06T18:42:54.852939758Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-04T14:05:43.22598589Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-04T14:05:43.22598589Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-04T14:05:43.22598589Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T14:34:18.977818495Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T14:34:20.236374739Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T14:34:20.236374739Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-04T14:34:20.246502673Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T14:34:20.255833503Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T14:34:20.26399513Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T14:34:20.26399513Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-04T14:34:25.601224907Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T14:34:25.783838009Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T17:03:19.593865165Z",
                    "created_by": "LABEL io.balena.device-type=raspberrypi5",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-04T17:03:19.593865165Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-04T17:03:19.763869192Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:a37bac7c99baeb556998a67a51775b34aa6df7829fa1ff19323033c5e19837b3",
                    "sha256:768fbcc1112a55954ab49021af3e5b3e77d06892f0018801cb6a68567a441e44",
                    "sha256:b339e6005ff8696452b8a5daf08c04afc137c0da129e399cf294d19b6213af01",
                    "sha256:80e7fcb77b05762cb4af7a336c31edd97b255eb9c5e68b5e2d99fcd0c0941c00",
                    "sha256:faa025149da6c8af6245b9feb2dfa133869871b24b83291212a581a8ac861951",
                    "sha256:85fb00c475997eaa7bf88fdc4a78bd8ad8ecfcafaa4870eb4c2e610747381ba2",
                    "sha256:707dbcf7ea87fd75e1d03a7f275e36d8fcfc1b4ea1f3c867ab6830318bf147e9",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:2509d1d7a240f88f51a41393363e38c35b81e3edf67fa356b59390c21617a3ab",
                    "sha256:171429e7f6504ee1e18052a76bfe8bba842c7c6431ef9aace42dec71ec4b4f87",
                    "sha256:2f738c2c60a7541836ab6cba290bbf92fadc59c7087650523f34270dfd060022"
                ]
            }
        },
        "run-20231106": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "raspberrypi5",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2023-11-06T12:34:47.835870966Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:31.895761202Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-06T18:42:53.905315575Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:a506790441a5cd056fb456111da480939a46667d520b519dcb9b2e2aa16aae70 in / "
                },
                {
                    "created": "2023-10-06T18:42:54.852939758Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T09:12:27.261337628Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T09:12:27.261337628Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T09:12:27.261337628Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T09:44:07.194449485Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T09:44:08.356242913Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T09:44:08.356242913Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T09:44:08.370923209Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T09:44:08.383861082Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T09:44:08.401598819Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T09:44:08.401598819Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T09:44:14.097449997Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T09:44:14.33458648Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T12:34:47.673440252Z",
                    "created_by": "LABEL io.balena.device-type=raspberrypi5",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T12:34:47.673440252Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T12:34:47.835870966Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:a37bac7c99baeb556998a67a51775b34aa6df7829fa1ff19323033c5e19837b3",
                    "sha256:bb42b2b57488a97c34e8f0aa9c9a04b6b5ddc51428a7f869c902e262985533fa",
                    "sha256:f41e2d07027059a658a46da06111805a1c38c357d7a263b65a57906a413afcb8",
                    "sha256:6dfd1348c7cf846716582db5414652bd266c84c3ceb084217d2c1faaa43610bd",
                    "sha256:1ef3bd9e556e1fe5e94ee5fc778405d0e160b3b2f911f7b73b841e3f2947d4ec",
                    "sha256:b00ab734246e3ab0a163af225efd04d30fbb893167c4883967444d8739b0a28b",
                    "sha256:505040d84b751f1b80aad25e47e2b5770da95393e303943d0e90452bb789625d",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:3de7d77508b1af83bfd44b6a7776ab5e9c687ecfe948f5f9d8f15802beed22b0",
                    "sha256:472ace270ccea41c14f9933f0ae960d9532fe6435435172037ed71643d1a40fe",
                    "sha256:b852d3e7cabdbb835dd738b4c9527990b0b1ff959e4bf050462c494b30c51dc0"
                ]
            }
        },
        "run-20231127": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "raspberrypi5",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2023-12-01T13:07:49.854569597Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:31.895761202Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-29T00:47:03.16713451Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:270e11b4c18af1c1efb8b8579be7fbda5255d56dd69f83ef7d933cfd2c685e5c in / "
                },
                {
                    "created": "2023-11-29T00:47:04.125919026Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T10:52:09.172740458Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T10:52:09.172740458Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T10:52:09.172740458Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T11:10:46.008255947Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T11:10:47.111959762Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T11:10:47.111959762Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T11:10:47.123059062Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T11:10:47.148503741Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T11:10:47.157133896Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T11:10:47.157133896Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T11:10:50.883923644Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T11:10:51.046020579Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T13:07:49.720770039Z",
                    "created_by": "LABEL io.balena.device-type=raspberrypi5",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T13:07:49.720770039Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T13:07:49.854569597Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:22de68abb450063be7e40efd22fd3b41bec469efafdd95e25c65998648e52b28",
                    "sha256:60f2f571d3fb1d1d2155d703033185efdcb8fd06f11360aff3752c6009ddbba5",
                    "sha256:8bb3ecdba476409248d260241fff01266e4176e947fe811a5efe5456870e671e",
                    "sha256:6852dc1f1a771f4a7632382350c1dbaa2ae3e16802b4884d04618e03763e8376",
                    "sha256:9db2458df0d1ffca59509d5dbd49436ef952483f1042d53531ca90ba7d6de9e9",
                    "sha256:8d401a597be69855ebfaf84921f07b57da8bb7a5c49c370999b998f6062358a2",
                    "sha256:05f9f870334e6de793d303f103d1f1b35f7df1ff21724f7ebaeb6fc561bccc2c",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:24546f46791bf568236132bceae1cdf41c9ca9f6d3e09077cab2bc32ee6bb76c",
                    "sha256:24ce1f5be0535d16b93594731aca9f7680b480d54b2a5820055e1580b872afe6",
                    "sha256:2b6dc1653ae6cb200b6663e6156cbdd3bdc518b03fac893f19869e9e8855682c"
                ]
            }
        },
        "run-20231204": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "raspberrypi5",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2023-12-06T22:55:22.373508696Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:31.895761202Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-29T00:47:03.16713451Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:270e11b4c18af1c1efb8b8579be7fbda5255d56dd69f83ef7d933cfd2c685e5c in / "
                },
                {
                    "created": "2023-11-29T00:47:04.125919026Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T20:40:21.575448793Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T20:40:21.575448793Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T20:40:21.575448793Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T20:59:06.4416038Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T20:59:07.14149679Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T20:59:07.14149679Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T20:59:07.150718208Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T20:59:07.159290685Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T20:59:07.187587582Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T20:59:07.187587582Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T20:59:10.850419463Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T20:59:11.010511508Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T22:55:22.243882328Z",
                    "created_by": "LABEL io.balena.device-type=raspberrypi5",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T22:55:22.243882328Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T22:55:22.373508696Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:22de68abb450063be7e40efd22fd3b41bec469efafdd95e25c65998648e52b28",
                    "sha256:2c6b0df21f9efd51a24a59463b9265452ccc9cf8a26908c50d2742c0e67683bd",
                    "sha256:906012c4f278d0d6c4a614afd4c812fc55bc367d28aac2c10cbdd33ac6ec80b8",
                    "sha256:34fc306b51c5f84676518d54cf67a097f48bfc8e79fb8c0ffc71ed9b2d1b5def",
                    "sha256:aa005d370b40094b326443ce4f1b6d04a780598588bd8f8fa1dc601171d59314",
                    "sha256:e580b4505982459166845d47c3159777541e000c8826a05635c6f84f62f03011",
                    "sha256:79990d4ff119d7188fd5fdcaaa04c391747be11fefbbe682a6a2c495c8ca3a6b",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:0aff9ccfdfd88ab9194d2d15e49264900a8942406276260bf5fb479d637d2075",
                    "sha256:6d3c0215ae8da55215b0e456b5d4b89a26cb450350fe5507c5eaf7bd88c8e132",
                    "sha256:e29791cd9f4ed15e18ea8be26b30c0de9a5af5048774d06e28ebf84d9800b573"
                ]
            }
        },
        "run-20240227": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "raspberrypi5",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2024-03-01T23:15:37.22340042Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:31.895761202Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-29T00:47:03.16713451Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:270e11b4c18af1c1efb8b8579be7fbda5255d56dd69f83ef7d933cfd2c685e5c in / "
                },
                {
                    "created": "2023-11-29T00:47:04.125919026Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T20:49:58.705358685Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T20:49:58.705358685Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T20:49:58.705358685Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:08:24.834287933Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:08:25.565567755Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:08:25.565567755Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T21:08:25.579271093Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:08:25.617204263Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:08:25.629384601Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:08:25.629384601Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T21:08:29.321790107Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:08:29.46619614Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T23:15:37.108481029Z",
                    "created_by": "LABEL io.balena.device-type=raspberrypi5",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T23:15:37.108481029Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T23:15:37.22340042Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:22de68abb450063be7e40efd22fd3b41bec469efafdd95e25c65998648e52b28",
                    "sha256:bfe341409759f9ccd364ecb2d335246560d19282f3ecf321c53836e101a82d2a",
                    "sha256:22279a1bcbb3b6a49c8d9ada414e0b58c5c83f35e20c9a33acc65e0aedb733a1",
                    "sha256:59b3dbe842a8cbc03ed09e65a15a87e8c46f6653b87eb93c5b37d8ab77060acf",
                    "sha256:2ad87538d509ffa4457cec4d29a36d570c8392257dab445452209d4097b7bf52",
                    "sha256:4b3f303bc53eefd36ad3db9ee937836bf0e5855a96ec2546c67cb8238fa8c5bc",
                    "sha256:27f44cee2cfb128916d178e2e1dd253065b766fcffe0f37cdb2588702c65bd5f",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:7f5845d6da8e4b02efd4b375c5222854a386a7b02c491fe3b96307345b96014d",
                    "sha256:aa61cf5f3f2942560cb632dd38548d7fd159cf0a4b737535c92836aa99ca1f52",
                    "sha256:9bd02f5806da6e3ef9c204b8c1b4ff3a20f9a32e3329966bb482123a9c47dee3"
                ]
            }
        },
        "run-20240304": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "raspberrypi5",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2024-03-05T10:50:26.53777156Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:31.895761202Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-29T00:47:03.16713451Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:270e11b4c18af1c1efb8b8579be7fbda5255d56dd69f83ef7d933cfd2c685e5c in / "
                },
                {
                    "created": "2023-11-29T00:47:04.125919026Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T08:24:13.360409226Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T08:24:13.360409226Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T08:24:13.360409226Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T08:43:22.770169859Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T08:43:23.650621519Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T08:43:23.650621519Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T08:43:23.66033272Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T08:43:23.670216283Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T08:43:23.695421657Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T08:43:23.695421657Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T08:43:27.455502812Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T08:43:27.593974423Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T10:50:26.413272107Z",
                    "created_by": "LABEL io.balena.device-type=raspberrypi5",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T10:50:26.413272107Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T10:50:26.53777156Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:22de68abb450063be7e40efd22fd3b41bec469efafdd95e25c65998648e52b28",
                    "sha256:28463901e499aa0a1515b57d0fbafa9cb9a2cc02cc10ed1687c180941c557184",
                    "sha256:0ca6f2444de4ad55ab4af4fd74364d376cec4fab74ebda60cba78c9fa2d7e649",
                    "sha256:cfc10fd96b96916769b790f45b5a4f0a1a17202f2532d659330de963d4494ebf",
                    "sha256:d2c34fbda1de7685d96923948d480fbe0ebab10b9087bfebda73744dbe2a6f9a",
                    "sha256:0d88f38f1e25f8d79cc6f17c26de206e21378fdd492c88062ab3e718003d32df",
                    "sha256:01e1144fabf916d9df9dbc69c087247ccbb1e57b391ed28f7dac24153a50d7b2",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:7ad9ead66349340e94a99303f594e85c786a6fabee7368153801d079722794bc",
                    "sha256:277971ea1ea290467dd51b95c3577111463f5dc7077258efb29b337ec37f92ca",
                    "sha256:c50f7b67b899b950301dce6815e76581bd6eadf166ce724064342aafc78db096"
                ]
            }
        },
        "run-20240401": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "raspberrypi5",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                }
            },
            "created": "2024-04-01T23:46:43.192266903Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:31.895761202Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-29T00:47:03.16713451Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:270e11b4c18af1c1efb8b8579be7fbda5255d56dd69f83ef7d933cfd2c685e5c in / "
                },
                {
                    "created": "2023-11-29T00:47:04.125919026Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T21:26:29.343455526Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T21:26:29.343455526Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T21:26:29.343455526Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T21:45:10.957762154Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T21:45:11.852141047Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T21:45:11.852141047Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T21:45:11.862471903Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T21:45:11.872331413Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T21:45:11.898584749Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T21:45:11.898584749Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T21:45:15.686171825Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T21:45:15.820771715Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T23:46:43.076294289Z",
                    "created_by": "LABEL io.balena.device-type=raspberrypi5",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T23:46:43.076294289Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T23:46:43.192266903Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:22de68abb450063be7e40efd22fd3b41bec469efafdd95e25c65998648e52b28",
                    "sha256:3a6d39f67382783e2c69d9a448aa59d1d7654260210364d05c2cae2ef469e3c8",
                    "sha256:8b316e0949cd1905304ca774963ddae530565f690a65de9db1a2dafa9aed0363",
                    "sha256:7fa4949a4c79caf7d749cc4abcbc241a5dd3a5c8d0155458cf6d4d83ac483646",
                    "sha256:0a0eea417236fa5be4e06c1d20766fd9f3b0e064419a66f356dea0f1f6d794df",
                    "sha256:ad31ce618fd1f26b74bc2900fbd27319ed86917e85375f90b57d28b291156d51",
                    "sha256:7b8582873ef4cde2aca83ece090a3993ca7c4f8fe0b13c3b0b064f08c7b21c21",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:8050b5f7d3d161f91b3bad0576691d8640130b32c0b8f23db87cdd4fee47c82e",
                    "sha256:31ab2d2b151011b640236ef0b2d0b2cf3b5928aff282a614c0affce35da9ea37",
                    "sha256:b6d8f2a786c666058d591d1a9eae9808f450684bad88d50400cbbadcda61a90c"
                ]
            }
        },
        "run-20240408": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "raspberrypi5",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                }
            },
            "created": "2024-04-09T20:00:01.596559907Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:31.895761202Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-29T00:47:03.16713451Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:270e11b4c18af1c1efb8b8579be7fbda5255d56dd69f83ef7d933cfd2c685e5c in / "
                },
                {
                    "created": "2023-11-29T00:47:04.125919026Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:52.915602222Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:52.915602222Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:52.915602222Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:54:04.100191166Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:54:04.963844501Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:54:04.963844501Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:54:04.973366628Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:54:05.001513857Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:54:05.024710968Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:54:05.024710968Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:54:08.797015979Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:54:08.943058393Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T20:00:01.48497321Z",
                    "created_by": "LABEL io.balena.device-type=raspberrypi5",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T20:00:01.48497321Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T20:00:01.596559907Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:22de68abb450063be7e40efd22fd3b41bec469efafdd95e25c65998648e52b28",
                    "sha256:03dd9a4ed991dc43e9a504ad71941782bb6fd4cd57f8ade649bbe25b622e3902",
                    "sha256:d24e8e6aec171dc7068d2c19b85d8c6341381b2f0cf4e1d1a20d5419f2d1ec53",
                    "sha256:e743a07ebcce27b755341d992eb4148fe86bd04481c6d8f2b6fe7364a942af19",
                    "sha256:1c988fbb0bdd3374b1f72bebc1953bd62853c7e33608dbc885ff64eba44dc1eb",
                    "sha256:7fad6968fdbdd1afee5f76e3b2f3df1829677bc85be4fa920cb57db14562699c",
                    "sha256:2999088cf700c485af0973e03dd5e2ff9d96b3f604f5908307f3edb5377c6d58",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:a75c43802eb36b20a7183fe5c30e33ef495a904237a7483d5c73c1df1691887b",
                    "sha256:5317fa65bc7c35c38c442c90f849cc95fc28d4aa5eb818b916e1a8116119211a",
                    "sha256:01008a19db5ef632d2ed55d56cefe9f631cc0c1484a447ea200434f527fe9280"
                ]
            }
        },
        "run-20240429": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "raspberrypi5",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                }
            },
            "created": "2024-05-06T10:38:45.538160132Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:31.895761202Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-29T00:47:03.16713451Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:270e11b4c18af1c1efb8b8579be7fbda5255d56dd69f83ef7d933cfd2c685e5c in / "
                },
                {
                    "created": "2023-11-29T00:47:04.125919026Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T09:28:47.993183335Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T09:28:47.993183335Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T09:28:47.993183335Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T09:47:56.501476974Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T09:47:57.631980985Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T09:47:57.631980985Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T09:47:57.644124262Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T09:47:57.678847981Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T09:47:57.688494096Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T09:47:57.688494096Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T09:48:01.526529414Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T09:48:01.665893428Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T10:38:45.395029597Z",
                    "created_by": "LABEL io.balena.device-type=raspberrypi5",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T10:38:45.395029597Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T10:38:45.538160132Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:22de68abb450063be7e40efd22fd3b41bec469efafdd95e25c65998648e52b28",
                    "sha256:ef64ad49ccf58709af070779ae49d014558d78a8b6a21fcc279c09ddac79e6c9",
                    "sha256:486e799e950e2b998ed0a1a7221aed44130002259c2b437524c7a8a72b725a56",
                    "sha256:5ad52f9d14deab1b2c3a79dfb68bf730440e209f5926a2cd2ebd561c519a08de",
                    "sha256:73001e4334a2e5a98b50faf87e712eaf851af09ac903e83a569150844ce9eda1",
                    "sha256:696c197b14bb7731bf0a36bbdc5e5272937b693f192b143e02dac747a1305ba1",
                    "sha256:f27b4f97c199fdc59cc49eb91fc7a348daf160285ca6bfce88ede5b64e4bb0a9",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:22341517b8222bb5810db07c816fbd0de10749523856c0263caf14789e77d27d",
                    "sha256:814378e6a74f147b97de86dbedb021279d972677e845a91c72091b86b4dcd6d5",
                    "sha256:07672fdc7d8d9779da09498cf20a8b017e6d3ee8d7e8b681424c91d8c94d3f67"
                ]
            }
        }
    }
}